import { ChartThemeDefinition } from '../../ChartTheme/ChartTheme';
interface ChartBulletSizeInterface {
    height: number;
    horizontal?: boolean;
    theme?: ChartThemeDefinition;
    themeColor?: string;
    width: number;
}
/**
 * Scale size per the given size properties
 * @private
 */
export declare const getComparativeMeasureErrorWidth: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
/**
 * Returns comparative measure width
 * @private
 */
export declare const getComparativeMeasureWidth: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
/**
 * Returns comparative measure warning width
 * @private
 */
export declare const getComparativeMeasureWarningWidth: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
/**
 * Returns primary dot measure size
 * @private
 */
export declare const getPrimaryDotMeasureSize: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
/**
 * Returns primary segmented measure width
 * @private
 */
export declare const getPrimarySegmentedMeasureWidth: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
/**
 * Returns qualitative range bar width
 * @private
 */
export declare const getQualitativeRangeBarWidth: ({ height, horizontal, themeColor, width, theme }: ChartBulletSizeInterface) => number;
export {};
//# sourceMappingURL=chart-bullet-size.d.ts.map