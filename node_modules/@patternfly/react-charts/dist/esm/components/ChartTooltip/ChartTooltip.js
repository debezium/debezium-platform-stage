import { __rest } from "tslib";
import * as React from 'react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import { VictoryTooltip } from 'victory-tooltip';
import { ChartLabel } from '../ChartLabel/ChartLabel';
import { getTheme } from '../ChartUtils/chart-theme';
export const ChartTooltip = (_a) => {
    var { constrainToVisibleArea = false, labelComponent = React.createElement(ChartLabel, null), // Note that Victory provides its own label component here
    labelTextAnchor, themeColor, 
    // destructure last
    theme = getTheme(themeColor) } = _a, rest = __rest(_a, ["constrainToVisibleArea", "labelComponent", "labelTextAnchor", "themeColor", "theme"]);
    const chartLabelComponent = React.cloneElement(labelComponent, Object.assign({ textAnchor: labelTextAnchor, theme }, labelComponent.props));
    return (React.createElement(VictoryTooltip, Object.assign({ constrainToVisibleArea: constrainToVisibleArea, labelComponent: chartLabelComponent, theme: theme }, rest)));
};
ChartTooltip.displayName = 'ChartTooltip';
// Note: VictoryTooltip.defaultEvents must be hoisted
hoistNonReactStatics(ChartTooltip, VictoryTooltip);
//# sourceMappingURL=ChartTooltip.js.map