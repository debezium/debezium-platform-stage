import * as React from 'react';
import { EdgeTerminalType, GraphElement, NodeStatus } from '../../../types';
import { OnSelect } from '../../../behavior';
interface TaskEdgeProps {
    /** The graph edge element to represent */
    element: GraphElement;
    /** Additional classes added to the edge */
    className?: string;
    /** Offset for integral shape path */
    nodeSeparation?: number;
    /** The terminal type to use for the edge start */
    startTerminalType?: EdgeTerminalType;
    /** Additional classes added to the start terminal */
    startTerminalClass?: string;
    /** The status to indicate on the start terminal */
    startTerminalStatus?: NodeStatus;
    /** The size of the start terminal */
    startTerminalSize?: number;
    /** The terminal type to use for the edge end */
    endTerminalType?: EdgeTerminalType;
    /** Additional classes added to the end terminal */
    endTerminalClass?: string;
    /** The status to indicate on the end terminal */
    endTerminalStatus?: NodeStatus;
    /** The size of the end terminal */
    endTerminalSize?: number;
    /** Flag if the element is selected. Part of WithSelectionProps */
    selected?: boolean;
    /** Function to call when the element should become selected (or deselected). Part of WithSelectionProps */
    onSelect?: OnSelect;
}
declare const TaskEdge: React.FunctionComponent<TaskEdgeProps>;
export default TaskEdge;
//# sourceMappingURL=TaskEdge.d.ts.map