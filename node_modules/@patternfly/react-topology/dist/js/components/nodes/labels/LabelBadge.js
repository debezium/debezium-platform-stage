"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/* eslint patternfly-react/import-tokens-icons: 0 */
const React = tslib_1.__importStar(require("react"));
const react_styles_1 = require("@patternfly/react-styles");
const color_blue_10_1 = require("@patternfly/react-tokens/dist/js/color_blue_10");
const color_blue_30_1 = require("@patternfly/react-tokens/dist/js/color_blue_30");
const color_blue_30_2 = require("@patternfly/react-tokens/dist/js/color_blue_30");
const topology_components_1 = tslib_1.__importDefault(require("../../../css/topology-components"));
const utils_1 = require("../../../utils");
const LabelBadge = React.forwardRef(({ badge, badgeTextColor, badgeColor, badgeBorderColor, badgeClassName, className, x, y, innerRef }, iconRef) => {
    const [textSize, textRef] = (0, utils_1.useSize)([]);
    const classes = (0, react_styles_1.css)(topology_components_1.default.topologyNodeLabelBadge, badgeClassName && badgeClassName, className && className);
    let rect = null;
    let paddingX = 0;
    let paddingY = 0;
    let width = 0;
    let height = 0;
    if (textSize) {
        ({ height, width } = textSize);
        paddingX = height / 2;
        paddingY = height / 14;
        height += paddingY * 2;
        rect = (React.createElement("rect", { fill: badgeColor || (badgeClassName ? undefined : color_blue_10_1.color_blue_10.value), stroke: badgeBorderColor || (badgeClassName ? undefined : color_blue_30_1.color_blue_30.value), ref: iconRef, x: 0, width: width + paddingX * 2, y: 0, height: height, rx: height / 2, ry: height / 2 }));
    }
    return (React.createElement("g", { className: classes, transform: `translate(${x}, ${y})`, ref: innerRef },
        rect,
        React.createElement("text", { fill: badgeTextColor || badgeClassName ? badgeTextColor : color_blue_30_2.color_blue_30.value, ref: textRef, x: width / 2 + paddingX, y: height / 2, textAnchor: "middle", dy: "0.35em" }, badge)));
});
exports.default = LabelBadge;
//# sourceMappingURL=LabelBadge.js.map