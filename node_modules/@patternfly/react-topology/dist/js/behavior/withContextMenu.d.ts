import * as React from 'react';
import { GraphElement as TopologyElement } from '../types';
export interface WithContextMenuProps {
    onContextMenu?: (e: React.MouseEvent) => void;
    contextMenuOpen?: boolean;
}
export declare const withContextMenu: <E extends TopologyElement<import("../types").ElementModel, any>>(actions: (element: E) => React.ReactElement[] | Promise<React.ReactElement[]>, container?: Element | null | undefined | (() => Element), className?: string, atPoint?: boolean, waitElement?: React.ReactElement) => <P extends WithContextMenuProps>(WrappedComponent: React.ComponentType<P>) => React.FunctionComponent<Omit<P, keyof WithContextMenuProps>>;
//# sourceMappingURL=withContextMenu.d.ts.map