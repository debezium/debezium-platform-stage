import { __rest } from "tslib";
import * as React from 'react';
import { Dropdown } from '@patternfly/react-core';
import { css } from '@patternfly/react-styles';
import topologyStyles from '../../css/topology-components';
// FIXME fully qualified due to the effect of long build times on storybook
import Popper from '../popper/Popper';
const ContextMenu = (_a) => {
    var { children, open = true, onRequestClose } = _a, other = __rest(_a, ["children", "open", "onRequestClose"]);
    const [isOpen, setOpen] = React.useState(!!open);
    React.useEffect(() => {
        setOpen(open);
    }, [open]);
    const handleOnRequestClose = React.useCallback(() => {
        onRequestClose ? onRequestClose() : setOpen(false);
    }, [onRequestClose]);
    return (React.createElement(Popper, Object.assign({}, other, { closeOnEsc: true, closeOnOutsideClick: true, open: isOpen, onRequestClose: handleOnRequestClose }),
        React.createElement(Dropdown, { onSelect: handleOnRequestClose, toggle: () => React.createElement(React.Fragment, null), className: css(topologyStyles.topologyContextMenuCDropdownMenu) }, children)));
};
export default ContextMenu;
//# sourceMappingURL=ContextMenu.js.map