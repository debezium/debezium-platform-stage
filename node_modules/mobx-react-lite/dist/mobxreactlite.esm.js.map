{"version":3,"file":"mobxreactlite.esm.js","sources":["../src/utils/assertEnvironment.ts","../src/utils/observerBatching.ts","../src/utils/utils.ts","../src/utils/printDebugValue.ts","../src/utils/UniversalFinalizationRegistry.ts","../src/utils/observerFinalizationRegistry.ts","../src/staticRendering.ts","../src/useObserver.ts","../src/observer.ts","../src/ObserverComponent.ts","../src/useLocalObservable.ts","../src/useAsObservableSource.ts","../src/useLocalStore.ts","../src/index.ts"],"sourcesContent":["import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","const deprecatedMessages: string[] = []\n\nexport function useDeprecated(msg: string) {\n    if (!deprecatedMessages.includes(msg)) {\n        deprecatedMessages.push(msg)\n        console.warn(msg)\n    }\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n","import { Reaction } from \"mobx\"\nimport { UniversalFinalizationRegistry } from \"./UniversalFinalizationRegistry\"\n\nexport const observerFinalizationRegistry = new UniversalFinalizationRegistry(\n    (adm: { reaction: Reaction | null }) => {\n        adm.reaction?.dispose()\n        adm.reaction = null\n    }\n)\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\n\nfunction observerComponentNameFor(baseComponentName: string) {\n    return `observer${baseComponentName}`\n}\n\ntype ObserverAdministration = {\n    /** The Reaction created during first render, which may be leaked */\n    reaction: Reaction | null\n\n    /**\n     * Whether the component has yet completed mounting (for us, whether\n     * its useEffect has run)\n     */\n    mounted: boolean\n\n    /**\n     * Whether the observables that the component is tracking changed between\n     * the first render and the first useEffect.\n     */\n    changedBeforeMount: boolean\n}\n\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nclass ObjectToBeRetainedByReact {}\n\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact()\n}\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return fn()\n    }\n\n    const [objectRetainedByReact] = React.useState(objectToBeRetainedByReactFactory)\n    // Force update, see #2982\n    const [, setState] = React.useState()\n    const forceUpdate = () => setState([] as any)\n\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    const admRef = React.useRef<ObserverAdministration | null>(null)\n\n    if (!admRef.current) {\n        // First render\n        admRef.current = {\n            reaction: null,\n            mounted: false,\n            changedBeforeMount: false\n        }\n    }\n\n    const adm = admRef.current!\n\n    if (!adm.reaction) {\n        // First render or component was not committed and reaction was disposed by registry\n        adm.reaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (adm.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate()\n            } else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                adm.changedBeforeMount = true\n            }\n        })\n\n        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm)\n    }\n\n    React.useDebugValue(adm.reaction, printDebugValue)\n\n    React.useEffect(() => {\n        observerFinalizationRegistry.unregister(adm)\n\n        adm.mounted = true\n\n        if (adm.reaction) {\n            if (adm.changedBeforeMount) {\n                // Got a change before mount, force an update\n                adm.changedBeforeMount = false\n                forceUpdate()\n            }\n        } else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n\n            // Re-create the reaction\n            adm.reaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n                // We've definitely already been mounted at this point\n                forceUpdate()\n            })\n            forceUpdate()\n        }\n\n        return () => {\n            adm.reaction!.dispose()\n            adm.reaction = null\n            adm.mounted = false\n            adm.changedBeforeMount = false\n        }\n    }, [])\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let rendering!: T\n    let exception\n    adm.reaction.track(() => {\n        try {\n            rendering = fn()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return rendering\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;(observerComponent as React.FunctionComponent).displayName = baseComponentName\n    }\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import { useObserver } from \"./useObserver\"\n\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nif (\"production\" !== process.env.NODE_ENV) {\n    ObserverComponent.propTypes = {\n        children: ObserverPropsCheck,\n        render: ObserverPropsCheck\n    }\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import { observable, AnnotationsMap } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useLocalObservable<TStore extends Record<string, any>>(\n    initializer: () => TStore,\n    annotations?: AnnotationsMap<TStore, never>\n): TStore {\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\n}\n","import { useDeprecated } from \"./utils/utils\"\nimport { observable, runInAction } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useAsObservableSource<TSource extends object>(current: TSource): TSource {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\"\n        )\n    const [res] = useState(() => observable(current, {}, { deep: false }))\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n","import { observable } from \"mobx\"\nimport { useState } from \"react\"\n\nimport { useDeprecated } from \"./utils/utils\"\nimport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source: TSource) => TStore,\n    current: TSource\n): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source?: TSource) => TStore,\n    current?: TSource\n): TStore {\n    if (\"production\" !== process.env.NODE_ENV)\n        useDeprecated(\n            \"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\"\n        )\n    const source = current && useAsObservableSource(current)\n    return useState(() => observable(initializer(source), undefined, { autoBind: true }))[0]\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\nimport { observerFinalizationRegistry } from \"./utils/observerFinalizationRegistry\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\n\nexport const clearTimers = observerFinalizationRegistry[\"finalizeAllImmediately\"] ?? (() => {})\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n"],"names":["useState","Error","makeObservable","defaultNoopBatch","callback","observerBatching","reactionScheduler","process","env","NODE_ENV","console","warn","configure","isObserverBatched","deprecatedMessages","useDeprecated","msg","includes","push","printDebugValue","v","getDependencyTree","REGISTRY_FINALIZE_AFTER","REGISTRY_SWEEP_INTERVAL","TimerBasedFinalizationRegistry","finalize","registrations","Map","sweepTimeout","sweep","maxAge","clearTimeout","undefined","now","Date","forEach","registration","token","registeredAt","value","size","scheduleSweep","finalizeAllImmediately","register","target","set","unregister","setTimeout","UniversalFinalizationRegistry","FinalizationRegistry","observerFinalizationRegistry","adm","reaction","dispose","globalIsUsingStaticRendering","enableStaticRendering","enable","isUsingStaticRendering","observerComponentNameFor","baseComponentName","ObjectToBeRetainedByReact","objectToBeRetainedByReactFactory","useObserver","fn","React","objectRetainedByReact","setState","forceUpdate","admRef","useRef","current","mounted","changedBeforeMount","Reaction","useDebugValue","useEffect","rendering","exception","track","e","warnObserverOptionsDeprecated","hasSymbol","Symbol","ReactForwardRefSymbol","forwardRef","props","ReactMemoSymbol","memo","observer","baseComponent","options","useForwardRef","render","displayName","name","observerComponent","ref","contextTypes","copyStaticProperties","Object","defineProperty","type","hoistBlackList","$$typeof","compare","base","keys","key","getOwnPropertyDescriptor","ObserverComponent","children","component","propTypes","ObserverPropsCheck","componentName","location","propFullName","extraKey","hasProp","hasExtraProp","useLocalObservable","initializer","annotations","observable","autoBind","useAsObservableSource","deep","res","runInAction","assign","useLocalStore","source","batch","clearTimers","useObserverOriginal","useStaticRendering"],"mappings":"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"}