export declare function addBinsToParentPropsIfHistogram({ children, props, childComponents, parentProps, }: {
    children: any;
    props: any;
    childComponents: any;
    parentProps: any;
}): any;
export declare function getDataFromChildren(props: any, childComponents: any): any[][];
export declare function getData(props: any, childComponents: any): any;
export declare function getWidth(props: any, groupLength?: any, seriesLength?: any): number;
export declare function getDefaultDomainPadding(props: any, axis: any, childComponents: any): {
    x: number;
} | undefined;
export declare function getDomainFromChildren(props: any, axis: any, childComponents: any): (number | Date)[];
export declare function getDomain(props: any, axis: any, childComponents: any): any;
export declare function getScale(props: any, axis: any, childComponents?: any): import("..").D3Scale<any>;
export declare function getAllEvents(props: any): any;
export declare function getColor(calculatedProps: any, child: any, index: any): any;
export declare function getStyle(theme: any, style: any, role: any): any;
export declare function getChildStyle(child: any, index: any, calculatedProps: any): any;
export declare function getStringsFromCategories(childComponents: any, axis: any): any[];
export declare function getStringsFromData(childComponents: any): {
    x: number[];
    y: number[];
};
export declare function getCategoryAndAxisStringsFromChildren(props: any, axis: any, childComponents: any): any[];
export declare function getStringsFromChildren(props: any, childComponents: any): {
    x: any[];
    y: any[];
};
export declare function getCategories(props: any, childComponents: any, allStrings?: any): {
    x: any;
    y: any;
};
//# sourceMappingURL=wrapper.d.ts.map