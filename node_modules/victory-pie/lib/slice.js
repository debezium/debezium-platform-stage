"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slice = void 0;
var _defaults2 = _interopRequireDefault(require("lodash/defaults"));
var _react = _interopRequireDefault(require("react"));
var _victoryCore = require("victory-core");
var d3Shape = _interopRequireWildcard(require("victory-vendor/d3-shape"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const getPath = props => {
  const {
    slice,
    radius,
    innerRadius,
    cornerRadius
  } = props;
  if (_victoryCore.Helpers.isFunction(props.pathFunction)) {
    return props.pathFunction(slice);
  }
  const padAngle = _victoryCore.Helpers.degreesToRadians(props.padAngle);
  const startAngle = _victoryCore.Helpers.degreesToRadians(props.sliceStartAngle);
  const endAngle = _victoryCore.Helpers.degreesToRadians(props.sliceEndAngle);
  const pathFunction = d3Shape.arc().cornerRadius(cornerRadius).outerRadius(radius).innerRadius(innerRadius || 0);
  return pathFunction((0, _defaults2.default)({
    startAngle,
    endAngle,
    padAngle
  }, slice));
};
const evaluateProps = props => {
  /**
   * * Potential evaluated props of following must be evaluated in this order:
   * 1) `style`
   * 2) `radius`
   * 3) `innerRadius`
   *
   * Everything else does not have to be evaluated in a particular order:
   * `ariaLabel`
   * `id`
   * `cornerRadius`
   * `padAngle`
   * `sliceStartAngle`
   * `sliceEndAngle`
   * `tabIndex`
   */
  const style = _victoryCore.Helpers.evaluateStyle(props.style, props);
  const radius = _victoryCore.Helpers.evaluateProp(props.radius, Object.assign({}, props, {
    style
  }));
  const innerRadius = _victoryCore.Helpers.evaluateProp(props.innerRadius, Object.assign({}, props, {
    style,
    radius
  }));
  const ariaLabel = _victoryCore.Helpers.evaluateProp(props.ariaLabel, props);
  const id = _victoryCore.Helpers.evaluateProp(props.id, props);
  const cornerRadius = _victoryCore.Helpers.evaluateProp(props.cornerRadius, props);
  const padAngle = _victoryCore.Helpers.evaluateProp(props.padAngle, props);
  const sliceStartAngle = _victoryCore.Helpers.evaluateProp(props.sliceStartAngle, props);
  const sliceEndAngle = _victoryCore.Helpers.evaluateProp(props.sliceEndAngle, props);
  const tabIndex = _victoryCore.Helpers.evaluateProp(props.tabIndex, props);
  return Object.assign({}, props, {
    ariaLabel,
    style,
    radius,
    innerRadius,
    id,
    cornerRadius,
    padAngle,
    sliceStartAngle,
    sliceEndAngle,
    tabIndex
  });
};
const defaultProps = {
  pathComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.Path, null),
  role: "presentation",
  shapeRendering: "auto"
};
const Slice = initialProps => {
  const props = evaluateProps((0, _defaults2.default)({}, initialProps, defaultProps));
  const defaultTransform = props.origin ? `translate(${props.origin.x}, ${props.origin.y})` : undefined;
  return /*#__PURE__*/_react.default.cloneElement(props.pathComponent, {
    ...props.events,
    "aria-label": props.ariaLabel,
    d: getPath(props),
    style: props.style,
    transform: props.transform || defaultTransform,
    className: props.className,
    role: props.role,
    shapeRendering: props.shapeRendering,
    clipPath: props.clipPath,
    tabIndex: props.tabIndex
  });
};
exports.Slice = Slice;