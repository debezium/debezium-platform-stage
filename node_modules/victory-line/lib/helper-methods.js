"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBaseProps = void 0;
var _victoryCore = require("victory-core");
const getCalculatedValues = props => {
  let data = _victoryCore.Data.getData(props);
  if (data.length < 2) {
    data = [];
  }
  const range = {
    x: _victoryCore.Helpers.getRange(props, "x"),
    y: _victoryCore.Helpers.getRange(props, "y")
  };
  const domain = {
    x: _victoryCore.Domain.getDomain(props, "x"),
    y: _victoryCore.Domain.getDomain(props, "y")
  };
  const scale = {
    x: _victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(props.horizontal ? range.y : range.x),
    y: _victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(props.horizontal ? range.x : range.y)
  };
  const origin = props.polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : undefined;
  const defaultStyles = _victoryCore.Helpers.getDefaultStyles(props, "line");
  const style = _victoryCore.Helpers.getStyles(props.style, defaultStyles);
  return {
    domain,
    data,
    scale,
    style,
    origin
  };
};
const getBaseProps = (initialProps, fallbackProps) => {
  const modifiedProps = _victoryCore.Helpers.modifyProps(initialProps, fallbackProps, "line");
  const props = Object.assign({}, modifiedProps, getCalculatedValues(modifiedProps));
  const {
    data,
    domain,
    events,
    groupComponent,
    height,
    horizontal,
    interpolation,
    origin,
    padding,
    polar,
    scale,
    sharedEvents,
    standalone,
    style,
    theme,
    width,
    labels,
    name,
    disableInlineStyles
  } = props;
  const initialChildProps = {
    parent: {
      style: style.parent,
      scale,
      data,
      height,
      width,
      name,
      domain,
      standalone,
      polar,
      origin,
      padding,
      horizontal
    },
    all: {
      data: {
        horizontal,
        polar,
        origin,
        scale,
        data,
        interpolation,
        groupComponent,
        style: disableInlineStyles ? {} : style.data,
        theme,
        disableInlineStyles
      }
    }
  };
  return data.reduce((childProps, datum, index) => {
    const text = _victoryCore.LabelHelpers.getText(props, datum, index);
    if (text !== undefined && text !== null || labels && (events || sharedEvents)) {
      const eventKey = !_victoryCore.Helpers.isNil(datum.eventKey) ? datum.eventKey : index;
      childProps[eventKey] = {
        labels: _victoryCore.LabelHelpers.getProps(props, index)
      };
    }
    return childProps;
  }, initialChildProps);
};
exports.getBaseProps = getBaseProps;