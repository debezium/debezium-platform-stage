import ESM_COMPAT_Module from "node:module";
import { fileURLToPath as ESM_COMPAT_fileURLToPath } from 'node:url';
import { dirname as ESM_COMPAT_dirname } from 'node:path';
const __filename = ESM_COMPAT_fileURLToPath(import.meta.url);
const __dirname = ESM_COMPAT_dirname(__filename);
const require = ESM_COMPAT_Module.createRequire(import.meta.url);
var yW = Object.create;
var Hf = Object.defineProperty;
var gW = Object.getOwnPropertyDescriptor;
var bW = Object.getOwnPropertyNames;
var EW = Object.getPrototypeOf, vW = Object.prototype.hasOwnProperty;
var i = (e, t) => Hf(e, "name", { value: t, configurable: !0 }), Q = /* @__PURE__ */ ((e) => typeof require < "u" ? require : typeof Proxy <
"u" ? new Proxy(e, {
  get: (t, r) => (typeof require < "u" ? require : t)[r]
}) : e)(function(e) {
  if (typeof require < "u") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + e + '" is not supported');
});
var Qn = (e, t) => () => (e && (t = e(e = 0)), t);
var y = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Hw = (e, t) => {
  for (var r in t)
    Hf(e, r, { get: t[r], enumerable: !0 });
}, SW = (e, t, r, s) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let n of bW(t))
      !vW.call(e, n) && n !== r && Hf(e, n, { get: () => t[n], enumerable: !(s = gW(t, n)) || s.enumerable });
  return e;
};
var gr = (e, t, r) => (r = e != null ? yW(EW(e)) : {}, SW(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  t || !e || !e.__esModule ? Hf(r, "default", { value: e, enumerable: !0 }) : r,
  e
));

// ../node_modules/universalify/index.js
var Pr = y((r0) => {
  "use strict";
  r0.fromCallback = function(e) {
    return Object.defineProperty(function(...t) {
      if (typeof t[t.length - 1] == "function") e.apply(this, t);
      else
        return new Promise((r, s) => {
          e.call(
            this,
            ...t,
            (n, a) => n != null ? s(n) : r(a)
          );
        });
    }, "name", { value: e.name });
  };
  r0.fromPromise = function(e) {
    return Object.defineProperty(function(...t) {
      let r = t[t.length - 1];
      if (typeof r != "function") return e.apply(this, t);
      e.apply(this, t.slice(0, -1)).then((s) => r(null, s), r);
    }, "name", { value: e.name });
  };
});

// ../node_modules/graceful-fs/polyfills.js
var Kw = y((CWe, Gw) => {
  var qi = Q("constants"), TW = process.cwd, Gf = null, xW = process.env.GRACEFUL_FS_PLATFORM || process.platform;
  process.cwd = function() {
    return Gf || (Gf = TW.call(process)), Gf;
  };
  try {
    process.cwd();
  } catch {
  }
  typeof process.chdir == "function" && (s0 = process.chdir, process.chdir = function(e) {
    Gf = null, s0.call(process, e);
  }, Object.setPrototypeOf && Object.setPrototypeOf(process.chdir, s0));
  var s0;
  Gw.exports = PW;
  function PW(e) {
    qi.hasOwnProperty("O_SYMLINK") && process.version.match(/^v0\.6\.[0-2]|^v0\.5\./) && t(e), e.lutimes || r(e), e.chown = a(e.chown), e.fchown =
    a(e.fchown), e.lchown = a(e.lchown), e.chmod = s(e.chmod), e.fchmod = s(e.fchmod), e.lchmod = s(e.lchmod), e.chownSync = o(e.chownSync),
    e.fchownSync = o(e.fchownSync), e.lchownSync = o(e.lchownSync), e.chmodSync = n(e.chmodSync), e.fchmodSync = n(e.fchmodSync), e.lchmodSync =
    n(e.lchmodSync), e.stat = l(e.stat), e.fstat = l(e.fstat), e.lstat = l(e.lstat), e.statSync = u(e.statSync), e.fstatSync = u(e.fstatSync),
    e.lstatSync = u(e.lstatSync), e.chmod && !e.lchmod && (e.lchmod = function(f, p, d) {
      d && process.nextTick(d);
    }, e.lchmodSync = function() {
    }), e.chown && !e.lchown && (e.lchown = function(f, p, d, m) {
      m && process.nextTick(m);
    }, e.lchownSync = function() {
    }), xW === "win32" && (e.rename = typeof e.rename != "function" ? e.rename : function(f) {
      function p(d, m, b) {
        var h = Date.now(), g = 0;
        f(d, m, /* @__PURE__ */ i(function E(D) {
          if (D && (D.code === "EACCES" || D.code === "EPERM" || D.code === "EBUSY") && Date.now() - h < 6e4) {
            setTimeout(function() {
              e.stat(m, function(C, N) {
                C && C.code === "ENOENT" ? f(d, m, E) : b(D);
              });
            }, g), g < 100 && (g += 10);
            return;
          }
          b && b(D);
        }, "CB"));
      }
      return i(p, "rename"), Object.setPrototypeOf && Object.setPrototypeOf(p, f), p;
    }(e.rename)), e.read = typeof e.read != "function" ? e.read : function(f) {
      function p(d, m, b, h, g, E) {
        var D;
        if (E && typeof E == "function") {
          var C = 0;
          D = /* @__PURE__ */ i(function(N, I, M) {
            if (N && N.code === "EAGAIN" && C < 10)
              return C++, f.call(e, d, m, b, h, g, D);
            E.apply(this, arguments);
          }, "callback");
        }
        return f.call(e, d, m, b, h, g, D);
      }
      return i(p, "read"), Object.setPrototypeOf && Object.setPrototypeOf(p, f), p;
    }(e.read), e.readSync = typeof e.readSync != "function" ? e.readSync : /* @__PURE__ */ function(f) {
      return function(p, d, m, b, h) {
        for (var g = 0; ; )
          try {
            return f.call(e, p, d, m, b, h);
          } catch (E) {
            if (E.code === "EAGAIN" && g < 10) {
              g++;
              continue;
            }
            throw E;
          }
      };
    }(e.readSync);
    function t(f) {
      f.lchmod = function(p, d, m) {
        f.open(
          p,
          qi.O_WRONLY | qi.O_SYMLINK,
          d,
          function(b, h) {
            if (b) {
              m && m(b);
              return;
            }
            f.fchmod(h, d, function(g) {
              f.close(h, function(E) {
                m && m(g || E);
              });
            });
          }
        );
      }, f.lchmodSync = function(p, d) {
        var m = f.openSync(p, qi.O_WRONLY | qi.O_SYMLINK, d), b = !0, h;
        try {
          h = f.fchmodSync(m, d), b = !1;
        } finally {
          if (b)
            try {
              f.closeSync(m);
            } catch {
            }
          else
            f.closeSync(m);
        }
        return h;
      };
    }
    i(t, "patchLchmod");
    function r(f) {
      qi.hasOwnProperty("O_SYMLINK") && f.futimes ? (f.lutimes = function(p, d, m, b) {
        f.open(p, qi.O_SYMLINK, function(h, g) {
          if (h) {
            b && b(h);
            return;
          }
          f.futimes(g, d, m, function(E) {
            f.close(g, function(D) {
              b && b(E || D);
            });
          });
        });
      }, f.lutimesSync = function(p, d, m) {
        var b = f.openSync(p, qi.O_SYMLINK), h, g = !0;
        try {
          h = f.futimesSync(b, d, m), g = !1;
        } finally {
          if (g)
            try {
              f.closeSync(b);
            } catch {
            }
          else
            f.closeSync(b);
        }
        return h;
      }) : f.futimes && (f.lutimes = function(p, d, m, b) {
        b && process.nextTick(b);
      }, f.lutimesSync = function() {
      });
    }
    i(r, "patchLutimes");
    function s(f) {
      return f && function(p, d, m) {
        return f.call(e, p, d, function(b) {
          c(b) && (b = null), m && m.apply(this, arguments);
        });
      };
    }
    i(s, "chmodFix");
    function n(f) {
      return f && function(p, d) {
        try {
          return f.call(e, p, d);
        } catch (m) {
          if (!c(m)) throw m;
        }
      };
    }
    i(n, "chmodFixSync");
    function a(f) {
      return f && function(p, d, m, b) {
        return f.call(e, p, d, m, function(h) {
          c(h) && (h = null), b && b.apply(this, arguments);
        });
      };
    }
    i(a, "chownFix");
    function o(f) {
      return f && function(p, d, m) {
        try {
          return f.call(e, p, d, m);
        } catch (b) {
          if (!c(b)) throw b;
        }
      };
    }
    i(o, "chownFixSync");
    function l(f) {
      return f && function(p, d, m) {
        typeof d == "function" && (m = d, d = null);
        function b(h, g) {
          g && (g.uid < 0 && (g.uid += 4294967296), g.gid < 0 && (g.gid += 4294967296)), m && m.apply(this, arguments);
        }
        return i(b, "callback"), d ? f.call(e, p, d, b) : f.call(e, p, b);
      };
    }
    i(l, "statFix");
    function u(f) {
      return f && function(p, d) {
        var m = d ? f.call(e, p, d) : f.call(e, p);
        return m && (m.uid < 0 && (m.uid += 4294967296), m.gid < 0 && (m.gid += 4294967296)), m;
      };
    }
    i(u, "statFixSync");
    function c(f) {
      if (!f || f.code === "ENOSYS")
        return !0;
      var p = !process.getuid || process.getuid() !== 0;
      return !!(p && (f.code === "EINVAL" || f.code === "EPERM"));
    }
    i(c, "chownErOk");
  }
  i(PW, "patch");
});

// ../node_modules/graceful-fs/legacy-streams.js
var zw = y((DWe, Xw) => {
  var Yw = Q("stream").Stream;
  Xw.exports = AW;
  function AW(e) {
    return {
      ReadStream: t,
      WriteStream: r
    };
    function t(s, n) {
      if (!(this instanceof t)) return new t(s, n);
      Yw.call(this);
      var a = this;
      this.path = s, this.fd = null, this.readable = !0, this.paused = !1, this.flags = "r", this.mode = 438, this.bufferSize = 64 * 1024, n =
      n || {};
      for (var o = Object.keys(n), l = 0, u = o.length; l < u; l++) {
        var c = o[l];
        this[c] = n[c];
      }
      if (this.encoding && this.setEncoding(this.encoding), this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.end === void 0)
          this.end = 1 / 0;
        else if (typeof this.end != "number")
          throw TypeError("end must be a Number");
        if (this.start > this.end)
          throw new Error("start must be <= end");
        this.pos = this.start;
      }
      if (this.fd !== null) {
        process.nextTick(function() {
          a._read();
        });
        return;
      }
      e.open(this.path, this.flags, this.mode, function(f, p) {
        if (f) {
          a.emit("error", f), a.readable = !1;
          return;
        }
        a.fd = p, a.emit("open", p), a._read();
      });
    }
    function r(s, n) {
      if (!(this instanceof r)) return new r(s, n);
      Yw.call(this), this.path = s, this.fd = null, this.writable = !0, this.flags = "w", this.encoding = "binary", this.mode = 438, this.bytesWritten =
      0, n = n || {};
      for (var a = Object.keys(n), o = 0, l = a.length; o < l; o++) {
        var u = a[o];
        this[u] = n[u];
      }
      if (this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.start < 0)
          throw new Error("start must be >= zero");
        this.pos = this.start;
      }
      this.busy = !1, this._queue = [], this.fd === null && (this._open = e.open, this._queue.push([this._open, this.path, this.flags, this.
      mode, void 0]), this.flush());
    }
  }
  i(AW, "legacy");
});

// ../node_modules/graceful-fs/clone.js
var Qw = y((_We, Jw) => {
  "use strict";
  Jw.exports = wW;
  var CW = Object.getPrototypeOf || function(e) {
    return e.__proto__;
  };
  function wW(e) {
    if (e === null || typeof e != "object")
      return e;
    if (e instanceof Object)
      var t = { __proto__: CW(e) };
    else
      var t = /* @__PURE__ */ Object.create(null);
    return Object.getOwnPropertyNames(e).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(e, r));
    }), t;
  }
  i(wW, "clone");
});

// ../node_modules/graceful-fs/graceful-fs.js
var Fo = y((NWe, a0) => {
  var er = Q("fs"), DW = Kw(), IW = zw(), _W = Qw(), Kf = Q("util"), Nr, Xf;
  typeof Symbol == "function" && typeof Symbol.for == "function" ? (Nr = Symbol.for("graceful-fs.queue"), Xf = Symbol.for("graceful-fs.previ\
ous")) : (Nr = "___graceful-fs.queue", Xf = "___graceful-fs.previous");
  function OW() {
  }
  i(OW, "noop");
  function tD(e, t) {
    Object.defineProperty(e, Nr, {
      get: /* @__PURE__ */ i(function() {
        return t;
      }, "get")
    });
  }
  i(tD, "publishQueue");
  var Fa = OW;
  Kf.debuglog ? Fa = Kf.debuglog("gfs4") : /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && (Fa = /* @__PURE__ */ i(function() {
    var e = Kf.format.apply(Kf, arguments);
    e = "GFS4: " + e.split(/\n/).join(`
GFS4: `), console.error(e);
  }, "debug"));
  er[Nr] || (Zw = global[Nr] || [], tD(er, Zw), er.close = function(e) {
    function t(r, s) {
      return e.call(er, r, function(n) {
        n || eD(), typeof s == "function" && s.apply(this, arguments);
      });
    }
    return i(t, "close"), Object.defineProperty(t, Xf, {
      value: e
    }), t;
  }(er.close), er.closeSync = function(e) {
    function t(r) {
      e.apply(er, arguments), eD();
    }
    return i(t, "closeSync"), Object.defineProperty(t, Xf, {
      value: e
    }), t;
  }(er.closeSync), /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && process.on("exit", function() {
    Fa(er[Nr]), Q("assert").equal(er[Nr].length, 0);
  }));
  var Zw;
  global[Nr] || tD(global, er[Nr]);
  a0.exports = n0(_W(er));
  process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !er.__patched && (a0.exports = n0(er), er.__patched = !0);
  function n0(e) {
    DW(e), e.gracefulify = n0, e.createReadStream = I, e.createWriteStream = M;
    var t = e.readFile;
    e.readFile = r;
    function r(W, Y, j) {
      return typeof Y == "function" && (j = Y, Y = null), ae(W, Y, j);
      function ae(pe, Ie, F, L) {
        return t(pe, Ie, function(se) {
          se && (se.code === "EMFILE" || se.code === "ENFILE") ? ko([ae, [pe, Ie, F], se, L || Date.now(), Date.now()]) : typeof F == "funct\
ion" && F.apply(this, arguments);
        });
      }
      i(ae, "go$readFile");
    }
    i(r, "readFile");
    var s = e.writeFile;
    e.writeFile = n;
    function n(W, Y, j, ae) {
      return typeof j == "function" && (ae = j, j = null), pe(W, Y, j, ae);
      function pe(Ie, F, L, se, ne) {
        return s(Ie, F, L, function(Ee) {
          Ee && (Ee.code === "EMFILE" || Ee.code === "ENFILE") ? ko([pe, [Ie, F, L, se], Ee, ne || Date.now(), Date.now()]) : typeof se == "\
function" && se.apply(this, arguments);
        });
      }
      i(pe, "go$writeFile");
    }
    i(n, "writeFile");
    var a = e.appendFile;
    a && (e.appendFile = o);
    function o(W, Y, j, ae) {
      return typeof j == "function" && (ae = j, j = null), pe(W, Y, j, ae);
      function pe(Ie, F, L, se, ne) {
        return a(Ie, F, L, function(Ee) {
          Ee && (Ee.code === "EMFILE" || Ee.code === "ENFILE") ? ko([pe, [Ie, F, L, se], Ee, ne || Date.now(), Date.now()]) : typeof se == "\
function" && se.apply(this, arguments);
        });
      }
      i(pe, "go$appendFile");
    }
    i(o, "appendFile");
    var l = e.copyFile;
    l && (e.copyFile = u);
    function u(W, Y, j, ae) {
      return typeof j == "function" && (ae = j, j = 0), pe(W, Y, j, ae);
      function pe(Ie, F, L, se, ne) {
        return l(Ie, F, L, function(Ee) {
          Ee && (Ee.code === "EMFILE" || Ee.code === "ENFILE") ? ko([pe, [Ie, F, L, se], Ee, ne || Date.now(), Date.now()]) : typeof se == "\
function" && se.apply(this, arguments);
        });
      }
      i(pe, "go$copyFile");
    }
    i(u, "copyFile");
    var c = e.readdir;
    e.readdir = p;
    var f = /^v[0-5]\./;
    function p(W, Y, j) {
      typeof Y == "function" && (j = Y, Y = null);
      var ae = f.test(process.version) ? /* @__PURE__ */ i(function(F, L, se, ne) {
        return c(F, pe(
          F,
          L,
          se,
          ne
        ));
      }, "go$readdir") : /* @__PURE__ */ i(function(F, L, se, ne) {
        return c(F, L, pe(
          F,
          L,
          se,
          ne
        ));
      }, "go$readdir");
      return ae(W, Y, j);
      function pe(Ie, F, L, se) {
        return function(ne, Ee) {
          ne && (ne.code === "EMFILE" || ne.code === "ENFILE") ? ko([
            ae,
            [Ie, F, L],
            ne,
            se || Date.now(),
            Date.now()
          ]) : (Ee && Ee.sort && Ee.sort(), typeof L == "function" && L.call(this, ne, Ee));
        };
      }
    }
    if (i(p, "readdir"), process.version.substr(0, 4) === "v0.8") {
      var d = IW(e);
      E = d.ReadStream, C = d.WriteStream;
    }
    var m = e.ReadStream;
    m && (E.prototype = Object.create(m.prototype), E.prototype.open = D);
    var b = e.WriteStream;
    b && (C.prototype = Object.create(b.prototype), C.prototype.open = N), Object.defineProperty(e, "ReadStream", {
      get: /* @__PURE__ */ i(function() {
        return E;
      }, "get"),
      set: /* @__PURE__ */ i(function(W) {
        E = W;
      }, "set"),
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e, "WriteStream", {
      get: /* @__PURE__ */ i(function() {
        return C;
      }, "get"),
      set: /* @__PURE__ */ i(function(W) {
        C = W;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var h = E;
    Object.defineProperty(e, "FileReadStream", {
      get: /* @__PURE__ */ i(function() {
        return h;
      }, "get"),
      set: /* @__PURE__ */ i(function(W) {
        h = W;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var g = C;
    Object.defineProperty(e, "FileWriteStream", {
      get: /* @__PURE__ */ i(function() {
        return g;
      }, "get"),
      set: /* @__PURE__ */ i(function(W) {
        g = W;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    function E(W, Y) {
      return this instanceof E ? (m.apply(this, arguments), this) : E.apply(Object.create(E.prototype), arguments);
    }
    i(E, "ReadStream");
    function D() {
      var W = this;
      V(W.path, W.flags, W.mode, function(Y, j) {
        Y ? (W.autoClose && W.destroy(), W.emit("error", Y)) : (W.fd = j, W.emit("open", j), W.read());
      });
    }
    i(D, "ReadStream$open");
    function C(W, Y) {
      return this instanceof C ? (b.apply(this, arguments), this) : C.apply(Object.create(C.prototype), arguments);
    }
    i(C, "WriteStream");
    function N() {
      var W = this;
      V(W.path, W.flags, W.mode, function(Y, j) {
        Y ? (W.destroy(), W.emit("error", Y)) : (W.fd = j, W.emit("open", j));
      });
    }
    i(N, "WriteStream$open");
    function I(W, Y) {
      return new e.ReadStream(W, Y);
    }
    i(I, "createReadStream");
    function M(W, Y) {
      return new e.WriteStream(W, Y);
    }
    i(M, "createWriteStream");
    var q = e.open;
    e.open = V;
    function V(W, Y, j, ae) {
      return typeof j == "function" && (ae = j, j = null), pe(W, Y, j, ae);
      function pe(Ie, F, L, se, ne) {
        return q(Ie, F, L, function(Ee, qe) {
          Ee && (Ee.code === "EMFILE" || Ee.code === "ENFILE") ? ko([pe, [Ie, F, L, se], Ee, ne || Date.now(), Date.now()]) : typeof se == "\
function" && se.apply(this, arguments);
        });
      }
      i(pe, "go$open");
    }
    return i(V, "open"), e;
  }
  i(n0, "patch");
  function ko(e) {
    Fa("ENQUEUE", e[0].name, e[1]), er[Nr].push(e), i0();
  }
  i(ko, "enqueue");
  var Yf;
  function eD() {
    for (var e = Date.now(), t = 0; t < er[Nr].length; ++t)
      er[Nr][t].length > 2 && (er[Nr][t][3] = e, er[Nr][t][4] = e);
    i0();
  }
  i(eD, "resetQueue");
  function i0() {
    if (clearTimeout(Yf), Yf = void 0, er[Nr].length !== 0) {
      var e = er[Nr].shift(), t = e[0], r = e[1], s = e[2], n = e[3], a = e[4];
      if (n === void 0)
        Fa("RETRY", t.name, r), t.apply(null, r);
      else if (Date.now() - n >= 6e4) {
        Fa("TIMEOUT", t.name, r);
        var o = r.pop();
        typeof o == "function" && o.call(null, s);
      } else {
        var l = Date.now() - a, u = Math.max(a - n, 1), c = Math.min(u * 1.2, 100);
        l >= c ? (Fa("RETRY", t.name, r), t.apply(null, r.concat([n]))) : er[Nr].push(e);
      }
      Yf === void 0 && (Yf = setTimeout(i0, 0));
    }
  }
  i(i0, "retry");
});

// ../node_modules/fs-extra/lib/fs/index.js
var Zr = y((Zn) => {
  "use strict";
  var rD = Pr().fromCallback, Qr = Fo(), NW = [
    "access",
    "appendFile",
    "chmod",
    "chown",
    "close",
    "copyFile",
    "fchmod",
    "fchown",
    "fdatasync",
    "fstat",
    "fsync",
    "ftruncate",
    "futimes",
    "lchmod",
    "lchown",
    "link",
    "lstat",
    "mkdir",
    "mkdtemp",
    "open",
    "opendir",
    "readdir",
    "readFile",
    "readlink",
    "realpath",
    "rename",
    "rm",
    "rmdir",
    "stat",
    "symlink",
    "truncate",
    "unlink",
    "utimes",
    "writeFile"
  ].filter((e) => typeof Qr[e] == "function");
  Object.assign(Zn, Qr);
  NW.forEach((e) => {
    Zn[e] = rD(Qr[e]);
  });
  Zn.exists = function(e, t) {
    return typeof t == "function" ? Qr.exists(e, t) : new Promise((r) => Qr.exists(e, r));
  };
  Zn.read = function(e, t, r, s, n, a) {
    return typeof a == "function" ? Qr.read(e, t, r, s, n, a) : new Promise((o, l) => {
      Qr.read(e, t, r, s, n, (u, c, f) => {
        if (u) return l(u);
        o({ bytesRead: c, buffer: f });
      });
    });
  };
  Zn.write = function(e, t, ...r) {
    return typeof r[r.length - 1] == "function" ? Qr.write(e, t, ...r) : new Promise((s, n) => {
      Qr.write(e, t, ...r, (a, o, l) => {
        if (a) return n(a);
        s({ bytesWritten: o, buffer: l });
      });
    });
  };
  Zn.readv = function(e, t, ...r) {
    return typeof r[r.length - 1] == "function" ? Qr.readv(e, t, ...r) : new Promise((s, n) => {
      Qr.readv(e, t, ...r, (a, o, l) => {
        if (a) return n(a);
        s({ bytesRead: o, buffers: l });
      });
    });
  };
  Zn.writev = function(e, t, ...r) {
    return typeof r[r.length - 1] == "function" ? Qr.writev(e, t, ...r) : new Promise((s, n) => {
      Qr.writev(e, t, ...r, (a, o, l) => {
        if (a) return n(a);
        s({ bytesWritten: o, buffers: l });
      });
    });
  };
  typeof Qr.realpath.native == "function" ? Zn.realpath.native = rD(Qr.realpath.native) : process.emitWarning(
    "fs.realpath.native is not a function. Is fs being monkey-patched?",
    "Warning",
    "fs-extra-WARN0003"
  );
});

// ../node_modules/fs-extra/lib/mkdirs/utils.js
var nD = y((FWe, sD) => {
  "use strict";
  var RW = Q("path");
  sD.exports.checkPath = /* @__PURE__ */ i(function(t) {
    if (process.platform === "win32" && /[<>:"|?*]/.test(t.replace(RW.parse(t).root, ""))) {
      let s = new Error(`Path contains invalid characters: ${t}`);
      throw s.code = "EINVAL", s;
    }
  }, "checkPath");
});

// ../node_modules/fs-extra/lib/mkdirs/make-dir.js
var lD = y((BWe, o0) => {
  "use strict";
  var iD = Zr(), { checkPath: aD } = nD(), oD = /* @__PURE__ */ i((e) => {
    let t = { mode: 511 };
    return typeof e == "number" ? e : { ...t, ...e }.mode;
  }, "getMode");
  o0.exports.makeDir = async (e, t) => (aD(e), iD.mkdir(e, {
    mode: oD(t),
    recursive: !0
  }));
  o0.exports.makeDirSync = (e, t) => (aD(e), iD.mkdirSync(e, {
    mode: oD(t),
    recursive: !0
  }));
});

// ../node_modules/fs-extra/lib/mkdirs/index.js
var nn = y((jWe, uD) => {
  "use strict";
  var kW = Pr().fromPromise, { makeDir: FW, makeDirSync: l0 } = lD(), u0 = kW(FW);
  uD.exports = {
    mkdirs: u0,
    mkdirsSync: l0,
    // alias
    mkdirp: u0,
    mkdirpSync: l0,
    ensureDir: u0,
    ensureDirSync: l0
  };
});

// ../node_modules/fs-extra/lib/path-exists/index.js
var $i = y((qWe, fD) => {
  "use strict";
  var LW = Pr().fromPromise, cD = Zr();
  function BW(e) {
    return cD.access(e).then(() => !0).catch(() => !1);
  }
  i(BW, "pathExists");
  fD.exports = {
    pathExists: LW(BW),
    pathExistsSync: cD.existsSync
  };
});

// ../node_modules/fs-extra/lib/util/utimes.js
var c0 = y((UWe, pD) => {
  "use strict";
  var Lo = Zr(), MW = Pr().fromPromise;
  async function jW(e, t, r) {
    let s = await Lo.open(e, "r+"), n = null;
    try {
      await Lo.futimes(s, t, r);
    } finally {
      try {
        await Lo.close(s);
      } catch (a) {
        n = a;
      }
    }
    if (n)
      throw n;
  }
  i(jW, "utimesMillis");
  function qW(e, t, r) {
    let s = Lo.openSync(e, "r+");
    return Lo.futimesSync(s, t, r), Lo.closeSync(s);
  }
  i(qW, "utimesMillisSync");
  pD.exports = {
    utimesMillis: MW(jW),
    utimesMillisSync: qW
  };
});

// ../node_modules/fs-extra/lib/util/stat.js
var La = y((WWe, yD) => {
  "use strict";
  var Bo = Zr(), Ar = Q("path"), dD = Pr().fromPromise;
  function $W(e, t, r) {
    let s = r.dereference ? (n) => Bo.stat(n, { bigint: !0 }) : (n) => Bo.lstat(n, { bigint: !0 });
    return Promise.all([
      s(e),
      s(t).catch((n) => {
        if (n.code === "ENOENT") return null;
        throw n;
      })
    ]).then(([n, a]) => ({ srcStat: n, destStat: a }));
  }
  i($W, "getStats");
  function UW(e, t, r) {
    let s, n = r.dereference ? (o) => Bo.statSync(o, { bigint: !0 }) : (o) => Bo.lstatSync(o, { bigint: !0 }), a = n(e);
    try {
      s = n(t);
    } catch (o) {
      if (o.code === "ENOENT") return { srcStat: a, destStat: null };
      throw o;
    }
    return { srcStat: a, destStat: s };
  }
  i(UW, "getStatsSync");
  async function VW(e, t, r, s) {
    let { srcStat: n, destStat: a } = await $W(e, t, s);
    if (a) {
      if (mu(n, a)) {
        let o = Ar.basename(e), l = Ar.basename(t);
        if (r === "move" && o !== l && o.toLowerCase() === l.toLowerCase())
          return { srcStat: n, destStat: a, isChangingCase: !0 };
        throw new Error("Source and destination must not be the same.");
      }
      if (n.isDirectory() && !a.isDirectory())
        throw new Error(`Cannot overwrite non-directory '${t}' with directory '${e}'.`);
      if (!n.isDirectory() && a.isDirectory())
        throw new Error(`Cannot overwrite directory '${t}' with non-directory '${e}'.`);
    }
    if (n.isDirectory() && f0(e, t))
      throw new Error(zf(e, t, r));
    return { srcStat: n, destStat: a };
  }
  i(VW, "checkPaths");
  function WW(e, t, r, s) {
    let { srcStat: n, destStat: a } = UW(e, t, s);
    if (a) {
      if (mu(n, a)) {
        let o = Ar.basename(e), l = Ar.basename(t);
        if (r === "move" && o !== l && o.toLowerCase() === l.toLowerCase())
          return { srcStat: n, destStat: a, isChangingCase: !0 };
        throw new Error("Source and destination must not be the same.");
      }
      if (n.isDirectory() && !a.isDirectory())
        throw new Error(`Cannot overwrite non-directory '${t}' with directory '${e}'.`);
      if (!n.isDirectory() && a.isDirectory())
        throw new Error(`Cannot overwrite directory '${t}' with non-directory '${e}'.`);
    }
    if (n.isDirectory() && f0(e, t))
      throw new Error(zf(e, t, r));
    return { srcStat: n, destStat: a };
  }
  i(WW, "checkPathsSync");
  async function hD(e, t, r, s) {
    let n = Ar.resolve(Ar.dirname(e)), a = Ar.resolve(Ar.dirname(r));
    if (a === n || a === Ar.parse(a).root) return;
    let o;
    try {
      o = await Bo.stat(a, { bigint: !0 });
    } catch (l) {
      if (l.code === "ENOENT") return;
      throw l;
    }
    if (mu(t, o))
      throw new Error(zf(e, r, s));
    return hD(e, t, a, s);
  }
  i(hD, "checkParentPaths");
  function mD(e, t, r, s) {
    let n = Ar.resolve(Ar.dirname(e)), a = Ar.resolve(Ar.dirname(r));
    if (a === n || a === Ar.parse(a).root) return;
    let o;
    try {
      o = Bo.statSync(a, { bigint: !0 });
    } catch (l) {
      if (l.code === "ENOENT") return;
      throw l;
    }
    if (mu(t, o))
      throw new Error(zf(e, r, s));
    return mD(e, t, a, s);
  }
  i(mD, "checkParentPathsSync");
  function mu(e, t) {
    return t.ino && t.dev && t.ino === e.ino && t.dev === e.dev;
  }
  i(mu, "areIdentical");
  function f0(e, t) {
    let r = Ar.resolve(e).split(Ar.sep).filter((n) => n), s = Ar.resolve(t).split(Ar.sep).filter((n) => n);
    return r.every((n, a) => s[a] === n);
  }
  i(f0, "isSrcSubdir");
  function zf(e, t, r) {
    return `Cannot ${r} '${e}' to a subdirectory of itself, '${t}'.`;
  }
  i(zf, "errMsg");
  yD.exports = {
    // checkPaths
    checkPaths: dD(VW),
    checkPathsSync: WW,
    // checkParent
    checkParentPaths: dD(hD),
    checkParentPathsSync: mD,
    // Misc
    isSrcSubdir: f0,
    areIdentical: mu
  };
});

// ../node_modules/fs-extra/lib/copy/copy.js
var SD = y((GWe, vD) => {
  "use strict";
  var Br = Zr(), yu = Q("path"), { mkdirs: HW } = nn(), { pathExists: GW } = $i(), { utimesMillis: KW } = c0(), gu = La();
  async function YW(e, t, r = {}) {
    typeof r == "function" && (r = { filter: r }), r.clobber = "clobber" in r ? !!r.clobber : !0, r.overwrite = "overwrite" in r ? !!r.overwrite :
    r.clobber, r.preserveTimestamps && process.arch === "ia32" && process.emitWarning(
      `Using the preserveTimestamps option in 32-bit node is not recommended;

	see https://github.com/jprichardson/node-fs-extra/issues/269`,
      "Warning",
      "fs-extra-WARN0001"
    );
    let { srcStat: s, destStat: n } = await gu.checkPaths(e, t, "copy", r);
    if (await gu.checkParentPaths(e, s, t, "copy"), !await bD(e, t, r)) return;
    let o = yu.dirname(t);
    await GW(o) || await HW(o), await ED(n, e, t, r);
  }
  i(YW, "copy");
  async function bD(e, t, r) {
    return r.filter ? r.filter(e, t) : !0;
  }
  i(bD, "runFilter");
  async function ED(e, t, r, s) {
    let a = await (s.dereference ? Br.stat : Br.lstat)(t);
    if (a.isDirectory()) return QW(a, e, t, r, s);
    if (a.isFile() || a.isCharacterDevice() || a.isBlockDevice()) return XW(a, e, t, r, s);
    if (a.isSymbolicLink()) return ZW(e, t, r, s);
    throw a.isSocket() ? new Error(`Cannot copy a socket file: ${t}`) : a.isFIFO() ? new Error(`Cannot copy a FIFO pipe: ${t}`) : new Error(
    `Unknown file: ${t}`);
  }
  i(ED, "getStatsAndPerformCopy");
  async function XW(e, t, r, s, n) {
    if (!t) return gD(e, r, s, n);
    if (n.overwrite)
      return await Br.unlink(s), gD(e, r, s, n);
    if (n.errorOnExist)
      throw new Error(`'${s}' already exists`);
  }
  i(XW, "onFile");
  async function gD(e, t, r, s) {
    if (await Br.copyFile(t, r), s.preserveTimestamps) {
      zW(e.mode) && await JW(r, e.mode);
      let n = await Br.stat(t);
      await KW(r, n.atime, n.mtime);
    }
    return Br.chmod(r, e.mode);
  }
  i(gD, "copyFile");
  function zW(e) {
    return (e & 128) === 0;
  }
  i(zW, "fileIsNotWritable");
  function JW(e, t) {
    return Br.chmod(e, t | 128);
  }
  i(JW, "makeFileWritable");
  async function QW(e, t, r, s, n) {
    t || await Br.mkdir(s);
    let a = await Br.readdir(r);
    await Promise.all(a.map(async (o) => {
      let l = yu.join(r, o), u = yu.join(s, o);
      if (!await bD(l, u, n)) return;
      let { destStat: f } = await gu.checkPaths(l, u, "copy", n);
      return ED(f, l, u, n);
    })), t || await Br.chmod(s, e.mode);
  }
  i(QW, "onDir");
  async function ZW(e, t, r, s) {
    let n = await Br.readlink(t);
    if (s.dereference && (n = yu.resolve(process.cwd(), n)), !e)
      return Br.symlink(n, r);
    let a = null;
    try {
      a = await Br.readlink(r);
    } catch (o) {
      if (o.code === "EINVAL" || o.code === "UNKNOWN") return Br.symlink(n, r);
      throw o;
    }
    if (s.dereference && (a = yu.resolve(process.cwd(), a)), gu.isSrcSubdir(n, a))
      throw new Error(`Cannot copy '${n}' to a subdirectory of itself, '${a}'.`);
    if (gu.isSrcSubdir(a, n))
      throw new Error(`Cannot overwrite '${a}' with '${n}'.`);
    return await Br.unlink(r), Br.symlink(n, r);
  }
  i(ZW, "onLink");
  vD.exports = YW;
});

// ../node_modules/fs-extra/lib/copy/copy-sync.js
var CD = y((YWe, AD) => {
  "use strict";
  var es = Fo(), bu = Q("path"), eH = nn().mkdirsSync, tH = c0().utimesMillisSync, Eu = La();
  function rH(e, t, r) {
    typeof r == "function" && (r = { filter: r }), r = r || {}, r.clobber = "clobber" in r ? !!r.clobber : !0, r.overwrite = "overwrite" in r ?
    !!r.overwrite : r.clobber, r.preserveTimestamps && process.arch === "ia32" && process.emitWarning(
      `Using the preserveTimestamps option in 32-bit node is not recommended;

	see https://github.com/jprichardson/node-fs-extra/issues/269`,
      "Warning",
      "fs-extra-WARN0002"
    );
    let { srcStat: s, destStat: n } = Eu.checkPathsSync(e, t, "copy", r);
    if (Eu.checkParentPathsSync(e, s, t, "copy"), r.filter && !r.filter(e, t)) return;
    let a = bu.dirname(t);
    return es.existsSync(a) || eH(a), TD(n, e, t, r);
  }
  i(rH, "copySync");
  function TD(e, t, r, s) {
    let a = (s.dereference ? es.statSync : es.lstatSync)(t);
    if (a.isDirectory()) return uH(a, e, t, r, s);
    if (a.isFile() || a.isCharacterDevice() || a.isBlockDevice()) return sH(a, e, t, r, s);
    if (a.isSymbolicLink()) return pH(e, t, r, s);
    throw a.isSocket() ? new Error(`Cannot copy a socket file: ${t}`) : a.isFIFO() ? new Error(`Cannot copy a FIFO pipe: ${t}`) : new Error(
    `Unknown file: ${t}`);
  }
  i(TD, "getStats");
  function sH(e, t, r, s, n) {
    return t ? nH(e, r, s, n) : xD(e, r, s, n);
  }
  i(sH, "onFile");
  function nH(e, t, r, s) {
    if (s.overwrite)
      return es.unlinkSync(r), xD(e, t, r, s);
    if (s.errorOnExist)
      throw new Error(`'${r}' already exists`);
  }
  i(nH, "mayCopyFile");
  function xD(e, t, r, s) {
    return es.copyFileSync(t, r), s.preserveTimestamps && iH(e.mode, t, r), p0(r, e.mode);
  }
  i(xD, "copyFile");
  function iH(e, t, r) {
    return aH(e) && oH(r, e), lH(t, r);
  }
  i(iH, "handleTimestamps");
  function aH(e) {
    return (e & 128) === 0;
  }
  i(aH, "fileIsNotWritable");
  function oH(e, t) {
    return p0(e, t | 128);
  }
  i(oH, "makeFileWritable");
  function p0(e, t) {
    return es.chmodSync(e, t);
  }
  i(p0, "setDestMode");
  function lH(e, t) {
    let r = es.statSync(e);
    return tH(t, r.atime, r.mtime);
  }
  i(lH, "setDestTimestamps");
  function uH(e, t, r, s, n) {
    return t ? PD(r, s, n) : cH(e.mode, r, s, n);
  }
  i(uH, "onDir");
  function cH(e, t, r, s) {
    return es.mkdirSync(r), PD(t, r, s), p0(r, e);
  }
  i(cH, "mkDirAndCopy");
  function PD(e, t, r) {
    es.readdirSync(e).forEach((s) => fH(s, e, t, r));
  }
  i(PD, "copyDir");
  function fH(e, t, r, s) {
    let n = bu.join(t, e), a = bu.join(r, e);
    if (s.filter && !s.filter(n, a)) return;
    let { destStat: o } = Eu.checkPathsSync(n, a, "copy", s);
    return TD(o, n, a, s);
  }
  i(fH, "copyDirItem");
  function pH(e, t, r, s) {
    let n = es.readlinkSync(t);
    if (s.dereference && (n = bu.resolve(process.cwd(), n)), e) {
      let a;
      try {
        a = es.readlinkSync(r);
      } catch (o) {
        if (o.code === "EINVAL" || o.code === "UNKNOWN") return es.symlinkSync(n, r);
        throw o;
      }
      if (s.dereference && (a = bu.resolve(process.cwd(), a)), Eu.isSrcSubdir(n, a))
        throw new Error(`Cannot copy '${n}' to a subdirectory of itself, '${a}'.`);
      if (Eu.isSrcSubdir(a, n))
        throw new Error(`Cannot overwrite '${a}' with '${n}'.`);
      return dH(n, r);
    } else
      return es.symlinkSync(n, r);
  }
  i(pH, "onLink");
  function dH(e, t) {
    return es.unlinkSync(t), es.symlinkSync(e, t);
  }
  i(dH, "copyLink");
  AD.exports = rH;
});

// ../node_modules/fs-extra/lib/copy/index.js
var Jf = y((zWe, wD) => {
  "use strict";
  var hH = Pr().fromPromise;
  wD.exports = {
    copy: hH(SD()),
    copySync: CD()
  };
});

// ../node_modules/fs-extra/lib/remove/index.js
var vu = y((JWe, ID) => {
  "use strict";
  var DD = Fo(), mH = Pr().fromCallback;
  function yH(e, t) {
    DD.rm(e, { recursive: !0, force: !0 }, t);
  }
  i(yH, "remove");
  function gH(e) {
    DD.rmSync(e, { recursive: !0, force: !0 });
  }
  i(gH, "removeSync");
  ID.exports = {
    remove: mH(yH),
    removeSync: gH
  };
});

// ../node_modules/fs-extra/lib/empty/index.js
var BD = y((ZWe, LD) => {
  "use strict";
  var bH = Pr().fromPromise, ND = Zr(), RD = Q("path"), kD = nn(), FD = vu(), _D = bH(/* @__PURE__ */ i(async function(t) {
    let r;
    try {
      r = await ND.readdir(t);
    } catch {
      return kD.mkdirs(t);
    }
    return Promise.all(r.map((s) => FD.remove(RD.join(t, s))));
  }, "emptyDir"));
  function OD(e) {
    let t;
    try {
      t = ND.readdirSync(e);
    } catch {
      return kD.mkdirsSync(e);
    }
    t.forEach((r) => {
      r = RD.join(e, r), FD.removeSync(r);
    });
  }
  i(OD, "emptyDirSync");
  LD.exports = {
    emptyDirSync: OD,
    emptydirSync: OD,
    emptyDir: _D,
    emptydir: _D
  };
});

// ../node_modules/fs-extra/lib/ensure/file.js
var $D = y((tHe, qD) => {
  "use strict";
  var EH = Pr().fromPromise, MD = Q("path"), ei = Zr(), jD = nn();
  async function vH(e) {
    let t;
    try {
      t = await ei.stat(e);
    } catch {
    }
    if (t && t.isFile()) return;
    let r = MD.dirname(e), s = null;
    try {
      s = await ei.stat(r);
    } catch (n) {
      if (n.code === "ENOENT") {
        await jD.mkdirs(r), await ei.writeFile(e, "");
        return;
      } else
        throw n;
    }
    s.isDirectory() ? await ei.writeFile(e, "") : await ei.readdir(r);
  }
  i(vH, "createFile");
  function SH(e) {
    let t;
    try {
      t = ei.statSync(e);
    } catch {
    }
    if (t && t.isFile()) return;
    let r = MD.dirname(e);
    try {
      ei.statSync(r).isDirectory() || ei.readdirSync(r);
    } catch (s) {
      if (s && s.code === "ENOENT") jD.mkdirsSync(r);
      else throw s;
    }
    ei.writeFileSync(e, "");
  }
  i(SH, "createFileSync");
  qD.exports = {
    createFile: EH(vH),
    createFileSync: SH
  };
});

// ../node_modules/fs-extra/lib/ensure/link.js
var GD = y((sHe, HD) => {
  "use strict";
  var TH = Pr().fromPromise, UD = Q("path"), Ui = Zr(), VD = nn(), { pathExists: xH } = $i(), { areIdentical: WD } = La();
  async function PH(e, t) {
    let r;
    try {
      r = await Ui.lstat(t);
    } catch {
    }
    let s;
    try {
      s = await Ui.lstat(e);
    } catch (o) {
      throw o.message = o.message.replace("lstat", "ensureLink"), o;
    }
    if (r && WD(s, r)) return;
    let n = UD.dirname(t);
    await xH(n) || await VD.mkdirs(n), await Ui.link(e, t);
  }
  i(PH, "createLink");
  function AH(e, t) {
    let r;
    try {
      r = Ui.lstatSync(t);
    } catch {
    }
    try {
      let a = Ui.lstatSync(e);
      if (r && WD(a, r)) return;
    } catch (a) {
      throw a.message = a.message.replace("lstat", "ensureLink"), a;
    }
    let s = UD.dirname(t);
    return Ui.existsSync(s) || VD.mkdirsSync(s), Ui.linkSync(e, t);
  }
  i(AH, "createLinkSync");
  HD.exports = {
    createLink: TH(PH),
    createLinkSync: AH
  };
});

// ../node_modules/fs-extra/lib/ensure/symlink-paths.js
var YD = y((iHe, KD) => {
  "use strict";
  var Vi = Q("path"), Su = Zr(), { pathExists: CH } = $i(), wH = Pr().fromPromise;
  async function DH(e, t) {
    if (Vi.isAbsolute(e)) {
      try {
        await Su.lstat(e);
      } catch (a) {
        throw a.message = a.message.replace("lstat", "ensureSymlink"), a;
      }
      return {
        toCwd: e,
        toDst: e
      };
    }
    let r = Vi.dirname(t), s = Vi.join(r, e);
    if (await CH(s))
      return {
        toCwd: s,
        toDst: e
      };
    try {
      await Su.lstat(e);
    } catch (a) {
      throw a.message = a.message.replace("lstat", "ensureSymlink"), a;
    }
    return {
      toCwd: e,
      toDst: Vi.relative(r, e)
    };
  }
  i(DH, "symlinkPaths");
  function IH(e, t) {
    if (Vi.isAbsolute(e)) {
      if (!Su.existsSync(e)) throw new Error("absolute srcpath does not exist");
      return {
        toCwd: e,
        toDst: e
      };
    }
    let r = Vi.dirname(t), s = Vi.join(r, e);
    if (Su.existsSync(s))
      return {
        toCwd: s,
        toDst: e
      };
    if (!Su.existsSync(e)) throw new Error("relative srcpath does not exist");
    return {
      toCwd: e,
      toDst: Vi.relative(r, e)
    };
  }
  i(IH, "symlinkPathsSync");
  KD.exports = {
    symlinkPaths: wH(DH),
    symlinkPathsSync: IH
  };
});

// ../node_modules/fs-extra/lib/ensure/symlink-type.js
var JD = y((oHe, zD) => {
  "use strict";
  var XD = Zr(), _H = Pr().fromPromise;
  async function OH(e, t) {
    if (t) return t;
    let r;
    try {
      r = await XD.lstat(e);
    } catch {
      return "file";
    }
    return r && r.isDirectory() ? "dir" : "file";
  }
  i(OH, "symlinkType");
  function NH(e, t) {
    if (t) return t;
    let r;
    try {
      r = XD.lstatSync(e);
    } catch {
      return "file";
    }
    return r && r.isDirectory() ? "dir" : "file";
  }
  i(NH, "symlinkTypeSync");
  zD.exports = {
    symlinkType: _H(OH),
    symlinkTypeSync: NH
  };
});

// ../node_modules/fs-extra/lib/ensure/symlink.js
var t2 = y((uHe, e2) => {
  "use strict";
  var RH = Pr().fromPromise, QD = Q("path"), wn = Zr(), { mkdirs: kH, mkdirsSync: FH } = nn(), { symlinkPaths: LH, symlinkPathsSync: BH } = YD(),
  { symlinkType: MH, symlinkTypeSync: jH } = JD(), { pathExists: qH } = $i(), { areIdentical: ZD } = La();
  async function $H(e, t, r) {
    let s;
    try {
      s = await wn.lstat(t);
    } catch {
    }
    if (s && s.isSymbolicLink()) {
      let [l, u] = await Promise.all([
        wn.stat(e),
        wn.stat(t)
      ]);
      if (ZD(l, u)) return;
    }
    let n = await LH(e, t);
    e = n.toDst;
    let a = await MH(n.toCwd, r), o = QD.dirname(t);
    return await qH(o) || await kH(o), wn.symlink(e, t, a);
  }
  i($H, "createSymlink");
  function UH(e, t, r) {
    let s;
    try {
      s = wn.lstatSync(t);
    } catch {
    }
    if (s && s.isSymbolicLink()) {
      let l = wn.statSync(e), u = wn.statSync(t);
      if (ZD(l, u)) return;
    }
    let n = BH(e, t);
    e = n.toDst, r = jH(n.toCwd, r);
    let a = QD.dirname(t);
    return wn.existsSync(a) || FH(a), wn.symlinkSync(e, t, r);
  }
  i(UH, "createSymlinkSync");
  e2.exports = {
    createSymlink: RH($H),
    createSymlinkSync: UH
  };
});

// ../node_modules/fs-extra/lib/ensure/index.js
var u2 = y((fHe, l2) => {
  "use strict";
  var { createFile: r2, createFileSync: s2 } = $D(), { createLink: n2, createLinkSync: i2 } = GD(), { createSymlink: a2, createSymlinkSync: o2 } = t2();
  l2.exports = {
    // file
    createFile: r2,
    createFileSync: s2,
    ensureFile: r2,
    ensureFileSync: s2,
    // link
    createLink: n2,
    createLinkSync: i2,
    ensureLink: n2,
    ensureLinkSync: i2,
    // symlink
    createSymlink: a2,
    createSymlinkSync: o2,
    ensureSymlink: a2,
    ensureSymlinkSync: o2
  };
});

// ../node_modules/jsonfile/utils.js
var Qf = y((pHe, c2) => {
  function VH(e, { EOL: t = `
`, finalEOL: r = !0, replacer: s = null, spaces: n } = {}) {
    let a = r ? t : "";
    return JSON.stringify(e, s, n).replace(/\n/g, t) + a;
  }
  i(VH, "stringify");
  function WH(e) {
    return Buffer.isBuffer(e) && (e = e.toString("utf8")), e.replace(/^\uFEFF/, "");
  }
  i(WH, "stripBom");
  c2.exports = { stringify: VH, stripBom: WH };
});

// ../node_modules/jsonfile/index.js
var h2 = y((hHe, d2) => {
  var Mo;
  try {
    Mo = Fo();
  } catch {
    Mo = Q("fs");
  }
  var Zf = Pr(), { stringify: f2, stripBom: p2 } = Qf();
  async function HH(e, t = {}) {
    typeof t == "string" && (t = { encoding: t });
    let r = t.fs || Mo, s = "throws" in t ? t.throws : !0, n = await Zf.fromCallback(r.readFile)(e, t);
    n = p2(n);
    let a;
    try {
      a = JSON.parse(n, t ? t.reviver : null);
    } catch (o) {
      if (s)
        throw o.message = `${e}: ${o.message}`, o;
      return null;
    }
    return a;
  }
  i(HH, "_readFile");
  var GH = Zf.fromPromise(HH);
  function KH(e, t = {}) {
    typeof t == "string" && (t = { encoding: t });
    let r = t.fs || Mo, s = "throws" in t ? t.throws : !0;
    try {
      let n = r.readFileSync(e, t);
      return n = p2(n), JSON.parse(n, t.reviver);
    } catch (n) {
      if (s)
        throw n.message = `${e}: ${n.message}`, n;
      return null;
    }
  }
  i(KH, "readFileSync");
  async function YH(e, t, r = {}) {
    let s = r.fs || Mo, n = f2(t, r);
    await Zf.fromCallback(s.writeFile)(e, n, r);
  }
  i(YH, "_writeFile");
  var XH = Zf.fromPromise(YH);
  function zH(e, t, r = {}) {
    let s = r.fs || Mo, n = f2(t, r);
    return s.writeFileSync(e, n, r);
  }
  i(zH, "writeFileSync");
  var JH = {
    readFile: GH,
    readFileSync: KH,
    writeFile: XH,
    writeFileSync: zH
  };
  d2.exports = JH;
});

// ../node_modules/fs-extra/lib/json/jsonfile.js
var y2 = y((yHe, m2) => {
  "use strict";
  var ep = h2();
  m2.exports = {
    // jsonfile exports
    readJson: ep.readFile,
    readJsonSync: ep.readFileSync,
    writeJson: ep.writeFile,
    writeJsonSync: ep.writeFileSync
  };
});

// ../node_modules/fs-extra/lib/output-file/index.js
var tp = y((gHe, E2) => {
  "use strict";
  var QH = Pr().fromPromise, d0 = Zr(), g2 = Q("path"), b2 = nn(), ZH = $i().pathExists;
  async function eG(e, t, r = "utf-8") {
    let s = g2.dirname(e);
    return await ZH(s) || await b2.mkdirs(s), d0.writeFile(e, t, r);
  }
  i(eG, "outputFile");
  function tG(e, ...t) {
    let r = g2.dirname(e);
    d0.existsSync(r) || b2.mkdirsSync(r), d0.writeFileSync(e, ...t);
  }
  i(tG, "outputFileSync");
  E2.exports = {
    outputFile: QH(eG),
    outputFileSync: tG
  };
});

// ../node_modules/fs-extra/lib/json/output-json.js
var S2 = y((EHe, v2) => {
  "use strict";
  var { stringify: rG } = Qf(), { outputFile: sG } = tp();
  async function nG(e, t, r = {}) {
    let s = rG(t, r);
    await sG(e, s, r);
  }
  i(nG, "outputJson");
  v2.exports = nG;
});

// ../node_modules/fs-extra/lib/json/output-json-sync.js
var x2 = y((SHe, T2) => {
  "use strict";
  var { stringify: iG } = Qf(), { outputFileSync: aG } = tp();
  function oG(e, t, r) {
    let s = iG(t, r);
    aG(e, s, r);
  }
  i(oG, "outputJsonSync");
  T2.exports = oG;
});

// ../node_modules/fs-extra/lib/json/index.js
var A2 = y((xHe, P2) => {
  "use strict";
  var lG = Pr().fromPromise, ts = y2();
  ts.outputJson = lG(S2());
  ts.outputJsonSync = x2();
  ts.outputJSON = ts.outputJson;
  ts.outputJSONSync = ts.outputJsonSync;
  ts.writeJSON = ts.writeJson;
  ts.writeJSONSync = ts.writeJsonSync;
  ts.readJSON = ts.readJson;
  ts.readJSONSync = ts.readJsonSync;
  P2.exports = ts;
});

// ../node_modules/fs-extra/lib/move/move.js
var _2 = y((PHe, I2) => {
  "use strict";
  var uG = Zr(), C2 = Q("path"), { copy: cG } = Jf(), { remove: D2 } = vu(), { mkdirp: fG } = nn(), { pathExists: pG } = $i(), w2 = La();
  async function dG(e, t, r = {}) {
    let s = r.overwrite || r.clobber || !1, { srcStat: n, isChangingCase: a = !1 } = await w2.checkPaths(e, t, "move", r);
    await w2.checkParentPaths(e, n, t, "move");
    let o = C2.dirname(t);
    return C2.parse(o).root !== o && await fG(o), hG(e, t, s, a);
  }
  i(dG, "move");
  async function hG(e, t, r, s) {
    if (!s) {
      if (r)
        await D2(t);
      else if (await pG(t))
        throw new Error("dest already exists.");
    }
    try {
      await uG.rename(e, t);
    } catch (n) {
      if (n.code !== "EXDEV")
        throw n;
      await mG(e, t, r);
    }
  }
  i(hG, "doRename");
  async function mG(e, t, r) {
    return await cG(e, t, {
      overwrite: r,
      errorOnExist: !0,
      preserveTimestamps: !0
    }), D2(e);
  }
  i(mG, "moveAcrossDevice");
  I2.exports = dG;
});

// ../node_modules/fs-extra/lib/move/move-sync.js
var F2 = y((CHe, k2) => {
  "use strict";
  var N2 = Fo(), m0 = Q("path"), yG = Jf().copySync, R2 = vu().removeSync, gG = nn().mkdirpSync, O2 = La();
  function bG(e, t, r) {
    r = r || {};
    let s = r.overwrite || r.clobber || !1, { srcStat: n, isChangingCase: a = !1 } = O2.checkPathsSync(e, t, "move", r);
    return O2.checkParentPathsSync(e, n, t, "move"), EG(t) || gG(m0.dirname(t)), vG(e, t, s, a);
  }
  i(bG, "moveSync");
  function EG(e) {
    let t = m0.dirname(e);
    return m0.parse(t).root === t;
  }
  i(EG, "isParentRoot");
  function vG(e, t, r, s) {
    if (s) return h0(e, t, r);
    if (r)
      return R2(t), h0(e, t, r);
    if (N2.existsSync(t)) throw new Error("dest already exists.");
    return h0(e, t, r);
  }
  i(vG, "doRename");
  function h0(e, t, r) {
    try {
      N2.renameSync(e, t);
    } catch (s) {
      if (s.code !== "EXDEV") throw s;
      return SG(e, t, r);
    }
  }
  i(h0, "rename");
  function SG(e, t, r) {
    return yG(e, t, {
      overwrite: r,
      errorOnExist: !0,
      preserveTimestamps: !0
    }), R2(e);
  }
  i(SG, "moveAcrossDevice");
  k2.exports = bG;
});

// ../node_modules/fs-extra/lib/move/index.js
var B2 = y((DHe, L2) => {
  "use strict";
  var TG = Pr().fromPromise;
  L2.exports = {
    move: TG(_2()),
    moveSync: F2()
  };
});

// ../node_modules/fs-extra/lib/index.js
var rp = y((IHe, M2) => {
  "use strict";
  M2.exports = {
    // Export promiseified graceful-fs:
    ...Zr(),
    // Export extra methods:
    ...Jf(),
    ...BD(),
    ...u2(),
    ...A2(),
    ...nn(),
    ...B2(),
    ...tp(),
    ...$i(),
    ...vu()
  };
});

// ../node_modules/ts-dedent/dist/index.js
var jo = y((Tu) => {
  "use strict";
  Object.defineProperty(Tu, "__esModule", { value: !0 });
  Tu.dedent = void 0;
  function j2(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
      t[r - 1] = arguments[r];
    var s = Array.from(typeof e == "string" ? [e] : e);
    s[s.length - 1] = s[s.length - 1].replace(/\r?\n([\t ]*)$/, "");
    var n = s.reduce(function(l, u) {
      var c = u.match(/\n([\t ]+|(?!\s).)/g);
      return c ? l.concat(c.map(function(f) {
        var p, d;
        return (d = (p = f.match(/[\t ]/g)) === null || p === void 0 ? void 0 : p.length) !== null && d !== void 0 ? d : 0;
      })) : l;
    }, []);
    if (n.length) {
      var a = new RegExp(`
[	 ]{` + Math.min.apply(Math, n) + "}", "g");
      s = s.map(function(l) {
        return l.replace(a, `
`);
      });
    }
    s[0] = s[0].replace(/^\r?\n/, "");
    var o = s[0];
    return t.forEach(function(l, u) {
      var c = o.match(/(?:^|\n)( *)$/), f = c ? c[1] : "", p = l;
      typeof l == "string" && l.includes(`
`) && (p = String(l).split(`
`).map(function(d, m) {
        return m === 0 ? d : "" + f + d;
      }).join(`
`)), o += p + s[u + 1];
    }), o;
  }
  i(j2, "dedent");
  Tu.dedent = j2;
  Tu.default = j2;
});

// ../node_modules/prompts/node_modules/kleur/index.js
var rr = y((pGe, sI) => {
  "use strict";
  var { FORCE_COLOR: $G, NODE_DISABLE_COLORS: UG, TERM: VG } = process.env, Ft = {
    enabled: !UG && VG !== "dumb" && $G !== "0",
    // modifiers
    reset: $t(0, 0),
    bold: $t(1, 22),
    dim: $t(2, 22),
    italic: $t(3, 23),
    underline: $t(4, 24),
    inverse: $t(7, 27),
    hidden: $t(8, 28),
    strikethrough: $t(9, 29),
    // colors
    black: $t(30, 39),
    red: $t(31, 39),
    green: $t(32, 39),
    yellow: $t(33, 39),
    blue: $t(34, 39),
    magenta: $t(35, 39),
    cyan: $t(36, 39),
    white: $t(37, 39),
    gray: $t(90, 39),
    grey: $t(90, 39),
    // background colors
    bgBlack: $t(40, 49),
    bgRed: $t(41, 49),
    bgGreen: $t(42, 49),
    bgYellow: $t(43, 49),
    bgBlue: $t(44, 49),
    bgMagenta: $t(45, 49),
    bgCyan: $t(46, 49),
    bgWhite: $t(47, 49)
  };
  function rI(e, t) {
    let r = 0, s, n = "", a = "";
    for (; r < e.length; r++)
      s = e[r], n += s.open, a += s.close, t.includes(s.close) && (t = t.replace(s.rgx, s.close + s.open));
    return n + t + a;
  }
  i(rI, "run");
  function WG(e, t) {
    let r = { has: e, keys: t };
    return r.reset = Ft.reset.bind(r), r.bold = Ft.bold.bind(r), r.dim = Ft.dim.bind(r), r.italic = Ft.italic.bind(r), r.underline = Ft.underline.
    bind(r), r.inverse = Ft.inverse.bind(r), r.hidden = Ft.hidden.bind(r), r.strikethrough = Ft.strikethrough.bind(r), r.black = Ft.black.bind(
    r), r.red = Ft.red.bind(r), r.green = Ft.green.bind(r), r.yellow = Ft.yellow.bind(r), r.blue = Ft.blue.bind(r), r.magenta = Ft.magenta.bind(
    r), r.cyan = Ft.cyan.bind(r), r.white = Ft.white.bind(r), r.gray = Ft.gray.bind(r), r.grey = Ft.grey.bind(r), r.bgBlack = Ft.bgBlack.bind(
    r), r.bgRed = Ft.bgRed.bind(r), r.bgGreen = Ft.bgGreen.bind(r), r.bgYellow = Ft.bgYellow.bind(r), r.bgBlue = Ft.bgBlue.bind(r), r.bgMagenta =
    Ft.bgMagenta.bind(r), r.bgCyan = Ft.bgCyan.bind(r), r.bgWhite = Ft.bgWhite.bind(r), r;
  }
  i(WG, "chain");
  function $t(e, t) {
    let r = {
      open: `\x1B[${e}m`,
      close: `\x1B[${t}m`,
      rgx: new RegExp(`\\x1b\\[${t}m`, "g")
    };
    return function(s) {
      return this !== void 0 && this.has !== void 0 ? (this.has.includes(e) || (this.has.push(e), this.keys.push(r)), s === void 0 ? this : Ft.
      enabled ? rI(this.keys, s + "") : s + "") : s === void 0 ? WG([e], [r]) : Ft.enabled ? rI([r], s + "") : s + "";
    };
  }
  i($t, "init");
  sI.exports = Ft;
});

// ../node_modules/prompts/dist/util/action.js
var iI = y((hGe, nI) => {
  "use strict";
  nI.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/dist/util/strip.js
var ip = y((mGe, aI) => {
  "use strict";
  aI.exports = (e) => {
    let t = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/sisteransi/src/index.js
var nr = y((yGe, oI) => {
  "use strict";
  var T0 = "\x1B", sr = `${T0}[`, HG = "\x07", x0 = {
    to(e, t) {
      return t ? `${sr}${t + 1};${e + 1}H` : `${sr}${e + 1}G`;
    },
    move(e, t) {
      let r = "";
      return e < 0 ? r += `${sr}${-e}D` : e > 0 && (r += `${sr}${e}C`), t < 0 ? r += `${sr}${-t}A` : t > 0 && (r += `${sr}${t}B`), r;
    },
    up: /* @__PURE__ */ i((e = 1) => `${sr}${e}A`, "up"),
    down: /* @__PURE__ */ i((e = 1) => `${sr}${e}B`, "down"),
    forward: /* @__PURE__ */ i((e = 1) => `${sr}${e}C`, "forward"),
    backward: /* @__PURE__ */ i((e = 1) => `${sr}${e}D`, "backward"),
    nextLine: /* @__PURE__ */ i((e = 1) => `${sr}E`.repeat(e), "nextLine"),
    prevLine: /* @__PURE__ */ i((e = 1) => `${sr}F`.repeat(e), "prevLine"),
    left: `${sr}G`,
    hide: `${sr}?25l`,
    show: `${sr}?25h`,
    save: `${T0}7`,
    restore: `${T0}8`
  }, GG = {
    up: /* @__PURE__ */ i((e = 1) => `${sr}S`.repeat(e), "up"),
    down: /* @__PURE__ */ i((e = 1) => `${sr}T`.repeat(e), "down")
  }, KG = {
    screen: `${sr}2J`,
    up: /* @__PURE__ */ i((e = 1) => `${sr}1J`.repeat(e), "up"),
    down: /* @__PURE__ */ i((e = 1) => `${sr}J`.repeat(e), "down"),
    line: `${sr}2K`,
    lineEnd: `${sr}K`,
    lineStart: `${sr}1K`,
    lines(e) {
      let t = "";
      for (let r = 0; r < e; r++)
        t += this.line + (r < e - 1 ? x0.up() : "");
      return e && (t += x0.left), t;
    }
  };
  oI.exports = { cursor: x0, scroll: GG, erase: KG, beep: HG };
});

// ../node_modules/prompts/dist/util/clear.js
var pI = y((bGe, fI) => {
  "use strict";
  function YG(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = XG(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var s = 0, n = /* @__PURE__ */ i(function() {
        }, "F");
        return { s: n, n: /* @__PURE__ */ i(function() {
          return s >= e.length ? { done: !0 } : { done: !1, value: e[s++] };
        }, "n"), e: /* @__PURE__ */ i(function(c) {
          throw c;
        }, "e"), f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = !0, o = !1, l;
    return { s: /* @__PURE__ */ i(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ i(function() {
      var c = r.next();
      return a = c.done, c;
    }, "n"), e: /* @__PURE__ */ i(function(c) {
      o = !0, l = c;
    }, "e"), f: /* @__PURE__ */ i(function() {
      try {
        !a && r.return != null && r.return();
      } finally {
        if (o) throw l;
      }
    }, "f") };
  }
  i(YG, "_createForOfIteratorHelper");
  function XG(e, t) {
    if (e) {
      if (typeof e == "string") return lI(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return lI(e, t);
    }
  }
  i(XG, "_unsupportedIterableToArray");
  function lI(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, s = new Array(t); r < t; r++) s[r] = e[r];
    return s;
  }
  i(lI, "_arrayLikeToArray");
  var zG = ip(), cI = nr(), uI = cI.erase, JG = cI.cursor, QG = /* @__PURE__ */ i((e) => [...zG(e)].length, "width");
  fI.exports = function(e, t) {
    if (!t) return uI.line + JG.to(0);
    let r = 0, s = e.split(/\r?\n/);
    var n = YG(s), a;
    try {
      for (n.s(); !(a = n.n()).done; ) {
        let o = a.value;
        r += 1 + Math.floor(Math.max(QG(o) - 1, 0) / t);
      }
    } catch (o) {
      n.e(o);
    } finally {
      n.f();
    }
    return uI.lines(r);
  };
});

// ../node_modules/prompts/dist/util/figures.js
var P0 = y((vGe, dI) => {
  "use strict";
  var Cu = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, ZG = {
    arrowUp: Cu.arrowUp,
    arrowDown: Cu.arrowDown,
    arrowLeft: Cu.arrowLeft,
    arrowRight: Cu.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, eK = process.platform === "win32" ? ZG : Cu;
  dI.exports = eK;
});

// ../node_modules/prompts/dist/util/style.js
var mI = y((SGe, hI) => {
  "use strict";
  var Uo = rr(), Ba = P0(), A0 = Object.freeze({
    password: {
      scale: 1,
      render: /* @__PURE__ */ i((e) => "*".repeat(e.length), "render")
    },
    emoji: {
      scale: 2,
      render: /* @__PURE__ */ i((e) => "\u{1F603}".repeat(e.length), "render")
    },
    invisible: {
      scale: 0,
      render: /* @__PURE__ */ i((e) => "", "render")
    },
    default: {
      scale: 1,
      render: /* @__PURE__ */ i((e) => `${e}`, "render")
    }
  }), tK = /* @__PURE__ */ i((e) => A0[e] || A0.default, "render"), wu = Object.freeze({
    aborted: Uo.red(Ba.cross),
    done: Uo.green(Ba.tick),
    exited: Uo.yellow(Ba.cross),
    default: Uo.cyan("?")
  }), rK = /* @__PURE__ */ i((e, t, r) => t ? wu.aborted : r ? wu.exited : e ? wu.done : wu.default, "symbol"), sK = /* @__PURE__ */ i((e) => Uo.
  gray(e ? Ba.ellipsis : Ba.pointerSmall), "delimiter"), nK = /* @__PURE__ */ i((e, t) => Uo.gray(e ? t ? Ba.pointerSmall : "+" : Ba.line), "\
item");
  hI.exports = {
    styles: A0,
    render: tK,
    symbols: wu,
    symbol: rK,
    delimiter: sK,
    item: nK
  };
});

// ../node_modules/prompts/dist/util/lines.js
var gI = y((xGe, yI) => {
  "use strict";
  var iK = ip();
  yI.exports = function(e, t) {
    let r = String(iK(e) || "").split(/\r?\n/);
    return t ? r.map((s) => Math.ceil(s.length / t)).reduce((s, n) => s + n) : r.length;
  };
});

// ../node_modules/prompts/dist/util/wrap.js
var EI = y((PGe, bI) => {
  "use strict";
  bI.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", s = t.width;
    return (e || "").split(/\r?\n/g).map((n) => n.split(/\s+/g).reduce((a, o) => (o.length + r.length >= s || a[a.length - 1].length + o.length +
    1 < s ? a[a.length - 1] += ` ${o}` : a.push(`${r}${o}`), a), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/dist/util/entriesToDisplay.js
var SI = y((AGe, vI) => {
  "use strict";
  vI.exports = (e, t, r) => {
    r = r || t;
    let s = Math.min(t - r, e - Math.floor(r / 2));
    s < 0 && (s = 0);
    let n = Math.min(s + r, t);
    return {
      startIndex: s,
      endIndex: n
    };
  };
});

// ../node_modules/prompts/dist/util/index.js
var on = y((CGe, TI) => {
  "use strict";
  TI.exports = {
    action: iI(),
    clear: pI(),
    style: mI(),
    strip: ip(),
    figures: P0(),
    lines: gI(),
    wrap: EI(),
    entriesToDisplay: SI()
  };
});

// ../node_modules/prompts/dist/elements/prompt.js
var ti = y((wGe, AI) => {
  "use strict";
  var xI = Q("readline"), aK = on(), oK = aK.action, lK = Q("events"), PI = nr(), uK = PI.beep, cK = PI.cursor, fK = rr(), C0 = class extends lK {
    static {
      i(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = xI.createInterface({
        input: this.in,
        escapeCodeTimeout: 50
      });
      xI.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let s = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = /* @__PURE__ */ i((a, o) => {
        let l = oK(o, s);
        l === !1 ? this._ && this._(a, o) : typeof this[l] == "function" ? this[l](o) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write(cK.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", n);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(uK);
    }
    render() {
      this.onRender(fK), this.firstRender && (this.firstRender = !1);
    }
  };
  AI.exports = C0;
});

// ../node_modules/prompts/dist/elements/text.js
var _I = y((IGe, II) => {
  "use strict";
  function CI(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(CI, "asyncGeneratorStep");
  function wI(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          CI(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          CI(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(wI, "_asyncToGenerator");
  var ap = rr(), pK = ti(), DI = nr(), dK = DI.erase, Du = DI.cursor, op = on(), w0 = op.style, D0 = op.clear, hK = op.lines, mK = op.figures,
  I0 = class extends pK {
    static {
      i(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = w0.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = D0("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = ap.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return wI(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return wI(function* () {
        if (t.value = t.value || t.initial, t.cursorOffset = 0, t.cursor = t.rendered.length, yield t.validate(), t.error) {
          t.red = !0, t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let s = this.value.slice(0, this.cursor), n = this.value.slice(this.cursor);
      this.value = `${s}${t}${n}`, this.red = !1, this.cursor = this.placeholder ? 0 : s.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Du.down(hK(this.outputError, this.out.columns) - 1) + D0(this.
      outputError, this.out.columns)), this.out.write(D0(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [w0.symbol(this.done, this.aborted), ap.bold(this.msg), w0.delimiter(this.done), this.red ? ap.red(this.rendered) : this.rendered].join(
      " "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, s) => t + `
${s ? " " : mK.pointerSmall} ${ap.red().italic(r)}`, "")), this.out.write(dK.line + Du.to(0) + this.outputText + Du.save + this.outputError +
      Du.restore + Du.move(this.cursorOffset, 0)));
    }
  };
  II.exports = I0;
});

// ../node_modules/prompts/dist/elements/select.js
var kI = y((OGe, RI) => {
  "use strict";
  var ri = rr(), yK = ti(), Iu = on(), OI = Iu.style, NI = Iu.clear, lp = Iu.figures, gK = Iu.wrap, bK = Iu.entriesToDisplay, EK = nr(), vK = EK.
  cursor, _0 = class extends yK {
    static {
      i(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, s) => (typeof r == "string" && (r = {
        title: r,
        value: s
      }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? s : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = NI("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(vK.hide) : this.out.write(NI(this.outputText, this.out.columns)), super.render();
      let t = bK(this.cursor, this.choices.length, this.optionsPerPage), r = t.startIndex, s = t.endIndex;
      if (this.outputText = [OI.symbol(this.done, this.aborted), ri.bold(this.msg), OI.delimiter(!1), this.done ? this.selection.title : this.
      selection.disabled ? ri.yellow(this.warn) : ri.gray(this.hint)].join(" "), !this.done) {
        this.outputText += `
`;
        for (let n = r; n < s; n++) {
          let a, o, l = "", u = this.choices[n];
          n === r && r > 0 ? o = lp.arrowUp : n === s - 1 && s < this.choices.length ? o = lp.arrowDown : o = " ", u.disabled ? (a = this.cursor ===
          n ? ri.gray().underline(u.title) : ri.strikethrough().gray(u.title), o = (this.cursor === n ? ri.bold().gray(lp.pointer) + " " : "\
  ") + o) : (a = this.cursor === n ? ri.cyan().underline(u.title) : u.title, o = (this.cursor === n ? ri.cyan(lp.pointer) + " " : "  ") + o,
          u.description && this.cursor === n && (l = ` - ${u.description}`, (o.length + a.length + l.length >= this.out.columns || u.description.
          split(/\r?\n/).length > 1) && (l = `
` + gK(u.description, {
            margin: 3,
            width: this.out.columns
          })))), this.outputText += `${o} ${a}${ri.gray(l)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  RI.exports = _0;
});

// ../node_modules/prompts/dist/elements/toggle.js
var qI = y((RGe, jI) => {
  "use strict";
  var up = rr(), SK = ti(), BI = on(), FI = BI.style, TK = BI.clear, MI = nr(), LI = MI.cursor, xK = MI.erase, O0 = class extends SK {
    static {
      i(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(LI.hide) : this.out.write(TK(this.outputText, this.out.columns)), super.render(), this.
      outputText = [FI.symbol(this.done, this.aborted), up.bold(this.msg), FI.delimiter(this.done), this.value ? this.inactive : up.cyan().underline(
      this.inactive), up.gray("/"), this.value ? up.cyan().underline(this.active) : this.active].join(" "), this.out.write(xK.line + LI.to(0) +
      this.outputText));
    }
  };
  jI.exports = O0;
});

// ../node_modules/prompts/dist/dateparts/datepart.js
var Dn = y((FGe, $I) => {
  "use strict";
  var N0 = class e {
    static {
      i(this, "DatePart");
    }
    constructor({
      token: t,
      date: r,
      parts: s,
      locales: n
    }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = s || [this], this.locales = n || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, s) => s > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((s, n) => n > r && s instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  $I.exports = N0;
});

// ../node_modules/prompts/dist/dateparts/meridiem.js
var VI = y((BGe, UI) => {
  "use strict";
  var PK = Dn(), R0 = class extends PK {
    static {
      i(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  UI.exports = R0;
});

// ../node_modules/prompts/dist/dateparts/day.js
var HI = y((jGe, WI) => {
  "use strict";
  var AK = Dn(), CK = /* @__PURE__ */ i((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), k0 = class extends AK {
    static {
      i(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + CK(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  WI.exports = k0;
});

// ../node_modules/prompts/dist/dateparts/hours.js
var KI = y(($Ge, GI) => {
  "use strict";
  var wK = Dn(), F0 = class extends wK {
    static {
      i(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  GI.exports = F0;
});

// ../node_modules/prompts/dist/dateparts/milliseconds.js
var XI = y((VGe, YI) => {
  "use strict";
  var DK = Dn(), L0 = class extends DK {
    static {
      i(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  YI.exports = L0;
});

// ../node_modules/prompts/dist/dateparts/minutes.js
var JI = y((HGe, zI) => {
  "use strict";
  var IK = Dn(), B0 = class extends IK {
    static {
      i(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  zI.exports = B0;
});

// ../node_modules/prompts/dist/dateparts/month.js
var ZI = y((KGe, QI) => {
  "use strict";
  var _K = Dn(), M0 = class extends _K {
    static {
      i(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  QI.exports = M0;
});

// ../node_modules/prompts/dist/dateparts/seconds.js
var t_ = y((XGe, e_) => {
  "use strict";
  var OK = Dn(), j0 = class extends OK {
    static {
      i(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  e_.exports = j0;
});

// ../node_modules/prompts/dist/dateparts/year.js
var s_ = y((JGe, r_) => {
  "use strict";
  var NK = Dn(), q0 = class extends NK {
    static {
      i(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  r_.exports = q0;
});

// ../node_modules/prompts/dist/dateparts/index.js
var i_ = y((ZGe, n_) => {
  "use strict";
  n_.exports = {
    DatePart: Dn(),
    Meridiem: VI(),
    Day: HI(),
    Hours: KI(),
    Milliseconds: XI(),
    Minutes: JI(),
    Month: ZI(),
    Seconds: t_(),
    Year: s_()
  };
});

// ../node_modules/prompts/dist/elements/date.js
var m_ = y((eKe, h_) => {
  "use strict";
  function a_(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(a_, "asyncGeneratorStep");
  function o_(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          a_(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          a_(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(o_, "_asyncToGenerator");
  var $0 = rr(), RK = ti(), V0 = on(), l_ = V0.style, u_ = V0.clear, kK = V0.figures, d_ = nr(), FK = d_.erase, c_ = d_.cursor, si = i_(), f_ = si.
  DatePart, LK = si.Meridiem, BK = si.Day, MK = si.Hours, jK = si.Milliseconds, qK = si.Minutes, $K = si.Month, UK = si.Seconds, VK = si.Year,
  WK = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g, p_ = {
    1: ({
      token: e
    }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new BK(e),
    // Day // TODO
    3: (e) => new $K(e),
    // Month
    4: (e) => new VK(e),
    // Year
    5: (e) => new LK(e),
    // AM/PM // TODO (special)
    6: (e) => new MK(e),
    // Hours
    7: (e) => new qK(e),
    // Minutes
    8: (e) => new UK(e),
    // Seconds
    9: (e) => new jK(e)
    // Fractional seconds
  }, HK = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, U0 = class extends RK {
    static {
      i(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(HK, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = u_("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = WK.exec(t); ) {
        let n = r.shift(), a = r.findIndex((o) => o != null);
        this.parts.push(a in p_ ? p_[a]({
          token: r[a] || n,
          date: this.date,
          parts: this.parts,
          locales: this.locales
        }) : r[a] || n);
      }
      let s = this.parts.reduce((n, a) => (typeof a == "string" && typeof n[n.length - 1] == "string" ? n[n.length - 1] += a : n.push(a), n),
      []);
      this.parts.splice(0), this.parts.push(...s), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof f_)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return o_(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return o_(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof f_)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(c_.hide) : this.out.write(u_(this.outputText, this.out.columns)), super.render(), this.
      outputText = [l_.symbol(this.done, this.aborted), $0.bold(this.msg), l_.delimiter(!1), this.parts.reduce((t, r, s) => t.concat(s === this.
      cursor && !this.done ? $0.cyan().underline(r.toString()) : r), []).join("")].join(" "), this.error && (this.outputText += this.errorMsg.
      split(`
`).reduce((t, r, s) => t + `
${s ? " " : kK.pointerSmall} ${$0.red().italic(r)}`, "")), this.out.write(FK.line + c_.to(0) + this.outputText));
    }
  };
  h_.exports = U0;
});

// ../node_modules/prompts/dist/elements/number.js
var T_ = y((rKe, S_) => {
  "use strict";
  function y_(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(y_, "asyncGeneratorStep");
  function g_(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          y_(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          y_(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(g_, "_asyncToGenerator");
  var cp = rr(), GK = ti(), v_ = nr(), fp = v_.cursor, KK = v_.erase, pp = on(), W0 = pp.style, YK = pp.figures, b_ = pp.clear, XK = pp.lines,
  zK = /[0-9]/, H0 = /* @__PURE__ */ i((e) => e !== void 0, "isDef"), E_ = /* @__PURE__ */ i((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), G0 = class extends GK {
    static {
      i(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = W0.render(t.style), this.msg = t.message, this.initial = H0(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = H0(t.min) ? t.min : -1 / 0, this.max = H0(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = cp.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${E_(t, this.round)}`), this._value = E_(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || zK.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    validate() {
      var t = this;
      return g_(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return g_(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        let r = t.value;
        t.value = r !== "" ? r : t.initial, t.done = !0, t.aborted = !1, t.error = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let s = Date.now();
      if (s - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = s, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(fp.down(XK(this.outputError, this.out.columns) - 1) + b_(this.
      outputError, this.out.columns)), this.out.write(b_(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [W0.symbol(this.done, this.aborted), cp.bold(this.msg), W0.delimiter(this.done), !this.done || !this.done && !this.placeholder ? cp[this.
      color]().underline(this.rendered) : this.rendered].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, s) => t + `
${s ? " " : YK.pointerSmall} ${cp.red().italic(r)}`, "")), this.out.write(KK.line + fp.to(0) + this.outputText + fp.save + this.outputError +
      fp.restore));
    }
  };
  S_.exports = G0;
});

// ../node_modules/prompts/dist/elements/multiselect.js
var Y0 = y((nKe, A_) => {
  "use strict";
  var In = rr(), JK = nr(), QK = JK.cursor, ZK = ti(), _u = on(), x_ = _u.clear, Wi = _u.figures, P_ = _u.style, eY = _u.wrap, tY = _u.entriesToDisplay,
  K0 = class extends ZK {
    static {
      i(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, s) => (typeof r == "string" && (r = {
        title: r,
        value: s
      }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? s : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = x_("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Wi.arrowUp}/${Wi.arrowDown}: Highlight option
    ${Wi.arrowLeft}/${Wi.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, s, n) {
      let a = (r.selected ? In.green(Wi.radioOn) : Wi.radioOff) + " " + n + " ", o, l;
      return r.disabled ? o = t === s ? In.gray().underline(r.title) : In.strikethrough().gray(r.title) : (o = t === s ? In.cyan().underline(
      r.title) : r.title, t === s && r.description && (l = ` - ${r.description}`, (a.length + o.length + l.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (l = `
` + eY(r.description, {
        margin: a.length,
        width: this.out.columns
      })))), a + o + In.gray(l || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return In.red("No matches for this query.");
      let r = tY(this.cursor, t.length, this.optionsPerPage), s = r.startIndex, n = r.endIndex, a, o = [];
      for (let l = s; l < n; l++)
        l === s && s > 0 ? a = Wi.arrowUp : l === n - 1 && n < t.length ? a = Wi.arrowDown : a = " ", o.push(this.renderOption(this.cursor, t[l],
        l, a));
      return `
` + o.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [In.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(In.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(QK.hide), super.render();
      let t = [P_.symbol(this.done, this.aborted), In.bold(this.msg), P_.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += In.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = x_(t, this.out.columns);
    }
  };
  A_.exports = K0;
});

// ../node_modules/prompts/dist/elements/autocomplete.js
var N_ = y((aKe, O_) => {
  "use strict";
  function C_(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(C_, "asyncGeneratorStep");
  function rY(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          C_(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          C_(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(rY, "_asyncToGenerator");
  var Ou = rr(), sY = ti(), __ = nr(), nY = __.erase, w_ = __.cursor, Nu = on(), X0 = Nu.style, D_ = Nu.clear, z0 = Nu.figures, iY = Nu.wrap,
  aY = Nu.entriesToDisplay, I_ = /* @__PURE__ */ i((e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), oY = /* @__PURE__ */ i((e, t) => e[t] &&
  (e[t].title || e[t].value || e[t]), "getTitle"), lY = /* @__PURE__ */ i((e, t) => {
    let r = e.findIndex((s) => s.value === t || s.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), J0 = class extends sY {
    static {
      i(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      lY(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = {
        noMatches: t.noMatches || "no matches found"
      }, this.fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit =
      t.limit || 10, this.cursor = 0, this.transform = X0.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(
      this), this.complete = this.complete.bind(this), this.clear = D_("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = {
        title: this._fb
      }), t || this._fb || {
        title: this.i18n.noMatches
      };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = I_(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    complete(t) {
      var r = this;
      return rY(function* () {
        let s = r.completing = r.suggest(r.input, r.choices), n = yield s;
        if (r.completing !== s) return;
        r.suggestions = n.map((o, l, u) => ({
          title: oY(u, l),
          value: I_(u, l),
          description: o.description
        })), r.completing = !1;
        let a = Math.max(n.length - 1, 0);
        r.moveSelect(Math.min(a, r.select)), t && t();
      })();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let s = this.input.slice(0, this.cursor), n = this.input.slice(this.cursor);
      this.input = `${s}${t}${n}`, this.cursor = s.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, s, n) {
      let a, o = s ? z0.arrowUp : n ? z0.arrowDown : " ", l = r ? Ou.cyan().underline(t.title) : t.title;
      return o = (r ? Ou.cyan(z0.pointer) + " " : "  ") + o, t.description && (a = ` - ${t.description}`, (o.length + l.length + a.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (a = `
` + iY(t.description, {
        margin: 3,
        width: this.out.columns
      }))), o + " " + l + Ou.gray(a || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(w_.hide) : this.out.write(D_(this.outputText, this.out.columns)), super.render();
      let t = aY(this.select, this.choices.length, this.limit), r = t.startIndex, s = t.endIndex;
      if (this.outputText = [X0.symbol(this.done, this.aborted, this.exited), Ou.bold(this.msg), X0.delimiter(this.completing), this.done &&
      this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(" "), !this.
      done) {
        let n = this.suggestions.slice(r, s).map((a, o) => this.renderOption(a, this.select === o + r, o === 0 && r > 0, o + r === s - 1 && s <
        this.choices.length)).join(`
`);
        this.outputText += `
` + (n || Ou.gray(this.fallback.title));
      }
      this.out.write(nY.line + w_.to(0) + this.outputText);
    }
  };
  O_.exports = J0;
});

// ../node_modules/prompts/dist/elements/autocompleteMultiselect.js
var L_ = y((lKe, F_) => {
  "use strict";
  var ni = rr(), uY = nr(), cY = uY.cursor, fY = Y0(), Z0 = on(), R_ = Z0.clear, k_ = Z0.style, Vo = Z0.figures, Q0 = class extends fY {
    static {
      i(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = R_("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((s) => this.inputValue ? !!(typeof s.title == "string" && s.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof s.value == "string" && s.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((s) => s === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Vo.arrowUp}/${Vo.arrowDown}: Highlight option
    ${Vo.arrowLeft}/${Vo.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : ni.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, s) {
      let n;
      return r.disabled ? n = t === s ? ni.gray().underline(r.title) : ni.strikethrough().gray(r.title) : n = t === s ? ni.cyan().underline(
      r.title) : r.title, (r.selected ? ni.green(Vo.radioOn) : Vo.radioOff) + "  " + n;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [ni.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(ni.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(cY.hide), super.render();
      let t = [k_.symbol(this.done, this.aborted), ni.bold(this.msg), k_.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += ni.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = R_(t, this.out.columns);
    }
  };
  F_.exports = Q0;
});

// ../node_modules/prompts/dist/elements/confirm.js
var V_ = y((cKe, U_) => {
  "use strict";
  var B_ = rr(), pY = ti(), q_ = on(), M_ = q_.style, dY = q_.clear, $_ = nr(), hY = $_.erase, j_ = $_.cursor, eg = class extends pY {
    static {
      i(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(j_.hide) : this.out.write(dY(this.outputText, this.out.columns)), super.render(), this.
      outputText = [M_.symbol(this.done, this.aborted), B_.bold(this.msg), M_.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.
      noMsg : B_.gray(this.initialValue ? this.yesOption : this.noOption)].join(" "), this.out.write(hY.line + j_.to(0) + this.outputText));
    }
  };
  U_.exports = eg;
});

// ../node_modules/prompts/dist/elements/index.js
var H_ = y((pKe, W_) => {
  "use strict";
  W_.exports = {
    TextPrompt: _I(),
    SelectPrompt: kI(),
    TogglePrompt: qI(),
    DatePrompt: m_(),
    NumberPrompt: T_(),
    MultiselectPrompt: Y0(),
    AutocompletePrompt: N_(),
    AutocompleteMultiselectPrompt: L_(),
    ConfirmPrompt: V_()
  };
});

// ../node_modules/prompts/dist/prompts.js
var K_ = y((G_) => {
  "use strict";
  var ms = G_, mY = H_(), dp = /* @__PURE__ */ i((e) => e, "noop");
  function _n(e, t, r = {}) {
    return new Promise((s, n) => {
      let a = new mY[e](t), o = r.onAbort || dp, l = r.onSubmit || dp, u = r.onExit || dp;
      a.on("state", t.onState || dp), a.on("submit", (c) => s(l(c))), a.on("exit", (c) => s(u(c))), a.on("abort", (c) => n(o(c)));
    });
  }
  i(_n, "toPrompt");
  ms.text = (e) => _n("TextPrompt", e);
  ms.password = (e) => (e.style = "password", ms.text(e));
  ms.invisible = (e) => (e.style = "invisible", ms.text(e));
  ms.number = (e) => _n("NumberPrompt", e);
  ms.date = (e) => _n("DatePrompt", e);
  ms.confirm = (e) => _n("ConfirmPrompt", e);
  ms.list = (e) => {
    let t = e.separator || ",";
    return _n("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ i((r) => r.split(t).map((s) => s.trim()), "onSubmit")
    });
  };
  ms.toggle = (e) => _n("TogglePrompt", e);
  ms.select = (e) => _n("SelectPrompt", e);
  ms.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ i((r) => r.filter((s) => s.selected).map((s) => s.value), "toSelected");
    return _n("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  ms.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ i((r) => r.filter((s) => s.selected).map((s) => s.value), "toSelected");
    return _n("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var yY = /* @__PURE__ */ i((e, t) => Promise.resolve(t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())), "byTi\
tle");
  ms.autocomplete = (e) => (e.suggest = e.suggest || yY, e.choices = [].concat(e.choices || []), _n("AutocompletePrompt", e));
});

// ../node_modules/prompts/dist/index.js
var tO = y((mKe, eO) => {
  "use strict";
  function Y_(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var s = Object.getOwnPropertySymbols(e);
      t && (s = s.filter(function(n) {
        return Object.getOwnPropertyDescriptor(e, n).enumerable;
      })), r.push.apply(r, s);
    }
    return r;
  }
  i(Y_, "ownKeys");
  function X_(e) {
    for (var t = 1; t < arguments.length; t++) {
      var r = arguments[t] != null ? arguments[t] : {};
      t % 2 ? Y_(Object(r), !0).forEach(function(s) {
        gY(e, s, r[s]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Y_(Object(r)).forEach(function(s) {
        Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(r, s));
      });
    }
    return e;
  }
  i(X_, "_objectSpread");
  function gY(e, t, r) {
    return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e;
  }
  i(gY, "_defineProperty");
  function bY(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = EY(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var s = 0, n = /* @__PURE__ */ i(function() {
        }, "F");
        return { s: n, n: /* @__PURE__ */ i(function() {
          return s >= e.length ? { done: !0 } : { done: !1, value: e[s++] };
        }, "n"), e: /* @__PURE__ */ i(function(c) {
          throw c;
        }, "e"), f: n };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var a = !0, o = !1, l;
    return { s: /* @__PURE__ */ i(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ i(function() {
      var c = r.next();
      return a = c.done, c;
    }, "n"), e: /* @__PURE__ */ i(function(c) {
      o = !0, l = c;
    }, "e"), f: /* @__PURE__ */ i(function() {
      try {
        !a && r.return != null && r.return();
      } finally {
        if (o) throw l;
      }
    }, "f") };
  }
  i(bY, "_createForOfIteratorHelper");
  function EY(e, t) {
    if (e) {
      if (typeof e == "string") return z_(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return z_(e, t);
    }
  }
  i(EY, "_unsupportedIterableToArray");
  function z_(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, s = new Array(t); r < t; r++) s[r] = e[r];
    return s;
  }
  i(z_, "_arrayLikeToArray");
  function J_(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(J_, "asyncGeneratorStep");
  function Q_(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          J_(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          J_(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(Q_, "_asyncToGenerator");
  var tg = K_(), vY = ["suggest", "format", "onState", "validate", "onRender", "type"], Z_ = /* @__PURE__ */ i(() => {
  }, "noop");
  function Hi() {
    return rg.apply(this, arguments);
  }
  i(Hi, "prompt");
  function rg() {
    return rg = Q_(function* (e = [], {
      onSubmit: t = Z_,
      onCancel: r = Z_
    } = {}) {
      let s = {}, n = Hi._override || {};
      e = [].concat(e);
      let a, o, l, u, c, f, p = /* @__PURE__ */ function() {
        var g = Q_(function* (E, D, C = !1) {
          if (!(!C && E.validate && E.validate(D) !== !0))
            return E.format ? yield E.format(D, s) : D;
        });
        return /* @__PURE__ */ i(function(D, C) {
          return g.apply(this, arguments);
        }, "getFormattedAnswer");
      }();
      var d = bY(e), m;
      try {
        for (d.s(); !(m = d.n()).done; ) {
          o = m.value;
          var b = o;
          if (u = b.name, c = b.type, typeof c == "function" && (c = yield c(a, X_({}, s), o), o.type = c), !!c) {
            for (let g in o) {
              if (vY.includes(g)) continue;
              let E = o[g];
              o[g] = typeof E == "function" ? yield E(a, X_({}, s), f) : E;
            }
            if (f = o, typeof o.message != "string")
              throw new Error("prompt message is required");
            var h = o;
            if (u = h.name, c = h.type, tg[c] === void 0)
              throw new Error(`prompt type (${c}) is not defined`);
            if (n[o.name] !== void 0 && (a = yield p(o, n[o.name]), a !== void 0)) {
              s[u] = a;
              continue;
            }
            try {
              a = Hi._injected ? SY(Hi._injected, o.initial) : yield tg[c](o), s[u] = a = yield p(o, a, !0), l = yield t(o, a, s);
            } catch {
              l = !(yield r(o, s));
            }
            if (l) return s;
          }
        }
      } catch (g) {
        d.e(g);
      } finally {
        d.f();
      }
      return s;
    }), rg.apply(this, arguments);
  }
  i(rg, "_prompt");
  function SY(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  i(SY, "getInjectedAnswer");
  function TY(e) {
    Hi._injected = (Hi._injected || []).concat(e);
  }
  i(TY, "inject");
  function xY(e) {
    Hi._override = Object.assign({}, e);
  }
  i(xY, "override");
  eO.exports = Object.assign(Hi, {
    prompt: Hi,
    prompts: tg,
    inject: TY,
    override: xY
  });
});

// ../node_modules/prompts/lib/util/action.js
var sO = y((gKe, rO) => {
  "use strict";
  rO.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/lib/util/strip.js
var hp = y((bKe, nO) => {
  "use strict";
  nO.exports = (e) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"
    ].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/prompts/lib/util/clear.js
var oO = y((EKe, aO) => {
  "use strict";
  var PY = hp(), { erase: iO, cursor: AY } = nr(), CY = /* @__PURE__ */ i((e) => [...PY(e)].length, "width");
  aO.exports = function(e, t) {
    if (!t) return iO.line + AY.to(0);
    let r = 0, s = e.split(/\r?\n/);
    for (let n of s)
      r += 1 + Math.floor(Math.max(CY(n) - 1, 0) / t);
    return iO.lines(r);
  };
});

// ../node_modules/prompts/lib/util/figures.js
var sg = y((SKe, lO) => {
  "use strict";
  var Ru = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, wY = {
    arrowUp: Ru.arrowUp,
    arrowDown: Ru.arrowDown,
    arrowLeft: Ru.arrowLeft,
    arrowRight: Ru.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, DY = process.platform === "win32" ? wY : Ru;
  lO.exports = DY;
});

// ../node_modules/prompts/lib/util/style.js
var cO = y((TKe, uO) => {
  "use strict";
  var Wo = rr(), Ma = sg(), ng = Object.freeze({
    password: { scale: 1, render: /* @__PURE__ */ i((e) => "*".repeat(e.length), "render") },
    emoji: { scale: 2, render: /* @__PURE__ */ i((e) => "\u{1F603}".repeat(e.length), "render") },
    invisible: { scale: 0, render: /* @__PURE__ */ i((e) => "", "render") },
    default: { scale: 1, render: /* @__PURE__ */ i((e) => `${e}`, "render") }
  }), IY = /* @__PURE__ */ i((e) => ng[e] || ng.default, "render"), ku = Object.freeze({
    aborted: Wo.red(Ma.cross),
    done: Wo.green(Ma.tick),
    exited: Wo.yellow(Ma.cross),
    default: Wo.cyan("?")
  }), _Y = /* @__PURE__ */ i((e, t, r) => t ? ku.aborted : r ? ku.exited : e ? ku.done : ku.default, "symbol"), OY = /* @__PURE__ */ i((e) => Wo.
  gray(e ? Ma.ellipsis : Ma.pointerSmall), "delimiter"), NY = /* @__PURE__ */ i((e, t) => Wo.gray(e ? t ? Ma.pointerSmall : "+" : Ma.line), "\
item");
  uO.exports = {
    styles: ng,
    render: IY,
    symbols: ku,
    symbol: _Y,
    delimiter: OY,
    item: NY
  };
});

// ../node_modules/prompts/lib/util/lines.js
var pO = y((PKe, fO) => {
  "use strict";
  var RY = hp();
  fO.exports = function(e, t) {
    let r = String(RY(e) || "").split(/\r?\n/);
    return t ? r.map((s) => Math.ceil(s.length / t)).reduce((s, n) => s + n) : r.length;
  };
});

// ../node_modules/prompts/lib/util/wrap.js
var hO = y((AKe, dO) => {
  "use strict";
  dO.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", s = t.width;
    return (e || "").split(/\r?\n/g).map((n) => n.split(/\s+/g).reduce((a, o) => (o.length + r.length >= s || a[a.length - 1].length + o.length +
    1 < s ? a[a.length - 1] += ` ${o}` : a.push(`${r}${o}`), a), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/lib/util/entriesToDisplay.js
var yO = y((CKe, mO) => {
  "use strict";
  mO.exports = (e, t, r) => {
    r = r || t;
    let s = Math.min(t - r, e - Math.floor(r / 2));
    s < 0 && (s = 0);
    let n = Math.min(s + r, t);
    return { startIndex: s, endIndex: n };
  };
});

// ../node_modules/prompts/lib/util/index.js
var ln = y((wKe, gO) => {
  "use strict";
  gO.exports = {
    action: sO(),
    clear: oO(),
    style: cO(),
    strip: hp(),
    figures: sg(),
    lines: pO(),
    wrap: hO(),
    entriesToDisplay: yO()
  };
});

// ../node_modules/prompts/lib/elements/prompt.js
var ii = y((DKe, EO) => {
  "use strict";
  var bO = Q("readline"), { action: kY } = ln(), FY = Q("events"), { beep: LY, cursor: BY } = nr(), MY = rr(), ig = class extends FY {
    static {
      i(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = bO.createInterface({ input: this.in, escapeCodeTimeout: 50 });
      bO.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let s = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = /* @__PURE__ */ i((a, o) => {
        let l = kY(o, s);
        l === !1 ? this._ && this._(a, o) : typeof this[l] == "function" ? this[l](o) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write(BY.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", n);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(LY);
    }
    render() {
      this.onRender(MY), this.firstRender && (this.firstRender = !1);
    }
  };
  EO.exports = ig;
});

// ../node_modules/prompts/lib/elements/text.js
var SO = y((_Ke, vO) => {
  var mp = rr(), jY = ii(), { erase: qY, cursor: Fu } = nr(), { style: ag, clear: og, lines: $Y, figures: UY } = ln(), lg = class extends jY {
    static {
      i(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = ag.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = og("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = mp.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (this.value = this.value || this.initial, this.cursorOffset = 0, this.cursor = this.rendered.length, await this.validate(), this.error) {
        this.red = !0, this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let s = this.value.slice(0, this.cursor), n = this.value.slice(this.cursor);
      this.value = `${s}${t}${n}`, this.red = !1, this.cursor = this.placeholder ? 0 : s.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Fu.down($Y(this.outputError, this.out.columns) - 1) + og(this.
      outputError, this.out.columns)), this.out.write(og(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        ag.symbol(this.done, this.aborted),
        mp.bold(this.msg),
        ag.delimiter(this.done),
        this.red ? mp.red(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, s) => t + `
${s ? " " : UY.pointerSmall} ${mp.red().italic(r)}`, "")), this.out.write(qY.line + Fu.to(0) + this.outputText + Fu.save + this.outputError +
      Fu.restore + Fu.move(this.cursorOffset, 0)));
    }
  };
  vO.exports = lg;
});

// ../node_modules/prompts/lib/elements/select.js
var AO = y((NKe, PO) => {
  "use strict";
  var ai = rr(), VY = ii(), { style: TO, clear: xO, figures: yp, wrap: WY, entriesToDisplay: HY } = ln(), { cursor: GY } = nr(), ug = class extends VY {
    static {
      i(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, s) => (typeof r == "string" && (r = { title: r, value: s }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? s : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = xO("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(GY.hide) : this.out.write(xO(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = HY(this.cursor, this.choices.length, this.optionsPerPage);
      if (this.outputText = [
        TO.symbol(this.done, this.aborted),
        ai.bold(this.msg),
        TO.delimiter(!1),
        this.done ? this.selection.title : this.selection.disabled ? ai.yellow(this.warn) : ai.gray(this.hint)
      ].join(" "), !this.done) {
        this.outputText += `
`;
        for (let s = t; s < r; s++) {
          let n, a, o = "", l = this.choices[s];
          s === t && t > 0 ? a = yp.arrowUp : s === r - 1 && r < this.choices.length ? a = yp.arrowDown : a = " ", l.disabled ? (n = this.cursor ===
          s ? ai.gray().underline(l.title) : ai.strikethrough().gray(l.title), a = (this.cursor === s ? ai.bold().gray(yp.pointer) + " " : "\
  ") + a) : (n = this.cursor === s ? ai.cyan().underline(l.title) : l.title, a = (this.cursor === s ? ai.cyan(yp.pointer) + " " : "  ") + a,
          l.description && this.cursor === s && (o = ` - ${l.description}`, (a.length + n.length + o.length >= this.out.columns || l.description.
          split(/\r?\n/).length > 1) && (o = `
` + WY(l.description, { margin: 3, width: this.out.columns })))), this.outputText += `${a} ${n}${ai.gray(o)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  PO.exports = ug;
});

// ../node_modules/prompts/lib/elements/toggle.js
var IO = y((kKe, DO) => {
  var gp = rr(), KY = ii(), { style: CO, clear: YY } = ln(), { cursor: wO, erase: XY } = nr(), cg = class extends KY {
    static {
      i(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(wO.hide) : this.out.write(YY(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        CO.symbol(this.done, this.aborted),
        gp.bold(this.msg),
        CO.delimiter(this.done),
        this.value ? this.inactive : gp.cyan().underline(this.inactive),
        gp.gray("/"),
        this.value ? gp.cyan().underline(this.active) : this.active
      ].join(" "), this.out.write(XY.line + wO.to(0) + this.outputText));
    }
  };
  DO.exports = cg;
});

// ../node_modules/prompts/lib/dateparts/datepart.js
var On = y((LKe, _O) => {
  "use strict";
  var fg = class e {
    static {
      i(this, "DatePart");
    }
    constructor({ token: t, date: r, parts: s, locales: n }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = s || [this], this.locales = n || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, s) => s > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((s, n) => n > r && s instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  _O.exports = fg;
});

// ../node_modules/prompts/lib/dateparts/meridiem.js
var NO = y((MKe, OO) => {
  "use strict";
  var zY = On(), pg = class extends zY {
    static {
      i(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  OO.exports = pg;
});

// ../node_modules/prompts/lib/dateparts/day.js
var kO = y((qKe, RO) => {
  "use strict";
  var JY = On(), QY = /* @__PURE__ */ i((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), dg = class extends JY {
    static {
      i(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + QY(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  RO.exports = dg;
});

// ../node_modules/prompts/lib/dateparts/hours.js
var LO = y((UKe, FO) => {
  "use strict";
  var ZY = On(), hg = class extends ZY {
    static {
      i(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  FO.exports = hg;
});

// ../node_modules/prompts/lib/dateparts/milliseconds.js
var MO = y((WKe, BO) => {
  "use strict";
  var eX = On(), mg = class extends eX {
    static {
      i(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  BO.exports = mg;
});

// ../node_modules/prompts/lib/dateparts/minutes.js
var qO = y((GKe, jO) => {
  "use strict";
  var tX = On(), yg = class extends tX {
    static {
      i(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  jO.exports = yg;
});

// ../node_modules/prompts/lib/dateparts/month.js
var UO = y((YKe, $O) => {
  "use strict";
  var rX = On(), gg = class extends rX {
    static {
      i(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  $O.exports = gg;
});

// ../node_modules/prompts/lib/dateparts/seconds.js
var WO = y((zKe, VO) => {
  "use strict";
  var sX = On(), bg = class extends sX {
    static {
      i(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  VO.exports = bg;
});

// ../node_modules/prompts/lib/dateparts/year.js
var GO = y((QKe, HO) => {
  "use strict";
  var nX = On(), Eg = class extends nX {
    static {
      i(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  HO.exports = Eg;
});

// ../node_modules/prompts/lib/dateparts/index.js
var YO = y((eYe, KO) => {
  "use strict";
  KO.exports = {
    DatePart: On(),
    Meridiem: NO(),
    Day: kO(),
    Hours: LO(),
    Milliseconds: MO(),
    Minutes: qO(),
    Month: UO(),
    Seconds: WO(),
    Year: GO()
  };
});

// ../node_modules/prompts/lib/elements/date.js
var tN = y((tYe, eN) => {
  "use strict";
  var vg = rr(), iX = ii(), { style: XO, clear: zO, figures: aX } = ln(), { erase: oX, cursor: JO } = nr(), { DatePart: QO, Meridiem: lX, Day: uX,
  Hours: cX, Milliseconds: fX, Minutes: pX, Month: dX, Seconds: hX, Year: mX } = YO(), yX = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g,
  ZO = {
    1: ({ token: e }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new uX(e),
    // Day // TODO
    3: (e) => new dX(e),
    // Month
    4: (e) => new mX(e),
    // Year
    5: (e) => new lX(e),
    // AM/PM // TODO (special)
    6: (e) => new cX(e),
    // Hours
    7: (e) => new pX(e),
    // Minutes
    8: (e) => new hX(e),
    // Seconds
    9: (e) => new fX(e)
    // Fractional seconds
  }, gX = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, Sg = class extends iX {
    static {
      i(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(gX, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = zO("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = yX.exec(t); ) {
        let n = r.shift(), a = r.findIndex((o) => o != null);
        this.parts.push(a in ZO ? ZO[a]({ token: r[a] || n, date: this.date, parts: this.parts, locales: this.locales }) : r[a] || n);
      }
      let s = this.parts.reduce((n, a) => (typeof a == "string" && typeof n[n.length - 1] == "string" ? n[n.length - 1] += a : n.push(a), n),
      []);
      this.parts.splice(0), this.parts.push(...s), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof QO)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof QO)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(JO.hide) : this.out.write(zO(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        XO.symbol(this.done, this.aborted),
        vg.bold(this.msg),
        XO.delimiter(!1),
        this.parts.reduce((t, r, s) => t.concat(s === this.cursor && !this.done ? vg.cyan().underline(r.toString()) : r), []).join("")
      ].join(" "), this.error && (this.outputText += this.errorMsg.split(`
`).reduce(
        (t, r, s) => t + `
${s ? " " : aX.pointerSmall} ${vg.red().italic(r)}`,
        ""
      )), this.out.write(oX.line + JO.to(0) + this.outputText));
    }
  };
  eN.exports = Sg;
});

// ../node_modules/prompts/lib/elements/number.js
var iN = y((sYe, nN) => {
  var bp = rr(), bX = ii(), { cursor: Ep, erase: EX } = nr(), { style: Tg, figures: vX, clear: rN, lines: SX } = ln(), TX = /[0-9]/, xg = /* @__PURE__ */ i(
  (e) => e !== void 0, "isDef"), sN = /* @__PURE__ */ i((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), Pg = class extends bX {
    static {
      i(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = Tg.render(t.style), this.msg = t.message, this.initial = xg(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = xg(t.min) ? t.min : -1 / 0, this.max = xg(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = bp.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${sN(t, this.round)}`), this._value = sN(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || TX.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = !0, this.aborted = !1, this.error = !1, this.fire(), this.render(), this.out.write(
      `
`), this.close();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let s = Date.now();
      if (s - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = s, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Ep.down(SX(this.outputError, this.out.columns) - 1) + rN(this.
      outputError, this.out.columns)), this.out.write(rN(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        Tg.symbol(this.done, this.aborted),
        bp.bold(this.msg),
        Tg.delimiter(this.done),
        !this.done || !this.done && !this.placeholder ? bp[this.color]().underline(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, s) => t + `
${s ? " " : vX.pointerSmall} ${bp.red().italic(r)}`, "")), this.out.write(EX.line + Ep.to(0) + this.outputText + Ep.save + this.outputError +
      Ep.restore));
    }
  };
  nN.exports = Pg;
});

// ../node_modules/prompts/lib/elements/multiselect.js
var Cg = y((iYe, lN) => {
  "use strict";
  var Nn = rr(), { cursor: xX } = nr(), PX = ii(), { clear: aN, figures: Gi, style: oN, wrap: AX, entriesToDisplay: CX } = ln(), Ag = class extends PX {
    static {
      i(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, s) => (typeof r == "string" && (r = { title: r,
      value: s }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? s : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = aN("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Gi.arrowUp}/${Gi.arrowDown}: Highlight option
    ${Gi.arrowLeft}/${Gi.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, s, n) {
      let a = (r.selected ? Nn.green(Gi.radioOn) : Gi.radioOff) + " " + n + " ", o, l;
      return r.disabled ? o = t === s ? Nn.gray().underline(r.title) : Nn.strikethrough().gray(r.title) : (o = t === s ? Nn.cyan().underline(
      r.title) : r.title, t === s && r.description && (l = ` - ${r.description}`, (a.length + o.length + l.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (l = `
` + AX(r.description, { margin: a.length, width: this.out.columns })))), a + o + Nn.gray(l || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return Nn.red("No matches for this query.");
      let { startIndex: r, endIndex: s } = CX(this.cursor, t.length, this.optionsPerPage), n, a = [];
      for (let o = r; o < s; o++)
        o === r && r > 0 ? n = Gi.arrowUp : o === s - 1 && s < t.length ? n = Gi.arrowDown : n = " ", a.push(this.renderOption(this.cursor, t[o],
        o, n));
      return `
` + a.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [Nn.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(Nn.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(xX.hide), super.render();
      let t = [
        oN.symbol(this.done, this.aborted),
        Nn.bold(this.msg),
        oN.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += Nn.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = aN(t, this.out.columns);
    }
  };
  lN.exports = Ag;
});

// ../node_modules/prompts/lib/elements/autocomplete.js
var dN = y((oYe, pN) => {
  "use strict";
  var Lu = rr(), wX = ii(), { erase: DX, cursor: uN } = nr(), { style: wg, clear: cN, figures: Dg, wrap: IX, entriesToDisplay: _X } = ln(), fN = /* @__PURE__ */ i(
  (e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), OX = /* @__PURE__ */ i((e, t) => e[t] && (e[t].title || e[t].value || e[t]),
  "getTitle"), NX = /* @__PURE__ */ i((e, t) => {
    let r = e.findIndex((s) => s.value === t || s.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), Ig = class extends wX {
    static {
      i(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      NX(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = { noMatches: t.noMatches || "no matches found" }, this.
      fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit = t.limit ||
      10, this.cursor = 0, this.transform = wg.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(this), this.
      complete = this.complete.bind(this), this.clear = cN("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = { title: this._fb }), t || this.
      _fb || { title: this.i18n.noMatches };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = fN(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    async complete(t) {
      let r = this.completing = this.suggest(this.input, this.choices), s = await r;
      if (this.completing !== r) return;
      this.suggestions = s.map((a, o, l) => ({ title: OX(l, o), value: fN(l, o), description: a.description })), this.completing = !1;
      let n = Math.max(s.length - 1, 0);
      this.moveSelect(Math.min(n, this.select)), t && t();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let s = this.input.slice(0, this.cursor), n = this.input.slice(this.cursor);
      this.input = `${s}${t}${n}`, this.cursor = s.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, s, n) {
      let a, o = s ? Dg.arrowUp : n ? Dg.arrowDown : " ", l = r ? Lu.cyan().underline(t.title) : t.title;
      return o = (r ? Lu.cyan(Dg.pointer) + " " : "  ") + o, t.description && (a = ` - ${t.description}`, (o.length + l.length + a.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (a = `
` + IX(t.description, { margin: 3, width: this.out.columns }))), o + " " + l + Lu.gray(a || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(uN.hide) : this.out.write(cN(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = _X(this.select, this.choices.length, this.limit);
      if (this.outputText = [
        wg.symbol(this.done, this.aborted, this.exited),
        Lu.bold(this.msg),
        wg.delimiter(this.completing),
        this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)
      ].join(" "), !this.done) {
        let s = this.suggestions.slice(t, r).map((n, a) => this.renderOption(
          n,
          this.select === a + t,
          a === 0 && t > 0,
          a + t === r - 1 && r < this.choices.length
        )).join(`
`);
        this.outputText += `
` + (s || Lu.gray(this.fallback.title));
      }
      this.out.write(DX.line + uN.to(0) + this.outputText);
    }
  };
  pN.exports = Ig;
});

// ../node_modules/prompts/lib/elements/autocompleteMultiselect.js
var gN = y((uYe, yN) => {
  "use strict";
  var oi = rr(), { cursor: RX } = nr(), kX = Cg(), { clear: hN, style: mN, figures: Ho } = ln(), _g = class extends kX {
    static {
      i(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = hN("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((s) => this.inputValue ? !!(typeof s.title == "string" && s.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof s.value == "string" && s.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((s) => s === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Ho.arrowUp}/${Ho.arrowDown}: Highlight option
    ${Ho.arrowLeft}/${Ho.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : oi.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, s) {
      let n;
      return r.disabled ? n = t === s ? oi.gray().underline(r.title) : oi.strikethrough().gray(r.title) : n = t === s ? oi.cyan().underline(
      r.title) : r.title, (r.selected ? oi.green(Ho.radioOn) : Ho.radioOff) + "  " + n;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [oi.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(oi.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(RX.hide), super.render();
      let t = [
        mN.symbol(this.done, this.aborted),
        oi.bold(this.msg),
        mN.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += oi.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = hN(t, this.out.columns);
    }
  };
  yN.exports = _g;
});

// ../node_modules/prompts/lib/elements/confirm.js
var TN = y((fYe, SN) => {
  var bN = rr(), FX = ii(), { style: EN, clear: LX } = ln(), { erase: BX, cursor: vN } = nr(), Og = class extends FX {
    static {
      i(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(vN.hide) : this.out.write(LX(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        EN.symbol(this.done, this.aborted),
        bN.bold(this.msg),
        EN.delimiter(this.done),
        this.done ? this.value ? this.yesMsg : this.noMsg : bN.gray(this.initialValue ? this.yesOption : this.noOption)
      ].join(" "), this.out.write(BX.line + vN.to(0) + this.outputText));
    }
  };
  SN.exports = Og;
});

// ../node_modules/prompts/lib/elements/index.js
var PN = y((dYe, xN) => {
  "use strict";
  xN.exports = {
    TextPrompt: SO(),
    SelectPrompt: AO(),
    TogglePrompt: IO(),
    DatePrompt: tN(),
    NumberPrompt: iN(),
    MultiselectPrompt: Cg(),
    AutocompletePrompt: dN(),
    AutocompleteMultiselectPrompt: gN(),
    ConfirmPrompt: TN()
  };
});

// ../node_modules/prompts/lib/prompts.js
var CN = y((AN) => {
  "use strict";
  var ys = AN, MX = PN(), vp = /* @__PURE__ */ i((e) => e, "noop");
  function Rn(e, t, r = {}) {
    return new Promise((s, n) => {
      let a = new MX[e](t), o = r.onAbort || vp, l = r.onSubmit || vp, u = r.onExit || vp;
      a.on("state", t.onState || vp), a.on("submit", (c) => s(l(c))), a.on("exit", (c) => s(u(c))), a.on("abort", (c) => n(o(c)));
    });
  }
  i(Rn, "toPrompt");
  ys.text = (e) => Rn("TextPrompt", e);
  ys.password = (e) => (e.style = "password", ys.text(e));
  ys.invisible = (e) => (e.style = "invisible", ys.text(e));
  ys.number = (e) => Rn("NumberPrompt", e);
  ys.date = (e) => Rn("DatePrompt", e);
  ys.confirm = (e) => Rn("ConfirmPrompt", e);
  ys.list = (e) => {
    let t = e.separator || ",";
    return Rn("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ i((r) => r.split(t).map((s) => s.trim()), "onSubmit")
    });
  };
  ys.toggle = (e) => Rn("TogglePrompt", e);
  ys.select = (e) => Rn("SelectPrompt", e);
  ys.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ i((r) => r.filter((s) => s.selected).map((s) => s.value), "toSelected");
    return Rn("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  ys.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ i((r) => r.filter((s) => s.selected).map((s) => s.value), "toSelected");
    return Rn("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var jX = /* @__PURE__ */ i((e, t) => Promise.resolve(
    t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())
  ), "byTitle");
  ys.autocomplete = (e) => (e.suggest = e.suggest || jX, e.choices = [].concat(e.choices || []), Rn("AutocompletePrompt", e));
});

// ../node_modules/prompts/lib/index.js
var IN = y((yYe, DN) => {
  "use strict";
  var Ng = CN(), qX = ["suggest", "format", "onState", "validate", "onRender", "type"], wN = /* @__PURE__ */ i(() => {
  }, "noop");
  async function Ki(e = [], { onSubmit: t = wN, onCancel: r = wN } = {}) {
    let s = {}, n = Ki._override || {};
    e = [].concat(e);
    let a, o, l, u, c, f, p = /* @__PURE__ */ i(async (d, m, b = !1) => {
      if (!(!b && d.validate && d.validate(m) !== !0))
        return d.format ? await d.format(m, s) : m;
    }, "getFormattedAnswer");
    for (o of e)
      if ({ name: u, type: c } = o, typeof c == "function" && (c = await c(a, { ...s }, o), o.type = c), !!c) {
        for (let d in o) {
          if (qX.includes(d)) continue;
          let m = o[d];
          o[d] = typeof m == "function" ? await m(a, { ...s }, f) : m;
        }
        if (f = o, typeof o.message != "string")
          throw new Error("prompt message is required");
        if ({ name: u, type: c } = o, Ng[c] === void 0)
          throw new Error(`prompt type (${c}) is not defined`);
        if (n[o.name] !== void 0 && (a = await p(o, n[o.name]), a !== void 0)) {
          s[u] = a;
          continue;
        }
        try {
          a = Ki._injected ? $X(Ki._injected, o.initial) : await Ng[c](o), s[u] = a = await p(o, a, !0), l = await t(o, a, s);
        } catch {
          l = !await r(o, s);
        }
        if (l) return s;
      }
    return s;
  }
  i(Ki, "prompt");
  function $X(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  i($X, "getInjectedAnswer");
  function UX(e) {
    Ki._injected = (Ki._injected || []).concat(e);
  }
  i(UX, "inject");
  function VX(e) {
    Ki._override = Object.assign({}, e);
  }
  i(VX, "override");
  DN.exports = Object.assign(Ki, { prompt: Ki, prompts: Ng, inject: UX, override: VX });
});

// ../node_modules/prompts/index.js
var ON = y((bYe, _N) => {
  function WX(e) {
    e = (Array.isArray(e) ? e : e.split(".")).map(Number);
    let t = 0, r = process.versions.node.split(".").map(Number);
    for (; t < e.length; t++) {
      if (r[t] > e[t]) return !1;
      if (e[t] > r[t]) return !0;
    }
    return !1;
  }
  i(WX, "isNodeLT");
  _N.exports = WX("8.6.0") ? tO() : IN();
});

// ../node_modules/@babel/types/lib/utils/shallowEqual.js
var Sp = y((Lg) => {
  "use strict";
  Object.defineProperty(Lg, "__esModule", {
    value: !0
  });
  Lg.default = nz;
  function nz(e, t) {
    let r = Object.keys(t);
    for (let s of r)
      if (e[s] !== t[s])
        return !1;
    return !0;
  }
  i(nz, "shallowEqual");
});

// ../node_modules/@babel/types/lib/utils/deprecationWarning.js
var Bu = y((Bg) => {
  "use strict";
  Object.defineProperty(Bg, "__esModule", {
    value: !0
  });
  Bg.default = iz;
  var jN = /* @__PURE__ */ new Set();
  function iz(e, t, r = "") {
    if (jN.has(e)) return;
    jN.add(e);
    let {
      internal: s,
      trace: n
    } = az(1, 2);
    s || console.warn(`${r}\`${e}\` has been deprecated, please migrate to \`${t}\`
${n}`);
  }
  i(iz, "deprecationWarning");
  function az(e, t) {
    let {
      stackTraceLimit: r,
      prepareStackTrace: s
    } = Error, n;
    if (Error.stackTraceLimit = 1 + e + t, Error.prepareStackTrace = function(o, l) {
      n = l;
    }, new Error().stack, Error.stackTraceLimit = r, Error.prepareStackTrace = s, !n) return {
      internal: !1,
      trace: ""
    };
    let a = n.slice(1 + e, 1 + e + t);
    return {
      internal: /[\\/]@babel[\\/]/.test(a[1].getFileName()),
      trace: a.map((o) => `    at ${o}`).join(`
`)
    };
  }
  i(az, "captureShortStackTrace");
});

// ../node_modules/@babel/types/lib/validators/generated/index.js
var hr = y((T) => {
  "use strict";
  Object.defineProperty(T, "__esModule", {
    value: !0
  });
  T.isAccessor = vte;
  T.isAnyTypeAnnotation = $J;
  T.isArgumentPlaceholder = yZ;
  T.isArrayExpression = oz;
  T.isArrayPattern = iJ;
  T.isArrayTypeAnnotation = UJ;
  T.isArrowFunctionExpression = aJ;
  T.isAssignmentExpression = lz;
  T.isAssignmentPattern = nJ;
  T.isAwaitExpression = IJ;
  T.isBigIntLiteral = OJ;
  T.isBinary = Vee;
  T.isBinaryExpression = uz;
  T.isBindExpression = gZ;
  T.isBlock = Gee;
  T.isBlockParent = Hee;
  T.isBlockStatement = dz;
  T.isBooleanLiteral = kz;
  T.isBooleanLiteralTypeAnnotation = WJ;
  T.isBooleanTypeAnnotation = VJ;
  T.isBreakStatement = hz;
  T.isCallExpression = mz;
  T.isCatchClause = yz;
  T.isClass = gte;
  T.isClassAccessorProperty = LJ;
  T.isClassBody = oJ;
  T.isClassDeclaration = uJ;
  T.isClassExpression = lJ;
  T.isClassImplements = GJ;
  T.isClassMethod = SJ;
  T.isClassPrivateMethod = MJ;
  T.isClassPrivateProperty = BJ;
  T.isClassProperty = FJ;
  T.isCompletionStatement = Xee;
  T.isConditional = zee;
  T.isConditionalExpression = gz;
  T.isContinueStatement = bz;
  T.isDebuggerStatement = Ez;
  T.isDecimalLiteral = PZ;
  T.isDeclaration = ite;
  T.isDeclareClass = KJ;
  T.isDeclareExportAllDeclaration = rQ;
  T.isDeclareExportDeclaration = tQ;
  T.isDeclareFunction = YJ;
  T.isDeclareInterface = XJ;
  T.isDeclareModule = zJ;
  T.isDeclareModuleExports = JJ;
  T.isDeclareOpaqueType = ZJ;
  T.isDeclareTypeAlias = QJ;
  T.isDeclareVariable = eQ;
  T.isDeclaredPredicate = sQ;
  T.isDecorator = EZ;
  T.isDirective = fz;
  T.isDirectiveLiteral = pz;
  T.isDoExpression = vZ;
  T.isDoWhileStatement = vz;
  T.isEmptyStatement = Sz;
  T.isEmptyTypeAnnotation = hQ;
  T.isEnumBody = wte;
  T.isEnumBooleanBody = UQ;
  T.isEnumBooleanMember = GQ;
  T.isEnumDeclaration = $Q;
  T.isEnumDefaultedMember = XQ;
  T.isEnumMember = Dte;
  T.isEnumNumberBody = VQ;
  T.isEnumNumberMember = KQ;
  T.isEnumStringBody = WQ;
  T.isEnumStringMember = YQ;
  T.isEnumSymbolBody = HQ;
  T.isExistsTypeAnnotation = nQ;
  T.isExportAllDeclaration = cJ;
  T.isExportDeclaration = bte;
  T.isExportDefaultDeclaration = fJ;
  T.isExportDefaultSpecifier = SZ;
  T.isExportNamedDeclaration = pJ;
  T.isExportNamespaceSpecifier = NJ;
  T.isExportSpecifier = dJ;
  T.isExpression = Uee;
  T.isExpressionStatement = Tz;
  T.isExpressionWrapper = Zee;
  T.isFile = xz;
  T.isFlow = Tte;
  T.isFlowBaseAnnotation = Pte;
  T.isFlowDeclaration = Ate;
  T.isFlowPredicate = Cte;
  T.isFlowType = xte;
  T.isFor = ete;
  T.isForInStatement = Pz;
  T.isForOfStatement = hJ;
  T.isForStatement = Az;
  T.isForXStatement = tte;
  T.isFunction = rte;
  T.isFunctionDeclaration = Cz;
  T.isFunctionExpression = wz;
  T.isFunctionParent = ste;
  T.isFunctionTypeAnnotation = iQ;
  T.isFunctionTypeParam = aQ;
  T.isGenericTypeAnnotation = oQ;
  T.isIdentifier = Dz;
  T.isIfStatement = Iz;
  T.isImmutable = cte;
  T.isImport = _J;
  T.isImportAttribute = bZ;
  T.isImportDeclaration = mJ;
  T.isImportDefaultSpecifier = yJ;
  T.isImportExpression = EJ;
  T.isImportNamespaceSpecifier = gJ;
  T.isImportOrExportDeclaration = qN;
  T.isImportSpecifier = bJ;
  T.isIndexedAccessType = zQ;
  T.isInferredPredicate = lQ;
  T.isInterfaceDeclaration = cQ;
  T.isInterfaceExtends = uQ;
  T.isInterfaceTypeAnnotation = fQ;
  T.isInterpreterDirective = cz;
  T.isIntersectionTypeAnnotation = pQ;
  T.isJSX = Ite;
  T.isJSXAttribute = QQ;
  T.isJSXClosingElement = ZQ;
  T.isJSXClosingFragment = pZ;
  T.isJSXElement = eZ;
  T.isJSXEmptyExpression = tZ;
  T.isJSXExpressionContainer = rZ;
  T.isJSXFragment = cZ;
  T.isJSXIdentifier = nZ;
  T.isJSXMemberExpression = iZ;
  T.isJSXNamespacedName = aZ;
  T.isJSXOpeningElement = oZ;
  T.isJSXOpeningFragment = fZ;
  T.isJSXSpreadAttribute = lZ;
  T.isJSXSpreadChild = sZ;
  T.isJSXText = uZ;
  T.isLVal = ote;
  T.isLabeledStatement = _z;
  T.isLiteral = ute;
  T.isLogicalExpression = Lz;
  T.isLoop = Jee;
  T.isMemberExpression = Bz;
  T.isMetaProperty = vJ;
  T.isMethod = pte;
  T.isMiscellaneous = _te;
  T.isMixedTypeAnnotation = dQ;
  T.isModuleDeclaration = jte;
  T.isModuleExpression = AZ;
  T.isModuleSpecifier = Ete;
  T.isNewExpression = Mz;
  T.isNoop = dZ;
  T.isNullLiteral = Rz;
  T.isNullLiteralTypeAnnotation = HJ;
  T.isNullableTypeAnnotation = mQ;
  T.isNumberLiteral = Fte;
  T.isNumberLiteralTypeAnnotation = yQ;
  T.isNumberTypeAnnotation = gQ;
  T.isNumericLiteral = Nz;
  T.isObjectExpression = qz;
  T.isObjectMember = dte;
  T.isObjectMethod = $z;
  T.isObjectPattern = TJ;
  T.isObjectProperty = Uz;
  T.isObjectTypeAnnotation = bQ;
  T.isObjectTypeCallProperty = vQ;
  T.isObjectTypeIndexer = SQ;
  T.isObjectTypeInternalSlot = EQ;
  T.isObjectTypeProperty = TQ;
  T.isObjectTypeSpreadProperty = xQ;
  T.isOpaqueType = PQ;
  T.isOptionalCallExpression = kJ;
  T.isOptionalIndexedAccessType = JQ;
  T.isOptionalMemberExpression = RJ;
  T.isParenthesizedExpression = Gz;
  T.isPattern = yte;
  T.isPatternLike = ate;
  T.isPipelineBareFunction = DZ;
  T.isPipelinePrimaryTopicReference = IZ;
  T.isPipelineTopicExpression = wZ;
  T.isPlaceholder = hZ;
  T.isPrivate = Ste;
  T.isPrivateName = jJ;
  T.isProgram = jz;
  T.isProperty = hte;
  T.isPureish = nte;
  T.isQualifiedTypeIdentifier = AQ;
  T.isRecordExpression = TZ;
  T.isRegExpLiteral = Fz;
  T.isRegexLiteral = Lte;
  T.isRestElement = Vz;
  T.isRestProperty = Bte;
  T.isReturnStatement = Wz;
  T.isScopable = Wee;
  T.isSequenceExpression = Hz;
  T.isSpreadElement = xJ;
  T.isSpreadProperty = Mte;
  T.isStandardized = $ee;
  T.isStatement = Kee;
  T.isStaticBlock = qJ;
  T.isStringLiteral = Oz;
  T.isStringLiteralTypeAnnotation = CQ;
  T.isStringTypeAnnotation = wQ;
  T.isSuper = PJ;
  T.isSwitchCase = Kz;
  T.isSwitchStatement = Yz;
  T.isSymbolTypeAnnotation = DQ;
  T.isTSAnyKeyword = jZ;
  T.isTSArrayType = iee;
  T.isTSAsExpression = Pee;
  T.isTSBaseType = kte;
  T.isTSBigIntKeyword = $Z;
  T.isTSBooleanKeyword = qZ;
  T.isTSCallSignatureDeclaration = kZ;
  T.isTSConditionalType = pee;
  T.isTSConstructSignatureDeclaration = FZ;
  T.isTSConstructorType = eee;
  T.isTSDeclareFunction = OZ;
  T.isTSDeclareMethod = NZ;
  T.isTSEntityName = lte;
  T.isTSEnumDeclaration = wee;
  T.isTSEnumMember = Dee;
  T.isTSExportAssignment = Fee;
  T.isTSExpressionWithTypeArguments = Eee;
  T.isTSExternalModuleReference = Ree;
  T.isTSFunctionType = ZZ;
  T.isTSImportEqualsDeclaration = Nee;
  T.isTSImportType = Oee;
  T.isTSIndexSignature = MZ;
  T.isTSIndexedAccessType = yee;
  T.isTSInferType = dee;
  T.isTSInstantiationExpression = xee;
  T.isTSInterfaceBody = See;
  T.isTSInterfaceDeclaration = vee;
  T.isTSIntersectionType = fee;
  T.isTSIntrinsicKeyword = UZ;
  T.isTSLiteralType = bee;
  T.isTSMappedType = gee;
  T.isTSMethodSignature = BZ;
  T.isTSModuleBlock = _ee;
  T.isTSModuleDeclaration = Iee;
  T.isTSNamedTupleMember = uee;
  T.isTSNamespaceExportDeclaration = Lee;
  T.isTSNeverKeyword = VZ;
  T.isTSNonNullExpression = kee;
  T.isTSNullKeyword = WZ;
  T.isTSNumberKeyword = HZ;
  T.isTSObjectKeyword = GZ;
  T.isTSOptionalType = oee;
  T.isTSParameterProperty = _Z;
  T.isTSParenthesizedType = hee;
  T.isTSPropertySignature = LZ;
  T.isTSQualifiedName = RZ;
  T.isTSRestType = lee;
  T.isTSSatisfiesExpression = Aee;
  T.isTSStringKeyword = KZ;
  T.isTSSymbolKeyword = YZ;
  T.isTSThisType = QZ;
  T.isTSTupleType = aee;
  T.isTSType = Rte;
  T.isTSTypeAliasDeclaration = Tee;
  T.isTSTypeAnnotation = Bee;
  T.isTSTypeAssertion = Cee;
  T.isTSTypeElement = Nte;
  T.isTSTypeLiteral = nee;
  T.isTSTypeOperator = mee;
  T.isTSTypeParameter = qee;
  T.isTSTypeParameterDeclaration = jee;
  T.isTSTypeParameterInstantiation = Mee;
  T.isTSTypePredicate = ree;
  T.isTSTypeQuery = see;
  T.isTSTypeReference = tee;
  T.isTSUndefinedKeyword = XZ;
  T.isTSUnionType = cee;
  T.isTSUnknownKeyword = zZ;
  T.isTSVoidKeyword = JZ;
  T.isTaggedTemplateExpression = AJ;
  T.isTemplateElement = CJ;
  T.isTemplateLiteral = wJ;
  T.isTerminatorless = Yee;
  T.isThisExpression = Xz;
  T.isThisTypeAnnotation = IQ;
  T.isThrowStatement = zz;
  T.isTopicReference = CZ;
  T.isTryStatement = Jz;
  T.isTupleExpression = xZ;
  T.isTupleTypeAnnotation = _Q;
  T.isTypeAlias = NQ;
  T.isTypeAnnotation = RQ;
  T.isTypeCastExpression = kQ;
  T.isTypeParameter = FQ;
  T.isTypeParameterDeclaration = LQ;
  T.isTypeParameterInstantiation = BQ;
  T.isTypeScript = Ote;
  T.isTypeofTypeAnnotation = OQ;
  T.isUnaryExpression = Qz;
  T.isUnaryLike = mte;
  T.isUnionTypeAnnotation = MQ;
  T.isUpdateExpression = Zz;
  T.isUserWhitespacable = fte;
  T.isV8IntrinsicIdentifier = mZ;
  T.isVariableDeclaration = eJ;
  T.isVariableDeclarator = tJ;
  T.isVariance = jQ;
  T.isVoidTypeAnnotation = qQ;
  T.isWhile = Qee;
  T.isWhileStatement = rJ;
  T.isWithStatement = sJ;
  T.isYieldExpression = DJ;
  var A = Sp(), Mu = Bu();
  function oz(e, t) {
    return !e || e.type !== "ArrayExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(oz, "isArrayExpression");
  function lz(e, t) {
    return !e || e.type !== "AssignmentExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(lz, "isAssignmentExpression");
  function uz(e, t) {
    return !e || e.type !== "BinaryExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(uz, "isBinaryExpression");
  function cz(e, t) {
    return !e || e.type !== "InterpreterDirective" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(cz, "isInterpreterDirective");
  function fz(e, t) {
    return !e || e.type !== "Directive" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(fz, "isDirective");
  function pz(e, t) {
    return !e || e.type !== "DirectiveLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(pz, "isDirectiveLiteral");
  function dz(e, t) {
    return !e || e.type !== "BlockStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(dz, "isBlockStatement");
  function hz(e, t) {
    return !e || e.type !== "BreakStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(hz, "isBreakStatement");
  function mz(e, t) {
    return !e || e.type !== "CallExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(mz, "isCallExpression");
  function yz(e, t) {
    return !e || e.type !== "CatchClause" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(yz, "isCatchClause");
  function gz(e, t) {
    return !e || e.type !== "ConditionalExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(gz, "isConditionalExpression");
  function bz(e, t) {
    return !e || e.type !== "ContinueStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(bz, "isContinueStatement");
  function Ez(e, t) {
    return !e || e.type !== "DebuggerStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Ez, "isDebuggerStatement");
  function vz(e, t) {
    return !e || e.type !== "DoWhileStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(vz, "isDoWhileStatement");
  function Sz(e, t) {
    return !e || e.type !== "EmptyStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Sz, "isEmptyStatement");
  function Tz(e, t) {
    return !e || e.type !== "ExpressionStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Tz, "isExpressionStatement");
  function xz(e, t) {
    return !e || e.type !== "File" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(xz, "isFile");
  function Pz(e, t) {
    return !e || e.type !== "ForInStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Pz, "isForInStatement");
  function Az(e, t) {
    return !e || e.type !== "ForStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Az, "isForStatement");
  function Cz(e, t) {
    return !e || e.type !== "FunctionDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Cz, "isFunctionDeclaration");
  function wz(e, t) {
    return !e || e.type !== "FunctionExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(wz, "isFunctionExpression");
  function Dz(e, t) {
    return !e || e.type !== "Identifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Dz, "isIdentifier");
  function Iz(e, t) {
    return !e || e.type !== "IfStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Iz, "isIfStatement");
  function _z(e, t) {
    return !e || e.type !== "LabeledStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(_z, "isLabeledStatement");
  function Oz(e, t) {
    return !e || e.type !== "StringLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Oz, "isStringLiteral");
  function Nz(e, t) {
    return !e || e.type !== "NumericLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Nz, "isNumericLiteral");
  function Rz(e, t) {
    return !e || e.type !== "NullLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Rz, "isNullLiteral");
  function kz(e, t) {
    return !e || e.type !== "BooleanLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(kz, "isBooleanLiteral");
  function Fz(e, t) {
    return !e || e.type !== "RegExpLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Fz, "isRegExpLiteral");
  function Lz(e, t) {
    return !e || e.type !== "LogicalExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Lz, "isLogicalExpression");
  function Bz(e, t) {
    return !e || e.type !== "MemberExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Bz, "isMemberExpression");
  function Mz(e, t) {
    return !e || e.type !== "NewExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Mz, "isNewExpression");
  function jz(e, t) {
    return !e || e.type !== "Program" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(jz, "isProgram");
  function qz(e, t) {
    return !e || e.type !== "ObjectExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(qz, "isObjectExpression");
  function $z(e, t) {
    return !e || e.type !== "ObjectMethod" ? !1 : t == null || (0, A.default)(e, t);
  }
  i($z, "isObjectMethod");
  function Uz(e, t) {
    return !e || e.type !== "ObjectProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Uz, "isObjectProperty");
  function Vz(e, t) {
    return !e || e.type !== "RestElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Vz, "isRestElement");
  function Wz(e, t) {
    return !e || e.type !== "ReturnStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Wz, "isReturnStatement");
  function Hz(e, t) {
    return !e || e.type !== "SequenceExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Hz, "isSequenceExpression");
  function Gz(e, t) {
    return !e || e.type !== "ParenthesizedExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Gz, "isParenthesizedExpression");
  function Kz(e, t) {
    return !e || e.type !== "SwitchCase" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Kz, "isSwitchCase");
  function Yz(e, t) {
    return !e || e.type !== "SwitchStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Yz, "isSwitchStatement");
  function Xz(e, t) {
    return !e || e.type !== "ThisExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Xz, "isThisExpression");
  function zz(e, t) {
    return !e || e.type !== "ThrowStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(zz, "isThrowStatement");
  function Jz(e, t) {
    return !e || e.type !== "TryStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Jz, "isTryStatement");
  function Qz(e, t) {
    return !e || e.type !== "UnaryExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Qz, "isUnaryExpression");
  function Zz(e, t) {
    return !e || e.type !== "UpdateExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Zz, "isUpdateExpression");
  function eJ(e, t) {
    return !e || e.type !== "VariableDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(eJ, "isVariableDeclaration");
  function tJ(e, t) {
    return !e || e.type !== "VariableDeclarator" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(tJ, "isVariableDeclarator");
  function rJ(e, t) {
    return !e || e.type !== "WhileStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(rJ, "isWhileStatement");
  function sJ(e, t) {
    return !e || e.type !== "WithStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(sJ, "isWithStatement");
  function nJ(e, t) {
    return !e || e.type !== "AssignmentPattern" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(nJ, "isAssignmentPattern");
  function iJ(e, t) {
    return !e || e.type !== "ArrayPattern" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(iJ, "isArrayPattern");
  function aJ(e, t) {
    return !e || e.type !== "ArrowFunctionExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(aJ, "isArrowFunctionExpression");
  function oJ(e, t) {
    return !e || e.type !== "ClassBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(oJ, "isClassBody");
  function lJ(e, t) {
    return !e || e.type !== "ClassExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(lJ, "isClassExpression");
  function uJ(e, t) {
    return !e || e.type !== "ClassDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(uJ, "isClassDeclaration");
  function cJ(e, t) {
    return !e || e.type !== "ExportAllDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(cJ, "isExportAllDeclaration");
  function fJ(e, t) {
    return !e || e.type !== "ExportDefaultDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(fJ, "isExportDefaultDeclaration");
  function pJ(e, t) {
    return !e || e.type !== "ExportNamedDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(pJ, "isExportNamedDeclaration");
  function dJ(e, t) {
    return !e || e.type !== "ExportSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(dJ, "isExportSpecifier");
  function hJ(e, t) {
    return !e || e.type !== "ForOfStatement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(hJ, "isForOfStatement");
  function mJ(e, t) {
    return !e || e.type !== "ImportDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(mJ, "isImportDeclaration");
  function yJ(e, t) {
    return !e || e.type !== "ImportDefaultSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(yJ, "isImportDefaultSpecifier");
  function gJ(e, t) {
    return !e || e.type !== "ImportNamespaceSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(gJ, "isImportNamespaceSpecifier");
  function bJ(e, t) {
    return !e || e.type !== "ImportSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(bJ, "isImportSpecifier");
  function EJ(e, t) {
    return !e || e.type !== "ImportExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(EJ, "isImportExpression");
  function vJ(e, t) {
    return !e || e.type !== "MetaProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(vJ, "isMetaProperty");
  function SJ(e, t) {
    return !e || e.type !== "ClassMethod" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(SJ, "isClassMethod");
  function TJ(e, t) {
    return !e || e.type !== "ObjectPattern" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(TJ, "isObjectPattern");
  function xJ(e, t) {
    return !e || e.type !== "SpreadElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(xJ, "isSpreadElement");
  function PJ(e, t) {
    return !e || e.type !== "Super" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(PJ, "isSuper");
  function AJ(e, t) {
    return !e || e.type !== "TaggedTemplateExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(AJ, "isTaggedTemplateExpression");
  function CJ(e, t) {
    return !e || e.type !== "TemplateElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(CJ, "isTemplateElement");
  function wJ(e, t) {
    return !e || e.type !== "TemplateLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(wJ, "isTemplateLiteral");
  function DJ(e, t) {
    return !e || e.type !== "YieldExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(DJ, "isYieldExpression");
  function IJ(e, t) {
    return !e || e.type !== "AwaitExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(IJ, "isAwaitExpression");
  function _J(e, t) {
    return !e || e.type !== "Import" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(_J, "isImport");
  function OJ(e, t) {
    return !e || e.type !== "BigIntLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(OJ, "isBigIntLiteral");
  function NJ(e, t) {
    return !e || e.type !== "ExportNamespaceSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(NJ, "isExportNamespaceSpecifier");
  function RJ(e, t) {
    return !e || e.type !== "OptionalMemberExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(RJ, "isOptionalMemberExpression");
  function kJ(e, t) {
    return !e || e.type !== "OptionalCallExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(kJ, "isOptionalCallExpression");
  function FJ(e, t) {
    return !e || e.type !== "ClassProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(FJ, "isClassProperty");
  function LJ(e, t) {
    return !e || e.type !== "ClassAccessorProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(LJ, "isClassAccessorProperty");
  function BJ(e, t) {
    return !e || e.type !== "ClassPrivateProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(BJ, "isClassPrivateProperty");
  function MJ(e, t) {
    return !e || e.type !== "ClassPrivateMethod" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(MJ, "isClassPrivateMethod");
  function jJ(e, t) {
    return !e || e.type !== "PrivateName" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(jJ, "isPrivateName");
  function qJ(e, t) {
    return !e || e.type !== "StaticBlock" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(qJ, "isStaticBlock");
  function $J(e, t) {
    return !e || e.type !== "AnyTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i($J, "isAnyTypeAnnotation");
  function UJ(e, t) {
    return !e || e.type !== "ArrayTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(UJ, "isArrayTypeAnnotation");
  function VJ(e, t) {
    return !e || e.type !== "BooleanTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(VJ, "isBooleanTypeAnnotation");
  function WJ(e, t) {
    return !e || e.type !== "BooleanLiteralTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(WJ, "isBooleanLiteralTypeAnnotation");
  function HJ(e, t) {
    return !e || e.type !== "NullLiteralTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(HJ, "isNullLiteralTypeAnnotation");
  function GJ(e, t) {
    return !e || e.type !== "ClassImplements" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(GJ, "isClassImplements");
  function KJ(e, t) {
    return !e || e.type !== "DeclareClass" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(KJ, "isDeclareClass");
  function YJ(e, t) {
    return !e || e.type !== "DeclareFunction" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(YJ, "isDeclareFunction");
  function XJ(e, t) {
    return !e || e.type !== "DeclareInterface" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(XJ, "isDeclareInterface");
  function zJ(e, t) {
    return !e || e.type !== "DeclareModule" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(zJ, "isDeclareModule");
  function JJ(e, t) {
    return !e || e.type !== "DeclareModuleExports" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(JJ, "isDeclareModuleExports");
  function QJ(e, t) {
    return !e || e.type !== "DeclareTypeAlias" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(QJ, "isDeclareTypeAlias");
  function ZJ(e, t) {
    return !e || e.type !== "DeclareOpaqueType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(ZJ, "isDeclareOpaqueType");
  function eQ(e, t) {
    return !e || e.type !== "DeclareVariable" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(eQ, "isDeclareVariable");
  function tQ(e, t) {
    return !e || e.type !== "DeclareExportDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(tQ, "isDeclareExportDeclaration");
  function rQ(e, t) {
    return !e || e.type !== "DeclareExportAllDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(rQ, "isDeclareExportAllDeclaration");
  function sQ(e, t) {
    return !e || e.type !== "DeclaredPredicate" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(sQ, "isDeclaredPredicate");
  function nQ(e, t) {
    return !e || e.type !== "ExistsTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(nQ, "isExistsTypeAnnotation");
  function iQ(e, t) {
    return !e || e.type !== "FunctionTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(iQ, "isFunctionTypeAnnotation");
  function aQ(e, t) {
    return !e || e.type !== "FunctionTypeParam" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(aQ, "isFunctionTypeParam");
  function oQ(e, t) {
    return !e || e.type !== "GenericTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(oQ, "isGenericTypeAnnotation");
  function lQ(e, t) {
    return !e || e.type !== "InferredPredicate" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(lQ, "isInferredPredicate");
  function uQ(e, t) {
    return !e || e.type !== "InterfaceExtends" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(uQ, "isInterfaceExtends");
  function cQ(e, t) {
    return !e || e.type !== "InterfaceDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(cQ, "isInterfaceDeclaration");
  function fQ(e, t) {
    return !e || e.type !== "InterfaceTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(fQ, "isInterfaceTypeAnnotation");
  function pQ(e, t) {
    return !e || e.type !== "IntersectionTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(pQ, "isIntersectionTypeAnnotation");
  function dQ(e, t) {
    return !e || e.type !== "MixedTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(dQ, "isMixedTypeAnnotation");
  function hQ(e, t) {
    return !e || e.type !== "EmptyTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(hQ, "isEmptyTypeAnnotation");
  function mQ(e, t) {
    return !e || e.type !== "NullableTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(mQ, "isNullableTypeAnnotation");
  function yQ(e, t) {
    return !e || e.type !== "NumberLiteralTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(yQ, "isNumberLiteralTypeAnnotation");
  function gQ(e, t) {
    return !e || e.type !== "NumberTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(gQ, "isNumberTypeAnnotation");
  function bQ(e, t) {
    return !e || e.type !== "ObjectTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(bQ, "isObjectTypeAnnotation");
  function EQ(e, t) {
    return !e || e.type !== "ObjectTypeInternalSlot" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(EQ, "isObjectTypeInternalSlot");
  function vQ(e, t) {
    return !e || e.type !== "ObjectTypeCallProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(vQ, "isObjectTypeCallProperty");
  function SQ(e, t) {
    return !e || e.type !== "ObjectTypeIndexer" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(SQ, "isObjectTypeIndexer");
  function TQ(e, t) {
    return !e || e.type !== "ObjectTypeProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(TQ, "isObjectTypeProperty");
  function xQ(e, t) {
    return !e || e.type !== "ObjectTypeSpreadProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(xQ, "isObjectTypeSpreadProperty");
  function PQ(e, t) {
    return !e || e.type !== "OpaqueType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(PQ, "isOpaqueType");
  function AQ(e, t) {
    return !e || e.type !== "QualifiedTypeIdentifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(AQ, "isQualifiedTypeIdentifier");
  function CQ(e, t) {
    return !e || e.type !== "StringLiteralTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(CQ, "isStringLiteralTypeAnnotation");
  function wQ(e, t) {
    return !e || e.type !== "StringTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(wQ, "isStringTypeAnnotation");
  function DQ(e, t) {
    return !e || e.type !== "SymbolTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(DQ, "isSymbolTypeAnnotation");
  function IQ(e, t) {
    return !e || e.type !== "ThisTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(IQ, "isThisTypeAnnotation");
  function _Q(e, t) {
    return !e || e.type !== "TupleTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(_Q, "isTupleTypeAnnotation");
  function OQ(e, t) {
    return !e || e.type !== "TypeofTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(OQ, "isTypeofTypeAnnotation");
  function NQ(e, t) {
    return !e || e.type !== "TypeAlias" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(NQ, "isTypeAlias");
  function RQ(e, t) {
    return !e || e.type !== "TypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(RQ, "isTypeAnnotation");
  function kQ(e, t) {
    return !e || e.type !== "TypeCastExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(kQ, "isTypeCastExpression");
  function FQ(e, t) {
    return !e || e.type !== "TypeParameter" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(FQ, "isTypeParameter");
  function LQ(e, t) {
    return !e || e.type !== "TypeParameterDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(LQ, "isTypeParameterDeclaration");
  function BQ(e, t) {
    return !e || e.type !== "TypeParameterInstantiation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(BQ, "isTypeParameterInstantiation");
  function MQ(e, t) {
    return !e || e.type !== "UnionTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(MQ, "isUnionTypeAnnotation");
  function jQ(e, t) {
    return !e || e.type !== "Variance" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(jQ, "isVariance");
  function qQ(e, t) {
    return !e || e.type !== "VoidTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(qQ, "isVoidTypeAnnotation");
  function $Q(e, t) {
    return !e || e.type !== "EnumDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i($Q, "isEnumDeclaration");
  function UQ(e, t) {
    return !e || e.type !== "EnumBooleanBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(UQ, "isEnumBooleanBody");
  function VQ(e, t) {
    return !e || e.type !== "EnumNumberBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(VQ, "isEnumNumberBody");
  function WQ(e, t) {
    return !e || e.type !== "EnumStringBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(WQ, "isEnumStringBody");
  function HQ(e, t) {
    return !e || e.type !== "EnumSymbolBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(HQ, "isEnumSymbolBody");
  function GQ(e, t) {
    return !e || e.type !== "EnumBooleanMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(GQ, "isEnumBooleanMember");
  function KQ(e, t) {
    return !e || e.type !== "EnumNumberMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(KQ, "isEnumNumberMember");
  function YQ(e, t) {
    return !e || e.type !== "EnumStringMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(YQ, "isEnumStringMember");
  function XQ(e, t) {
    return !e || e.type !== "EnumDefaultedMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(XQ, "isEnumDefaultedMember");
  function zQ(e, t) {
    return !e || e.type !== "IndexedAccessType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(zQ, "isIndexedAccessType");
  function JQ(e, t) {
    return !e || e.type !== "OptionalIndexedAccessType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(JQ, "isOptionalIndexedAccessType");
  function QQ(e, t) {
    return !e || e.type !== "JSXAttribute" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(QQ, "isJSXAttribute");
  function ZQ(e, t) {
    return !e || e.type !== "JSXClosingElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(ZQ, "isJSXClosingElement");
  function eZ(e, t) {
    return !e || e.type !== "JSXElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(eZ, "isJSXElement");
  function tZ(e, t) {
    return !e || e.type !== "JSXEmptyExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(tZ, "isJSXEmptyExpression");
  function rZ(e, t) {
    return !e || e.type !== "JSXExpressionContainer" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(rZ, "isJSXExpressionContainer");
  function sZ(e, t) {
    return !e || e.type !== "JSXSpreadChild" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(sZ, "isJSXSpreadChild");
  function nZ(e, t) {
    return !e || e.type !== "JSXIdentifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(nZ, "isJSXIdentifier");
  function iZ(e, t) {
    return !e || e.type !== "JSXMemberExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(iZ, "isJSXMemberExpression");
  function aZ(e, t) {
    return !e || e.type !== "JSXNamespacedName" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(aZ, "isJSXNamespacedName");
  function oZ(e, t) {
    return !e || e.type !== "JSXOpeningElement" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(oZ, "isJSXOpeningElement");
  function lZ(e, t) {
    return !e || e.type !== "JSXSpreadAttribute" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(lZ, "isJSXSpreadAttribute");
  function uZ(e, t) {
    return !e || e.type !== "JSXText" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(uZ, "isJSXText");
  function cZ(e, t) {
    return !e || e.type !== "JSXFragment" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(cZ, "isJSXFragment");
  function fZ(e, t) {
    return !e || e.type !== "JSXOpeningFragment" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(fZ, "isJSXOpeningFragment");
  function pZ(e, t) {
    return !e || e.type !== "JSXClosingFragment" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(pZ, "isJSXClosingFragment");
  function dZ(e, t) {
    return !e || e.type !== "Noop" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(dZ, "isNoop");
  function hZ(e, t) {
    return !e || e.type !== "Placeholder" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(hZ, "isPlaceholder");
  function mZ(e, t) {
    return !e || e.type !== "V8IntrinsicIdentifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(mZ, "isV8IntrinsicIdentifier");
  function yZ(e, t) {
    return !e || e.type !== "ArgumentPlaceholder" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(yZ, "isArgumentPlaceholder");
  function gZ(e, t) {
    return !e || e.type !== "BindExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(gZ, "isBindExpression");
  function bZ(e, t) {
    return !e || e.type !== "ImportAttribute" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(bZ, "isImportAttribute");
  function EZ(e, t) {
    return !e || e.type !== "Decorator" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(EZ, "isDecorator");
  function vZ(e, t) {
    return !e || e.type !== "DoExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(vZ, "isDoExpression");
  function SZ(e, t) {
    return !e || e.type !== "ExportDefaultSpecifier" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(SZ, "isExportDefaultSpecifier");
  function TZ(e, t) {
    return !e || e.type !== "RecordExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(TZ, "isRecordExpression");
  function xZ(e, t) {
    return !e || e.type !== "TupleExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(xZ, "isTupleExpression");
  function PZ(e, t) {
    return !e || e.type !== "DecimalLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(PZ, "isDecimalLiteral");
  function AZ(e, t) {
    return !e || e.type !== "ModuleExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(AZ, "isModuleExpression");
  function CZ(e, t) {
    return !e || e.type !== "TopicReference" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(CZ, "isTopicReference");
  function wZ(e, t) {
    return !e || e.type !== "PipelineTopicExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(wZ, "isPipelineTopicExpression");
  function DZ(e, t) {
    return !e || e.type !== "PipelineBareFunction" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(DZ, "isPipelineBareFunction");
  function IZ(e, t) {
    return !e || e.type !== "PipelinePrimaryTopicReference" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(IZ, "isPipelinePrimaryTopicReference");
  function _Z(e, t) {
    return !e || e.type !== "TSParameterProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(_Z, "isTSParameterProperty");
  function OZ(e, t) {
    return !e || e.type !== "TSDeclareFunction" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(OZ, "isTSDeclareFunction");
  function NZ(e, t) {
    return !e || e.type !== "TSDeclareMethod" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(NZ, "isTSDeclareMethod");
  function RZ(e, t) {
    return !e || e.type !== "TSQualifiedName" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(RZ, "isTSQualifiedName");
  function kZ(e, t) {
    return !e || e.type !== "TSCallSignatureDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(kZ, "isTSCallSignatureDeclaration");
  function FZ(e, t) {
    return !e || e.type !== "TSConstructSignatureDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(FZ, "isTSConstructSignatureDeclaration");
  function LZ(e, t) {
    return !e || e.type !== "TSPropertySignature" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(LZ, "isTSPropertySignature");
  function BZ(e, t) {
    return !e || e.type !== "TSMethodSignature" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(BZ, "isTSMethodSignature");
  function MZ(e, t) {
    return !e || e.type !== "TSIndexSignature" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(MZ, "isTSIndexSignature");
  function jZ(e, t) {
    return !e || e.type !== "TSAnyKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(jZ, "isTSAnyKeyword");
  function qZ(e, t) {
    return !e || e.type !== "TSBooleanKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(qZ, "isTSBooleanKeyword");
  function $Z(e, t) {
    return !e || e.type !== "TSBigIntKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i($Z, "isTSBigIntKeyword");
  function UZ(e, t) {
    return !e || e.type !== "TSIntrinsicKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(UZ, "isTSIntrinsicKeyword");
  function VZ(e, t) {
    return !e || e.type !== "TSNeverKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(VZ, "isTSNeverKeyword");
  function WZ(e, t) {
    return !e || e.type !== "TSNullKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(WZ, "isTSNullKeyword");
  function HZ(e, t) {
    return !e || e.type !== "TSNumberKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(HZ, "isTSNumberKeyword");
  function GZ(e, t) {
    return !e || e.type !== "TSObjectKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(GZ, "isTSObjectKeyword");
  function KZ(e, t) {
    return !e || e.type !== "TSStringKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(KZ, "isTSStringKeyword");
  function YZ(e, t) {
    return !e || e.type !== "TSSymbolKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(YZ, "isTSSymbolKeyword");
  function XZ(e, t) {
    return !e || e.type !== "TSUndefinedKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(XZ, "isTSUndefinedKeyword");
  function zZ(e, t) {
    return !e || e.type !== "TSUnknownKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(zZ, "isTSUnknownKeyword");
  function JZ(e, t) {
    return !e || e.type !== "TSVoidKeyword" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(JZ, "isTSVoidKeyword");
  function QZ(e, t) {
    return !e || e.type !== "TSThisType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(QZ, "isTSThisType");
  function ZZ(e, t) {
    return !e || e.type !== "TSFunctionType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(ZZ, "isTSFunctionType");
  function eee(e, t) {
    return !e || e.type !== "TSConstructorType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(eee, "isTSConstructorType");
  function tee(e, t) {
    return !e || e.type !== "TSTypeReference" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(tee, "isTSTypeReference");
  function ree(e, t) {
    return !e || e.type !== "TSTypePredicate" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(ree, "isTSTypePredicate");
  function see(e, t) {
    return !e || e.type !== "TSTypeQuery" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(see, "isTSTypeQuery");
  function nee(e, t) {
    return !e || e.type !== "TSTypeLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(nee, "isTSTypeLiteral");
  function iee(e, t) {
    return !e || e.type !== "TSArrayType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(iee, "isTSArrayType");
  function aee(e, t) {
    return !e || e.type !== "TSTupleType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(aee, "isTSTupleType");
  function oee(e, t) {
    return !e || e.type !== "TSOptionalType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(oee, "isTSOptionalType");
  function lee(e, t) {
    return !e || e.type !== "TSRestType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(lee, "isTSRestType");
  function uee(e, t) {
    return !e || e.type !== "TSNamedTupleMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(uee, "isTSNamedTupleMember");
  function cee(e, t) {
    return !e || e.type !== "TSUnionType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(cee, "isTSUnionType");
  function fee(e, t) {
    return !e || e.type !== "TSIntersectionType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(fee, "isTSIntersectionType");
  function pee(e, t) {
    return !e || e.type !== "TSConditionalType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(pee, "isTSConditionalType");
  function dee(e, t) {
    return !e || e.type !== "TSInferType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(dee, "isTSInferType");
  function hee(e, t) {
    return !e || e.type !== "TSParenthesizedType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(hee, "isTSParenthesizedType");
  function mee(e, t) {
    return !e || e.type !== "TSTypeOperator" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(mee, "isTSTypeOperator");
  function yee(e, t) {
    return !e || e.type !== "TSIndexedAccessType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(yee, "isTSIndexedAccessType");
  function gee(e, t) {
    return !e || e.type !== "TSMappedType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(gee, "isTSMappedType");
  function bee(e, t) {
    return !e || e.type !== "TSLiteralType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(bee, "isTSLiteralType");
  function Eee(e, t) {
    return !e || e.type !== "TSExpressionWithTypeArguments" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Eee, "isTSExpressionWithTypeArguments");
  function vee(e, t) {
    return !e || e.type !== "TSInterfaceDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(vee, "isTSInterfaceDeclaration");
  function See(e, t) {
    return !e || e.type !== "TSInterfaceBody" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(See, "isTSInterfaceBody");
  function Tee(e, t) {
    return !e || e.type !== "TSTypeAliasDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Tee, "isTSTypeAliasDeclaration");
  function xee(e, t) {
    return !e || e.type !== "TSInstantiationExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(xee, "isTSInstantiationExpression");
  function Pee(e, t) {
    return !e || e.type !== "TSAsExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Pee, "isTSAsExpression");
  function Aee(e, t) {
    return !e || e.type !== "TSSatisfiesExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Aee, "isTSSatisfiesExpression");
  function Cee(e, t) {
    return !e || e.type !== "TSTypeAssertion" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Cee, "isTSTypeAssertion");
  function wee(e, t) {
    return !e || e.type !== "TSEnumDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(wee, "isTSEnumDeclaration");
  function Dee(e, t) {
    return !e || e.type !== "TSEnumMember" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Dee, "isTSEnumMember");
  function Iee(e, t) {
    return !e || e.type !== "TSModuleDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Iee, "isTSModuleDeclaration");
  function _ee(e, t) {
    return !e || e.type !== "TSModuleBlock" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(_ee, "isTSModuleBlock");
  function Oee(e, t) {
    return !e || e.type !== "TSImportType" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Oee, "isTSImportType");
  function Nee(e, t) {
    return !e || e.type !== "TSImportEqualsDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Nee, "isTSImportEqualsDeclaration");
  function Ree(e, t) {
    return !e || e.type !== "TSExternalModuleReference" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Ree, "isTSExternalModuleReference");
  function kee(e, t) {
    return !e || e.type !== "TSNonNullExpression" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(kee, "isTSNonNullExpression");
  function Fee(e, t) {
    return !e || e.type !== "TSExportAssignment" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Fee, "isTSExportAssignment");
  function Lee(e, t) {
    return !e || e.type !== "TSNamespaceExportDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Lee, "isTSNamespaceExportDeclaration");
  function Bee(e, t) {
    return !e || e.type !== "TSTypeAnnotation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Bee, "isTSTypeAnnotation");
  function Mee(e, t) {
    return !e || e.type !== "TSTypeParameterInstantiation" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Mee, "isTSTypeParameterInstantiation");
  function jee(e, t) {
    return !e || e.type !== "TSTypeParameterDeclaration" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(jee, "isTSTypeParameterDeclaration");
  function qee(e, t) {
    return !e || e.type !== "TSTypeParameter" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(qee, "isTSTypeParameter");
  function $ee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ArrayExpression":
      case "AssignmentExpression":
      case "BinaryExpression":
      case "InterpreterDirective":
      case "Directive":
      case "DirectiveLiteral":
      case "BlockStatement":
      case "BreakStatement":
      case "CallExpression":
      case "CatchClause":
      case "ConditionalExpression":
      case "ContinueStatement":
      case "DebuggerStatement":
      case "DoWhileStatement":
      case "EmptyStatement":
      case "ExpressionStatement":
      case "File":
      case "ForInStatement":
      case "ForStatement":
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "Identifier":
      case "IfStatement":
      case "LabeledStatement":
      case "StringLiteral":
      case "NumericLiteral":
      case "NullLiteral":
      case "BooleanLiteral":
      case "RegExpLiteral":
      case "LogicalExpression":
      case "MemberExpression":
      case "NewExpression":
      case "Program":
      case "ObjectExpression":
      case "ObjectMethod":
      case "ObjectProperty":
      case "RestElement":
      case "ReturnStatement":
      case "SequenceExpression":
      case "ParenthesizedExpression":
      case "SwitchCase":
      case "SwitchStatement":
      case "ThisExpression":
      case "ThrowStatement":
      case "TryStatement":
      case "UnaryExpression":
      case "UpdateExpression":
      case "VariableDeclaration":
      case "VariableDeclarator":
      case "WhileStatement":
      case "WithStatement":
      case "AssignmentPattern":
      case "ArrayPattern":
      case "ArrowFunctionExpression":
      case "ClassBody":
      case "ClassExpression":
      case "ClassDeclaration":
      case "ExportAllDeclaration":
      case "ExportDefaultDeclaration":
      case "ExportNamedDeclaration":
      case "ExportSpecifier":
      case "ForOfStatement":
      case "ImportDeclaration":
      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
      case "ImportExpression":
      case "MetaProperty":
      case "ClassMethod":
      case "ObjectPattern":
      case "SpreadElement":
      case "Super":
      case "TaggedTemplateExpression":
      case "TemplateElement":
      case "TemplateLiteral":
      case "YieldExpression":
      case "AwaitExpression":
      case "Import":
      case "BigIntLiteral":
      case "ExportNamespaceSpecifier":
      case "OptionalMemberExpression":
      case "OptionalCallExpression":
      case "ClassProperty":
      case "ClassAccessorProperty":
      case "ClassPrivateProperty":
      case "ClassPrivateMethod":
      case "PrivateName":
      case "StaticBlock":
        break;
      case "Placeholder":
        switch (e.expectedNode) {
          case "Identifier":
          case "StringLiteral":
          case "BlockStatement":
          case "ClassBody":
            break;
          default:
            return !1;
        }
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i($ee, "isStandardized");
  function Uee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ArrayExpression":
      case "AssignmentExpression":
      case "BinaryExpression":
      case "CallExpression":
      case "ConditionalExpression":
      case "FunctionExpression":
      case "Identifier":
      case "StringLiteral":
      case "NumericLiteral":
      case "NullLiteral":
      case "BooleanLiteral":
      case "RegExpLiteral":
      case "LogicalExpression":
      case "MemberExpression":
      case "NewExpression":
      case "ObjectExpression":
      case "SequenceExpression":
      case "ParenthesizedExpression":
      case "ThisExpression":
      case "UnaryExpression":
      case "UpdateExpression":
      case "ArrowFunctionExpression":
      case "ClassExpression":
      case "ImportExpression":
      case "MetaProperty":
      case "Super":
      case "TaggedTemplateExpression":
      case "TemplateLiteral":
      case "YieldExpression":
      case "AwaitExpression":
      case "Import":
      case "BigIntLiteral":
      case "OptionalMemberExpression":
      case "OptionalCallExpression":
      case "TypeCastExpression":
      case "JSXElement":
      case "JSXFragment":
      case "BindExpression":
      case "DoExpression":
      case "RecordExpression":
      case "TupleExpression":
      case "DecimalLiteral":
      case "ModuleExpression":
      case "TopicReference":
      case "PipelineTopicExpression":
      case "PipelineBareFunction":
      case "PipelinePrimaryTopicReference":
      case "TSInstantiationExpression":
      case "TSAsExpression":
      case "TSSatisfiesExpression":
      case "TSTypeAssertion":
      case "TSNonNullExpression":
        break;
      case "Placeholder":
        switch (e.expectedNode) {
          case "Expression":
          case "Identifier":
          case "StringLiteral":
            break;
          default:
            return !1;
        }
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Uee, "isExpression");
  function Vee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BinaryExpression":
      case "LogicalExpression":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Vee, "isBinary");
  function Wee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BlockStatement":
      case "CatchClause":
      case "DoWhileStatement":
      case "ForInStatement":
      case "ForStatement":
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "Program":
      case "ObjectMethod":
      case "SwitchStatement":
      case "WhileStatement":
      case "ArrowFunctionExpression":
      case "ClassExpression":
      case "ClassDeclaration":
      case "ForOfStatement":
      case "ClassMethod":
      case "ClassPrivateMethod":
      case "StaticBlock":
      case "TSModuleBlock":
        break;
      case "Placeholder":
        if (e.expectedNode === "BlockStatement") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Wee, "isScopable");
  function Hee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BlockStatement":
      case "CatchClause":
      case "DoWhileStatement":
      case "ForInStatement":
      case "ForStatement":
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "Program":
      case "ObjectMethod":
      case "SwitchStatement":
      case "WhileStatement":
      case "ArrowFunctionExpression":
      case "ForOfStatement":
      case "ClassMethod":
      case "ClassPrivateMethod":
      case "StaticBlock":
      case "TSModuleBlock":
        break;
      case "Placeholder":
        if (e.expectedNode === "BlockStatement") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Hee, "isBlockParent");
  function Gee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BlockStatement":
      case "Program":
      case "TSModuleBlock":
        break;
      case "Placeholder":
        if (e.expectedNode === "BlockStatement") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Gee, "isBlock");
  function Kee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BlockStatement":
      case "BreakStatement":
      case "ContinueStatement":
      case "DebuggerStatement":
      case "DoWhileStatement":
      case "EmptyStatement":
      case "ExpressionStatement":
      case "ForInStatement":
      case "ForStatement":
      case "FunctionDeclaration":
      case "IfStatement":
      case "LabeledStatement":
      case "ReturnStatement":
      case "SwitchStatement":
      case "ThrowStatement":
      case "TryStatement":
      case "VariableDeclaration":
      case "WhileStatement":
      case "WithStatement":
      case "ClassDeclaration":
      case "ExportAllDeclaration":
      case "ExportDefaultDeclaration":
      case "ExportNamedDeclaration":
      case "ForOfStatement":
      case "ImportDeclaration":
      case "DeclareClass":
      case "DeclareFunction":
      case "DeclareInterface":
      case "DeclareModule":
      case "DeclareModuleExports":
      case "DeclareTypeAlias":
      case "DeclareOpaqueType":
      case "DeclareVariable":
      case "DeclareExportDeclaration":
      case "DeclareExportAllDeclaration":
      case "InterfaceDeclaration":
      case "OpaqueType":
      case "TypeAlias":
      case "EnumDeclaration":
      case "TSDeclareFunction":
      case "TSInterfaceDeclaration":
      case "TSTypeAliasDeclaration":
      case "TSEnumDeclaration":
      case "TSModuleDeclaration":
      case "TSImportEqualsDeclaration":
      case "TSExportAssignment":
      case "TSNamespaceExportDeclaration":
        break;
      case "Placeholder":
        switch (e.expectedNode) {
          case "Statement":
          case "Declaration":
          case "BlockStatement":
            break;
          default:
            return !1;
        }
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Kee, "isStatement");
  function Yee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BreakStatement":
      case "ContinueStatement":
      case "ReturnStatement":
      case "ThrowStatement":
      case "YieldExpression":
      case "AwaitExpression":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Yee, "isTerminatorless");
  function Xee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "BreakStatement":
      case "ContinueStatement":
      case "ReturnStatement":
      case "ThrowStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Xee, "isCompletionStatement");
  function zee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ConditionalExpression":
      case "IfStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(zee, "isConditional");
  function Jee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "DoWhileStatement":
      case "ForInStatement":
      case "ForStatement":
      case "WhileStatement":
      case "ForOfStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Jee, "isLoop");
  function Qee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "DoWhileStatement":
      case "WhileStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Qee, "isWhile");
  function Zee(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ExpressionStatement":
      case "ParenthesizedExpression":
      case "TypeCastExpression":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Zee, "isExpressionWrapper");
  function ete(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ForInStatement":
      case "ForStatement":
      case "ForOfStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ete, "isFor");
  function tte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ForInStatement":
      case "ForOfStatement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(tte, "isForXStatement");
  function rte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "ObjectMethod":
      case "ArrowFunctionExpression":
      case "ClassMethod":
      case "ClassPrivateMethod":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(rte, "isFunction");
  function ste(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "ObjectMethod":
      case "ArrowFunctionExpression":
      case "ClassMethod":
      case "ClassPrivateMethod":
      case "StaticBlock":
      case "TSModuleBlock":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ste, "isFunctionParent");
  function nte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "FunctionDeclaration":
      case "FunctionExpression":
      case "StringLiteral":
      case "NumericLiteral":
      case "NullLiteral":
      case "BooleanLiteral":
      case "RegExpLiteral":
      case "ArrowFunctionExpression":
      case "BigIntLiteral":
      case "DecimalLiteral":
        break;
      case "Placeholder":
        if (e.expectedNode === "StringLiteral") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(nte, "isPureish");
  function ite(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "FunctionDeclaration":
      case "VariableDeclaration":
      case "ClassDeclaration":
      case "ExportAllDeclaration":
      case "ExportDefaultDeclaration":
      case "ExportNamedDeclaration":
      case "ImportDeclaration":
      case "DeclareClass":
      case "DeclareFunction":
      case "DeclareInterface":
      case "DeclareModule":
      case "DeclareModuleExports":
      case "DeclareTypeAlias":
      case "DeclareOpaqueType":
      case "DeclareVariable":
      case "DeclareExportDeclaration":
      case "DeclareExportAllDeclaration":
      case "InterfaceDeclaration":
      case "OpaqueType":
      case "TypeAlias":
      case "EnumDeclaration":
      case "TSDeclareFunction":
      case "TSInterfaceDeclaration":
      case "TSTypeAliasDeclaration":
      case "TSEnumDeclaration":
      case "TSModuleDeclaration":
        break;
      case "Placeholder":
        if (e.expectedNode === "Declaration") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ite, "isDeclaration");
  function ate(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "Identifier":
      case "RestElement":
      case "AssignmentPattern":
      case "ArrayPattern":
      case "ObjectPattern":
      case "TSAsExpression":
      case "TSSatisfiesExpression":
      case "TSTypeAssertion":
      case "TSNonNullExpression":
        break;
      case "Placeholder":
        switch (e.expectedNode) {
          case "Pattern":
          case "Identifier":
            break;
          default:
            return !1;
        }
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ate, "isPatternLike");
  function ote(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "Identifier":
      case "MemberExpression":
      case "RestElement":
      case "AssignmentPattern":
      case "ArrayPattern":
      case "ObjectPattern":
      case "TSParameterProperty":
      case "TSAsExpression":
      case "TSSatisfiesExpression":
      case "TSTypeAssertion":
      case "TSNonNullExpression":
        break;
      case "Placeholder":
        switch (e.expectedNode) {
          case "Pattern":
          case "Identifier":
            break;
          default:
            return !1;
        }
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ote, "isLVal");
  function lte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "Identifier":
      case "TSQualifiedName":
        break;
      case "Placeholder":
        if (e.expectedNode === "Identifier") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(lte, "isTSEntityName");
  function ute(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "StringLiteral":
      case "NumericLiteral":
      case "NullLiteral":
      case "BooleanLiteral":
      case "RegExpLiteral":
      case "TemplateLiteral":
      case "BigIntLiteral":
      case "DecimalLiteral":
        break;
      case "Placeholder":
        if (e.expectedNode === "StringLiteral") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(ute, "isLiteral");
  function cte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "StringLiteral":
      case "NumericLiteral":
      case "NullLiteral":
      case "BooleanLiteral":
      case "BigIntLiteral":
      case "JSXAttribute":
      case "JSXClosingElement":
      case "JSXElement":
      case "JSXExpressionContainer":
      case "JSXSpreadChild":
      case "JSXOpeningElement":
      case "JSXText":
      case "JSXFragment":
      case "JSXOpeningFragment":
      case "JSXClosingFragment":
      case "DecimalLiteral":
        break;
      case "Placeholder":
        if (e.expectedNode === "StringLiteral") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(cte, "isImmutable");
  function fte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ObjectMethod":
      case "ObjectProperty":
      case "ObjectTypeInternalSlot":
      case "ObjectTypeCallProperty":
      case "ObjectTypeIndexer":
      case "ObjectTypeProperty":
      case "ObjectTypeSpreadProperty":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(fte, "isUserWhitespacable");
  function pte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ObjectMethod":
      case "ClassMethod":
      case "ClassPrivateMethod":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(pte, "isMethod");
  function dte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ObjectMethod":
      case "ObjectProperty":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(dte, "isObjectMember");
  function hte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ObjectProperty":
      case "ClassProperty":
      case "ClassAccessorProperty":
      case "ClassPrivateProperty":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(hte, "isProperty");
  function mte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "UnaryExpression":
      case "SpreadElement":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(mte, "isUnaryLike");
  function yte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "AssignmentPattern":
      case "ArrayPattern":
      case "ObjectPattern":
        break;
      case "Placeholder":
        if (e.expectedNode === "Pattern") break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(yte, "isPattern");
  function gte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ClassExpression":
      case "ClassDeclaration":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(gte, "isClass");
  function qN(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ExportAllDeclaration":
      case "ExportDefaultDeclaration":
      case "ExportNamedDeclaration":
      case "ImportDeclaration":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(qN, "isImportOrExportDeclaration");
  function bte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ExportAllDeclaration":
      case "ExportDefaultDeclaration":
      case "ExportNamedDeclaration":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(bte, "isExportDeclaration");
  function Ete(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ExportSpecifier":
      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
      case "ExportNamespaceSpecifier":
      case "ExportDefaultSpecifier":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Ete, "isModuleSpecifier");
  function vte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ClassAccessorProperty":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(vte, "isAccessor");
  function Ste(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "ClassPrivateProperty":
      case "ClassPrivateMethod":
      case "PrivateName":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Ste, "isPrivate");
  function Tte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "AnyTypeAnnotation":
      case "ArrayTypeAnnotation":
      case "BooleanTypeAnnotation":
      case "BooleanLiteralTypeAnnotation":
      case "NullLiteralTypeAnnotation":
      case "ClassImplements":
      case "DeclareClass":
      case "DeclareFunction":
      case "DeclareInterface":
      case "DeclareModule":
      case "DeclareModuleExports":
      case "DeclareTypeAlias":
      case "DeclareOpaqueType":
      case "DeclareVariable":
      case "DeclareExportDeclaration":
      case "DeclareExportAllDeclaration":
      case "DeclaredPredicate":
      case "ExistsTypeAnnotation":
      case "FunctionTypeAnnotation":
      case "FunctionTypeParam":
      case "GenericTypeAnnotation":
      case "InferredPredicate":
      case "InterfaceExtends":
      case "InterfaceDeclaration":
      case "InterfaceTypeAnnotation":
      case "IntersectionTypeAnnotation":
      case "MixedTypeAnnotation":
      case "EmptyTypeAnnotation":
      case "NullableTypeAnnotation":
      case "NumberLiteralTypeAnnotation":
      case "NumberTypeAnnotation":
      case "ObjectTypeAnnotation":
      case "ObjectTypeInternalSlot":
      case "ObjectTypeCallProperty":
      case "ObjectTypeIndexer":
      case "ObjectTypeProperty":
      case "ObjectTypeSpreadProperty":
      case "OpaqueType":
      case "QualifiedTypeIdentifier":
      case "StringLiteralTypeAnnotation":
      case "StringTypeAnnotation":
      case "SymbolTypeAnnotation":
      case "ThisTypeAnnotation":
      case "TupleTypeAnnotation":
      case "TypeofTypeAnnotation":
      case "TypeAlias":
      case "TypeAnnotation":
      case "TypeCastExpression":
      case "TypeParameter":
      case "TypeParameterDeclaration":
      case "TypeParameterInstantiation":
      case "UnionTypeAnnotation":
      case "Variance":
      case "VoidTypeAnnotation":
      case "EnumDeclaration":
      case "EnumBooleanBody":
      case "EnumNumberBody":
      case "EnumStringBody":
      case "EnumSymbolBody":
      case "EnumBooleanMember":
      case "EnumNumberMember":
      case "EnumStringMember":
      case "EnumDefaultedMember":
      case "IndexedAccessType":
      case "OptionalIndexedAccessType":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Tte, "isFlow");
  function xte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "AnyTypeAnnotation":
      case "ArrayTypeAnnotation":
      case "BooleanTypeAnnotation":
      case "BooleanLiteralTypeAnnotation":
      case "NullLiteralTypeAnnotation":
      case "ExistsTypeAnnotation":
      case "FunctionTypeAnnotation":
      case "GenericTypeAnnotation":
      case "InterfaceTypeAnnotation":
      case "IntersectionTypeAnnotation":
      case "MixedTypeAnnotation":
      case "EmptyTypeAnnotation":
      case "NullableTypeAnnotation":
      case "NumberLiteralTypeAnnotation":
      case "NumberTypeAnnotation":
      case "ObjectTypeAnnotation":
      case "StringLiteralTypeAnnotation":
      case "StringTypeAnnotation":
      case "SymbolTypeAnnotation":
      case "ThisTypeAnnotation":
      case "TupleTypeAnnotation":
      case "TypeofTypeAnnotation":
      case "UnionTypeAnnotation":
      case "VoidTypeAnnotation":
      case "IndexedAccessType":
      case "OptionalIndexedAccessType":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(xte, "isFlowType");
  function Pte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "AnyTypeAnnotation":
      case "BooleanTypeAnnotation":
      case "NullLiteralTypeAnnotation":
      case "MixedTypeAnnotation":
      case "EmptyTypeAnnotation":
      case "NumberTypeAnnotation":
      case "StringTypeAnnotation":
      case "SymbolTypeAnnotation":
      case "ThisTypeAnnotation":
      case "VoidTypeAnnotation":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Pte, "isFlowBaseAnnotation");
  function Ate(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "DeclareClass":
      case "DeclareFunction":
      case "DeclareInterface":
      case "DeclareModule":
      case "DeclareModuleExports":
      case "DeclareTypeAlias":
      case "DeclareOpaqueType":
      case "DeclareVariable":
      case "DeclareExportDeclaration":
      case "DeclareExportAllDeclaration":
      case "InterfaceDeclaration":
      case "OpaqueType":
      case "TypeAlias":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Ate, "isFlowDeclaration");
  function Cte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "DeclaredPredicate":
      case "InferredPredicate":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Cte, "isFlowPredicate");
  function wte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "EnumBooleanBody":
      case "EnumNumberBody":
      case "EnumStringBody":
      case "EnumSymbolBody":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(wte, "isEnumBody");
  function Dte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "EnumBooleanMember":
      case "EnumNumberMember":
      case "EnumStringMember":
      case "EnumDefaultedMember":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Dte, "isEnumMember");
  function Ite(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "JSXAttribute":
      case "JSXClosingElement":
      case "JSXElement":
      case "JSXEmptyExpression":
      case "JSXExpressionContainer":
      case "JSXSpreadChild":
      case "JSXIdentifier":
      case "JSXMemberExpression":
      case "JSXNamespacedName":
      case "JSXOpeningElement":
      case "JSXSpreadAttribute":
      case "JSXText":
      case "JSXFragment":
      case "JSXOpeningFragment":
      case "JSXClosingFragment":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Ite, "isJSX");
  function _te(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "Noop":
      case "Placeholder":
      case "V8IntrinsicIdentifier":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(_te, "isMiscellaneous");
  function Ote(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "TSParameterProperty":
      case "TSDeclareFunction":
      case "TSDeclareMethod":
      case "TSQualifiedName":
      case "TSCallSignatureDeclaration":
      case "TSConstructSignatureDeclaration":
      case "TSPropertySignature":
      case "TSMethodSignature":
      case "TSIndexSignature":
      case "TSAnyKeyword":
      case "TSBooleanKeyword":
      case "TSBigIntKeyword":
      case "TSIntrinsicKeyword":
      case "TSNeverKeyword":
      case "TSNullKeyword":
      case "TSNumberKeyword":
      case "TSObjectKeyword":
      case "TSStringKeyword":
      case "TSSymbolKeyword":
      case "TSUndefinedKeyword":
      case "TSUnknownKeyword":
      case "TSVoidKeyword":
      case "TSThisType":
      case "TSFunctionType":
      case "TSConstructorType":
      case "TSTypeReference":
      case "TSTypePredicate":
      case "TSTypeQuery":
      case "TSTypeLiteral":
      case "TSArrayType":
      case "TSTupleType":
      case "TSOptionalType":
      case "TSRestType":
      case "TSNamedTupleMember":
      case "TSUnionType":
      case "TSIntersectionType":
      case "TSConditionalType":
      case "TSInferType":
      case "TSParenthesizedType":
      case "TSTypeOperator":
      case "TSIndexedAccessType":
      case "TSMappedType":
      case "TSLiteralType":
      case "TSExpressionWithTypeArguments":
      case "TSInterfaceDeclaration":
      case "TSInterfaceBody":
      case "TSTypeAliasDeclaration":
      case "TSInstantiationExpression":
      case "TSAsExpression":
      case "TSSatisfiesExpression":
      case "TSTypeAssertion":
      case "TSEnumDeclaration":
      case "TSEnumMember":
      case "TSModuleDeclaration":
      case "TSModuleBlock":
      case "TSImportType":
      case "TSImportEqualsDeclaration":
      case "TSExternalModuleReference":
      case "TSNonNullExpression":
      case "TSExportAssignment":
      case "TSNamespaceExportDeclaration":
      case "TSTypeAnnotation":
      case "TSTypeParameterInstantiation":
      case "TSTypeParameterDeclaration":
      case "TSTypeParameter":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Ote, "isTypeScript");
  function Nte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "TSCallSignatureDeclaration":
      case "TSConstructSignatureDeclaration":
      case "TSPropertySignature":
      case "TSMethodSignature":
      case "TSIndexSignature":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Nte, "isTSTypeElement");
  function Rte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "TSAnyKeyword":
      case "TSBooleanKeyword":
      case "TSBigIntKeyword":
      case "TSIntrinsicKeyword":
      case "TSNeverKeyword":
      case "TSNullKeyword":
      case "TSNumberKeyword":
      case "TSObjectKeyword":
      case "TSStringKeyword":
      case "TSSymbolKeyword":
      case "TSUndefinedKeyword":
      case "TSUnknownKeyword":
      case "TSVoidKeyword":
      case "TSThisType":
      case "TSFunctionType":
      case "TSConstructorType":
      case "TSTypeReference":
      case "TSTypePredicate":
      case "TSTypeQuery":
      case "TSTypeLiteral":
      case "TSArrayType":
      case "TSTupleType":
      case "TSOptionalType":
      case "TSRestType":
      case "TSUnionType":
      case "TSIntersectionType":
      case "TSConditionalType":
      case "TSInferType":
      case "TSParenthesizedType":
      case "TSTypeOperator":
      case "TSIndexedAccessType":
      case "TSMappedType":
      case "TSLiteralType":
      case "TSExpressionWithTypeArguments":
      case "TSImportType":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(Rte, "isTSType");
  function kte(e, t) {
    if (!e) return !1;
    switch (e.type) {
      case "TSAnyKeyword":
      case "TSBooleanKeyword":
      case "TSBigIntKeyword":
      case "TSIntrinsicKeyword":
      case "TSNeverKeyword":
      case "TSNullKeyword":
      case "TSNumberKeyword":
      case "TSObjectKeyword":
      case "TSStringKeyword":
      case "TSSymbolKeyword":
      case "TSUndefinedKeyword":
      case "TSUnknownKeyword":
      case "TSVoidKeyword":
      case "TSThisType":
      case "TSLiteralType":
        break;
      default:
        return !1;
    }
    return t == null || (0, A.default)(e, t);
  }
  i(kte, "isTSBaseType");
  function Fte(e, t) {
    return (0, Mu.default)("isNumberLiteral", "isNumericLiteral"), !e || e.type !== "NumberLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Fte, "isNumberLiteral");
  function Lte(e, t) {
    return (0, Mu.default)("isRegexLiteral", "isRegExpLiteral"), !e || e.type !== "RegexLiteral" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Lte, "isRegexLiteral");
  function Bte(e, t) {
    return (0, Mu.default)("isRestProperty", "isRestElement"), !e || e.type !== "RestProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Bte, "isRestProperty");
  function Mte(e, t) {
    return (0, Mu.default)("isSpreadProperty", "isSpreadElement"), !e || e.type !== "SpreadProperty" ? !1 : t == null || (0, A.default)(e, t);
  }
  i(Mte, "isSpreadProperty");
  function jte(e, t) {
    return (0, Mu.default)("isModuleDeclaration", "isImportOrExportDeclaration"), qN(e, t);
  }
  i(jte, "isModuleDeclaration");
});

// ../node_modules/@babel/types/lib/validators/matchesPattern.js
var jg = y((Mg) => {
  "use strict";
  Object.defineProperty(Mg, "__esModule", {
    value: !0
  });
  Mg.default = qte;
  var ju = hr();
  function qte(e, t, r) {
    if (!(0, ju.isMemberExpression)(e)) return !1;
    let s = Array.isArray(t) ? t : t.split("."), n = [], a;
    for (a = e; (0, ju.isMemberExpression)(a); a = a.object)
      n.push(a.property);
    if (n.push(a), n.length < s.length || !r && n.length > s.length) return !1;
    for (let o = 0, l = n.length - 1; o < s.length; o++, l--) {
      let u = n[l], c;
      if ((0, ju.isIdentifier)(u))
        c = u.name;
      else if ((0, ju.isStringLiteral)(u))
        c = u.value;
      else if ((0, ju.isThisExpression)(u))
        c = "this";
      else
        return !1;
      if (s[o] !== c) return !1;
    }
    return !0;
  }
  i(qte, "matchesPattern");
});

// ../node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js
var $g = y((qg) => {
  "use strict";
  Object.defineProperty(qg, "__esModule", {
    value: !0
  });
  qg.default = Ute;
  var $te = jg();
  function Ute(e, t) {
    let r = e.split(".");
    return (s) => (0, $te.default)(s, r, t);
  }
  i(Ute, "buildMatchMemberExpression");
});

// ../node_modules/@babel/types/lib/validators/react/isReactComponent.js
var $N = y((Tp) => {
  "use strict";
  Object.defineProperty(Tp, "__esModule", {
    value: !0
  });
  Tp.default = void 0;
  var Vte = $g(), Wte = (0, Vte.default)("React.Component"), HYe = Tp.default = Wte;
});

// ../node_modules/@babel/types/lib/validators/react/isCompatTag.js
var UN = y((Ug) => {
  "use strict";
  Object.defineProperty(Ug, "__esModule", {
    value: !0
  });
  Ug.default = Hte;
  function Hte(e) {
    return !!e && /^[a-z]/.test(e);
  }
  i(Hte, "isCompatTag");
});

// ../node_modules/to-fast-properties/index.js
var WN = y((XYe, VN) => {
  "use strict";
  var qu = null;
  function $u(e) {
    if (qu !== null && typeof qu.property) {
      let t = qu;
      return qu = $u.prototype = null, t;
    }
    return qu = $u.prototype = e ?? /* @__PURE__ */ Object.create(null), new $u();
  }
  i($u, "FastObject");
  $u();
  VN.exports = /* @__PURE__ */ i(function(t) {
    return $u(t);
  }, "toFastproperties");
});

// ../node_modules/@babel/types/lib/validators/isType.js
var xp = y((Vg) => {
  "use strict";
  Object.defineProperty(Vg, "__esModule", {
    value: !0
  });
  Vg.default = Gte;
  var HN = Fs();
  function Gte(e, t) {
    if (e === t) return !0;
    if (e == null || HN.ALIAS_KEYS[t]) return !1;
    let r = HN.FLIPPED_ALIAS_KEYS[t];
    if (r) {
      if (r[0] === e) return !0;
      for (let s of r)
        if (e === s) return !0;
    }
    return !1;
  }
  i(Gte, "isType");
});

// ../node_modules/@babel/types/lib/validators/isPlaceholderType.js
var Hg = y((Wg) => {
  "use strict";
  Object.defineProperty(Wg, "__esModule", {
    value: !0
  });
  Wg.default = Yte;
  var Kte = Fs();
  function Yte(e, t) {
    if (e === t) return !0;
    let r = Kte.PLACEHOLDERS_ALIAS[e];
    if (r) {
      for (let s of r)
        if (t === s) return !0;
    }
    return !1;
  }
  i(Yte, "isPlaceholderType");
});

// ../node_modules/@babel/types/lib/validators/is.js
var Go = y((Gg) => {
  "use strict";
  Object.defineProperty(Gg, "__esModule", {
    value: !0
  });
  Gg.default = Zte;
  var Xte = Sp(), zte = xp(), Jte = Hg(), Qte = Fs();
  function Zte(e, t, r) {
    return t ? (0, zte.default)(t.type, e) ? typeof r > "u" ? !0 : (0, Xte.default)(t, r) : !r && t.type === "Placeholder" && e in Qte.FLIPPED_ALIAS_KEYS ?
    (0, Jte.default)(t.expectedNode, e) : !1 : !1;
  }
  i(Zte, "is");
});

// ../node_modules/@babel/helper-validator-identifier/lib/identifier.js
var zN = y((Uu) => {
  "use strict";
  Object.defineProperty(Uu, "__esModule", {
    value: !0
  });
  Uu.isIdentifierChar = XN;
  Uu.isIdentifierName = sre;
  Uu.isIdentifierStart = YN;
  var Yg = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993\
-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\
\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\
\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\
\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\
\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01\
-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
  GN = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\
\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4\
-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\
\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\
\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65", ere = new RegExp("[" + Yg + "]"), tre = new RegExp("[" + Yg + GN + "\
]");
  Yg = GN = null;
  var KN = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157,
  19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0,
  2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27,
  28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1,
  3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8,
  46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60,
  42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22,
  0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33,
  125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689,
  63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106,
  6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339,
  3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43,
  485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0,
  2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33,
  4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], rre = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41,
  2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9,
  6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17,
  10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1,
  13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9,
  9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54,
  8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14,
  1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
  function Kg(e, t) {
    let r = 65536;
    for (let s = 0, n = t.length; s < n; s += 2) {
      if (r += t[s], r > e) return !1;
      if (r += t[s + 1], r >= e) return !0;
    }
    return !1;
  }
  i(Kg, "isInAstralSet");
  function YN(e) {
    return e < 65 ? e === 36 : e <= 90 ? !0 : e < 97 ? e === 95 : e <= 122 ? !0 : e <= 65535 ? e >= 170 && ere.test(String.fromCharCode(e)) :
    Kg(e, KN);
  }
  i(YN, "isIdentifierStart");
  function XN(e) {
    return e < 48 ? e === 36 : e < 58 ? !0 : e < 65 ? !1 : e <= 90 ? !0 : e < 97 ? e === 95 : e <= 122 ? !0 : e <= 65535 ? e >= 170 && tre.test(
    String.fromCharCode(e)) : Kg(e, KN) || Kg(e, rre);
  }
  i(XN, "isIdentifierChar");
  function sre(e) {
    let t = !0;
    for (let r = 0; r < e.length; r++) {
      let s = e.charCodeAt(r);
      if ((s & 64512) === 55296 && r + 1 < e.length) {
        let n = e.charCodeAt(++r);
        (n & 64512) === 56320 && (s = 65536 + ((s & 1023) << 10) + (n & 1023));
      }
      if (t) {
        if (t = !1, !YN(s))
          return !1;
      } else if (!XN(s))
        return !1;
    }
    return !t;
  }
  i(sre, "isIdentifierName");
});

// ../node_modules/@babel/helper-validator-identifier/lib/keyword.js
var eR = y((ja) => {
  "use strict";
  Object.defineProperty(ja, "__esModule", {
    value: !0
  });
  ja.isKeyword = lre;
  ja.isReservedWord = JN;
  ja.isStrictBindOnlyReservedWord = ZN;
  ja.isStrictBindReservedWord = ore;
  ja.isStrictReservedWord = QN;
  var Xg = {
    keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "swit\
ch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false",
    "in", "instanceof", "typeof", "void", "delete"],
    strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
    strictBind: ["eval", "arguments"]
  }, nre = new Set(Xg.keyword), ire = new Set(Xg.strict), are = new Set(Xg.strictBind);
  function JN(e, t) {
    return t && e === "await" || e === "enum";
  }
  i(JN, "isReservedWord");
  function QN(e, t) {
    return JN(e, t) || ire.has(e);
  }
  i(QN, "isStrictReservedWord");
  function ZN(e) {
    return are.has(e);
  }
  i(ZN, "isStrictBindOnlyReservedWord");
  function ore(e, t) {
    return QN(e, t) || ZN(e);
  }
  i(ore, "isStrictBindReservedWord");
  function lre(e) {
    return nre.has(e);
  }
  i(lre, "isKeyword");
});

// ../node_modules/@babel/helper-validator-identifier/lib/index.js
var Ko = y((kn) => {
  "use strict";
  Object.defineProperty(kn, "__esModule", {
    value: !0
  });
  Object.defineProperty(kn, "isIdentifierChar", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return zg.isIdentifierChar;
    }, "get")
  });
  Object.defineProperty(kn, "isIdentifierName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return zg.isIdentifierName;
    }, "get")
  });
  Object.defineProperty(kn, "isIdentifierStart", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return zg.isIdentifierStart;
    }, "get")
  });
  Object.defineProperty(kn, "isKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vu.isKeyword;
    }, "get")
  });
  Object.defineProperty(kn, "isReservedWord", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vu.isReservedWord;
    }, "get")
  });
  Object.defineProperty(kn, "isStrictBindOnlyReservedWord", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vu.isStrictBindOnlyReservedWord;
    }, "get")
  });
  Object.defineProperty(kn, "isStrictBindReservedWord", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vu.isStrictBindReservedWord;
    }, "get")
  });
  Object.defineProperty(kn, "isStrictReservedWord", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vu.isStrictReservedWord;
    }, "get")
  });
  var zg = zN(), Vu = eR();
});

// ../node_modules/@babel/types/lib/validators/isValidIdentifier.js
var Yo = y((Qg) => {
  "use strict";
  Object.defineProperty(Qg, "__esModule", {
    value: !0
  });
  Qg.default = ure;
  var Jg = Ko();
  function ure(e, t = !0) {
    return typeof e != "string" || t && ((0, Jg.isKeyword)(e) || (0, Jg.isStrictReservedWord)(e, !0)) ? !1 : (0, Jg.isIdentifierName)(e);
  }
  i(ure, "isValidIdentifier");
});

// ../node_modules/@babel/helper-string-parser/lib/index.js
var nR = y((Wu) => {
  "use strict";
  Object.defineProperty(Wu, "__esModule", {
    value: !0
  });
  Wu.readCodePoint = sR;
  Wu.readInt = rR;
  Wu.readStringContents = fre;
  var cre = /* @__PURE__ */ i(function(t) {
    return t >= 48 && t <= 57;
  }, "isDigit"), tR = {
    decBinOct: /* @__PURE__ */ new Set([46, 66, 69, 79, 95, 98, 101, 111]),
    hex: /* @__PURE__ */ new Set([46, 88, 95, 120])
  }, Pp = {
    bin: /* @__PURE__ */ i((e) => e === 48 || e === 49, "bin"),
    oct: /* @__PURE__ */ i((e) => e >= 48 && e <= 55, "oct"),
    dec: /* @__PURE__ */ i((e) => e >= 48 && e <= 57, "dec"),
    hex: /* @__PURE__ */ i((e) => e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102, "hex")
  };
  function fre(e, t, r, s, n, a) {
    let o = r, l = s, u = n, c = "", f = null, p = r, {
      length: d
    } = t;
    for (; ; ) {
      if (r >= d) {
        a.unterminated(o, l, u), c += t.slice(p, r);
        break;
      }
      let m = t.charCodeAt(r);
      if (pre(e, m, t, r)) {
        c += t.slice(p, r);
        break;
      }
      if (m === 92) {
        c += t.slice(p, r);
        let b = dre(t, r, s, n, e === "template", a);
        b.ch === null && !f ? f = {
          pos: r,
          lineStart: s,
          curLine: n
        } : c += b.ch, {
          pos: r,
          lineStart: s,
          curLine: n
        } = b, p = r;
      } else m === 8232 || m === 8233 ? (++r, ++n, s = r) : m === 10 || m === 13 ? e === "template" ? (c += t.slice(p, r) + `
`, ++r, m === 13 && t.charCodeAt(r) === 10 && ++r, ++n, p = s = r) : a.unterminated(o, l, u) : ++r;
    }
    return {
      pos: r,
      str: c,
      firstInvalidLoc: f,
      lineStart: s,
      curLine: n,
      containsInvalid: !!f
    };
  }
  i(fre, "readStringContents");
  function pre(e, t, r, s) {
    return e === "template" ? t === 96 || t === 36 && r.charCodeAt(s + 1) === 123 : t === (e === "double" ? 34 : 39);
  }
  i(pre, "isStringEnd");
  function dre(e, t, r, s, n, a) {
    let o = !n;
    t++;
    let l = /* @__PURE__ */ i((c) => ({
      pos: t,
      ch: c,
      lineStart: r,
      curLine: s
    }), "res"), u = e.charCodeAt(t++);
    switch (u) {
      case 110:
        return l(`
`);
      case 114:
        return l("\r");
      case 120: {
        let c;
        return {
          code: c,
          pos: t
        } = Zg(e, t, r, s, 2, !1, o, a), l(c === null ? null : String.fromCharCode(c));
      }
      case 117: {
        let c;
        return {
          code: c,
          pos: t
        } = sR(e, t, r, s, o, a), l(c === null ? null : String.fromCodePoint(c));
      }
      case 116:
        return l("	");
      case 98:
        return l("\b");
      case 118:
        return l("\v");
      case 102:
        return l("\f");
      case 13:
        e.charCodeAt(t) === 10 && ++t;
      case 10:
        r = t, ++s;
      case 8232:
      case 8233:
        return l("");
      case 56:
      case 57:
        if (n)
          return l(null);
        a.strictNumericEscape(t - 1, r, s);
      default:
        if (u >= 48 && u <= 55) {
          let c = t - 1, p = e.slice(c, t + 2).match(/^[0-7]+/)[0], d = parseInt(p, 8);
          d > 255 && (p = p.slice(0, -1), d = parseInt(p, 8)), t += p.length - 1;
          let m = e.charCodeAt(t);
          if (p !== "0" || m === 56 || m === 57) {
            if (n)
              return l(null);
            a.strictNumericEscape(c, r, s);
          }
          return l(String.fromCharCode(d));
        }
        return l(String.fromCharCode(u));
    }
  }
  i(dre, "readEscapedChar");
  function Zg(e, t, r, s, n, a, o, l) {
    let u = t, c;
    return {
      n: c,
      pos: t
    } = rR(e, t, r, s, 16, n, a, !1, l, !o), c === null && (o ? l.invalidEscapeSequence(u, r, s) : t = u - 1), {
      code: c,
      pos: t
    };
  }
  i(Zg, "readHexChar");
  function rR(e, t, r, s, n, a, o, l, u, c) {
    let f = t, p = n === 16 ? tR.hex : tR.decBinOct, d = n === 16 ? Pp.hex : n === 10 ? Pp.dec : n === 8 ? Pp.oct : Pp.bin, m = !1, b = 0;
    for (let h = 0, g = a ?? 1 / 0; h < g; ++h) {
      let E = e.charCodeAt(t), D;
      if (E === 95 && l !== "bail") {
        let C = e.charCodeAt(t - 1), N = e.charCodeAt(t + 1);
        if (l) {
          if (Number.isNaN(N) || !d(N) || p.has(C) || p.has(N)) {
            if (c) return {
              n: null,
              pos: t
            };
            u.unexpectedNumericSeparator(t, r, s);
          }
        } else {
          if (c) return {
            n: null,
            pos: t
          };
          u.numericSeparatorInEscapeSequence(t, r, s);
        }
        ++t;
        continue;
      }
      if (E >= 97 ? D = E - 97 + 10 : E >= 65 ? D = E - 65 + 10 : cre(E) ? D = E - 48 : D = 1 / 0, D >= n) {
        if (D <= 9 && c)
          return {
            n: null,
            pos: t
          };
        if (D <= 9 && u.invalidDigit(t, r, s, n))
          D = 0;
        else if (o)
          D = 0, m = !0;
        else
          break;
      }
      ++t, b = b * n + D;
    }
    return t === f || a != null && t - f !== a || m ? {
      n: null,
      pos: t
    } : {
      n: b,
      pos: t
    };
  }
  i(rR, "readInt");
  function sR(e, t, r, s, n, a) {
    let o = e.charCodeAt(t), l;
    if (o === 123) {
      if (++t, {
        code: l,
        pos: t
      } = Zg(e, t, r, s, e.indexOf("}", t) - t, !0, n, a), ++t, l !== null && l > 1114111)
        if (n)
          a.invalidCodePoint(t, r, s);
        else
          return {
            code: null,
            pos: t
          };
    } else
      ({
        code: l,
        pos: t
      } = Zg(e, t, r, s, 4, !1, n, a));
    return {
      code: l,
      pos: t
    };
  }
  i(sR, "readCodePoint");
});

// ../node_modules/@babel/types/lib/constants/index.js
var Yi = y((Ye) => {
  "use strict";
  Object.defineProperty(Ye, "__esModule", {
    value: !0
  });
  Ye.UPDATE_OPERATORS = Ye.UNARY_OPERATORS = Ye.STRING_UNARY_OPERATORS = Ye.STATEMENT_OR_BLOCK_KEYS = Ye.NUMBER_UNARY_OPERATORS = Ye.NUMBER_BINARY_OPERATORS =
  Ye.NOT_LOCAL_BINDING = Ye.LOGICAL_OPERATORS = Ye.INHERIT_KEYS = Ye.FOR_INIT_KEYS = Ye.FLATTENABLE_KEYS = Ye.EQUALITY_BINARY_OPERATORS = Ye.
  COMPARISON_BINARY_OPERATORS = Ye.COMMENT_KEYS = Ye.BOOLEAN_UNARY_OPERATORS = Ye.BOOLEAN_NUMBER_BINARY_OPERATORS = Ye.BOOLEAN_BINARY_OPERATORS =
  Ye.BLOCK_SCOPED_SYMBOL = Ye.BINARY_OPERATORS = Ye.ASSIGNMENT_OPERATORS = void 0;
  var dXe = Ye.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"], hXe = Ye.FLATTENABLE_KEYS = ["body", "expressions"], mXe = Ye.
  FOR_INIT_KEYS = ["left", "init"], yXe = Ye.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"], hre = Ye.LOGICAL_OPERATORS =
  ["||", "&&", "??"], gXe = Ye.UPDATE_OPERATORS = ["++", "--"], mre = Ye.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="], yre = Ye.
  EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="], gre = Ye.COMPARISON_BINARY_OPERATORS = [...yre, "in", "instanceof"], bre = Ye.BOOLEAN_BINARY_OPERATORS =
  [...gre, ...mre], iR = Ye.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"], bXe = Ye.BINARY_OPERATORS =
  ["+", ...iR, ...bre, "|>"], EXe = Ye.ASSIGNMENT_OPERATORS = ["=", "+=", ...iR.map((e) => e + "="), ...hre.map((e) => e + "=")], Ere = Ye.BOOLEAN_UNARY_OPERATORS =
  ["delete", "!"], vre = Ye.NUMBER_UNARY_OPERATORS = ["+", "-", "~"], Sre = Ye.STRING_UNARY_OPERATORS = ["typeof"], vXe = Ye.UNARY_OPERATORS =
  ["void", "throw", ...Ere, ...vre, ...Sre], SXe = Ye.INHERIT_KEYS = {
    optional: ["typeAnnotation", "typeParameters", "returnType"],
    force: ["start", "loc", "end"]
  }, TXe = Ye.BLOCK_SCOPED_SYMBOL = Symbol.for("var used to be block scoped"), xXe = Ye.NOT_LOCAL_BINDING = Symbol.for("should not be consid\
ered a local binding");
});

// ../node_modules/@babel/types/lib/definitions/utils.js
var li = y((yt) => {
  "use strict";
  Object.defineProperty(yt, "__esModule", {
    value: !0
  });
  yt.VISITOR_KEYS = yt.NODE_PARENT_VALIDATIONS = yt.NODE_FIELDS = yt.FLIPPED_ALIAS_KEYS = yt.DEPRECATED_KEYS = yt.BUILDER_KEYS = yt.ALIAS_KEYS =
  void 0;
  yt.arrayOf = oR;
  yt.arrayOfType = lR;
  yt.assertEach = uR;
  yt.assertNodeOrValueType = Rre;
  yt.assertNodeType = tb;
  yt.assertOneOf = Nre;
  yt.assertOptionalChainStart = Fre;
  yt.assertShape = kre;
  yt.assertValueType = nb;
  yt.chain = cR;
  yt.default = fR;
  yt.defineAliasedType = Mre;
  yt.typeIs = wp;
  yt.validate = sb;
  yt.validateArrayOfType = Ore;
  yt.validateOptional = Ire;
  yt.validateOptionalType = _re;
  yt.validateType = Dre;
  var aR = Go(), Cp = Dp(), Tre = yt.VISITOR_KEYS = {}, xre = yt.ALIAS_KEYS = {}, eb = yt.FLIPPED_ALIAS_KEYS = {}, Pre = yt.NODE_FIELDS = {},
  Are = yt.BUILDER_KEYS = {}, Cre = yt.DEPRECATED_KEYS = {}, wre = yt.NODE_PARENT_VALIDATIONS = {};
  function Ap(e) {
    return Array.isArray(e) ? "array" : e === null ? "null" : typeof e;
  }
  i(Ap, "getType");
  function sb(e) {
    return {
      validate: e
    };
  }
  i(sb, "validate");
  function wp(e) {
    return typeof e == "string" ? tb(e) : tb(...e);
  }
  i(wp, "typeIs");
  function Dre(e) {
    return sb(wp(e));
  }
  i(Dre, "validateType");
  function Ire(e) {
    return {
      validate: e,
      optional: !0
    };
  }
  i(Ire, "validateOptional");
  function _re(e) {
    return {
      validate: wp(e),
      optional: !0
    };
  }
  i(_re, "validateOptionalType");
  function oR(e) {
    return cR(nb("array"), uR(e));
  }
  i(oR, "arrayOf");
  function lR(e) {
    return oR(wp(e));
  }
  i(lR, "arrayOfType");
  function Ore(e) {
    return sb(lR(e));
  }
  i(Ore, "validateArrayOfType");
  function uR(e) {
    function t(r, s, n) {
      if (Array.isArray(n))
        for (let a = 0; a < n.length; a++) {
          let o = `${s}[${a}]`, l = n[a];
          e(r, o, l), process.env.BABEL_TYPES_8_BREAKING && (0, Cp.validateChild)(r, o, l);
        }
    }
    return i(t, "validator"), t.each = e, t;
  }
  i(uR, "assertEach");
  function Nre(...e) {
    function t(r, s, n) {
      if (e.indexOf(n) < 0)
        throw new TypeError(`Property ${s} expected value to be one of ${JSON.stringify(e)} but got ${JSON.stringify(n)}`);
    }
    return i(t, "validate"), t.oneOf = e, t;
  }
  i(Nre, "assertOneOf");
  function tb(...e) {
    function t(r, s, n) {
      for (let a of e)
        if ((0, aR.default)(a, n)) {
          (0, Cp.validateChild)(r, s, n);
          return;
        }
      throw new TypeError(`Property ${s} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(n?.
      type)}`);
    }
    return i(t, "validate"), t.oneOfNodeTypes = e, t;
  }
  i(tb, "assertNodeType");
  function Rre(...e) {
    function t(r, s, n) {
      for (let a of e)
        if (Ap(n) === a || (0, aR.default)(a, n)) {
          (0, Cp.validateChild)(r, s, n);
          return;
        }
      throw new TypeError(`Property ${s} of ${r.type} expected node to be of a type ${JSON.stringify(e)} but instead got ${JSON.stringify(n?.
      type)}`);
    }
    return i(t, "validate"), t.oneOfNodeOrValueTypes = e, t;
  }
  i(Rre, "assertNodeOrValueType");
  function nb(e) {
    function t(r, s, n) {
      if (!(Ap(n) === e))
        throw new TypeError(`Property ${s} expected type of ${e} but got ${Ap(n)}`);
    }
    return i(t, "validate"), t.type = e, t;
  }
  i(nb, "assertValueType");
  function kre(e) {
    function t(r, s, n) {
      let a = [];
      for (let o of Object.keys(e))
        try {
          (0, Cp.validateField)(r, o, n[o], e[o]);
        } catch (l) {
          if (l instanceof TypeError) {
            a.push(l.message);
            continue;
          }
          throw l;
        }
      if (a.length)
        throw new TypeError(`Property ${s} of ${r.type} expected to have the following:
${a.join(`
`)}`);
    }
    return i(t, "validate"), t.shapeOf = e, t;
  }
  i(kre, "assertShape");
  function Fre() {
    function e(t) {
      var r;
      let s = t;
      for (; t; ) {
        let {
          type: n
        } = s;
        if (n === "OptionalCallExpression") {
          if (s.optional) return;
          s = s.callee;
          continue;
        }
        if (n === "OptionalMemberExpression") {
          if (s.optional) return;
          s = s.object;
          continue;
        }
        break;
      }
      throw new TypeError(`Non-optional ${t.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chai\
n from ${(r = s) == null ? void 0 : r.type}`);
    }
    return i(e, "validate"), e;
  }
  i(Fre, "assertOptionalChainStart");
  function cR(...e) {
    function t(...r) {
      for (let s of e)
        s(...r);
    }
    if (i(t, "validate"), t.chainOf = e, e.length >= 2 && "type" in e[0] && e[0].type === "array" && !("each" in e[1]))
      throw new Error('An assertValueType("array") validator can only be followed by an assertEach(...) validator.');
    return t;
  }
  i(cR, "chain");
  var Lre = ["aliases", "builder", "deprecatedAlias", "fields", "inherits", "visitor", "validate"], Bre = ["default", "optional", "deprecate\
d", "validate"], rb = {};
  function Mre(...e) {
    return (t, r = {}) => {
      let s = r.aliases;
      if (!s) {
        var n, a;
        r.inherits && (s = (n = rb[r.inherits].aliases) == null ? void 0 : n.slice()), (a = s) != null || (s = []), r.aliases = s;
      }
      let o = e.filter((l) => !s.includes(l));
      s.unshift(...o), fR(t, r);
    };
  }
  i(Mre, "defineAliasedType");
  function fR(e, t = {}) {
    let r = t.inherits && rb[t.inherits] || {}, s = t.fields;
    if (!s && (s = {}, r.fields)) {
      let l = Object.getOwnPropertyNames(r.fields);
      for (let u of l) {
        let c = r.fields[u], f = c.default;
        if (Array.isArray(f) ? f.length > 0 : f && typeof f == "object")
          throw new Error("field defaults can only be primitives or empty arrays currently");
        s[u] = {
          default: Array.isArray(f) ? [] : f,
          optional: c.optional,
          deprecated: c.deprecated,
          validate: c.validate
        };
      }
    }
    let n = t.visitor || r.visitor || [], a = t.aliases || r.aliases || [], o = t.builder || r.builder || t.visitor || [];
    for (let l of Object.keys(t))
      if (Lre.indexOf(l) === -1)
        throw new Error(`Unknown type option "${l}" on ${e}`);
    t.deprecatedAlias && (Cre[t.deprecatedAlias] = e);
    for (let l of n.concat(o))
      s[l] = s[l] || {};
    for (let l of Object.keys(s)) {
      let u = s[l];
      u.default !== void 0 && o.indexOf(l) === -1 && (u.optional = !0), u.default === void 0 ? u.default = null : !u.validate && u.default !=
      null && (u.validate = nb(Ap(u.default)));
      for (let c of Object.keys(u))
        if (Bre.indexOf(c) === -1)
          throw new Error(`Unknown field key "${c}" on ${e}.${l}`);
    }
    Tre[e] = t.visitor = n, Are[e] = t.builder = o, Pre[e] = t.fields = s, xre[e] = t.aliases = a, a.forEach((l) => {
      eb[l] = eb[l] || [], eb[l].push(e);
    }), t.validate && (wre[e] = t.validate), rb[e] = t;
  }
  i(fR, "defineType");
});

// ../node_modules/@babel/types/lib/definitions/core.js
var ab = y((gs) => {
  "use strict";
  Object.defineProperty(gs, "__esModule", {
    value: !0
  });
  gs.patternLikeCommon = gs.functionTypeAnnotationCommon = gs.functionDeclarationCommon = gs.functionCommon = gs.classMethodOrPropertyCommon =
  gs.classMethodOrDeclareMethodCommon = void 0;
  var rs = Go(), jre = Yo(), pR = Ko(), qre = nR(), Hu = Yi(), v = li(), ue = (0, v.defineAliasedType)("Standardized");
  ue("ArrayExpression", {
    fields: {
      elements: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeOrValueType)("null", "Expression", "Spread\
Element"))),
        default: process.env.BABEL_TYPES_8_BREAKING ? void 0 : []
      }
    },
    visitor: ["elements"],
    aliases: ["Expression"]
  });
  ue("AssignmentExpression", {
    fields: {
      operator: {
        validate: function() {
          if (!process.env.BABEL_TYPES_8_BREAKING)
            return (0, v.assertValueType)("string");
          let e = (0, v.assertOneOf)(...Hu.ASSIGNMENT_OPERATORS), t = (0, v.assertOneOf)("=");
          return function(r, s, n) {
            ((0, rs.default)("Pattern", r.left) ? t : e)(r, s, n);
          };
        }()
      },
      left: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.assertNodeType)("Identifier", "MemberExpression", "OptionalMemberExpression", "\
ArrayPattern", "ObjectPattern", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "TSNonNullExpression") : (0, v.assertNodeType)(
        "LVal", "OptionalMemberExpression")
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      }
    },
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Expression"]
  });
  ue("BinaryExpression", {
    builder: ["operator", "left", "right"],
    fields: {
      operator: {
        validate: (0, v.assertOneOf)(...Hu.BINARY_OPERATORS)
      },
      left: {
        validate: function() {
          let e = (0, v.assertNodeType)("Expression"), t = (0, v.assertNodeType)("Expression", "PrivateName");
          return Object.assign(function(s, n, a) {
            (s.operator === "in" ? t : e)(s, n, a);
          }, {
            oneOfNodeTypes: ["Expression", "PrivateName"]
          });
        }()
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      }
    },
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"]
  });
  ue("InterpreterDirective", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, v.assertValueType)("string")
      }
    }
  });
  ue("Directive", {
    visitor: ["value"],
    fields: {
      value: {
        validate: (0, v.assertNodeType)("DirectiveLiteral")
      }
    }
  });
  ue("DirectiveLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, v.assertValueType)("string")
      }
    }
  });
  ue("BlockStatement", {
    builder: ["body", "directives"],
    visitor: ["directives", "body"],
    fields: {
      directives: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Directive"))),
        default: []
      },
      body: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Statement")))
      }
    },
    aliases: ["Scopable", "BlockParent", "Block", "Statement"]
  });
  ue("BreakStatement", {
    visitor: ["label"],
    fields: {
      label: {
        validate: (0, v.assertNodeType)("Identifier"),
        optional: !0
      }
    },
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });
  ue("CallExpression", {
    visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
    builder: ["callee", "arguments"],
    aliases: ["Expression"],
    fields: Object.assign({
      callee: {
        validate: (0, v.assertNodeType)("Expression", "Super", "V8IntrinsicIdentifier")
      },
      arguments: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Expression", "SpreadElement", "JSXN\
amespacedName", "ArgumentPlaceholder")))
      }
    }, process.env.BABEL_TYPES_8_BREAKING ? {} : {
      optional: {
        validate: (0, v.assertOneOf)(!0, !1),
        optional: !0
      }
    }, {
      typeArguments: {
        validate: (0, v.assertNodeType)("TypeParameterInstantiation"),
        optional: !0
      },
      typeParameters: {
        validate: (0, v.assertNodeType)("TSTypeParameterInstantiation"),
        optional: !0
      }
    })
  });
  ue("CatchClause", {
    visitor: ["param", "body"],
    fields: {
      param: {
        validate: (0, v.assertNodeType)("Identifier", "ArrayPattern", "ObjectPattern"),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      }
    },
    aliases: ["Scopable", "BlockParent"]
  });
  ue("ConditionalExpression", {
    visitor: ["test", "consequent", "alternate"],
    fields: {
      test: {
        validate: (0, v.assertNodeType)("Expression")
      },
      consequent: {
        validate: (0, v.assertNodeType)("Expression")
      },
      alternate: {
        validate: (0, v.assertNodeType)("Expression")
      }
    },
    aliases: ["Expression", "Conditional"]
  });
  ue("ContinueStatement", {
    visitor: ["label"],
    fields: {
      label: {
        validate: (0, v.assertNodeType)("Identifier"),
        optional: !0
      }
    },
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });
  ue("DebuggerStatement", {
    aliases: ["Statement"]
  });
  ue("DoWhileStatement", {
    visitor: ["test", "body"],
    fields: {
      test: {
        validate: (0, v.assertNodeType)("Expression")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    },
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
  });
  ue("EmptyStatement", {
    aliases: ["Statement"]
  });
  ue("ExpressionStatement", {
    visitor: ["expression"],
    fields: {
      expression: {
        validate: (0, v.assertNodeType)("Expression")
      }
    },
    aliases: ["Statement", "ExpressionWrapper"]
  });
  ue("File", {
    builder: ["program", "comments", "tokens"],
    visitor: ["program"],
    fields: {
      program: {
        validate: (0, v.assertNodeType)("Program")
      },
      comments: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.assertEach)((0, v.assertNodeType)("CommentBlock", "CommentLine")) : Object.assign(
        () => {
        }, {
          each: {
            oneOfNodeTypes: ["CommentBlock", "CommentLine"]
          }
        }),
        optional: !0
      },
      tokens: {
        validate: (0, v.assertEach)(Object.assign(() => {
        }, {
          type: "any"
        })),
        optional: !0
      }
    }
  });
  ue("ForInStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.assertNodeType)("VariableDeclaration", "Identifier", "MemberExpression", "Array\
Pattern", "ObjectPattern", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "TSNonNullExpression") : (0, v.assertNodeType)("Var\
iableDeclaration", "LVal")
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  ue("ForStatement", {
    visitor: ["init", "test", "update", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
    fields: {
      init: {
        validate: (0, v.assertNodeType)("VariableDeclaration", "Expression"),
        optional: !0
      },
      test: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      update: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  var Xo = /* @__PURE__ */ i(() => ({
    params: {
      validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Identifier", "Pattern", "RestElement")))
    },
    generator: {
      default: !1
    },
    async: {
      default: !1
    }
  }), "functionCommon");
  gs.functionCommon = Xo;
  var qa = /* @__PURE__ */ i(() => ({
    returnType: {
      validate: (0, v.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
      optional: !0
    },
    typeParameters: {
      validate: (0, v.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
      optional: !0
    }
  }), "functionTypeAnnotationCommon");
  gs.functionTypeAnnotationCommon = qa;
  var dR = /* @__PURE__ */ i(() => Object.assign({}, Xo(), {
    declare: {
      validate: (0, v.assertValueType)("boolean"),
      optional: !0
    },
    id: {
      validate: (0, v.assertNodeType)("Identifier"),
      optional: !0
    }
  }), "functionDeclarationCommon");
  gs.functionDeclarationCommon = dR;
  ue("FunctionDeclaration", {
    builder: ["id", "params", "body", "generator", "async"],
    visitor: ["id", "params", "body", "returnType", "typeParameters"],
    fields: Object.assign({}, dR(), qa(), {
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      },
      predicate: {
        validate: (0, v.assertNodeType)("DeclaredPredicate", "InferredPredicate"),
        optional: !0
      }
    }),
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"],
    validate: function() {
      if (!process.env.BABEL_TYPES_8_BREAKING) return () => {
      };
      let e = (0, v.assertNodeType)("Identifier");
      return function(t, r, s) {
        (0, rs.default)("ExportDefaultDeclaration", t) || e(s, "id", s.id);
      };
    }()
  });
  ue("FunctionExpression", {
    inherits: "FunctionDeclaration",
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: Object.assign({}, Xo(), qa(), {
      id: {
        validate: (0, v.assertNodeType)("Identifier"),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      },
      predicate: {
        validate: (0, v.assertNodeType)("DeclaredPredicate", "InferredPredicate"),
        optional: !0
      }
    })
  });
  var zo = /* @__PURE__ */ i(() => ({
    typeAnnotation: {
      validate: (0, v.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
      optional: !0
    },
    optional: {
      validate: (0, v.assertValueType)("boolean"),
      optional: !0
    },
    decorators: {
      validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
      optional: !0
    }
  }), "patternLikeCommon");
  gs.patternLikeCommon = zo;
  ue("Identifier", {
    builder: ["name"],
    visitor: ["typeAnnotation", "decorators"],
    aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"],
    fields: Object.assign({}, zo(), {
      name: {
        validate: (0, v.chain)((0, v.assertValueType)("string"), Object.assign(function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && !(0, jre.default)(r, !1))
            throw new TypeError(`"${r}" is not a valid identifier name`);
        }, {
          type: "string"
        }))
      }
    }),
    validate(e, t, r) {
      if (!process.env.BABEL_TYPES_8_BREAKING) return;
      let s = /\.(\w+)$/.exec(t);
      if (!s) return;
      let [, n] = s, a = {
        computed: !1
      };
      if (n === "property") {
        if ((0, rs.default)("MemberExpression", e, a) || (0, rs.default)("OptionalMemberExpression", e, a)) return;
      } else if (n === "key") {
        if ((0, rs.default)("Property", e, a) || (0, rs.default)("Method", e, a)) return;
      } else if (n === "exported") {
        if ((0, rs.default)("ExportSpecifier", e)) return;
      } else if (n === "imported") {
        if ((0, rs.default)("ImportSpecifier", e, {
          imported: r
        })) return;
      } else if (n === "meta" && (0, rs.default)("MetaProperty", e, {
        meta: r
      }))
        return;
      if (((0, pR.isKeyword)(r.name) || (0, pR.isReservedWord)(r.name, !1)) && r.name !== "this")
        throw new TypeError(`"${r.name}" is not a valid identifier`);
    }
  });
  ue("IfStatement", {
    visitor: ["test", "consequent", "alternate"],
    aliases: ["Statement", "Conditional"],
    fields: {
      test: {
        validate: (0, v.assertNodeType)("Expression")
      },
      consequent: {
        validate: (0, v.assertNodeType)("Statement")
      },
      alternate: {
        optional: !0,
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  ue("LabeledStatement", {
    visitor: ["label", "body"],
    aliases: ["Statement"],
    fields: {
      label: {
        validate: (0, v.assertNodeType)("Identifier")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  ue("StringLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, v.assertValueType)("string")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  ue("NumericLiteral", {
    builder: ["value"],
    deprecatedAlias: "NumberLiteral",
    fields: {
      value: {
        validate: (0, v.chain)((0, v.assertValueType)("number"), Object.assign(function(e, t, r) {
          if (1 / r < 0 || !Number.isFinite(r)) {
            let s = new Error(`NumericLiterals must be non-negative finite numbers. You can use t.valueToNode(${r}) instead.`);
          }
        }, {
          type: "number"
        }))
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  ue("NullLiteral", {
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  ue("BooleanLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, v.assertValueType)("boolean")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  ue("RegExpLiteral", {
    builder: ["pattern", "flags"],
    deprecatedAlias: "RegexLiteral",
    aliases: ["Expression", "Pureish", "Literal"],
    fields: {
      pattern: {
        validate: (0, v.assertValueType)("string")
      },
      flags: {
        validate: (0, v.chain)((0, v.assertValueType)("string"), Object.assign(function(e, t, r) {
          if (!process.env.BABEL_TYPES_8_BREAKING) return;
          let s = /[^gimsuy]/.exec(r);
          if (s)
            throw new TypeError(`"${s[0]}" is not a valid RegExp flag`);
        }, {
          type: "string"
        })),
        default: ""
      }
    }
  });
  ue("LogicalExpression", {
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"],
    fields: {
      operator: {
        validate: (0, v.assertOneOf)(...Hu.LOGICAL_OPERATORS)
      },
      left: {
        validate: (0, v.assertNodeType)("Expression")
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("MemberExpression", {
    builder: ["object", "property", "computed", ...process.env.BABEL_TYPES_8_BREAKING ? [] : ["optional"]],
    visitor: ["object", "property"],
    aliases: ["Expression", "LVal"],
    fields: Object.assign({
      object: {
        validate: (0, v.assertNodeType)("Expression", "Super")
      },
      property: {
        validate: function() {
          let e = (0, v.assertNodeType)("Identifier", "PrivateName"), t = (0, v.assertNodeType)("Expression"), r = /* @__PURE__ */ i(function(s, n, a) {
            (s.computed ? t : e)(s, n, a);
          }, "validator");
          return r.oneOfNodeTypes = ["Expression", "Identifier", "PrivateName"], r;
        }()
      },
      computed: {
        default: !1
      }
    }, process.env.BABEL_TYPES_8_BREAKING ? {} : {
      optional: {
        validate: (0, v.assertOneOf)(!0, !1),
        optional: !0
      }
    })
  });
  ue("NewExpression", {
    inherits: "CallExpression"
  });
  ue("Program", {
    visitor: ["directives", "body"],
    builder: ["body", "directives", "sourceType", "interpreter"],
    fields: {
      sourceType: {
        validate: (0, v.assertOneOf)("script", "module"),
        default: "script"
      },
      interpreter: {
        validate: (0, v.assertNodeType)("InterpreterDirective"),
        default: null,
        optional: !0
      },
      directives: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Directive"))),
        default: []
      },
      body: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Statement")))
      }
    },
    aliases: ["Scopable", "BlockParent", "Block"]
  });
  ue("ObjectExpression", {
    visitor: ["properties"],
    aliases: ["Expression"],
    fields: {
      properties: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ObjectMethod", "ObjectProperty", "S\
preadElement")))
      }
    }
  });
  ue("ObjectMethod", {
    builder: ["kind", "key", "params", "body", "computed", "generator", "async"],
    fields: Object.assign({}, Xo(), qa(), {
      kind: Object.assign({
        validate: (0, v.assertOneOf)("method", "get", "set")
      }, process.env.BABEL_TYPES_8_BREAKING ? {} : {
        default: "method"
      }),
      computed: {
        default: !1
      },
      key: {
        validate: function() {
          let e = (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral"), t = (0, v.assertNodeType)("Expres\
sion"), r = /* @__PURE__ */ i(function(s, n, a) {
            (s.computed ? t : e)(s, n, a);
          }, "validator");
          return r.oneOfNodeTypes = ["Expression", "Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral"], r;
        }()
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      }
    }),
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
  });
  ue("ObjectProperty", {
    builder: ["key", "value", "computed", "shorthand", ...process.env.BABEL_TYPES_8_BREAKING ? [] : ["decorators"]],
    fields: {
      computed: {
        default: !1
      },
      key: {
        validate: function() {
          let e = (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral", "DecimalLiteral", "PrivateName"), t = (0, v.
          assertNodeType)("Expression");
          return Object.assign(function(s, n, a) {
            (s.computed ? t : e)(s, n, a);
          }, {
            oneOfNodeTypes: ["Expression", "Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral", "DecimalLiteral", "PrivateName"]
          });
        }()
      },
      value: {
        validate: (0, v.assertNodeType)("Expression", "PatternLike")
      },
      shorthand: {
        validate: (0, v.chain)((0, v.assertValueType)("boolean"), Object.assign(function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && r && e.computed)
            throw new TypeError("Property shorthand of ObjectProperty cannot be true if computed is true");
        }, {
          type: "boolean"
        }), function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && r && !(0, rs.default)("Identifier", e.key))
            throw new TypeError("Property shorthand of ObjectProperty cannot be true if key is not an Identifier");
        }),
        default: !1
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      }
    },
    visitor: ["key", "value", "decorators"],
    aliases: ["UserWhitespacable", "Property", "ObjectMember"],
    validate: function() {
      let e = (0, v.assertNodeType)("Identifier", "Pattern", "TSAsExpression", "TSSatisfiesExpression", "TSNonNullExpression", "TSTypeAssert\
ion"), t = (0, v.assertNodeType)("Expression");
      return function(r, s, n) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;
        ((0, rs.default)("ObjectPattern", r) ? e : t)(n, "value", n.value);
      };
    }()
  });
  ue("RestElement", {
    visitor: ["argument", "typeAnnotation"],
    builder: ["argument"],
    aliases: ["LVal", "PatternLike"],
    deprecatedAlias: "RestProperty",
    fields: Object.assign({}, zo(), {
      argument: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.assertNodeType)("Identifier", "ArrayPattern", "ObjectPattern", "MemberExpressio\
n", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "TSNonNullExpression") : (0, v.assertNodeType)("LVal")
      }
    }),
    validate(e, t) {
      if (!process.env.BABEL_TYPES_8_BREAKING) return;
      let r = /(\w+)\[(\d+)\]/.exec(t);
      if (!r) throw new Error("Internal Babel error: malformed key.");
      let [, s, n] = r;
      if (e[s].length > +n + 1)
        throw new TypeError(`RestElement must be last element of ${s}`);
    }
  });
  ue("ReturnStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {
      argument: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      }
    }
  });
  ue("SequenceExpression", {
    visitor: ["expressions"],
    fields: {
      expressions: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Expression")))
      }
    },
    aliases: ["Expression"]
  });
  ue("ParenthesizedExpression", {
    visitor: ["expression"],
    aliases: ["Expression", "ExpressionWrapper"],
    fields: {
      expression: {
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("SwitchCase", {
    visitor: ["test", "consequent"],
    fields: {
      test: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      consequent: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Statement")))
      }
    }
  });
  ue("SwitchStatement", {
    visitor: ["discriminant", "cases"],
    aliases: ["Statement", "BlockParent", "Scopable"],
    fields: {
      discriminant: {
        validate: (0, v.assertNodeType)("Expression")
      },
      cases: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("SwitchCase")))
      }
    }
  });
  ue("ThisExpression", {
    aliases: ["Expression"]
  });
  ue("ThrowStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {
      argument: {
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("TryStatement", {
    visitor: ["block", "handler", "finalizer"],
    aliases: ["Statement"],
    fields: {
      block: {
        validate: (0, v.chain)((0, v.assertNodeType)("BlockStatement"), Object.assign(function(e) {
          if (process.env.BABEL_TYPES_8_BREAKING && !e.handler && !e.finalizer)
            throw new TypeError("TryStatement expects either a handler or finalizer, or both");
        }, {
          oneOfNodeTypes: ["BlockStatement"]
        }))
      },
      handler: {
        optional: !0,
        validate: (0, v.assertNodeType)("CatchClause")
      },
      finalizer: {
        optional: !0,
        validate: (0, v.assertNodeType)("BlockStatement")
      }
    }
  });
  ue("UnaryExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {
        default: !0
      },
      argument: {
        validate: (0, v.assertNodeType)("Expression")
      },
      operator: {
        validate: (0, v.assertOneOf)(...Hu.UNARY_OPERATORS)
      }
    },
    visitor: ["argument"],
    aliases: ["UnaryLike", "Expression"]
  });
  ue("UpdateExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {
        default: !1
      },
      argument: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.assertNodeType)("Identifier", "MemberExpression") : (0, v.assertNodeType)("Expr\
ession")
      },
      operator: {
        validate: (0, v.assertOneOf)(...Hu.UPDATE_OPERATORS)
      }
    },
    visitor: ["argument"],
    aliases: ["Expression"]
  });
  ue("VariableDeclaration", {
    builder: ["kind", "declarations"],
    visitor: ["declarations"],
    aliases: ["Statement", "Declaration"],
    fields: {
      declare: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      kind: {
        validate: (0, v.assertOneOf)("var", "let", "const", "using", "await using")
      },
      declarations: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("VariableDeclarator")))
      }
    },
    validate(e, t, r) {
      if (process.env.BABEL_TYPES_8_BREAKING && (0, rs.default)("ForXStatement", e, {
        left: r
      }) && r.declarations.length !== 1)
        throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${e.type}`);
    }
  });
  ue("VariableDeclarator", {
    visitor: ["id", "init"],
    fields: {
      id: {
        validate: function() {
          if (!process.env.BABEL_TYPES_8_BREAKING)
            return (0, v.assertNodeType)("LVal");
          let e = (0, v.assertNodeType)("Identifier", "ArrayPattern", "ObjectPattern"), t = (0, v.assertNodeType)("Identifier");
          return function(r, s, n) {
            (r.init ? e : t)(r, s, n);
          };
        }()
      },
      definite: {
        optional: !0,
        validate: (0, v.assertValueType)("boolean")
      },
      init: {
        optional: !0,
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("WhileStatement", {
    visitor: ["test", "body"],
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
    fields: {
      test: {
        validate: (0, v.assertNodeType)("Expression")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  ue("WithStatement", {
    visitor: ["object", "body"],
    aliases: ["Statement"],
    fields: {
      object: {
        validate: (0, v.assertNodeType)("Expression")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      }
    }
  });
  ue("AssignmentPattern", {
    visitor: ["left", "right", "decorators"],
    builder: ["left", "right"],
    aliases: ["Pattern", "PatternLike", "LVal"],
    fields: Object.assign({}, zo(), {
      left: {
        validate: (0, v.assertNodeType)("Identifier", "ObjectPattern", "ArrayPattern", "MemberExpression", "TSAsExpression", "TSSatisfiesExp\
ression", "TSTypeAssertion", "TSNonNullExpression")
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      }
    })
  });
  ue("ArrayPattern", {
    visitor: ["elements", "typeAnnotation"],
    builder: ["elements"],
    aliases: ["Pattern", "PatternLike", "LVal"],
    fields: Object.assign({}, zo(), {
      elements: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeOrValueType)("null", "PatternLike", "LVal")))
      }
    })
  });
  ue("ArrowFunctionExpression", {
    builder: ["params", "body", "async"],
    visitor: ["params", "body", "returnType", "typeParameters"],
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: Object.assign({}, Xo(), qa(), {
      expression: {
        validate: (0, v.assertValueType)("boolean")
      },
      body: {
        validate: (0, v.assertNodeType)("BlockStatement", "Expression")
      },
      predicate: {
        validate: (0, v.assertNodeType)("DeclaredPredicate", "InferredPredicate"),
        optional: !0
      }
    })
  });
  ue("ClassBody", {
    visitor: ["body"],
    fields: {
      body: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ClassMethod", "ClassPrivateMethod",
        "ClassProperty", "ClassPrivateProperty", "ClassAccessorProperty", "TSDeclareMethod", "TSIndexSignature", "StaticBlock")))
      }
    }
  });
  ue("ClassExpression", {
    builder: ["id", "superClass", "body", "decorators"],
    visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
    aliases: ["Scopable", "Class", "Expression"],
    fields: {
      id: {
        validate: (0, v.assertNodeType)("Identifier"),
        optional: !0
      },
      typeParameters: {
        validate: (0, v.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("ClassBody")
      },
      superClass: {
        optional: !0,
        validate: (0, v.assertNodeType)("Expression")
      },
      superTypeParameters: {
        validate: (0, v.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
        optional: !0
      },
      implements: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("TSExpressionWithTypeArguments", "Cl\
assImplements"))),
        optional: !0
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      mixins: {
        validate: (0, v.assertNodeType)("InterfaceExtends"),
        optional: !0
      }
    }
  });
  ue("ClassDeclaration", {
    inherits: "ClassExpression",
    aliases: ["Scopable", "Class", "Statement", "Declaration"],
    fields: {
      id: {
        validate: (0, v.assertNodeType)("Identifier"),
        optional: !0
      },
      typeParameters: {
        validate: (0, v.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
        optional: !0
      },
      body: {
        validate: (0, v.assertNodeType)("ClassBody")
      },
      superClass: {
        optional: !0,
        validate: (0, v.assertNodeType)("Expression")
      },
      superTypeParameters: {
        validate: (0, v.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
        optional: !0
      },
      implements: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("TSExpressionWithTypeArguments", "Cl\
assImplements"))),
        optional: !0
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      mixins: {
        validate: (0, v.assertNodeType)("InterfaceExtends"),
        optional: !0
      },
      declare: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      abstract: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      }
    },
    validate: function() {
      let e = (0, v.assertNodeType)("Identifier");
      return function(t, r, s) {
        process.env.BABEL_TYPES_8_BREAKING && ((0, rs.default)("ExportDefaultDeclaration", t) || e(s, "id", s.id));
      };
    }()
  });
  ue("ExportAllDeclaration", {
    builder: ["source"],
    visitor: ["source", "attributes", "assertions"],
    aliases: ["Statement", "Declaration", "ImportOrExportDeclaration", "ExportDeclaration"],
    fields: {
      source: {
        validate: (0, v.assertNodeType)("StringLiteral")
      },
      exportKind: (0, v.validateOptional)((0, v.assertOneOf)("type", "value")),
      attributes: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      },
      assertions: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      }
    }
  });
  ue("ExportDefaultDeclaration", {
    visitor: ["declaration"],
    aliases: ["Statement", "Declaration", "ImportOrExportDeclaration", "ExportDeclaration"],
    fields: {
      declaration: {
        validate: (0, v.assertNodeType)("TSDeclareFunction", "FunctionDeclaration", "ClassDeclaration", "Expression")
      },
      exportKind: (0, v.validateOptional)((0, v.assertOneOf)("value"))
    }
  });
  ue("ExportNamedDeclaration", {
    builder: ["declaration", "specifiers", "source"],
    visitor: ["declaration", "specifiers", "source", "attributes", "assertions"],
    aliases: ["Statement", "Declaration", "ImportOrExportDeclaration", "ExportDeclaration"],
    fields: {
      declaration: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertNodeType)("Declaration"), Object.assign(function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && r && e.specifiers.length)
            throw new TypeError("Only declaration or specifiers is allowed on ExportNamedDeclaration");
        }, {
          oneOfNodeTypes: ["Declaration"]
        }), function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && r && e.source)
            throw new TypeError("Cannot export a declaration from a source");
        })
      },
      attributes: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      },
      assertions: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      },
      specifiers: {
        default: [],
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)(function() {
          let e = (0, v.assertNodeType)("ExportSpecifier", "ExportDefaultSpecifier", "ExportNamespaceSpecifier"), t = (0, v.assertNodeType)(
          "ExportSpecifier");
          return process.env.BABEL_TYPES_8_BREAKING ? function(r, s, n) {
            (r.source ? e : t)(r, s, n);
          } : e;
        }()))
      },
      source: {
        validate: (0, v.assertNodeType)("StringLiteral"),
        optional: !0
      },
      exportKind: (0, v.validateOptional)((0, v.assertOneOf)("type", "value"))
    }
  });
  ue("ExportSpecifier", {
    visitor: ["local", "exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, v.assertNodeType)("Identifier")
      },
      exported: {
        validate: (0, v.assertNodeType)("Identifier", "StringLiteral")
      },
      exportKind: {
        validate: (0, v.assertOneOf)("type", "value"),
        optional: !0
      }
    }
  });
  ue("ForOfStatement", {
    visitor: ["left", "right", "body"],
    builder: ["left", "right", "body", "await"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {
        validate: function() {
          if (!process.env.BABEL_TYPES_8_BREAKING)
            return (0, v.assertNodeType)("VariableDeclaration", "LVal");
          let e = (0, v.assertNodeType)("VariableDeclaration"), t = (0, v.assertNodeType)("Identifier", "MemberExpression", "ArrayPattern", "\
ObjectPattern", "TSAsExpression", "TSSatisfiesExpression", "TSTypeAssertion", "TSNonNullExpression");
          return function(r, s, n) {
            (0, rs.default)("VariableDeclaration", n) ? e(r, s, n) : t(r, s, n);
          };
        }()
      },
      right: {
        validate: (0, v.assertNodeType)("Expression")
      },
      body: {
        validate: (0, v.assertNodeType)("Statement")
      },
      await: {
        default: !1
      }
    }
  });
  ue("ImportDeclaration", {
    builder: ["specifiers", "source"],
    visitor: ["specifiers", "source", "attributes", "assertions"],
    aliases: ["Statement", "Declaration", "ImportOrExportDeclaration"],
    fields: {
      attributes: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      },
      assertions: {
        optional: !0,
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportAttribute")))
      },
      module: {
        optional: !0,
        validate: (0, v.assertValueType)("boolean")
      },
      phase: {
        default: null,
        validate: (0, v.assertOneOf)("source", "defer")
      },
      specifiers: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("ImportSpecifier", "ImportDefaultSpe\
cifier", "ImportNamespaceSpecifier")))
      },
      source: {
        validate: (0, v.assertNodeType)("StringLiteral")
      },
      importKind: {
        validate: (0, v.assertOneOf)("type", "typeof", "value"),
        optional: !0
      }
    }
  });
  ue("ImportDefaultSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, v.assertNodeType)("Identifier")
      }
    }
  });
  ue("ImportNamespaceSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, v.assertNodeType)("Identifier")
      }
    }
  });
  ue("ImportSpecifier", {
    visitor: ["local", "imported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, v.assertNodeType)("Identifier")
      },
      imported: {
        validate: (0, v.assertNodeType)("Identifier", "StringLiteral")
      },
      importKind: {
        validate: (0, v.assertOneOf)("type", "typeof", "value"),
        optional: !0
      }
    }
  });
  ue("ImportExpression", {
    visitor: ["source", "options"],
    aliases: ["Expression"],
    fields: {
      phase: {
        default: null,
        validate: (0, v.assertOneOf)("source", "defer")
      },
      source: {
        validate: (0, v.assertNodeType)("Expression")
      },
      options: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      }
    }
  });
  ue("MetaProperty", {
    visitor: ["meta", "property"],
    aliases: ["Expression"],
    fields: {
      meta: {
        validate: (0, v.chain)((0, v.assertNodeType)("Identifier"), Object.assign(function(e, t, r) {
          if (!process.env.BABEL_TYPES_8_BREAKING) return;
          let s;
          switch (r.name) {
            case "function":
              s = "sent";
              break;
            case "new":
              s = "target";
              break;
            case "import":
              s = "meta";
              break;
          }
          if (!(0, rs.default)("Identifier", e.property, {
            name: s
          }))
            throw new TypeError("Unrecognised MetaProperty");
        }, {
          oneOfNodeTypes: ["Identifier"]
        }))
      },
      property: {
        validate: (0, v.assertNodeType)("Identifier")
      }
    }
  });
  var Ip = /* @__PURE__ */ i(() => ({
    abstract: {
      validate: (0, v.assertValueType)("boolean"),
      optional: !0
    },
    accessibility: {
      validate: (0, v.assertOneOf)("public", "private", "protected"),
      optional: !0
    },
    static: {
      default: !1
    },
    override: {
      default: !1
    },
    computed: {
      default: !1
    },
    optional: {
      validate: (0, v.assertValueType)("boolean"),
      optional: !0
    },
    key: {
      validate: (0, v.chain)(function() {
        let e = (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral"), t = (0, v.assertNodeType)("Expressi\
on");
        return function(r, s, n) {
          (r.computed ? t : e)(r, s, n);
        };
      }(), (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral", "Expression"))
    }
  }), "classMethodOrPropertyCommon");
  gs.classMethodOrPropertyCommon = Ip;
  var ib = /* @__PURE__ */ i(() => Object.assign({}, Xo(), Ip(), {
    params: {
      validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Identifier", "Pattern", "RestElement",
      "TSParameterProperty")))
    },
    kind: {
      validate: (0, v.assertOneOf)("get", "set", "method", "constructor"),
      default: "method"
    },
    access: {
      validate: (0, v.chain)((0, v.assertValueType)("string"), (0, v.assertOneOf)("public", "private", "protected")),
      optional: !0
    },
    decorators: {
      validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
      optional: !0
    }
  }), "classMethodOrDeclareMethodCommon");
  gs.classMethodOrDeclareMethodCommon = ib;
  ue("ClassMethod", {
    aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
    builder: ["kind", "key", "params", "body", "computed", "static", "generator", "async"],
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    fields: Object.assign({}, ib(), qa(), {
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      }
    })
  });
  ue("ObjectPattern", {
    visitor: ["properties", "typeAnnotation", "decorators"],
    builder: ["properties"],
    aliases: ["Pattern", "PatternLike", "LVal"],
    fields: Object.assign({}, zo(), {
      properties: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("RestElement", "ObjectProperty")))
      }
    })
  });
  ue("SpreadElement", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    deprecatedAlias: "SpreadProperty",
    fields: {
      argument: {
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("Super", {
    aliases: ["Expression"]
  });
  ue("TaggedTemplateExpression", {
    visitor: ["tag", "quasi", "typeParameters"],
    builder: ["tag", "quasi"],
    aliases: ["Expression"],
    fields: {
      tag: {
        validate: (0, v.assertNodeType)("Expression")
      },
      quasi: {
        validate: (0, v.assertNodeType)("TemplateLiteral")
      },
      typeParameters: {
        validate: (0, v.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
        optional: !0
      }
    }
  });
  ue("TemplateElement", {
    builder: ["value", "tail"],
    fields: {
      value: {
        validate: (0, v.chain)((0, v.assertShape)({
          raw: {
            validate: (0, v.assertValueType)("string")
          },
          cooked: {
            validate: (0, v.assertValueType)("string"),
            optional: !0
          }
        }), /* @__PURE__ */ i(function(t) {
          let r = t.value.raw, s = !1, n = /* @__PURE__ */ i(() => {
            throw new Error("Internal @babel/types error.");
          }, "error"), {
            str: a,
            firstInvalidLoc: o
          } = (0, qre.readStringContents)("template", r, 0, 0, 0, {
            unterminated() {
              s = !0;
            },
            strictNumericEscape: n,
            invalidEscapeSequence: n,
            numericSeparatorInEscapeSequence: n,
            unexpectedNumericSeparator: n,
            invalidDigit: n,
            invalidCodePoint: n
          });
          if (!s) throw new Error("Invalid raw");
          t.value.cooked = o ? null : a;
        }, "templateElementCookedValidator"))
      },
      tail: {
        default: !1
      }
    }
  });
  ue("TemplateLiteral", {
    visitor: ["quasis", "expressions"],
    aliases: ["Expression", "Literal"],
    fields: {
      quasis: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("TemplateElement")))
      },
      expressions: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Expression", "TSType")), function(e, t, r) {
          if (e.quasis.length !== r.length + 1)
            throw new TypeError(`Number of ${e.type} quasis should be exactly one more than the number of expressions.
Expected ${r.length + 1} quasis but got ${e.quasis.length}`);
        })
      }
    }
  });
  ue("YieldExpression", {
    builder: ["argument", "delegate"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {
      delegate: {
        validate: (0, v.chain)((0, v.assertValueType)("boolean"), Object.assign(function(e, t, r) {
          if (process.env.BABEL_TYPES_8_BREAKING && r && !e.argument)
            throw new TypeError("Property delegate of YieldExpression cannot be true if there is no argument");
        }, {
          type: "boolean"
        })),
        default: !1
      },
      argument: {
        optional: !0,
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("AwaitExpression", {
    builder: ["argument"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {
      argument: {
        validate: (0, v.assertNodeType)("Expression")
      }
    }
  });
  ue("Import", {
    aliases: ["Expression"]
  });
  ue("BigIntLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, v.assertValueType)("string")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  ue("ExportNamespaceSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      exported: {
        validate: (0, v.assertNodeType)("Identifier")
      }
    }
  });
  ue("OptionalMemberExpression", {
    builder: ["object", "property", "computed", "optional"],
    visitor: ["object", "property"],
    aliases: ["Expression"],
    fields: {
      object: {
        validate: (0, v.assertNodeType)("Expression")
      },
      property: {
        validate: function() {
          let e = (0, v.assertNodeType)("Identifier"), t = (0, v.assertNodeType)("Expression");
          return Object.assign(function(s, n, a) {
            (s.computed ? t : e)(s, n, a);
          }, {
            oneOfNodeTypes: ["Expression", "Identifier"]
          });
        }()
      },
      computed: {
        default: !1
      },
      optional: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.chain)((0, v.assertValueType)("boolean"), (0, v.assertOptionalChainStart)()) : (0, v.
        assertValueType)("boolean")
      }
    }
  });
  ue("OptionalCallExpression", {
    visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
    builder: ["callee", "arguments", "optional"],
    aliases: ["Expression"],
    fields: {
      callee: {
        validate: (0, v.assertNodeType)("Expression")
      },
      arguments: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Expression", "SpreadElement", "JSXN\
amespacedName", "ArgumentPlaceholder")))
      },
      optional: {
        validate: process.env.BABEL_TYPES_8_BREAKING ? (0, v.chain)((0, v.assertValueType)("boolean"), (0, v.assertOptionalChainStart)()) : (0, v.
        assertValueType)("boolean")
      },
      typeArguments: {
        validate: (0, v.assertNodeType)("TypeParameterInstantiation"),
        optional: !0
      },
      typeParameters: {
        validate: (0, v.assertNodeType)("TSTypeParameterInstantiation"),
        optional: !0
      }
    }
  });
  ue("ClassProperty", {
    visitor: ["key", "value", "typeAnnotation", "decorators"],
    builder: ["key", "value", "typeAnnotation", "decorators", "computed", "static"],
    aliases: ["Property"],
    fields: Object.assign({}, Ip(), {
      value: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      definite: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      typeAnnotation: {
        validate: (0, v.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
        optional: !0
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      readonly: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      declare: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      variance: {
        validate: (0, v.assertNodeType)("Variance"),
        optional: !0
      }
    })
  });
  ue("ClassAccessorProperty", {
    visitor: ["key", "value", "typeAnnotation", "decorators"],
    builder: ["key", "value", "typeAnnotation", "decorators", "computed", "static"],
    aliases: ["Property", "Accessor"],
    fields: Object.assign({}, Ip(), {
      key: {
        validate: (0, v.chain)(function() {
          let e = (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral", "PrivateName"), t = (0, v.assertNodeType)(
          "Expression");
          return function(r, s, n) {
            (r.computed ? t : e)(r, s, n);
          };
        }(), (0, v.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "BigIntLiteral", "Expression", "PrivateName"))
      },
      value: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      definite: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      typeAnnotation: {
        validate: (0, v.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
        optional: !0
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      readonly: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      declare: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      variance: {
        validate: (0, v.assertNodeType)("Variance"),
        optional: !0
      }
    })
  });
  ue("ClassPrivateProperty", {
    visitor: ["key", "value", "decorators", "typeAnnotation"],
    builder: ["key", "value", "decorators", "static"],
    aliases: ["Property", "Private"],
    fields: {
      key: {
        validate: (0, v.assertNodeType)("PrivateName")
      },
      value: {
        validate: (0, v.assertNodeType)("Expression"),
        optional: !0
      },
      typeAnnotation: {
        validate: (0, v.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
        optional: !0
      },
      decorators: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Decorator"))),
        optional: !0
      },
      static: {
        validate: (0, v.assertValueType)("boolean"),
        default: !1
      },
      readonly: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      definite: {
        validate: (0, v.assertValueType)("boolean"),
        optional: !0
      },
      variance: {
        validate: (0, v.assertNodeType)("Variance"),
        optional: !0
      }
    }
  });
  ue("ClassPrivateMethod", {
    builder: ["kind", "key", "params", "body", "static"],
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method", "Private"],
    fields: Object.assign({}, ib(), qa(), {
      kind: {
        validate: (0, v.assertOneOf)("get", "set", "method"),
        default: "method"
      },
      key: {
        validate: (0, v.assertNodeType)("PrivateName")
      },
      body: {
        validate: (0, v.assertNodeType)("BlockStatement")
      }
    })
  });
  ue("PrivateName", {
    visitor: ["id"],
    aliases: ["Private"],
    fields: {
      id: {
        validate: (0, v.assertNodeType)("Identifier")
      }
    }
  });
  ue("StaticBlock", {
    visitor: ["body"],
    fields: {
      body: {
        validate: (0, v.chain)((0, v.assertValueType)("array"), (0, v.assertEach)((0, v.assertNodeType)("Statement")))
      }
    },
    aliases: ["Scopable", "BlockParent", "FunctionParent"]
  });
});

// ../node_modules/@babel/types/lib/definitions/flow.js
var hR = y(() => {
  "use strict";
  var $ = li(), xe = (0, $.defineAliasedType)("Flow"), ob = /* @__PURE__ */ i((e) => {
    let t = e === "DeclareClass";
    xe(e, {
      builder: ["id", "typeParameters", "extends", "body"],
      visitor: ["id", "typeParameters", "extends", ...t ? ["mixins", "implements"] : [], "body"],
      aliases: ["FlowDeclaration", "Statement", "Declaration"],
      fields: Object.assign({
        id: (0, $.validateType)("Identifier"),
        typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
        extends: (0, $.validateOptional)((0, $.arrayOfType)("InterfaceExtends"))
      }, t ? {
        mixins: (0, $.validateOptional)((0, $.arrayOfType)("InterfaceExtends")),
        implements: (0, $.validateOptional)((0, $.arrayOfType)("ClassImplements"))
      } : {}, {
        body: (0, $.validateType)("ObjectTypeAnnotation")
      })
    });
  }, "defineInterfaceishType");
  xe("AnyTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("ArrayTypeAnnotation", {
    visitor: ["elementType"],
    aliases: ["FlowType"],
    fields: {
      elementType: (0, $.validateType)("FlowType")
    }
  });
  xe("BooleanTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("BooleanLiteralTypeAnnotation", {
    builder: ["value"],
    aliases: ["FlowType"],
    fields: {
      value: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("NullLiteralTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("ClassImplements", {
    visitor: ["id", "typeParameters"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      typeParameters: (0, $.validateOptionalType)("TypeParameterInstantiation")
    }
  });
  ob("DeclareClass");
  xe("DeclareFunction", {
    visitor: ["id"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      predicate: (0, $.validateOptionalType)("DeclaredPredicate")
    }
  });
  ob("DeclareInterface");
  xe("DeclareModule", {
    builder: ["id", "body", "kind"],
    visitor: ["id", "body"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)(["Identifier", "StringLiteral"]),
      body: (0, $.validateType)("BlockStatement"),
      kind: (0, $.validateOptional)((0, $.assertOneOf)("CommonJS", "ES"))
    }
  });
  xe("DeclareModuleExports", {
    visitor: ["typeAnnotation"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      typeAnnotation: (0, $.validateType)("TypeAnnotation")
    }
  });
  xe("DeclareTypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
      right: (0, $.validateType)("FlowType")
    }
  });
  xe("DeclareOpaqueType", {
    visitor: ["id", "typeParameters", "supertype"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
      supertype: (0, $.validateOptionalType)("FlowType"),
      impltype: (0, $.validateOptionalType)("FlowType")
    }
  });
  xe("DeclareVariable", {
    visitor: ["id"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier")
    }
  });
  xe("DeclareExportDeclaration", {
    visitor: ["declaration", "specifiers", "source"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      declaration: (0, $.validateOptionalType)("Flow"),
      specifiers: (0, $.validateOptional)((0, $.arrayOfType)(["ExportSpecifier", "ExportNamespaceSpecifier"])),
      source: (0, $.validateOptionalType)("StringLiteral"),
      default: (0, $.validateOptional)((0, $.assertValueType)("boolean"))
    }
  });
  xe("DeclareExportAllDeclaration", {
    visitor: ["source"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      source: (0, $.validateType)("StringLiteral"),
      exportKind: (0, $.validateOptional)((0, $.assertOneOf)("type", "value"))
    }
  });
  xe("DeclaredPredicate", {
    visitor: ["value"],
    aliases: ["FlowPredicate"],
    fields: {
      value: (0, $.validateType)("Flow")
    }
  });
  xe("ExistsTypeAnnotation", {
    aliases: ["FlowType"]
  });
  xe("FunctionTypeAnnotation", {
    visitor: ["typeParameters", "params", "rest", "returnType"],
    aliases: ["FlowType"],
    fields: {
      typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
      params: (0, $.validate)((0, $.arrayOfType)("FunctionTypeParam")),
      rest: (0, $.validateOptionalType)("FunctionTypeParam"),
      this: (0, $.validateOptionalType)("FunctionTypeParam"),
      returnType: (0, $.validateType)("FlowType")
    }
  });
  xe("FunctionTypeParam", {
    visitor: ["name", "typeAnnotation"],
    fields: {
      name: (0, $.validateOptionalType)("Identifier"),
      typeAnnotation: (0, $.validateType)("FlowType"),
      optional: (0, $.validateOptional)((0, $.assertValueType)("boolean"))
    }
  });
  xe("GenericTypeAnnotation", {
    visitor: ["id", "typeParameters"],
    aliases: ["FlowType"],
    fields: {
      id: (0, $.validateType)(["Identifier", "QualifiedTypeIdentifier"]),
      typeParameters: (0, $.validateOptionalType)("TypeParameterInstantiation")
    }
  });
  xe("InferredPredicate", {
    aliases: ["FlowPredicate"]
  });
  xe("InterfaceExtends", {
    visitor: ["id", "typeParameters"],
    fields: {
      id: (0, $.validateType)(["Identifier", "QualifiedTypeIdentifier"]),
      typeParameters: (0, $.validateOptionalType)("TypeParameterInstantiation")
    }
  });
  ob("InterfaceDeclaration");
  xe("InterfaceTypeAnnotation", {
    visitor: ["extends", "body"],
    aliases: ["FlowType"],
    fields: {
      extends: (0, $.validateOptional)((0, $.arrayOfType)("InterfaceExtends")),
      body: (0, $.validateType)("ObjectTypeAnnotation")
    }
  });
  xe("IntersectionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["FlowType"],
    fields: {
      types: (0, $.validate)((0, $.arrayOfType)("FlowType"))
    }
  });
  xe("MixedTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("EmptyTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("NullableTypeAnnotation", {
    visitor: ["typeAnnotation"],
    aliases: ["FlowType"],
    fields: {
      typeAnnotation: (0, $.validateType)("FlowType")
    }
  });
  xe("NumberLiteralTypeAnnotation", {
    builder: ["value"],
    aliases: ["FlowType"],
    fields: {
      value: (0, $.validate)((0, $.assertValueType)("number"))
    }
  });
  xe("NumberTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("ObjectTypeAnnotation", {
    visitor: ["properties", "indexers", "callProperties", "internalSlots"],
    aliases: ["FlowType"],
    builder: ["properties", "indexers", "callProperties", "internalSlots", "exact"],
    fields: {
      properties: (0, $.validate)((0, $.arrayOfType)(["ObjectTypeProperty", "ObjectTypeSpreadProperty"])),
      indexers: {
        validate: (0, $.arrayOfType)("ObjectTypeIndexer"),
        optional: !0,
        default: []
      },
      callProperties: {
        validate: (0, $.arrayOfType)("ObjectTypeCallProperty"),
        optional: !0,
        default: []
      },
      internalSlots: {
        validate: (0, $.arrayOfType)("ObjectTypeInternalSlot"),
        optional: !0,
        default: []
      },
      exact: {
        validate: (0, $.assertValueType)("boolean"),
        default: !1
      },
      inexact: (0, $.validateOptional)((0, $.assertValueType)("boolean"))
    }
  });
  xe("ObjectTypeInternalSlot", {
    visitor: ["id", "value", "optional", "static", "method"],
    aliases: ["UserWhitespacable"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      value: (0, $.validateType)("FlowType"),
      optional: (0, $.validate)((0, $.assertValueType)("boolean")),
      static: (0, $.validate)((0, $.assertValueType)("boolean")),
      method: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("ObjectTypeCallProperty", {
    visitor: ["value"],
    aliases: ["UserWhitespacable"],
    fields: {
      value: (0, $.validateType)("FlowType"),
      static: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("ObjectTypeIndexer", {
    visitor: ["id", "key", "value", "variance"],
    aliases: ["UserWhitespacable"],
    fields: {
      id: (0, $.validateOptionalType)("Identifier"),
      key: (0, $.validateType)("FlowType"),
      value: (0, $.validateType)("FlowType"),
      static: (0, $.validate)((0, $.assertValueType)("boolean")),
      variance: (0, $.validateOptionalType)("Variance")
    }
  });
  xe("ObjectTypeProperty", {
    visitor: ["key", "value", "variance"],
    aliases: ["UserWhitespacable"],
    fields: {
      key: (0, $.validateType)(["Identifier", "StringLiteral"]),
      value: (0, $.validateType)("FlowType"),
      kind: (0, $.validate)((0, $.assertOneOf)("init", "get", "set")),
      static: (0, $.validate)((0, $.assertValueType)("boolean")),
      proto: (0, $.validate)((0, $.assertValueType)("boolean")),
      optional: (0, $.validate)((0, $.assertValueType)("boolean")),
      variance: (0, $.validateOptionalType)("Variance"),
      method: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("ObjectTypeSpreadProperty", {
    visitor: ["argument"],
    aliases: ["UserWhitespacable"],
    fields: {
      argument: (0, $.validateType)("FlowType")
    }
  });
  xe("OpaqueType", {
    visitor: ["id", "typeParameters", "supertype", "impltype"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
      supertype: (0, $.validateOptionalType)("FlowType"),
      impltype: (0, $.validateType)("FlowType")
    }
  });
  xe("QualifiedTypeIdentifier", {
    visitor: ["id", "qualification"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      qualification: (0, $.validateType)(["Identifier", "QualifiedTypeIdentifier"])
    }
  });
  xe("StringLiteralTypeAnnotation", {
    builder: ["value"],
    aliases: ["FlowType"],
    fields: {
      value: (0, $.validate)((0, $.assertValueType)("string"))
    }
  });
  xe("StringTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("SymbolTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("ThisTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("TupleTypeAnnotation", {
    visitor: ["types"],
    aliases: ["FlowType"],
    fields: {
      types: (0, $.validate)((0, $.arrayOfType)("FlowType"))
    }
  });
  xe("TypeofTypeAnnotation", {
    visitor: ["argument"],
    aliases: ["FlowType"],
    fields: {
      argument: (0, $.validateType)("FlowType")
    }
  });
  xe("TypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      typeParameters: (0, $.validateOptionalType)("TypeParameterDeclaration"),
      right: (0, $.validateType)("FlowType")
    }
  });
  xe("TypeAnnotation", {
    visitor: ["typeAnnotation"],
    fields: {
      typeAnnotation: (0, $.validateType)("FlowType")
    }
  });
  xe("TypeCastExpression", {
    visitor: ["expression", "typeAnnotation"],
    aliases: ["ExpressionWrapper", "Expression"],
    fields: {
      expression: (0, $.validateType)("Expression"),
      typeAnnotation: (0, $.validateType)("TypeAnnotation")
    }
  });
  xe("TypeParameter", {
    visitor: ["bound", "default", "variance"],
    fields: {
      name: (0, $.validate)((0, $.assertValueType)("string")),
      bound: (0, $.validateOptionalType)("TypeAnnotation"),
      default: (0, $.validateOptionalType)("FlowType"),
      variance: (0, $.validateOptionalType)("Variance")
    }
  });
  xe("TypeParameterDeclaration", {
    visitor: ["params"],
    fields: {
      params: (0, $.validate)((0, $.arrayOfType)("TypeParameter"))
    }
  });
  xe("TypeParameterInstantiation", {
    visitor: ["params"],
    fields: {
      params: (0, $.validate)((0, $.arrayOfType)("FlowType"))
    }
  });
  xe("UnionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["FlowType"],
    fields: {
      types: (0, $.validate)((0, $.arrayOfType)("FlowType"))
    }
  });
  xe("Variance", {
    builder: ["kind"],
    fields: {
      kind: (0, $.validate)((0, $.assertOneOf)("minus", "plus"))
    }
  });
  xe("VoidTypeAnnotation", {
    aliases: ["FlowType", "FlowBaseAnnotation"]
  });
  xe("EnumDeclaration", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "body"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      body: (0, $.validateType)(["EnumBooleanBody", "EnumNumberBody", "EnumStringBody", "EnumSymbolBody"])
    }
  });
  xe("EnumBooleanBody", {
    aliases: ["EnumBody"],
    visitor: ["members"],
    fields: {
      explicitType: (0, $.validate)((0, $.assertValueType)("boolean")),
      members: (0, $.validateArrayOfType)("EnumBooleanMember"),
      hasUnknownMembers: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("EnumNumberBody", {
    aliases: ["EnumBody"],
    visitor: ["members"],
    fields: {
      explicitType: (0, $.validate)((0, $.assertValueType)("boolean")),
      members: (0, $.validateArrayOfType)("EnumNumberMember"),
      hasUnknownMembers: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("EnumStringBody", {
    aliases: ["EnumBody"],
    visitor: ["members"],
    fields: {
      explicitType: (0, $.validate)((0, $.assertValueType)("boolean")),
      members: (0, $.validateArrayOfType)(["EnumStringMember", "EnumDefaultedMember"]),
      hasUnknownMembers: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("EnumSymbolBody", {
    aliases: ["EnumBody"],
    visitor: ["members"],
    fields: {
      members: (0, $.validateArrayOfType)("EnumDefaultedMember"),
      hasUnknownMembers: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
  xe("EnumBooleanMember", {
    aliases: ["EnumMember"],
    visitor: ["id"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      init: (0, $.validateType)("BooleanLiteral")
    }
  });
  xe("EnumNumberMember", {
    aliases: ["EnumMember"],
    visitor: ["id", "init"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      init: (0, $.validateType)("NumericLiteral")
    }
  });
  xe("EnumStringMember", {
    aliases: ["EnumMember"],
    visitor: ["id", "init"],
    fields: {
      id: (0, $.validateType)("Identifier"),
      init: (0, $.validateType)("StringLiteral")
    }
  });
  xe("EnumDefaultedMember", {
    aliases: ["EnumMember"],
    visitor: ["id"],
    fields: {
      id: (0, $.validateType)("Identifier")
    }
  });
  xe("IndexedAccessType", {
    visitor: ["objectType", "indexType"],
    aliases: ["FlowType"],
    fields: {
      objectType: (0, $.validateType)("FlowType"),
      indexType: (0, $.validateType)("FlowType")
    }
  });
  xe("OptionalIndexedAccessType", {
    visitor: ["objectType", "indexType"],
    aliases: ["FlowType"],
    fields: {
      objectType: (0, $.validateType)("FlowType"),
      indexType: (0, $.validateType)("FlowType"),
      optional: (0, $.validate)((0, $.assertValueType)("boolean"))
    }
  });
});

// ../node_modules/@babel/types/lib/definitions/jsx.js
var mR = y(() => {
  "use strict";
  var Et = li(), ss = (0, Et.defineAliasedType)("JSX");
  ss("JSXAttribute", {
    visitor: ["name", "value"],
    aliases: ["Immutable"],
    fields: {
      name: {
        validate: (0, Et.assertNodeType)("JSXIdentifier", "JSXNamespacedName")
      },
      value: {
        optional: !0,
        validate: (0, Et.assertNodeType)("JSXElement", "JSXFragment", "StringLiteral", "JSXExpressionContainer")
      }
    }
  });
  ss("JSXClosingElement", {
    visitor: ["name"],
    aliases: ["Immutable"],
    fields: {
      name: {
        validate: (0, Et.assertNodeType)("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName")
      }
    }
  });
  ss("JSXElement", {
    builder: ["openingElement", "closingElement", "children", "selfClosing"],
    visitor: ["openingElement", "children", "closingElement"],
    aliases: ["Immutable", "Expression"],
    fields: Object.assign({
      openingElement: {
        validate: (0, Et.assertNodeType)("JSXOpeningElement")
      },
      closingElement: {
        optional: !0,
        validate: (0, Et.assertNodeType)("JSXClosingElement")
      },
      children: {
        validate: (0, Et.chain)((0, Et.assertValueType)("array"), (0, Et.assertEach)((0, Et.assertNodeType)("JSXText", "JSXExpressionContain\
er", "JSXSpreadChild", "JSXElement", "JSXFragment")))
      }
    }, {
      selfClosing: {
        validate: (0, Et.assertValueType)("boolean"),
        optional: !0
      }
    })
  });
  ss("JSXEmptyExpression", {});
  ss("JSXExpressionContainer", {
    visitor: ["expression"],
    aliases: ["Immutable"],
    fields: {
      expression: {
        validate: (0, Et.assertNodeType)("Expression", "JSXEmptyExpression")
      }
    }
  });
  ss("JSXSpreadChild", {
    visitor: ["expression"],
    aliases: ["Immutable"],
    fields: {
      expression: {
        validate: (0, Et.assertNodeType)("Expression")
      }
    }
  });
  ss("JSXIdentifier", {
    builder: ["name"],
    fields: {
      name: {
        validate: (0, Et.assertValueType)("string")
      }
    }
  });
  ss("JSXMemberExpression", {
    visitor: ["object", "property"],
    fields: {
      object: {
        validate: (0, Et.assertNodeType)("JSXMemberExpression", "JSXIdentifier")
      },
      property: {
        validate: (0, Et.assertNodeType)("JSXIdentifier")
      }
    }
  });
  ss("JSXNamespacedName", {
    visitor: ["namespace", "name"],
    fields: {
      namespace: {
        validate: (0, Et.assertNodeType)("JSXIdentifier")
      },
      name: {
        validate: (0, Et.assertNodeType)("JSXIdentifier")
      }
    }
  });
  ss("JSXOpeningElement", {
    builder: ["name", "attributes", "selfClosing"],
    visitor: ["name", "attributes"],
    aliases: ["Immutable"],
    fields: {
      name: {
        validate: (0, Et.assertNodeType)("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName")
      },
      selfClosing: {
        default: !1
      },
      attributes: {
        validate: (0, Et.chain)((0, Et.assertValueType)("array"), (0, Et.assertEach)((0, Et.assertNodeType)("JSXAttribute", "JSXSpreadAttrib\
ute")))
      },
      typeParameters: {
        validate: (0, Et.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
        optional: !0
      }
    }
  });
  ss("JSXSpreadAttribute", {
    visitor: ["argument"],
    fields: {
      argument: {
        validate: (0, Et.assertNodeType)("Expression")
      }
    }
  });
  ss("JSXText", {
    aliases: ["Immutable"],
    builder: ["value"],
    fields: {
      value: {
        validate: (0, Et.assertValueType)("string")
      }
    }
  });
  ss("JSXFragment", {
    builder: ["openingFragment", "closingFragment", "children"],
    visitor: ["openingFragment", "children", "closingFragment"],
    aliases: ["Immutable", "Expression"],
    fields: {
      openingFragment: {
        validate: (0, Et.assertNodeType)("JSXOpeningFragment")
      },
      closingFragment: {
        validate: (0, Et.assertNodeType)("JSXClosingFragment")
      },
      children: {
        validate: (0, Et.chain)((0, Et.assertValueType)("array"), (0, Et.assertEach)((0, Et.assertNodeType)("JSXText", "JSXExpressionContain\
er", "JSXSpreadChild", "JSXElement", "JSXFragment")))
      }
    }
  });
  ss("JSXOpeningFragment", {
    aliases: ["Immutable"]
  });
  ss("JSXClosingFragment", {
    aliases: ["Immutable"]
  });
});

// ../node_modules/@babel/types/lib/definitions/placeholders.js
var cb = y((Xi) => {
  "use strict";
  Object.defineProperty(Xi, "__esModule", {
    value: !0
  });
  Xi.PLACEHOLDERS_FLIPPED_ALIAS = Xi.PLACEHOLDERS_ALIAS = Xi.PLACEHOLDERS = void 0;
  var $re = li(), Ure = Xi.PLACEHOLDERS = ["Identifier", "StringLiteral", "Expression", "Statement", "Declaration", "BlockStatement", "Class\
Body", "Pattern"], ub = Xi.PLACEHOLDERS_ALIAS = {
    Declaration: ["Statement"],
    Pattern: ["PatternLike", "LVal"]
  };
  for (let e of Ure) {
    let t = $re.ALIAS_KEYS[e];
    t != null && t.length && (ub[e] = t);
  }
  var lb = Xi.PLACEHOLDERS_FLIPPED_ALIAS = {};
  Object.keys(ub).forEach((e) => {
    ub[e].forEach((t) => {
      hasOwnProperty.call(lb, t) || (lb[t] = []), lb[t].push(e);
    });
  });
});

// ../node_modules/@babel/types/lib/definitions/misc.js
var yR = y(() => {
  "use strict";
  var _p = li(), Vre = cb(), fb = (0, _p.defineAliasedType)("Miscellaneous");
  fb("Noop", {
    visitor: []
  });
  fb("Placeholder", {
    visitor: [],
    builder: ["expectedNode", "name"],
    fields: {
      name: {
        validate: (0, _p.assertNodeType)("Identifier")
      },
      expectedNode: {
        validate: (0, _p.assertOneOf)(...Vre.PLACEHOLDERS)
      }
    }
  });
  fb("V8IntrinsicIdentifier", {
    builder: ["name"],
    fields: {
      name: {
        validate: (0, _p.assertValueType)("string")
      }
    }
  });
});

// ../node_modules/@babel/types/lib/definitions/experimental.js
var gR = y(() => {
  "use strict";
  var gt = li();
  (0, gt.default)("ArgumentPlaceholder", {});
  (0, gt.default)("BindExpression", {
    visitor: ["object", "callee"],
    aliases: ["Expression"],
    fields: process.env.BABEL_TYPES_8_BREAKING ? {
      object: {
        validate: (0, gt.assertNodeType)("Expression")
      },
      callee: {
        validate: (0, gt.assertNodeType)("Expression")
      }
    } : {
      object: {
        validate: Object.assign(() => {
        }, {
          oneOfNodeTypes: ["Expression"]
        })
      },
      callee: {
        validate: Object.assign(() => {
        }, {
          oneOfNodeTypes: ["Expression"]
        })
      }
    }
  });
  (0, gt.default)("ImportAttribute", {
    visitor: ["key", "value"],
    fields: {
      key: {
        validate: (0, gt.assertNodeType)("Identifier", "StringLiteral")
      },
      value: {
        validate: (0, gt.assertNodeType)("StringLiteral")
      }
    }
  });
  (0, gt.default)("Decorator", {
    visitor: ["expression"],
    fields: {
      expression: {
        validate: (0, gt.assertNodeType)("Expression")
      }
    }
  });
  (0, gt.default)("DoExpression", {
    visitor: ["body"],
    builder: ["body", "async"],
    aliases: ["Expression"],
    fields: {
      body: {
        validate: (0, gt.assertNodeType)("BlockStatement")
      },
      async: {
        validate: (0, gt.assertValueType)("boolean"),
        default: !1
      }
    }
  });
  (0, gt.default)("ExportDefaultSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      exported: {
        validate: (0, gt.assertNodeType)("Identifier")
      }
    }
  });
  (0, gt.default)("RecordExpression", {
    visitor: ["properties"],
    aliases: ["Expression"],
    fields: {
      properties: {
        validate: (0, gt.chain)((0, gt.assertValueType)("array"), (0, gt.assertEach)((0, gt.assertNodeType)("ObjectProperty", "SpreadElement")))
      }
    }
  });
  (0, gt.default)("TupleExpression", {
    fields: {
      elements: {
        validate: (0, gt.chain)((0, gt.assertValueType)("array"), (0, gt.assertEach)((0, gt.assertNodeType)("Expression", "SpreadElement"))),
        default: []
      }
    },
    visitor: ["elements"],
    aliases: ["Expression"]
  });
  (0, gt.default)("DecimalLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, gt.assertValueType)("string")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });
  (0, gt.default)("ModuleExpression", {
    visitor: ["body"],
    fields: {
      body: {
        validate: (0, gt.assertNodeType)("Program")
      }
    },
    aliases: ["Expression"]
  });
  (0, gt.default)("TopicReference", {
    aliases: ["Expression"]
  });
  (0, gt.default)("PipelineTopicExpression", {
    builder: ["expression"],
    visitor: ["expression"],
    fields: {
      expression: {
        validate: (0, gt.assertNodeType)("Expression")
      }
    },
    aliases: ["Expression"]
  });
  (0, gt.default)("PipelineBareFunction", {
    builder: ["callee"],
    visitor: ["callee"],
    fields: {
      callee: {
        validate: (0, gt.assertNodeType)("Expression")
      }
    },
    aliases: ["Expression"]
  });
  (0, gt.default)("PipelinePrimaryTopicReference", {
    aliases: ["Expression"]
  });
});

// ../node_modules/@babel/types/lib/definitions/typescript.js
var AR = y(() => {
  "use strict";
  var X = li(), bR = ab(), Wre = Go(), Be = (0, X.defineAliasedType)("TypeScript"), bs = (0, X.assertValueType)("boolean"), ER = /* @__PURE__ */ i(
  () => ({
    returnType: {
      validate: (0, X.assertNodeType)("TSTypeAnnotation", "Noop"),
      optional: !0
    },
    typeParameters: {
      validate: (0, X.assertNodeType)("TSTypeParameterDeclaration", "Noop"),
      optional: !0
    }
  }), "tSFunctionTypeAnnotationCommon");
  Be("TSParameterProperty", {
    aliases: ["LVal"],
    visitor: ["parameter"],
    fields: {
      accessibility: {
        validate: (0, X.assertOneOf)("public", "private", "protected"),
        optional: !0
      },
      readonly: {
        validate: (0, X.assertValueType)("boolean"),
        optional: !0
      },
      parameter: {
        validate: (0, X.assertNodeType)("Identifier", "AssignmentPattern")
      },
      override: {
        validate: (0, X.assertValueType)("boolean"),
        optional: !0
      },
      decorators: {
        validate: (0, X.chain)((0, X.assertValueType)("array"), (0, X.assertEach)((0, X.assertNodeType)("Decorator"))),
        optional: !0
      }
    }
  });
  Be("TSDeclareFunction", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "typeParameters", "params", "returnType"],
    fields: Object.assign({}, (0, bR.functionDeclarationCommon)(), ER())
  });
  Be("TSDeclareMethod", {
    visitor: ["decorators", "key", "typeParameters", "params", "returnType"],
    fields: Object.assign({}, (0, bR.classMethodOrDeclareMethodCommon)(), ER())
  });
  Be("TSQualifiedName", {
    aliases: ["TSEntityName"],
    visitor: ["left", "right"],
    fields: {
      left: (0, X.validateType)("TSEntityName"),
      right: (0, X.validateType)("Identifier")
    }
  });
  var Op = /* @__PURE__ */ i(() => ({
    typeParameters: (0, X.validateOptionalType)("TSTypeParameterDeclaration"),
    parameters: (0, X.validateArrayOfType)(["ArrayPattern", "Identifier", "ObjectPattern", "RestElement"]),
    typeAnnotation: (0, X.validateOptionalType)("TSTypeAnnotation")
  }), "signatureDeclarationCommon"), vR = {
    aliases: ["TSTypeElement"],
    visitor: ["typeParameters", "parameters", "typeAnnotation"],
    fields: Op()
  };
  Be("TSCallSignatureDeclaration", vR);
  Be("TSConstructSignatureDeclaration", vR);
  var SR = /* @__PURE__ */ i(() => ({
    key: (0, X.validateType)("Expression"),
    computed: {
      default: !1
    },
    optional: (0, X.validateOptional)(bs)
  }), "namedTypeElementCommon");
  Be("TSPropertySignature", {
    aliases: ["TSTypeElement"],
    visitor: ["key", "typeAnnotation"],
    fields: Object.assign({}, SR(), {
      readonly: (0, X.validateOptional)(bs),
      typeAnnotation: (0, X.validateOptionalType)("TSTypeAnnotation"),
      kind: {
        validate: (0, X.assertOneOf)("get", "set")
      }
    })
  });
  Be("TSMethodSignature", {
    aliases: ["TSTypeElement"],
    visitor: ["key", "typeParameters", "parameters", "typeAnnotation"],
    fields: Object.assign({}, Op(), SR(), {
      kind: {
        validate: (0, X.assertOneOf)("method", "get", "set")
      }
    })
  });
  Be("TSIndexSignature", {
    aliases: ["TSTypeElement"],
    visitor: ["parameters", "typeAnnotation"],
    fields: {
      readonly: (0, X.validateOptional)(bs),
      static: (0, X.validateOptional)(bs),
      parameters: (0, X.validateArrayOfType)("Identifier"),
      typeAnnotation: (0, X.validateOptionalType)("TSTypeAnnotation")
    }
  });
  var Hre = ["TSAnyKeyword", "TSBooleanKeyword", "TSBigIntKeyword", "TSIntrinsicKeyword", "TSNeverKeyword", "TSNullKeyword", "TSNumberKeywor\
d", "TSObjectKeyword", "TSStringKeyword", "TSSymbolKeyword", "TSUndefinedKeyword", "TSUnknownKeyword", "TSVoidKeyword"];
  for (let e of Hre)
    Be(e, {
      aliases: ["TSType", "TSBaseType"],
      visitor: [],
      fields: {}
    });
  Be("TSThisType", {
    aliases: ["TSType", "TSBaseType"],
    visitor: [],
    fields: {}
  });
  var TR = {
    aliases: ["TSType"],
    visitor: ["typeParameters", "parameters", "typeAnnotation"]
  };
  Be("TSFunctionType", Object.assign({}, TR, {
    fields: Op()
  }));
  Be("TSConstructorType", Object.assign({}, TR, {
    fields: Object.assign({}, Op(), {
      abstract: (0, X.validateOptional)(bs)
    })
  }));
  Be("TSTypeReference", {
    aliases: ["TSType"],
    visitor: ["typeName", "typeParameters"],
    fields: {
      typeName: (0, X.validateType)("TSEntityName"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterInstantiation")
    }
  });
  Be("TSTypePredicate", {
    aliases: ["TSType"],
    visitor: ["parameterName", "typeAnnotation"],
    builder: ["parameterName", "typeAnnotation", "asserts"],
    fields: {
      parameterName: (0, X.validateType)(["Identifier", "TSThisType"]),
      typeAnnotation: (0, X.validateOptionalType)("TSTypeAnnotation"),
      asserts: (0, X.validateOptional)(bs)
    }
  });
  Be("TSTypeQuery", {
    aliases: ["TSType"],
    visitor: ["exprName", "typeParameters"],
    fields: {
      exprName: (0, X.validateType)(["TSEntityName", "TSImportType"]),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterInstantiation")
    }
  });
  Be("TSTypeLiteral", {
    aliases: ["TSType"],
    visitor: ["members"],
    fields: {
      members: (0, X.validateArrayOfType)("TSTypeElement")
    }
  });
  Be("TSArrayType", {
    aliases: ["TSType"],
    visitor: ["elementType"],
    fields: {
      elementType: (0, X.validateType)("TSType")
    }
  });
  Be("TSTupleType", {
    aliases: ["TSType"],
    visitor: ["elementTypes"],
    fields: {
      elementTypes: (0, X.validateArrayOfType)(["TSType", "TSNamedTupleMember"])
    }
  });
  Be("TSOptionalType", {
    aliases: ["TSType"],
    visitor: ["typeAnnotation"],
    fields: {
      typeAnnotation: (0, X.validateType)("TSType")
    }
  });
  Be("TSRestType", {
    aliases: ["TSType"],
    visitor: ["typeAnnotation"],
    fields: {
      typeAnnotation: (0, X.validateType)("TSType")
    }
  });
  Be("TSNamedTupleMember", {
    visitor: ["label", "elementType"],
    builder: ["label", "elementType", "optional"],
    fields: {
      label: (0, X.validateType)("Identifier"),
      optional: {
        validate: bs,
        default: !1
      },
      elementType: (0, X.validateType)("TSType")
    }
  });
  var xR = {
    aliases: ["TSType"],
    visitor: ["types"],
    fields: {
      types: (0, X.validateArrayOfType)("TSType")
    }
  };
  Be("TSUnionType", xR);
  Be("TSIntersectionType", xR);
  Be("TSConditionalType", {
    aliases: ["TSType"],
    visitor: ["checkType", "extendsType", "trueType", "falseType"],
    fields: {
      checkType: (0, X.validateType)("TSType"),
      extendsType: (0, X.validateType)("TSType"),
      trueType: (0, X.validateType)("TSType"),
      falseType: (0, X.validateType)("TSType")
    }
  });
  Be("TSInferType", {
    aliases: ["TSType"],
    visitor: ["typeParameter"],
    fields: {
      typeParameter: (0, X.validateType)("TSTypeParameter")
    }
  });
  Be("TSParenthesizedType", {
    aliases: ["TSType"],
    visitor: ["typeAnnotation"],
    fields: {
      typeAnnotation: (0, X.validateType)("TSType")
    }
  });
  Be("TSTypeOperator", {
    aliases: ["TSType"],
    visitor: ["typeAnnotation"],
    fields: {
      operator: (0, X.validate)((0, X.assertValueType)("string")),
      typeAnnotation: (0, X.validateType)("TSType")
    }
  });
  Be("TSIndexedAccessType", {
    aliases: ["TSType"],
    visitor: ["objectType", "indexType"],
    fields: {
      objectType: (0, X.validateType)("TSType"),
      indexType: (0, X.validateType)("TSType")
    }
  });
  Be("TSMappedType", {
    aliases: ["TSType"],
    visitor: ["typeParameter", "typeAnnotation", "nameType"],
    fields: {
      readonly: (0, X.validateOptional)((0, X.assertOneOf)(!0, !1, "+", "-")),
      typeParameter: (0, X.validateType)("TSTypeParameter"),
      optional: (0, X.validateOptional)((0, X.assertOneOf)(!0, !1, "+", "-")),
      typeAnnotation: (0, X.validateOptionalType)("TSType"),
      nameType: (0, X.validateOptionalType)("TSType")
    }
  });
  Be("TSLiteralType", {
    aliases: ["TSType", "TSBaseType"],
    visitor: ["literal"],
    fields: {
      literal: {
        validate: function() {
          let e = (0, X.assertNodeType)("NumericLiteral", "BigIntLiteral"), t = (0, X.assertOneOf)("-"), r = (0, X.assertNodeType)("NumericL\
iteral", "StringLiteral", "BooleanLiteral", "BigIntLiteral", "TemplateLiteral");
          function s(n, a, o) {
            (0, Wre.default)("UnaryExpression", o) ? (t(o, "operator", o.operator), e(o, "argument", o.argument)) : r(n, a, o);
          }
          return i(s, "validator"), s.oneOfNodeTypes = ["NumericLiteral", "StringLiteral", "BooleanLiteral", "BigIntLiteral", "TemplateLiter\
al", "UnaryExpression"], s;
        }()
      }
    }
  });
  Be("TSExpressionWithTypeArguments", {
    aliases: ["TSType"],
    visitor: ["expression", "typeParameters"],
    fields: {
      expression: (0, X.validateType)("TSEntityName"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterInstantiation")
    }
  });
  Be("TSInterfaceDeclaration", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "typeParameters", "extends", "body"],
    fields: {
      declare: (0, X.validateOptional)(bs),
      id: (0, X.validateType)("Identifier"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterDeclaration"),
      extends: (0, X.validateOptional)((0, X.arrayOfType)("TSExpressionWithTypeArguments")),
      body: (0, X.validateType)("TSInterfaceBody")
    }
  });
  Be("TSInterfaceBody", {
    visitor: ["body"],
    fields: {
      body: (0, X.validateArrayOfType)("TSTypeElement")
    }
  });
  Be("TSTypeAliasDeclaration", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "typeParameters", "typeAnnotation"],
    fields: {
      declare: (0, X.validateOptional)(bs),
      id: (0, X.validateType)("Identifier"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterDeclaration"),
      typeAnnotation: (0, X.validateType)("TSType")
    }
  });
  Be("TSInstantiationExpression", {
    aliases: ["Expression"],
    visitor: ["expression", "typeParameters"],
    fields: {
      expression: (0, X.validateType)("Expression"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterInstantiation")
    }
  });
  var PR = {
    aliases: ["Expression", "LVal", "PatternLike"],
    visitor: ["expression", "typeAnnotation"],
    fields: {
      expression: (0, X.validateType)("Expression"),
      typeAnnotation: (0, X.validateType)("TSType")
    }
  };
  Be("TSAsExpression", PR);
  Be("TSSatisfiesExpression", PR);
  Be("TSTypeAssertion", {
    aliases: ["Expression", "LVal", "PatternLike"],
    visitor: ["typeAnnotation", "expression"],
    fields: {
      typeAnnotation: (0, X.validateType)("TSType"),
      expression: (0, X.validateType)("Expression")
    }
  });
  Be("TSEnumDeclaration", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "members"],
    fields: {
      declare: (0, X.validateOptional)(bs),
      const: (0, X.validateOptional)(bs),
      id: (0, X.validateType)("Identifier"),
      members: (0, X.validateArrayOfType)("TSEnumMember"),
      initializer: (0, X.validateOptionalType)("Expression")
    }
  });
  Be("TSEnumMember", {
    visitor: ["id", "initializer"],
    fields: {
      id: (0, X.validateType)(["Identifier", "StringLiteral"]),
      initializer: (0, X.validateOptionalType)("Expression")
    }
  });
  Be("TSModuleDeclaration", {
    aliases: ["Statement", "Declaration"],
    visitor: ["id", "body"],
    fields: {
      declare: (0, X.validateOptional)(bs),
      global: (0, X.validateOptional)(bs),
      id: (0, X.validateType)(["Identifier", "StringLiteral"]),
      body: (0, X.validateType)(["TSModuleBlock", "TSModuleDeclaration"])
    }
  });
  Be("TSModuleBlock", {
    aliases: ["Scopable", "Block", "BlockParent", "FunctionParent"],
    visitor: ["body"],
    fields: {
      body: (0, X.validateArrayOfType)("Statement")
    }
  });
  Be("TSImportType", {
    aliases: ["TSType"],
    visitor: ["argument", "qualifier", "typeParameters"],
    fields: {
      argument: (0, X.validateType)("StringLiteral"),
      qualifier: (0, X.validateOptionalType)("TSEntityName"),
      typeParameters: (0, X.validateOptionalType)("TSTypeParameterInstantiation"),
      options: {
        validate: (0, X.assertNodeType)("Expression"),
        optional: !0
      }
    }
  });
  Be("TSImportEqualsDeclaration", {
    aliases: ["Statement"],
    visitor: ["id", "moduleReference"],
    fields: {
      isExport: (0, X.validate)(bs),
      id: (0, X.validateType)("Identifier"),
      moduleReference: (0, X.validateType)(["TSEntityName", "TSExternalModuleReference"]),
      importKind: {
        validate: (0, X.assertOneOf)("type", "value"),
        optional: !0
      }
    }
  });
  Be("TSExternalModuleReference", {
    visitor: ["expression"],
    fields: {
      expression: (0, X.validateType)("StringLiteral")
    }
  });
  Be("TSNonNullExpression", {
    aliases: ["Expression", "LVal", "PatternLike"],
    visitor: ["expression"],
    fields: {
      expression: (0, X.validateType)("Expression")
    }
  });
  Be("TSExportAssignment", {
    aliases: ["Statement"],
    visitor: ["expression"],
    fields: {
      expression: (0, X.validateType)("Expression")
    }
  });
  Be("TSNamespaceExportDeclaration", {
    aliases: ["Statement"],
    visitor: ["id"],
    fields: {
      id: (0, X.validateType)("Identifier")
    }
  });
  Be("TSTypeAnnotation", {
    visitor: ["typeAnnotation"],
    fields: {
      typeAnnotation: {
        validate: (0, X.assertNodeType)("TSType")
      }
    }
  });
  Be("TSTypeParameterInstantiation", {
    visitor: ["params"],
    fields: {
      params: {
        validate: (0, X.chain)((0, X.assertValueType)("array"), (0, X.assertEach)((0, X.assertNodeType)("TSType")))
      }
    }
  });
  Be("TSTypeParameterDeclaration", {
    visitor: ["params"],
    fields: {
      params: {
        validate: (0, X.chain)((0, X.assertValueType)("array"), (0, X.assertEach)((0, X.assertNodeType)("TSTypeParameter")))
      }
    }
  });
  Be("TSTypeParameter", {
    builder: ["constraint", "default", "name"],
    visitor: ["constraint", "default"],
    fields: {
      name: {
        validate: (0, X.assertValueType)("string")
      },
      in: {
        validate: (0, X.assertValueType)("boolean"),
        optional: !0
      },
      out: {
        validate: (0, X.assertValueType)("boolean"),
        optional: !0
      },
      const: {
        validate: (0, X.assertValueType)("boolean"),
        optional: !0
      },
      constraint: {
        validate: (0, X.assertNodeType)("TSType"),
        optional: !0
      },
      default: {
        validate: (0, X.assertNodeType)("TSType"),
        optional: !0
      }
    }
  });
});

// ../node_modules/@babel/types/lib/definitions/deprecated-aliases.js
var CR = y((Np) => {
  "use strict";
  Object.defineProperty(Np, "__esModule", {
    value: !0
  });
  Np.DEPRECATED_ALIASES = void 0;
  var UXe = Np.DEPRECATED_ALIASES = {
    ModuleDeclaration: "ImportOrExportDeclaration"
  };
});

// ../node_modules/@babel/types/lib/definitions/index.js
var Fs = y((ns) => {
  "use strict";
  Object.defineProperty(ns, "__esModule", {
    value: !0
  });
  Object.defineProperty(ns, "ALIAS_KEYS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.ALIAS_KEYS;
    }, "get")
  });
  Object.defineProperty(ns, "BUILDER_KEYS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.BUILDER_KEYS;
    }, "get")
  });
  Object.defineProperty(ns, "DEPRECATED_ALIASES", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return pb.DEPRECATED_ALIASES;
    }, "get")
  });
  Object.defineProperty(ns, "DEPRECATED_KEYS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.DEPRECATED_KEYS;
    }, "get")
  });
  Object.defineProperty(ns, "FLIPPED_ALIAS_KEYS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.FLIPPED_ALIAS_KEYS;
    }, "get")
  });
  Object.defineProperty(ns, "NODE_FIELDS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.NODE_FIELDS;
    }, "get")
  });
  Object.defineProperty(ns, "NODE_PARENT_VALIDATIONS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.NODE_PARENT_VALIDATIONS;
    }, "get")
  });
  Object.defineProperty(ns, "PLACEHOLDERS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Gu.PLACEHOLDERS;
    }, "get")
  });
  Object.defineProperty(ns, "PLACEHOLDERS_ALIAS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Gu.PLACEHOLDERS_ALIAS;
    }, "get")
  });
  Object.defineProperty(ns, "PLACEHOLDERS_FLIPPED_ALIAS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Gu.PLACEHOLDERS_FLIPPED_ALIAS;
    }, "get")
  });
  ns.TYPES = void 0;
  Object.defineProperty(ns, "VISITOR_KEYS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cr.VISITOR_KEYS;
    }, "get")
  });
  var zi = WN();
  ab();
  hR();
  mR();
  yR();
  gR();
  AR();
  var Cr = li(), Gu = cb(), pb = CR();
  Object.keys(pb.DEPRECATED_ALIASES).forEach((e) => {
    Cr.FLIPPED_ALIAS_KEYS[e] = Cr.FLIPPED_ALIAS_KEYS[pb.DEPRECATED_ALIASES[e]];
  });
  zi(Cr.VISITOR_KEYS);
  zi(Cr.ALIAS_KEYS);
  zi(Cr.FLIPPED_ALIAS_KEYS);
  zi(Cr.NODE_FIELDS);
  zi(Cr.BUILDER_KEYS);
  zi(Cr.DEPRECATED_KEYS);
  zi(Gu.PLACEHOLDERS_ALIAS);
  zi(Gu.PLACEHOLDERS_FLIPPED_ALIAS);
  var WXe = ns.TYPES = [].concat(Object.keys(Cr.VISITOR_KEYS), Object.keys(Cr.FLIPPED_ALIAS_KEYS), Object.keys(Cr.DEPRECATED_KEYS));
});

// ../node_modules/@babel/types/lib/validators/validate.js
var Dp = y((Ku) => {
  "use strict";
  Object.defineProperty(Ku, "__esModule", {
    value: !0
  });
  Ku.default = Gre;
  Ku.validateChild = IR;
  Ku.validateField = DR;
  var wR = Fs();
  function Gre(e, t, r) {
    if (!e) return;
    let s = wR.NODE_FIELDS[e.type];
    if (!s) return;
    let n = s[t];
    DR(e, t, r, n), IR(e, t, r);
  }
  i(Gre, "validate");
  function DR(e, t, r, s) {
    s != null && s.validate && (s.optional && r == null || s.validate(e, t, r));
  }
  i(DR, "validateField");
  function IR(e, t, r) {
    if (r == null) return;
    let s = wR.NODE_PARENT_VALIDATIONS[r.type];
    s && s(e, t, r);
  }
  i(IR, "validateChild");
});

// ../node_modules/@babel/types/lib/builders/validateNode.js
var _R = y((db) => {
  "use strict";
  Object.defineProperty(db, "__esModule", {
    value: !0
  });
  db.default = Xre;
  var Kre = Dp(), Yre = Re();
  function Xre(e) {
    let t = Yre.BUILDER_KEYS[e.type];
    for (let r of t)
      (0, Kre.default)(e, r, e[r]);
    return e;
  }
  i(Xre, "validateNode");
});

// ../node_modules/@babel/types/lib/builders/generated/index.js
var is = y((S) => {
  "use strict";
  Object.defineProperty(S, "__esModule", {
    value: !0
  });
  S.anyTypeAnnotation = Cne;
  S.argumentPlaceholder = tae;
  S.arrayExpression = zre;
  S.arrayPattern = Hse;
  S.arrayTypeAnnotation = wne;
  S.arrowFunctionExpression = Gse;
  S.assignmentExpression = Jre;
  S.assignmentPattern = Wse;
  S.awaitExpression = hne;
  S.bigIntLiteral = yne;
  S.binaryExpression = Qre;
  S.bindExpression = rae;
  S.blockStatement = rse;
  S.booleanLiteral = Tse;
  S.booleanLiteralTypeAnnotation = Ine;
  S.booleanTypeAnnotation = Dne;
  S.breakStatement = sse;
  S.callExpression = nse;
  S.catchClause = ise;
  S.classAccessorProperty = Sne;
  S.classBody = Kse;
  S.classDeclaration = Xse;
  S.classExpression = Yse;
  S.classImplements = One;
  S.classMethod = one;
  S.classPrivateMethod = xne;
  S.classPrivateProperty = Tne;
  S.classProperty = vne;
  S.conditionalExpression = ase;
  S.continueStatement = ose;
  S.debuggerStatement = lse;
  S.decimalLiteral = uae;
  S.declareClass = Nne;
  S.declareExportAllDeclaration = $ne;
  S.declareExportDeclaration = qne;
  S.declareFunction = Rne;
  S.declareInterface = kne;
  S.declareModule = Fne;
  S.declareModuleExports = Lne;
  S.declareOpaqueType = Mne;
  S.declareTypeAlias = Bne;
  S.declareVariable = jne;
  S.declaredPredicate = Une;
  S.decorator = nae;
  S.directive = ese;
  S.directiveLiteral = tse;
  S.doExpression = iae;
  S.doWhileStatement = use;
  S.emptyStatement = cse;
  S.emptyTypeAnnotation = Zne;
  S.enumBooleanBody = wie;
  S.enumBooleanMember = Oie;
  S.enumDeclaration = Cie;
  S.enumDefaultedMember = kie;
  S.enumNumberBody = Die;
  S.enumNumberMember = Nie;
  S.enumStringBody = Iie;
  S.enumStringMember = Rie;
  S.enumSymbolBody = _ie;
  S.existsTypeAnnotation = Vne;
  S.exportAllDeclaration = zse;
  S.exportDefaultDeclaration = Jse;
  S.exportDefaultSpecifier = aae;
  S.exportNamedDeclaration = Qse;
  S.exportNamespaceSpecifier = gne;
  S.exportSpecifier = Zse;
  S.expressionStatement = fse;
  S.file = pse;
  S.forInStatement = dse;
  S.forOfStatement = ene;
  S.forStatement = hse;
  S.functionDeclaration = mse;
  S.functionExpression = yse;
  S.functionTypeAnnotation = Wne;
  S.functionTypeParam = Hne;
  S.genericTypeAnnotation = Gne;
  S.identifier = gse;
  S.ifStatement = bse;
  S.import = mne;
  S.importAttribute = sae;
  S.importDeclaration = tne;
  S.importDefaultSpecifier = rne;
  S.importExpression = ine;
  S.importNamespaceSpecifier = sne;
  S.importSpecifier = nne;
  S.indexedAccessType = Fie;
  S.inferredPredicate = Kne;
  S.interfaceDeclaration = Xne;
  S.interfaceExtends = Yne;
  S.interfaceTypeAnnotation = zne;
  S.interpreterDirective = Zre;
  S.intersectionTypeAnnotation = Jne;
  S.jSXAttribute = S.jsxAttribute = Bie;
  S.jSXClosingElement = S.jsxClosingElement = Mie;
  S.jSXClosingFragment = S.jsxClosingFragment = Jie;
  S.jSXElement = S.jsxElement = jie;
  S.jSXEmptyExpression = S.jsxEmptyExpression = qie;
  S.jSXExpressionContainer = S.jsxExpressionContainer = $ie;
  S.jSXFragment = S.jsxFragment = Xie;
  S.jSXIdentifier = S.jsxIdentifier = Vie;
  S.jSXMemberExpression = S.jsxMemberExpression = Wie;
  S.jSXNamespacedName = S.jsxNamespacedName = Hie;
  S.jSXOpeningElement = S.jsxOpeningElement = Gie;
  S.jSXOpeningFragment = S.jsxOpeningFragment = zie;
  S.jSXSpreadAttribute = S.jsxSpreadAttribute = Kie;
  S.jSXSpreadChild = S.jsxSpreadChild = Uie;
  S.jSXText = S.jsxText = Yie;
  S.labeledStatement = Ese;
  S.logicalExpression = xse;
  S.memberExpression = Pse;
  S.metaProperty = ane;
  S.mixedTypeAnnotation = Qne;
  S.moduleExpression = cae;
  S.newExpression = Ase;
  S.noop = Qie;
  S.nullLiteral = Sse;
  S.nullLiteralTypeAnnotation = _ne;
  S.nullableTypeAnnotation = eie;
  S.numberLiteral = Coe;
  S.numberLiteralTypeAnnotation = tie;
  S.numberTypeAnnotation = rie;
  S.numericLiteral = OR;
  S.objectExpression = wse;
  S.objectMethod = Dse;
  S.objectPattern = lne;
  S.objectProperty = Ise;
  S.objectTypeAnnotation = sie;
  S.objectTypeCallProperty = iie;
  S.objectTypeIndexer = aie;
  S.objectTypeInternalSlot = nie;
  S.objectTypeProperty = oie;
  S.objectTypeSpreadProperty = lie;
  S.opaqueType = uie;
  S.optionalCallExpression = Ene;
  S.optionalIndexedAccessType = Lie;
  S.optionalMemberExpression = bne;
  S.parenthesizedExpression = Nse;
  S.pipelineBareFunction = dae;
  S.pipelinePrimaryTopicReference = hae;
  S.pipelineTopicExpression = pae;
  S.placeholder = Zie;
  S.privateName = Pne;
  S.program = Cse;
  S.qualifiedTypeIdentifier = cie;
  S.recordExpression = oae;
  S.regExpLiteral = NR;
  S.regexLiteral = woe;
  S.restElement = RR;
  S.restProperty = Doe;
  S.returnStatement = _se;
  S.sequenceExpression = Ose;
  S.spreadElement = kR;
  S.spreadProperty = Ioe;
  S.staticBlock = Ane;
  S.stringLiteral = vse;
  S.stringLiteralTypeAnnotation = fie;
  S.stringTypeAnnotation = pie;
  S.super = une;
  S.switchCase = Rse;
  S.switchStatement = kse;
  S.symbolTypeAnnotation = die;
  S.taggedTemplateExpression = cne;
  S.templateElement = fne;
  S.templateLiteral = pne;
  S.thisExpression = Fse;
  S.thisTypeAnnotation = hie;
  S.throwStatement = Lse;
  S.topicReference = fae;
  S.tryStatement = Bse;
  S.tSAnyKeyword = S.tsAnyKeyword = Pae;
  S.tSArrayType = S.tsArrayType = Wae;
  S.tSAsExpression = S.tsAsExpression = uoe;
  S.tSBigIntKeyword = S.tsBigIntKeyword = Cae;
  S.tSBooleanKeyword = S.tsBooleanKeyword = Aae;
  S.tSCallSignatureDeclaration = S.tsCallSignatureDeclaration = Eae;
  S.tSConditionalType = S.tsConditionalType = Jae;
  S.tSConstructSignatureDeclaration = S.tsConstructSignatureDeclaration = vae;
  S.tSConstructorType = S.tsConstructorType = jae;
  S.tSDeclareFunction = S.tsDeclareFunction = yae;
  S.tSDeclareMethod = S.tsDeclareMethod = gae;
  S.tSEnumDeclaration = S.tsEnumDeclaration = poe;
  S.tSEnumMember = S.tsEnumMember = doe;
  S.tSExportAssignment = S.tsExportAssignment = voe;
  S.tSExpressionWithTypeArguments = S.tsExpressionWithTypeArguments = noe;
  S.tSExternalModuleReference = S.tsExternalModuleReference = boe;
  S.tSFunctionType = S.tsFunctionType = Mae;
  S.tSImportEqualsDeclaration = S.tsImportEqualsDeclaration = goe;
  S.tSImportType = S.tsImportType = yoe;
  S.tSIndexSignature = S.tsIndexSignature = xae;
  S.tSIndexedAccessType = S.tsIndexedAccessType = toe;
  S.tSInferType = S.tsInferType = Qae;
  S.tSInstantiationExpression = S.tsInstantiationExpression = loe;
  S.tSInterfaceBody = S.tsInterfaceBody = aoe;
  S.tSInterfaceDeclaration = S.tsInterfaceDeclaration = ioe;
  S.tSIntersectionType = S.tsIntersectionType = zae;
  S.tSIntrinsicKeyword = S.tsIntrinsicKeyword = wae;
  S.tSLiteralType = S.tsLiteralType = soe;
  S.tSMappedType = S.tsMappedType = roe;
  S.tSMethodSignature = S.tsMethodSignature = Tae;
  S.tSModuleBlock = S.tsModuleBlock = moe;
  S.tSModuleDeclaration = S.tsModuleDeclaration = hoe;
  S.tSNamedTupleMember = S.tsNamedTupleMember = Yae;
  S.tSNamespaceExportDeclaration = S.tsNamespaceExportDeclaration = Soe;
  S.tSNeverKeyword = S.tsNeverKeyword = Dae;
  S.tSNonNullExpression = S.tsNonNullExpression = Eoe;
  S.tSNullKeyword = S.tsNullKeyword = Iae;
  S.tSNumberKeyword = S.tsNumberKeyword = _ae;
  S.tSObjectKeyword = S.tsObjectKeyword = Oae;
  S.tSOptionalType = S.tsOptionalType = Gae;
  S.tSParameterProperty = S.tsParameterProperty = mae;
  S.tSParenthesizedType = S.tsParenthesizedType = Zae;
  S.tSPropertySignature = S.tsPropertySignature = Sae;
  S.tSQualifiedName = S.tsQualifiedName = bae;
  S.tSRestType = S.tsRestType = Kae;
  S.tSSatisfiesExpression = S.tsSatisfiesExpression = coe;
  S.tSStringKeyword = S.tsStringKeyword = Nae;
  S.tSSymbolKeyword = S.tsSymbolKeyword = Rae;
  S.tSThisType = S.tsThisType = Bae;
  S.tSTupleType = S.tsTupleType = Hae;
  S.tSTypeAliasDeclaration = S.tsTypeAliasDeclaration = ooe;
  S.tSTypeAnnotation = S.tsTypeAnnotation = Toe;
  S.tSTypeAssertion = S.tsTypeAssertion = foe;
  S.tSTypeLiteral = S.tsTypeLiteral = Vae;
  S.tSTypeOperator = S.tsTypeOperator = eoe;
  S.tSTypeParameter = S.tsTypeParameter = Aoe;
  S.tSTypeParameterDeclaration = S.tsTypeParameterDeclaration = Poe;
  S.tSTypeParameterInstantiation = S.tsTypeParameterInstantiation = xoe;
  S.tSTypePredicate = S.tsTypePredicate = $ae;
  S.tSTypeQuery = S.tsTypeQuery = Uae;
  S.tSTypeReference = S.tsTypeReference = qae;
  S.tSUndefinedKeyword = S.tsUndefinedKeyword = kae;
  S.tSUnionType = S.tsUnionType = Xae;
  S.tSUnknownKeyword = S.tsUnknownKeyword = Fae;
  S.tSVoidKeyword = S.tsVoidKeyword = Lae;
  S.tupleExpression = lae;
  S.tupleTypeAnnotation = mie;
  S.typeAlias = gie;
  S.typeAnnotation = bie;
  S.typeCastExpression = Eie;
  S.typeParameter = vie;
  S.typeParameterDeclaration = Sie;
  S.typeParameterInstantiation = Tie;
  S.typeofTypeAnnotation = yie;
  S.unaryExpression = Mse;
  S.unionTypeAnnotation = xie;
  S.updateExpression = jse;
  S.v8IntrinsicIdentifier = eae;
  S.variableDeclaration = qse;
  S.variableDeclarator = $se;
  S.variance = Pie;
  S.voidTypeAnnotation = Aie;
  S.whileStatement = Use;
  S.withStatement = Vse;
  S.yieldExpression = dne;
  var B = _R(), Rp = Bu();
  function zre(e = []) {
    return (0, B.default)({
      type: "ArrayExpression",
      elements: e
    });
  }
  i(zre, "arrayExpression");
  function Jre(e, t, r) {
    return (0, B.default)({
      type: "AssignmentExpression",
      operator: e,
      left: t,
      right: r
    });
  }
  i(Jre, "assignmentExpression");
  function Qre(e, t, r) {
    return (0, B.default)({
      type: "BinaryExpression",
      operator: e,
      left: t,
      right: r
    });
  }
  i(Qre, "binaryExpression");
  function Zre(e) {
    return (0, B.default)({
      type: "InterpreterDirective",
      value: e
    });
  }
  i(Zre, "interpreterDirective");
  function ese(e) {
    return (0, B.default)({
      type: "Directive",
      value: e
    });
  }
  i(ese, "directive");
  function tse(e) {
    return (0, B.default)({
      type: "DirectiveLiteral",
      value: e
    });
  }
  i(tse, "directiveLiteral");
  function rse(e, t = []) {
    return (0, B.default)({
      type: "BlockStatement",
      body: e,
      directives: t
    });
  }
  i(rse, "blockStatement");
  function sse(e = null) {
    return (0, B.default)({
      type: "BreakStatement",
      label: e
    });
  }
  i(sse, "breakStatement");
  function nse(e, t) {
    return (0, B.default)({
      type: "CallExpression",
      callee: e,
      arguments: t
    });
  }
  i(nse, "callExpression");
  function ise(e = null, t) {
    return (0, B.default)({
      type: "CatchClause",
      param: e,
      body: t
    });
  }
  i(ise, "catchClause");
  function ase(e, t, r) {
    return (0, B.default)({
      type: "ConditionalExpression",
      test: e,
      consequent: t,
      alternate: r
    });
  }
  i(ase, "conditionalExpression");
  function ose(e = null) {
    return (0, B.default)({
      type: "ContinueStatement",
      label: e
    });
  }
  i(ose, "continueStatement");
  function lse() {
    return {
      type: "DebuggerStatement"
    };
  }
  i(lse, "debuggerStatement");
  function use(e, t) {
    return (0, B.default)({
      type: "DoWhileStatement",
      test: e,
      body: t
    });
  }
  i(use, "doWhileStatement");
  function cse() {
    return {
      type: "EmptyStatement"
    };
  }
  i(cse, "emptyStatement");
  function fse(e) {
    return (0, B.default)({
      type: "ExpressionStatement",
      expression: e
    });
  }
  i(fse, "expressionStatement");
  function pse(e, t = null, r = null) {
    return (0, B.default)({
      type: "File",
      program: e,
      comments: t,
      tokens: r
    });
  }
  i(pse, "file");
  function dse(e, t, r) {
    return (0, B.default)({
      type: "ForInStatement",
      left: e,
      right: t,
      body: r
    });
  }
  i(dse, "forInStatement");
  function hse(e = null, t = null, r = null, s) {
    return (0, B.default)({
      type: "ForStatement",
      init: e,
      test: t,
      update: r,
      body: s
    });
  }
  i(hse, "forStatement");
  function mse(e = null, t, r, s = !1, n = !1) {
    return (0, B.default)({
      type: "FunctionDeclaration",
      id: e,
      params: t,
      body: r,
      generator: s,
      async: n
    });
  }
  i(mse, "functionDeclaration");
  function yse(e = null, t, r, s = !1, n = !1) {
    return (0, B.default)({
      type: "FunctionExpression",
      id: e,
      params: t,
      body: r,
      generator: s,
      async: n
    });
  }
  i(yse, "functionExpression");
  function gse(e) {
    return (0, B.default)({
      type: "Identifier",
      name: e
    });
  }
  i(gse, "identifier");
  function bse(e, t, r = null) {
    return (0, B.default)({
      type: "IfStatement",
      test: e,
      consequent: t,
      alternate: r
    });
  }
  i(bse, "ifStatement");
  function Ese(e, t) {
    return (0, B.default)({
      type: "LabeledStatement",
      label: e,
      body: t
    });
  }
  i(Ese, "labeledStatement");
  function vse(e) {
    return (0, B.default)({
      type: "StringLiteral",
      value: e
    });
  }
  i(vse, "stringLiteral");
  function OR(e) {
    return (0, B.default)({
      type: "NumericLiteral",
      value: e
    });
  }
  i(OR, "numericLiteral");
  function Sse() {
    return {
      type: "NullLiteral"
    };
  }
  i(Sse, "nullLiteral");
  function Tse(e) {
    return (0, B.default)({
      type: "BooleanLiteral",
      value: e
    });
  }
  i(Tse, "booleanLiteral");
  function NR(e, t = "") {
    return (0, B.default)({
      type: "RegExpLiteral",
      pattern: e,
      flags: t
    });
  }
  i(NR, "regExpLiteral");
  function xse(e, t, r) {
    return (0, B.default)({
      type: "LogicalExpression",
      operator: e,
      left: t,
      right: r
    });
  }
  i(xse, "logicalExpression");
  function Pse(e, t, r = !1, s = null) {
    return (0, B.default)({
      type: "MemberExpression",
      object: e,
      property: t,
      computed: r,
      optional: s
    });
  }
  i(Pse, "memberExpression");
  function Ase(e, t) {
    return (0, B.default)({
      type: "NewExpression",
      callee: e,
      arguments: t
    });
  }
  i(Ase, "newExpression");
  function Cse(e, t = [], r = "script", s = null) {
    return (0, B.default)({
      type: "Program",
      body: e,
      directives: t,
      sourceType: r,
      interpreter: s
    });
  }
  i(Cse, "program");
  function wse(e) {
    return (0, B.default)({
      type: "ObjectExpression",
      properties: e
    });
  }
  i(wse, "objectExpression");
  function Dse(e = "method", t, r, s, n = !1, a = !1, o = !1) {
    return (0, B.default)({
      type: "ObjectMethod",
      kind: e,
      key: t,
      params: r,
      body: s,
      computed: n,
      generator: a,
      async: o
    });
  }
  i(Dse, "objectMethod");
  function Ise(e, t, r = !1, s = !1, n = null) {
    return (0, B.default)({
      type: "ObjectProperty",
      key: e,
      value: t,
      computed: r,
      shorthand: s,
      decorators: n
    });
  }
  i(Ise, "objectProperty");
  function RR(e) {
    return (0, B.default)({
      type: "RestElement",
      argument: e
    });
  }
  i(RR, "restElement");
  function _se(e = null) {
    return (0, B.default)({
      type: "ReturnStatement",
      argument: e
    });
  }
  i(_se, "returnStatement");
  function Ose(e) {
    return (0, B.default)({
      type: "SequenceExpression",
      expressions: e
    });
  }
  i(Ose, "sequenceExpression");
  function Nse(e) {
    return (0, B.default)({
      type: "ParenthesizedExpression",
      expression: e
    });
  }
  i(Nse, "parenthesizedExpression");
  function Rse(e = null, t) {
    return (0, B.default)({
      type: "SwitchCase",
      test: e,
      consequent: t
    });
  }
  i(Rse, "switchCase");
  function kse(e, t) {
    return (0, B.default)({
      type: "SwitchStatement",
      discriminant: e,
      cases: t
    });
  }
  i(kse, "switchStatement");
  function Fse() {
    return {
      type: "ThisExpression"
    };
  }
  i(Fse, "thisExpression");
  function Lse(e) {
    return (0, B.default)({
      type: "ThrowStatement",
      argument: e
    });
  }
  i(Lse, "throwStatement");
  function Bse(e, t = null, r = null) {
    return (0, B.default)({
      type: "TryStatement",
      block: e,
      handler: t,
      finalizer: r
    });
  }
  i(Bse, "tryStatement");
  function Mse(e, t, r = !0) {
    return (0, B.default)({
      type: "UnaryExpression",
      operator: e,
      argument: t,
      prefix: r
    });
  }
  i(Mse, "unaryExpression");
  function jse(e, t, r = !1) {
    return (0, B.default)({
      type: "UpdateExpression",
      operator: e,
      argument: t,
      prefix: r
    });
  }
  i(jse, "updateExpression");
  function qse(e, t) {
    return (0, B.default)({
      type: "VariableDeclaration",
      kind: e,
      declarations: t
    });
  }
  i(qse, "variableDeclaration");
  function $se(e, t = null) {
    return (0, B.default)({
      type: "VariableDeclarator",
      id: e,
      init: t
    });
  }
  i($se, "variableDeclarator");
  function Use(e, t) {
    return (0, B.default)({
      type: "WhileStatement",
      test: e,
      body: t
    });
  }
  i(Use, "whileStatement");
  function Vse(e, t) {
    return (0, B.default)({
      type: "WithStatement",
      object: e,
      body: t
    });
  }
  i(Vse, "withStatement");
  function Wse(e, t) {
    return (0, B.default)({
      type: "AssignmentPattern",
      left: e,
      right: t
    });
  }
  i(Wse, "assignmentPattern");
  function Hse(e) {
    return (0, B.default)({
      type: "ArrayPattern",
      elements: e
    });
  }
  i(Hse, "arrayPattern");
  function Gse(e, t, r = !1) {
    return (0, B.default)({
      type: "ArrowFunctionExpression",
      params: e,
      body: t,
      async: r,
      expression: null
    });
  }
  i(Gse, "arrowFunctionExpression");
  function Kse(e) {
    return (0, B.default)({
      type: "ClassBody",
      body: e
    });
  }
  i(Kse, "classBody");
  function Yse(e = null, t = null, r, s = null) {
    return (0, B.default)({
      type: "ClassExpression",
      id: e,
      superClass: t,
      body: r,
      decorators: s
    });
  }
  i(Yse, "classExpression");
  function Xse(e = null, t = null, r, s = null) {
    return (0, B.default)({
      type: "ClassDeclaration",
      id: e,
      superClass: t,
      body: r,
      decorators: s
    });
  }
  i(Xse, "classDeclaration");
  function zse(e) {
    return (0, B.default)({
      type: "ExportAllDeclaration",
      source: e
    });
  }
  i(zse, "exportAllDeclaration");
  function Jse(e) {
    return (0, B.default)({
      type: "ExportDefaultDeclaration",
      declaration: e
    });
  }
  i(Jse, "exportDefaultDeclaration");
  function Qse(e = null, t = [], r = null) {
    return (0, B.default)({
      type: "ExportNamedDeclaration",
      declaration: e,
      specifiers: t,
      source: r
    });
  }
  i(Qse, "exportNamedDeclaration");
  function Zse(e, t) {
    return (0, B.default)({
      type: "ExportSpecifier",
      local: e,
      exported: t
    });
  }
  i(Zse, "exportSpecifier");
  function ene(e, t, r, s = !1) {
    return (0, B.default)({
      type: "ForOfStatement",
      left: e,
      right: t,
      body: r,
      await: s
    });
  }
  i(ene, "forOfStatement");
  function tne(e, t) {
    return (0, B.default)({
      type: "ImportDeclaration",
      specifiers: e,
      source: t
    });
  }
  i(tne, "importDeclaration");
  function rne(e) {
    return (0, B.default)({
      type: "ImportDefaultSpecifier",
      local: e
    });
  }
  i(rne, "importDefaultSpecifier");
  function sne(e) {
    return (0, B.default)({
      type: "ImportNamespaceSpecifier",
      local: e
    });
  }
  i(sne, "importNamespaceSpecifier");
  function nne(e, t) {
    return (0, B.default)({
      type: "ImportSpecifier",
      local: e,
      imported: t
    });
  }
  i(nne, "importSpecifier");
  function ine(e, t = null) {
    return (0, B.default)({
      type: "ImportExpression",
      source: e,
      options: t
    });
  }
  i(ine, "importExpression");
  function ane(e, t) {
    return (0, B.default)({
      type: "MetaProperty",
      meta: e,
      property: t
    });
  }
  i(ane, "metaProperty");
  function one(e = "method", t, r, s, n = !1, a = !1, o = !1, l = !1) {
    return (0, B.default)({
      type: "ClassMethod",
      kind: e,
      key: t,
      params: r,
      body: s,
      computed: n,
      static: a,
      generator: o,
      async: l
    });
  }
  i(one, "classMethod");
  function lne(e) {
    return (0, B.default)({
      type: "ObjectPattern",
      properties: e
    });
  }
  i(lne, "objectPattern");
  function kR(e) {
    return (0, B.default)({
      type: "SpreadElement",
      argument: e
    });
  }
  i(kR, "spreadElement");
  function une() {
    return {
      type: "Super"
    };
  }
  i(une, "_super");
  function cne(e, t) {
    return (0, B.default)({
      type: "TaggedTemplateExpression",
      tag: e,
      quasi: t
    });
  }
  i(cne, "taggedTemplateExpression");
  function fne(e, t = !1) {
    return (0, B.default)({
      type: "TemplateElement",
      value: e,
      tail: t
    });
  }
  i(fne, "templateElement");
  function pne(e, t) {
    return (0, B.default)({
      type: "TemplateLiteral",
      quasis: e,
      expressions: t
    });
  }
  i(pne, "templateLiteral");
  function dne(e = null, t = !1) {
    return (0, B.default)({
      type: "YieldExpression",
      argument: e,
      delegate: t
    });
  }
  i(dne, "yieldExpression");
  function hne(e) {
    return (0, B.default)({
      type: "AwaitExpression",
      argument: e
    });
  }
  i(hne, "awaitExpression");
  function mne() {
    return {
      type: "Import"
    };
  }
  i(mne, "_import");
  function yne(e) {
    return (0, B.default)({
      type: "BigIntLiteral",
      value: e
    });
  }
  i(yne, "bigIntLiteral");
  function gne(e) {
    return (0, B.default)({
      type: "ExportNamespaceSpecifier",
      exported: e
    });
  }
  i(gne, "exportNamespaceSpecifier");
  function bne(e, t, r = !1, s) {
    return (0, B.default)({
      type: "OptionalMemberExpression",
      object: e,
      property: t,
      computed: r,
      optional: s
    });
  }
  i(bne, "optionalMemberExpression");
  function Ene(e, t, r) {
    return (0, B.default)({
      type: "OptionalCallExpression",
      callee: e,
      arguments: t,
      optional: r
    });
  }
  i(Ene, "optionalCallExpression");
  function vne(e, t = null, r = null, s = null, n = !1, a = !1) {
    return (0, B.default)({
      type: "ClassProperty",
      key: e,
      value: t,
      typeAnnotation: r,
      decorators: s,
      computed: n,
      static: a
    });
  }
  i(vne, "classProperty");
  function Sne(e, t = null, r = null, s = null, n = !1, a = !1) {
    return (0, B.default)({
      type: "ClassAccessorProperty",
      key: e,
      value: t,
      typeAnnotation: r,
      decorators: s,
      computed: n,
      static: a
    });
  }
  i(Sne, "classAccessorProperty");
  function Tne(e, t = null, r = null, s = !1) {
    return (0, B.default)({
      type: "ClassPrivateProperty",
      key: e,
      value: t,
      decorators: r,
      static: s
    });
  }
  i(Tne, "classPrivateProperty");
  function xne(e = "method", t, r, s, n = !1) {
    return (0, B.default)({
      type: "ClassPrivateMethod",
      kind: e,
      key: t,
      params: r,
      body: s,
      static: n
    });
  }
  i(xne, "classPrivateMethod");
  function Pne(e) {
    return (0, B.default)({
      type: "PrivateName",
      id: e
    });
  }
  i(Pne, "privateName");
  function Ane(e) {
    return (0, B.default)({
      type: "StaticBlock",
      body: e
    });
  }
  i(Ane, "staticBlock");
  function Cne() {
    return {
      type: "AnyTypeAnnotation"
    };
  }
  i(Cne, "anyTypeAnnotation");
  function wne(e) {
    return (0, B.default)({
      type: "ArrayTypeAnnotation",
      elementType: e
    });
  }
  i(wne, "arrayTypeAnnotation");
  function Dne() {
    return {
      type: "BooleanTypeAnnotation"
    };
  }
  i(Dne, "booleanTypeAnnotation");
  function Ine(e) {
    return (0, B.default)({
      type: "BooleanLiteralTypeAnnotation",
      value: e
    });
  }
  i(Ine, "booleanLiteralTypeAnnotation");
  function _ne() {
    return {
      type: "NullLiteralTypeAnnotation"
    };
  }
  i(_ne, "nullLiteralTypeAnnotation");
  function One(e, t = null) {
    return (0, B.default)({
      type: "ClassImplements",
      id: e,
      typeParameters: t
    });
  }
  i(One, "classImplements");
  function Nne(e, t = null, r = null, s) {
    return (0, B.default)({
      type: "DeclareClass",
      id: e,
      typeParameters: t,
      extends: r,
      body: s
    });
  }
  i(Nne, "declareClass");
  function Rne(e) {
    return (0, B.default)({
      type: "DeclareFunction",
      id: e
    });
  }
  i(Rne, "declareFunction");
  function kne(e, t = null, r = null, s) {
    return (0, B.default)({
      type: "DeclareInterface",
      id: e,
      typeParameters: t,
      extends: r,
      body: s
    });
  }
  i(kne, "declareInterface");
  function Fne(e, t, r = null) {
    return (0, B.default)({
      type: "DeclareModule",
      id: e,
      body: t,
      kind: r
    });
  }
  i(Fne, "declareModule");
  function Lne(e) {
    return (0, B.default)({
      type: "DeclareModuleExports",
      typeAnnotation: e
    });
  }
  i(Lne, "declareModuleExports");
  function Bne(e, t = null, r) {
    return (0, B.default)({
      type: "DeclareTypeAlias",
      id: e,
      typeParameters: t,
      right: r
    });
  }
  i(Bne, "declareTypeAlias");
  function Mne(e, t = null, r = null) {
    return (0, B.default)({
      type: "DeclareOpaqueType",
      id: e,
      typeParameters: t,
      supertype: r
    });
  }
  i(Mne, "declareOpaqueType");
  function jne(e) {
    return (0, B.default)({
      type: "DeclareVariable",
      id: e
    });
  }
  i(jne, "declareVariable");
  function qne(e = null, t = null, r = null) {
    return (0, B.default)({
      type: "DeclareExportDeclaration",
      declaration: e,
      specifiers: t,
      source: r
    });
  }
  i(qne, "declareExportDeclaration");
  function $ne(e) {
    return (0, B.default)({
      type: "DeclareExportAllDeclaration",
      source: e
    });
  }
  i($ne, "declareExportAllDeclaration");
  function Une(e) {
    return (0, B.default)({
      type: "DeclaredPredicate",
      value: e
    });
  }
  i(Une, "declaredPredicate");
  function Vne() {
    return {
      type: "ExistsTypeAnnotation"
    };
  }
  i(Vne, "existsTypeAnnotation");
  function Wne(e = null, t, r = null, s) {
    return (0, B.default)({
      type: "FunctionTypeAnnotation",
      typeParameters: e,
      params: t,
      rest: r,
      returnType: s
    });
  }
  i(Wne, "functionTypeAnnotation");
  function Hne(e = null, t) {
    return (0, B.default)({
      type: "FunctionTypeParam",
      name: e,
      typeAnnotation: t
    });
  }
  i(Hne, "functionTypeParam");
  function Gne(e, t = null) {
    return (0, B.default)({
      type: "GenericTypeAnnotation",
      id: e,
      typeParameters: t
    });
  }
  i(Gne, "genericTypeAnnotation");
  function Kne() {
    return {
      type: "InferredPredicate"
    };
  }
  i(Kne, "inferredPredicate");
  function Yne(e, t = null) {
    return (0, B.default)({
      type: "InterfaceExtends",
      id: e,
      typeParameters: t
    });
  }
  i(Yne, "interfaceExtends");
  function Xne(e, t = null, r = null, s) {
    return (0, B.default)({
      type: "InterfaceDeclaration",
      id: e,
      typeParameters: t,
      extends: r,
      body: s
    });
  }
  i(Xne, "interfaceDeclaration");
  function zne(e = null, t) {
    return (0, B.default)({
      type: "InterfaceTypeAnnotation",
      extends: e,
      body: t
    });
  }
  i(zne, "interfaceTypeAnnotation");
  function Jne(e) {
    return (0, B.default)({
      type: "IntersectionTypeAnnotation",
      types: e
    });
  }
  i(Jne, "intersectionTypeAnnotation");
  function Qne() {
    return {
      type: "MixedTypeAnnotation"
    };
  }
  i(Qne, "mixedTypeAnnotation");
  function Zne() {
    return {
      type: "EmptyTypeAnnotation"
    };
  }
  i(Zne, "emptyTypeAnnotation");
  function eie(e) {
    return (0, B.default)({
      type: "NullableTypeAnnotation",
      typeAnnotation: e
    });
  }
  i(eie, "nullableTypeAnnotation");
  function tie(e) {
    return (0, B.default)({
      type: "NumberLiteralTypeAnnotation",
      value: e
    });
  }
  i(tie, "numberLiteralTypeAnnotation");
  function rie() {
    return {
      type: "NumberTypeAnnotation"
    };
  }
  i(rie, "numberTypeAnnotation");
  function sie(e, t = [], r = [], s = [], n = !1) {
    return (0, B.default)({
      type: "ObjectTypeAnnotation",
      properties: e,
      indexers: t,
      callProperties: r,
      internalSlots: s,
      exact: n
    });
  }
  i(sie, "objectTypeAnnotation");
  function nie(e, t, r, s, n) {
    return (0, B.default)({
      type: "ObjectTypeInternalSlot",
      id: e,
      value: t,
      optional: r,
      static: s,
      method: n
    });
  }
  i(nie, "objectTypeInternalSlot");
  function iie(e) {
    return (0, B.default)({
      type: "ObjectTypeCallProperty",
      value: e,
      static: null
    });
  }
  i(iie, "objectTypeCallProperty");
  function aie(e = null, t, r, s = null) {
    return (0, B.default)({
      type: "ObjectTypeIndexer",
      id: e,
      key: t,
      value: r,
      variance: s,
      static: null
    });
  }
  i(aie, "objectTypeIndexer");
  function oie(e, t, r = null) {
    return (0, B.default)({
      type: "ObjectTypeProperty",
      key: e,
      value: t,
      variance: r,
      kind: null,
      method: null,
      optional: null,
      proto: null,
      static: null
    });
  }
  i(oie, "objectTypeProperty");
  function lie(e) {
    return (0, B.default)({
      type: "ObjectTypeSpreadProperty",
      argument: e
    });
  }
  i(lie, "objectTypeSpreadProperty");
  function uie(e, t = null, r = null, s) {
    return (0, B.default)({
      type: "OpaqueType",
      id: e,
      typeParameters: t,
      supertype: r,
      impltype: s
    });
  }
  i(uie, "opaqueType");
  function cie(e, t) {
    return (0, B.default)({
      type: "QualifiedTypeIdentifier",
      id: e,
      qualification: t
    });
  }
  i(cie, "qualifiedTypeIdentifier");
  function fie(e) {
    return (0, B.default)({
      type: "StringLiteralTypeAnnotation",
      value: e
    });
  }
  i(fie, "stringLiteralTypeAnnotation");
  function pie() {
    return {
      type: "StringTypeAnnotation"
    };
  }
  i(pie, "stringTypeAnnotation");
  function die() {
    return {
      type: "SymbolTypeAnnotation"
    };
  }
  i(die, "symbolTypeAnnotation");
  function hie() {
    return {
      type: "ThisTypeAnnotation"
    };
  }
  i(hie, "thisTypeAnnotation");
  function mie(e) {
    return (0, B.default)({
      type: "TupleTypeAnnotation",
      types: e
    });
  }
  i(mie, "tupleTypeAnnotation");
  function yie(e) {
    return (0, B.default)({
      type: "TypeofTypeAnnotation",
      argument: e
    });
  }
  i(yie, "typeofTypeAnnotation");
  function gie(e, t = null, r) {
    return (0, B.default)({
      type: "TypeAlias",
      id: e,
      typeParameters: t,
      right: r
    });
  }
  i(gie, "typeAlias");
  function bie(e) {
    return (0, B.default)({
      type: "TypeAnnotation",
      typeAnnotation: e
    });
  }
  i(bie, "typeAnnotation");
  function Eie(e, t) {
    return (0, B.default)({
      type: "TypeCastExpression",
      expression: e,
      typeAnnotation: t
    });
  }
  i(Eie, "typeCastExpression");
  function vie(e = null, t = null, r = null) {
    return (0, B.default)({
      type: "TypeParameter",
      bound: e,
      default: t,
      variance: r,
      name: null
    });
  }
  i(vie, "typeParameter");
  function Sie(e) {
    return (0, B.default)({
      type: "TypeParameterDeclaration",
      params: e
    });
  }
  i(Sie, "typeParameterDeclaration");
  function Tie(e) {
    return (0, B.default)({
      type: "TypeParameterInstantiation",
      params: e
    });
  }
  i(Tie, "typeParameterInstantiation");
  function xie(e) {
    return (0, B.default)({
      type: "UnionTypeAnnotation",
      types: e
    });
  }
  i(xie, "unionTypeAnnotation");
  function Pie(e) {
    return (0, B.default)({
      type: "Variance",
      kind: e
    });
  }
  i(Pie, "variance");
  function Aie() {
    return {
      type: "VoidTypeAnnotation"
    };
  }
  i(Aie, "voidTypeAnnotation");
  function Cie(e, t) {
    return (0, B.default)({
      type: "EnumDeclaration",
      id: e,
      body: t
    });
  }
  i(Cie, "enumDeclaration");
  function wie(e) {
    return (0, B.default)({
      type: "EnumBooleanBody",
      members: e,
      explicitType: null,
      hasUnknownMembers: null
    });
  }
  i(wie, "enumBooleanBody");
  function Die(e) {
    return (0, B.default)({
      type: "EnumNumberBody",
      members: e,
      explicitType: null,
      hasUnknownMembers: null
    });
  }
  i(Die, "enumNumberBody");
  function Iie(e) {
    return (0, B.default)({
      type: "EnumStringBody",
      members: e,
      explicitType: null,
      hasUnknownMembers: null
    });
  }
  i(Iie, "enumStringBody");
  function _ie(e) {
    return (0, B.default)({
      type: "EnumSymbolBody",
      members: e,
      hasUnknownMembers: null
    });
  }
  i(_ie, "enumSymbolBody");
  function Oie(e) {
    return (0, B.default)({
      type: "EnumBooleanMember",
      id: e,
      init: null
    });
  }
  i(Oie, "enumBooleanMember");
  function Nie(e, t) {
    return (0, B.default)({
      type: "EnumNumberMember",
      id: e,
      init: t
    });
  }
  i(Nie, "enumNumberMember");
  function Rie(e, t) {
    return (0, B.default)({
      type: "EnumStringMember",
      id: e,
      init: t
    });
  }
  i(Rie, "enumStringMember");
  function kie(e) {
    return (0, B.default)({
      type: "EnumDefaultedMember",
      id: e
    });
  }
  i(kie, "enumDefaultedMember");
  function Fie(e, t) {
    return (0, B.default)({
      type: "IndexedAccessType",
      objectType: e,
      indexType: t
    });
  }
  i(Fie, "indexedAccessType");
  function Lie(e, t) {
    return (0, B.default)({
      type: "OptionalIndexedAccessType",
      objectType: e,
      indexType: t,
      optional: null
    });
  }
  i(Lie, "optionalIndexedAccessType");
  function Bie(e, t = null) {
    return (0, B.default)({
      type: "JSXAttribute",
      name: e,
      value: t
    });
  }
  i(Bie, "jsxAttribute");
  function Mie(e) {
    return (0, B.default)({
      type: "JSXClosingElement",
      name: e
    });
  }
  i(Mie, "jsxClosingElement");
  function jie(e, t = null, r, s = null) {
    return (0, B.default)({
      type: "JSXElement",
      openingElement: e,
      closingElement: t,
      children: r,
      selfClosing: s
    });
  }
  i(jie, "jsxElement");
  function qie() {
    return {
      type: "JSXEmptyExpression"
    };
  }
  i(qie, "jsxEmptyExpression");
  function $ie(e) {
    return (0, B.default)({
      type: "JSXExpressionContainer",
      expression: e
    });
  }
  i($ie, "jsxExpressionContainer");
  function Uie(e) {
    return (0, B.default)({
      type: "JSXSpreadChild",
      expression: e
    });
  }
  i(Uie, "jsxSpreadChild");
  function Vie(e) {
    return (0, B.default)({
      type: "JSXIdentifier",
      name: e
    });
  }
  i(Vie, "jsxIdentifier");
  function Wie(e, t) {
    return (0, B.default)({
      type: "JSXMemberExpression",
      object: e,
      property: t
    });
  }
  i(Wie, "jsxMemberExpression");
  function Hie(e, t) {
    return (0, B.default)({
      type: "JSXNamespacedName",
      namespace: e,
      name: t
    });
  }
  i(Hie, "jsxNamespacedName");
  function Gie(e, t, r = !1) {
    return (0, B.default)({
      type: "JSXOpeningElement",
      name: e,
      attributes: t,
      selfClosing: r
    });
  }
  i(Gie, "jsxOpeningElement");
  function Kie(e) {
    return (0, B.default)({
      type: "JSXSpreadAttribute",
      argument: e
    });
  }
  i(Kie, "jsxSpreadAttribute");
  function Yie(e) {
    return (0, B.default)({
      type: "JSXText",
      value: e
    });
  }
  i(Yie, "jsxText");
  function Xie(e, t, r) {
    return (0, B.default)({
      type: "JSXFragment",
      openingFragment: e,
      closingFragment: t,
      children: r
    });
  }
  i(Xie, "jsxFragment");
  function zie() {
    return {
      type: "JSXOpeningFragment"
    };
  }
  i(zie, "jsxOpeningFragment");
  function Jie() {
    return {
      type: "JSXClosingFragment"
    };
  }
  i(Jie, "jsxClosingFragment");
  function Qie() {
    return {
      type: "Noop"
    };
  }
  i(Qie, "noop");
  function Zie(e, t) {
    return (0, B.default)({
      type: "Placeholder",
      expectedNode: e,
      name: t
    });
  }
  i(Zie, "placeholder");
  function eae(e) {
    return (0, B.default)({
      type: "V8IntrinsicIdentifier",
      name: e
    });
  }
  i(eae, "v8IntrinsicIdentifier");
  function tae() {
    return {
      type: "ArgumentPlaceholder"
    };
  }
  i(tae, "argumentPlaceholder");
  function rae(e, t) {
    return (0, B.default)({
      type: "BindExpression",
      object: e,
      callee: t
    });
  }
  i(rae, "bindExpression");
  function sae(e, t) {
    return (0, B.default)({
      type: "ImportAttribute",
      key: e,
      value: t
    });
  }
  i(sae, "importAttribute");
  function nae(e) {
    return (0, B.default)({
      type: "Decorator",
      expression: e
    });
  }
  i(nae, "decorator");
  function iae(e, t = !1) {
    return (0, B.default)({
      type: "DoExpression",
      body: e,
      async: t
    });
  }
  i(iae, "doExpression");
  function aae(e) {
    return (0, B.default)({
      type: "ExportDefaultSpecifier",
      exported: e
    });
  }
  i(aae, "exportDefaultSpecifier");
  function oae(e) {
    return (0, B.default)({
      type: "RecordExpression",
      properties: e
    });
  }
  i(oae, "recordExpression");
  function lae(e = []) {
    return (0, B.default)({
      type: "TupleExpression",
      elements: e
    });
  }
  i(lae, "tupleExpression");
  function uae(e) {
    return (0, B.default)({
      type: "DecimalLiteral",
      value: e
    });
  }
  i(uae, "decimalLiteral");
  function cae(e) {
    return (0, B.default)({
      type: "ModuleExpression",
      body: e
    });
  }
  i(cae, "moduleExpression");
  function fae() {
    return {
      type: "TopicReference"
    };
  }
  i(fae, "topicReference");
  function pae(e) {
    return (0, B.default)({
      type: "PipelineTopicExpression",
      expression: e
    });
  }
  i(pae, "pipelineTopicExpression");
  function dae(e) {
    return (0, B.default)({
      type: "PipelineBareFunction",
      callee: e
    });
  }
  i(dae, "pipelineBareFunction");
  function hae() {
    return {
      type: "PipelinePrimaryTopicReference"
    };
  }
  i(hae, "pipelinePrimaryTopicReference");
  function mae(e) {
    return (0, B.default)({
      type: "TSParameterProperty",
      parameter: e
    });
  }
  i(mae, "tsParameterProperty");
  function yae(e = null, t = null, r, s = null) {
    return (0, B.default)({
      type: "TSDeclareFunction",
      id: e,
      typeParameters: t,
      params: r,
      returnType: s
    });
  }
  i(yae, "tsDeclareFunction");
  function gae(e = null, t, r = null, s, n = null) {
    return (0, B.default)({
      type: "TSDeclareMethod",
      decorators: e,
      key: t,
      typeParameters: r,
      params: s,
      returnType: n
    });
  }
  i(gae, "tsDeclareMethod");
  function bae(e, t) {
    return (0, B.default)({
      type: "TSQualifiedName",
      left: e,
      right: t
    });
  }
  i(bae, "tsQualifiedName");
  function Eae(e = null, t, r = null) {
    return (0, B.default)({
      type: "TSCallSignatureDeclaration",
      typeParameters: e,
      parameters: t,
      typeAnnotation: r
    });
  }
  i(Eae, "tsCallSignatureDeclaration");
  function vae(e = null, t, r = null) {
    return (0, B.default)({
      type: "TSConstructSignatureDeclaration",
      typeParameters: e,
      parameters: t,
      typeAnnotation: r
    });
  }
  i(vae, "tsConstructSignatureDeclaration");
  function Sae(e, t = null) {
    return (0, B.default)({
      type: "TSPropertySignature",
      key: e,
      typeAnnotation: t,
      kind: null
    });
  }
  i(Sae, "tsPropertySignature");
  function Tae(e, t = null, r, s = null) {
    return (0, B.default)({
      type: "TSMethodSignature",
      key: e,
      typeParameters: t,
      parameters: r,
      typeAnnotation: s,
      kind: null
    });
  }
  i(Tae, "tsMethodSignature");
  function xae(e, t = null) {
    return (0, B.default)({
      type: "TSIndexSignature",
      parameters: e,
      typeAnnotation: t
    });
  }
  i(xae, "tsIndexSignature");
  function Pae() {
    return {
      type: "TSAnyKeyword"
    };
  }
  i(Pae, "tsAnyKeyword");
  function Aae() {
    return {
      type: "TSBooleanKeyword"
    };
  }
  i(Aae, "tsBooleanKeyword");
  function Cae() {
    return {
      type: "TSBigIntKeyword"
    };
  }
  i(Cae, "tsBigIntKeyword");
  function wae() {
    return {
      type: "TSIntrinsicKeyword"
    };
  }
  i(wae, "tsIntrinsicKeyword");
  function Dae() {
    return {
      type: "TSNeverKeyword"
    };
  }
  i(Dae, "tsNeverKeyword");
  function Iae() {
    return {
      type: "TSNullKeyword"
    };
  }
  i(Iae, "tsNullKeyword");
  function _ae() {
    return {
      type: "TSNumberKeyword"
    };
  }
  i(_ae, "tsNumberKeyword");
  function Oae() {
    return {
      type: "TSObjectKeyword"
    };
  }
  i(Oae, "tsObjectKeyword");
  function Nae() {
    return {
      type: "TSStringKeyword"
    };
  }
  i(Nae, "tsStringKeyword");
  function Rae() {
    return {
      type: "TSSymbolKeyword"
    };
  }
  i(Rae, "tsSymbolKeyword");
  function kae() {
    return {
      type: "TSUndefinedKeyword"
    };
  }
  i(kae, "tsUndefinedKeyword");
  function Fae() {
    return {
      type: "TSUnknownKeyword"
    };
  }
  i(Fae, "tsUnknownKeyword");
  function Lae() {
    return {
      type: "TSVoidKeyword"
    };
  }
  i(Lae, "tsVoidKeyword");
  function Bae() {
    return {
      type: "TSThisType"
    };
  }
  i(Bae, "tsThisType");
  function Mae(e = null, t, r = null) {
    return (0, B.default)({
      type: "TSFunctionType",
      typeParameters: e,
      parameters: t,
      typeAnnotation: r
    });
  }
  i(Mae, "tsFunctionType");
  function jae(e = null, t, r = null) {
    return (0, B.default)({
      type: "TSConstructorType",
      typeParameters: e,
      parameters: t,
      typeAnnotation: r
    });
  }
  i(jae, "tsConstructorType");
  function qae(e, t = null) {
    return (0, B.default)({
      type: "TSTypeReference",
      typeName: e,
      typeParameters: t
    });
  }
  i(qae, "tsTypeReference");
  function $ae(e, t = null, r = null) {
    return (0, B.default)({
      type: "TSTypePredicate",
      parameterName: e,
      typeAnnotation: t,
      asserts: r
    });
  }
  i($ae, "tsTypePredicate");
  function Uae(e, t = null) {
    return (0, B.default)({
      type: "TSTypeQuery",
      exprName: e,
      typeParameters: t
    });
  }
  i(Uae, "tsTypeQuery");
  function Vae(e) {
    return (0, B.default)({
      type: "TSTypeLiteral",
      members: e
    });
  }
  i(Vae, "tsTypeLiteral");
  function Wae(e) {
    return (0, B.default)({
      type: "TSArrayType",
      elementType: e
    });
  }
  i(Wae, "tsArrayType");
  function Hae(e) {
    return (0, B.default)({
      type: "TSTupleType",
      elementTypes: e
    });
  }
  i(Hae, "tsTupleType");
  function Gae(e) {
    return (0, B.default)({
      type: "TSOptionalType",
      typeAnnotation: e
    });
  }
  i(Gae, "tsOptionalType");
  function Kae(e) {
    return (0, B.default)({
      type: "TSRestType",
      typeAnnotation: e
    });
  }
  i(Kae, "tsRestType");
  function Yae(e, t, r = !1) {
    return (0, B.default)({
      type: "TSNamedTupleMember",
      label: e,
      elementType: t,
      optional: r
    });
  }
  i(Yae, "tsNamedTupleMember");
  function Xae(e) {
    return (0, B.default)({
      type: "TSUnionType",
      types: e
    });
  }
  i(Xae, "tsUnionType");
  function zae(e) {
    return (0, B.default)({
      type: "TSIntersectionType",
      types: e
    });
  }
  i(zae, "tsIntersectionType");
  function Jae(e, t, r, s) {
    return (0, B.default)({
      type: "TSConditionalType",
      checkType: e,
      extendsType: t,
      trueType: r,
      falseType: s
    });
  }
  i(Jae, "tsConditionalType");
  function Qae(e) {
    return (0, B.default)({
      type: "TSInferType",
      typeParameter: e
    });
  }
  i(Qae, "tsInferType");
  function Zae(e) {
    return (0, B.default)({
      type: "TSParenthesizedType",
      typeAnnotation: e
    });
  }
  i(Zae, "tsParenthesizedType");
  function eoe(e) {
    return (0, B.default)({
      type: "TSTypeOperator",
      typeAnnotation: e,
      operator: null
    });
  }
  i(eoe, "tsTypeOperator");
  function toe(e, t) {
    return (0, B.default)({
      type: "TSIndexedAccessType",
      objectType: e,
      indexType: t
    });
  }
  i(toe, "tsIndexedAccessType");
  function roe(e, t = null, r = null) {
    return (0, B.default)({
      type: "TSMappedType",
      typeParameter: e,
      typeAnnotation: t,
      nameType: r
    });
  }
  i(roe, "tsMappedType");
  function soe(e) {
    return (0, B.default)({
      type: "TSLiteralType",
      literal: e
    });
  }
  i(soe, "tsLiteralType");
  function noe(e, t = null) {
    return (0, B.default)({
      type: "TSExpressionWithTypeArguments",
      expression: e,
      typeParameters: t
    });
  }
  i(noe, "tsExpressionWithTypeArguments");
  function ioe(e, t = null, r = null, s) {
    return (0, B.default)({
      type: "TSInterfaceDeclaration",
      id: e,
      typeParameters: t,
      extends: r,
      body: s
    });
  }
  i(ioe, "tsInterfaceDeclaration");
  function aoe(e) {
    return (0, B.default)({
      type: "TSInterfaceBody",
      body: e
    });
  }
  i(aoe, "tsInterfaceBody");
  function ooe(e, t = null, r) {
    return (0, B.default)({
      type: "TSTypeAliasDeclaration",
      id: e,
      typeParameters: t,
      typeAnnotation: r
    });
  }
  i(ooe, "tsTypeAliasDeclaration");
  function loe(e, t = null) {
    return (0, B.default)({
      type: "TSInstantiationExpression",
      expression: e,
      typeParameters: t
    });
  }
  i(loe, "tsInstantiationExpression");
  function uoe(e, t) {
    return (0, B.default)({
      type: "TSAsExpression",
      expression: e,
      typeAnnotation: t
    });
  }
  i(uoe, "tsAsExpression");
  function coe(e, t) {
    return (0, B.default)({
      type: "TSSatisfiesExpression",
      expression: e,
      typeAnnotation: t
    });
  }
  i(coe, "tsSatisfiesExpression");
  function foe(e, t) {
    return (0, B.default)({
      type: "TSTypeAssertion",
      typeAnnotation: e,
      expression: t
    });
  }
  i(foe, "tsTypeAssertion");
  function poe(e, t) {
    return (0, B.default)({
      type: "TSEnumDeclaration",
      id: e,
      members: t
    });
  }
  i(poe, "tsEnumDeclaration");
  function doe(e, t = null) {
    return (0, B.default)({
      type: "TSEnumMember",
      id: e,
      initializer: t
    });
  }
  i(doe, "tsEnumMember");
  function hoe(e, t) {
    return (0, B.default)({
      type: "TSModuleDeclaration",
      id: e,
      body: t
    });
  }
  i(hoe, "tsModuleDeclaration");
  function moe(e) {
    return (0, B.default)({
      type: "TSModuleBlock",
      body: e
    });
  }
  i(moe, "tsModuleBlock");
  function yoe(e, t = null, r = null) {
    return (0, B.default)({
      type: "TSImportType",
      argument: e,
      qualifier: t,
      typeParameters: r
    });
  }
  i(yoe, "tsImportType");
  function goe(e, t) {
    return (0, B.default)({
      type: "TSImportEqualsDeclaration",
      id: e,
      moduleReference: t,
      isExport: null
    });
  }
  i(goe, "tsImportEqualsDeclaration");
  function boe(e) {
    return (0, B.default)({
      type: "TSExternalModuleReference",
      expression: e
    });
  }
  i(boe, "tsExternalModuleReference");
  function Eoe(e) {
    return (0, B.default)({
      type: "TSNonNullExpression",
      expression: e
    });
  }
  i(Eoe, "tsNonNullExpression");
  function voe(e) {
    return (0, B.default)({
      type: "TSExportAssignment",
      expression: e
    });
  }
  i(voe, "tsExportAssignment");
  function Soe(e) {
    return (0, B.default)({
      type: "TSNamespaceExportDeclaration",
      id: e
    });
  }
  i(Soe, "tsNamespaceExportDeclaration");
  function Toe(e) {
    return (0, B.default)({
      type: "TSTypeAnnotation",
      typeAnnotation: e
    });
  }
  i(Toe, "tsTypeAnnotation");
  function xoe(e) {
    return (0, B.default)({
      type: "TSTypeParameterInstantiation",
      params: e
    });
  }
  i(xoe, "tsTypeParameterInstantiation");
  function Poe(e) {
    return (0, B.default)({
      type: "TSTypeParameterDeclaration",
      params: e
    });
  }
  i(Poe, "tsTypeParameterDeclaration");
  function Aoe(e = null, t = null, r) {
    return (0, B.default)({
      type: "TSTypeParameter",
      constraint: e,
      default: t,
      name: r
    });
  }
  i(Aoe, "tsTypeParameter");
  function Coe(e) {
    return (0, Rp.default)("NumberLiteral", "NumericLiteral", "The node type "), OR(e);
  }
  i(Coe, "NumberLiteral");
  function woe(e, t = "") {
    return (0, Rp.default)("RegexLiteral", "RegExpLiteral", "The node type "), NR(e, t);
  }
  i(woe, "RegexLiteral");
  function Doe(e) {
    return (0, Rp.default)("RestProperty", "RestElement", "The node type "), RR(e);
  }
  i(Doe, "RestProperty");
  function Ioe(e) {
    return (0, Rp.default)("SpreadProperty", "SpreadElement", "The node type "), kR(e);
  }
  i(Ioe, "SpreadProperty");
});

// ../node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js
var FR = y((hb) => {
  "use strict";
  Object.defineProperty(hb, "__esModule", {
    value: !0
  });
  hb.default = Noe;
  var _oe = is(), Ooe = Re();
  function Noe(e, t) {
    let r = e.value.split(/\r\n|\n|\r/), s = 0;
    for (let a = 0; a < r.length; a++)
      r[a].match(/[^ \t]/) && (s = a);
    let n = "";
    for (let a = 0; a < r.length; a++) {
      let o = r[a], l = a === 0, u = a === r.length - 1, c = a === s, f = o.replace(/\t/g, " ");
      l || (f = f.replace(/^[ ]+/, "")), u || (f = f.replace(/[ ]+$/, "")), f && (c || (f += " "), n += f);
    }
    n && t.push((0, Ooe.inherits)((0, _oe.stringLiteral)(n), e));
  }
  i(Noe, "cleanJSXElementLiteralChild");
});

// ../node_modules/@babel/types/lib/builders/react/buildChildren.js
var LR = y((yb) => {
  "use strict";
  Object.defineProperty(yb, "__esModule", {
    value: !0
  });
  yb.default = koe;
  var mb = hr(), Roe = FR();
  function koe(e) {
    let t = [];
    for (let r = 0; r < e.children.length; r++) {
      let s = e.children[r];
      if ((0, mb.isJSXText)(s)) {
        (0, Roe.default)(s, t);
        continue;
      }
      (0, mb.isJSXExpressionContainer)(s) && (s = s.expression), !(0, mb.isJSXEmptyExpression)(s) && t.push(s);
    }
    return t;
  }
  i(koe, "buildChildren");
});

// ../node_modules/@babel/types/lib/validators/isNode.js
var bb = y((gb) => {
  "use strict";
  Object.defineProperty(gb, "__esModule", {
    value: !0
  });
  gb.default = Loe;
  var Foe = Fs();
  function Loe(e) {
    return !!(e && Foe.VISITOR_KEYS[e.type]);
  }
  i(Loe, "isNode");
});

// ../node_modules/@babel/types/lib/asserts/assertNode.js
var BR = y((Eb) => {
  "use strict";
  Object.defineProperty(Eb, "__esModule", {
    value: !0
  });
  Eb.default = Moe;
  var Boe = bb();
  function Moe(e) {
    if (!(0, Boe.default)(e)) {
      var t;
      let r = (t = e?.type) != null ? t : JSON.stringify(e);
      throw new TypeError(`Not a valid node of type "${r}"`);
    }
  }
  i(Moe, "assertNode");
});

// ../node_modules/@babel/types/lib/asserts/generated/index.js
var MR = y((x) => {
  "use strict";
  Object.defineProperty(x, "__esModule", {
    value: !0
  });
  x.assertAccessor = ede;
  x.assertAnyTypeAnnotation = vue;
  x.assertArgumentPlaceholder = Xce;
  x.assertArrayExpression = qoe;
  x.assertArrayPattern = Mle;
  x.assertArrayTypeAnnotation = Sue;
  x.assertArrowFunctionExpression = jle;
  x.assertAssignmentExpression = $oe;
  x.assertAssignmentPattern = Ble;
  x.assertAwaitExpression = lue;
  x.assertBigIntLiteral = cue;
  x.assertBinary = Tpe;
  x.assertBinaryExpression = Uoe;
  x.assertBindExpression = zce;
  x.assertBlock = Ape;
  x.assertBlockParent = Ppe;
  x.assertBlockStatement = Goe;
  x.assertBooleanLiteral = dle;
  x.assertBooleanLiteralTypeAnnotation = xue;
  x.assertBooleanTypeAnnotation = Tue;
  x.assertBreakStatement = Koe;
  x.assertCallExpression = Yoe;
  x.assertCatchClause = Xoe;
  x.assertClass = zpe;
  x.assertClassAccessorProperty = mue;
  x.assertClassBody = qle;
  x.assertClassDeclaration = Ule;
  x.assertClassExpression = $le;
  x.assertClassImplements = Aue;
  x.assertClassMethod = eue;
  x.assertClassPrivateMethod = gue;
  x.assertClassPrivateProperty = yue;
  x.assertClassProperty = hue;
  x.assertCompletionStatement = Dpe;
  x.assertConditional = Ipe;
  x.assertConditionalExpression = zoe;
  x.assertContinueStatement = Joe;
  x.assertDebuggerStatement = Qoe;
  x.assertDecimalLiteral = sfe;
  x.assertDeclaration = Mpe;
  x.assertDeclareClass = Cue;
  x.assertDeclareExportAllDeclaration = Fue;
  x.assertDeclareExportDeclaration = kue;
  x.assertDeclareFunction = wue;
  x.assertDeclareInterface = Due;
  x.assertDeclareModule = Iue;
  x.assertDeclareModuleExports = _ue;
  x.assertDeclareOpaqueType = Nue;
  x.assertDeclareTypeAlias = Oue;
  x.assertDeclareVariable = Rue;
  x.assertDeclaredPredicate = Lue;
  x.assertDecorator = Qce;
  x.assertDirective = Woe;
  x.assertDirectiveLiteral = Hoe;
  x.assertDoExpression = Zce;
  x.assertDoWhileStatement = Zoe;
  x.assertEmptyStatement = ele;
  x.assertEmptyTypeAnnotation = Kue;
  x.assertEnumBody = ode;
  x.assertEnumBooleanBody = Sce;
  x.assertEnumBooleanMember = Ace;
  x.assertEnumDeclaration = vce;
  x.assertEnumDefaultedMember = Dce;
  x.assertEnumMember = lde;
  x.assertEnumNumberBody = Tce;
  x.assertEnumNumberMember = Cce;
  x.assertEnumStringBody = xce;
  x.assertEnumStringMember = wce;
  x.assertEnumSymbolBody = Pce;
  x.assertExistsTypeAnnotation = Bue;
  x.assertExportAllDeclaration = Vle;
  x.assertExportDeclaration = Qpe;
  x.assertExportDefaultDeclaration = Wle;
  x.assertExportDefaultSpecifier = efe;
  x.assertExportNamedDeclaration = Hle;
  x.assertExportNamespaceSpecifier = fue;
  x.assertExportSpecifier = Gle;
  x.assertExpression = Spe;
  x.assertExpressionStatement = tle;
  x.assertExpressionWrapper = Npe;
  x.assertFile = rle;
  x.assertFlow = rde;
  x.assertFlowBaseAnnotation = nde;
  x.assertFlowDeclaration = ide;
  x.assertFlowPredicate = ade;
  x.assertFlowType = sde;
  x.assertFor = Rpe;
  x.assertForInStatement = sle;
  x.assertForOfStatement = Kle;
  x.assertForStatement = nle;
  x.assertForXStatement = kpe;
  x.assertFunction = Fpe;
  x.assertFunctionDeclaration = ile;
  x.assertFunctionExpression = ale;
  x.assertFunctionParent = Lpe;
  x.assertFunctionTypeAnnotation = Mue;
  x.assertFunctionTypeParam = jue;
  x.assertGenericTypeAnnotation = que;
  x.assertIdentifier = ole;
  x.assertIfStatement = lle;
  x.assertImmutable = Vpe;
  x.assertImport = uue;
  x.assertImportAttribute = Jce;
  x.assertImportDeclaration = Yle;
  x.assertImportDefaultSpecifier = Xle;
  x.assertImportExpression = Qle;
  x.assertImportNamespaceSpecifier = zle;
  x.assertImportOrExportDeclaration = Jpe;
  x.assertImportSpecifier = Jle;
  x.assertIndexedAccessType = Ice;
  x.assertInferredPredicate = $ue;
  x.assertInterfaceDeclaration = Vue;
  x.assertInterfaceExtends = Uue;
  x.assertInterfaceTypeAnnotation = Wue;
  x.assertInterpreterDirective = Voe;
  x.assertIntersectionTypeAnnotation = Hue;
  x.assertJSX = ude;
  x.assertJSXAttribute = Oce;
  x.assertJSXClosingElement = Nce;
  x.assertJSXClosingFragment = Hce;
  x.assertJSXElement = Rce;
  x.assertJSXEmptyExpression = kce;
  x.assertJSXExpressionContainer = Fce;
  x.assertJSXFragment = Vce;
  x.assertJSXIdentifier = Bce;
  x.assertJSXMemberExpression = Mce;
  x.assertJSXNamespacedName = jce;
  x.assertJSXOpeningElement = qce;
  x.assertJSXOpeningFragment = Wce;
  x.assertJSXSpreadAttribute = $ce;
  x.assertJSXSpreadChild = Lce;
  x.assertJSXText = Uce;
  x.assertLVal = qpe;
  x.assertLabeledStatement = ule;
  x.assertLiteral = Upe;
  x.assertLogicalExpression = mle;
  x.assertLoop = _pe;
  x.assertMemberExpression = yle;
  x.assertMetaProperty = Zle;
  x.assertMethod = Hpe;
  x.assertMiscellaneous = cde;
  x.assertMixedTypeAnnotation = Gue;
  x.assertModuleDeclaration = Ede;
  x.assertModuleExpression = nfe;
  x.assertModuleSpecifier = Zpe;
  x.assertNewExpression = gle;
  x.assertNoop = Gce;
  x.assertNullLiteral = ple;
  x.assertNullLiteralTypeAnnotation = Pue;
  x.assertNullableTypeAnnotation = Yue;
  x.assertNumberLiteral = mde;
  x.assertNumberLiteralTypeAnnotation = Xue;
  x.assertNumberTypeAnnotation = zue;
  x.assertNumericLiteral = fle;
  x.assertObjectExpression = Ele;
  x.assertObjectMember = Gpe;
  x.assertObjectMethod = vle;
  x.assertObjectPattern = tue;
  x.assertObjectProperty = Sle;
  x.assertObjectTypeAnnotation = Jue;
  x.assertObjectTypeCallProperty = Zue;
  x.assertObjectTypeIndexer = ece;
  x.assertObjectTypeInternalSlot = Que;
  x.assertObjectTypeProperty = tce;
  x.assertObjectTypeSpreadProperty = rce;
  x.assertOpaqueType = sce;
  x.assertOptionalCallExpression = due;
  x.assertOptionalIndexedAccessType = _ce;
  x.assertOptionalMemberExpression = pue;
  x.assertParenthesizedExpression = Ale;
  x.assertPattern = Xpe;
  x.assertPatternLike = jpe;
  x.assertPipelineBareFunction = ofe;
  x.assertPipelinePrimaryTopicReference = lfe;
  x.assertPipelineTopicExpression = afe;
  x.assertPlaceholder = Kce;
  x.assertPrivate = tde;
  x.assertPrivateName = bue;
  x.assertProgram = ble;
  x.assertProperty = Kpe;
  x.assertPureish = Bpe;
  x.assertQualifiedTypeIdentifier = nce;
  x.assertRecordExpression = tfe;
  x.assertRegExpLiteral = hle;
  x.assertRegexLiteral = yde;
  x.assertRestElement = Tle;
  x.assertRestProperty = gde;
  x.assertReturnStatement = xle;
  x.assertScopable = xpe;
  x.assertSequenceExpression = Ple;
  x.assertSpreadElement = rue;
  x.assertSpreadProperty = bde;
  x.assertStandardized = vpe;
  x.assertStatement = Cpe;
  x.assertStaticBlock = Eue;
  x.assertStringLiteral = cle;
  x.assertStringLiteralTypeAnnotation = ice;
  x.assertStringTypeAnnotation = ace;
  x.assertSuper = sue;
  x.assertSwitchCase = Cle;
  x.assertSwitchStatement = wle;
  x.assertSymbolTypeAnnotation = oce;
  x.assertTSAnyKeyword = bfe;
  x.assertTSArrayType = Mfe;
  x.assertTSAsExpression = spe;
  x.assertTSBaseType = hde;
  x.assertTSBigIntKeyword = vfe;
  x.assertTSBooleanKeyword = Efe;
  x.assertTSCallSignatureDeclaration = dfe;
  x.assertTSConditionalType = Hfe;
  x.assertTSConstructSignatureDeclaration = hfe;
  x.assertTSConstructorType = Rfe;
  x.assertTSDeclareFunction = cfe;
  x.assertTSDeclareMethod = ffe;
  x.assertTSEntityName = $pe;
  x.assertTSEnumDeclaration = ape;
  x.assertTSEnumMember = ope;
  x.assertTSExportAssignment = hpe;
  x.assertTSExpressionWithTypeArguments = Qfe;
  x.assertTSExternalModuleReference = ppe;
  x.assertTSFunctionType = Nfe;
  x.assertTSImportEqualsDeclaration = fpe;
  x.assertTSImportType = cpe;
  x.assertTSIndexSignature = gfe;
  x.assertTSIndexedAccessType = Xfe;
  x.assertTSInferType = Gfe;
  x.assertTSInstantiationExpression = rpe;
  x.assertTSInterfaceBody = epe;
  x.assertTSInterfaceDeclaration = Zfe;
  x.assertTSIntersectionType = Wfe;
  x.assertTSIntrinsicKeyword = Sfe;
  x.assertTSLiteralType = Jfe;
  x.assertTSMappedType = zfe;
  x.assertTSMethodSignature = yfe;
  x.assertTSModuleBlock = upe;
  x.assertTSModuleDeclaration = lpe;
  x.assertTSNamedTupleMember = Ufe;
  x.assertTSNamespaceExportDeclaration = mpe;
  x.assertTSNeverKeyword = Tfe;
  x.assertTSNonNullExpression = dpe;
  x.assertTSNullKeyword = xfe;
  x.assertTSNumberKeyword = Pfe;
  x.assertTSObjectKeyword = Afe;
  x.assertTSOptionalType = qfe;
  x.assertTSParameterProperty = ufe;
  x.assertTSParenthesizedType = Kfe;
  x.assertTSPropertySignature = mfe;
  x.assertTSQualifiedName = pfe;
  x.assertTSRestType = $fe;
  x.assertTSSatisfiesExpression = npe;
  x.assertTSStringKeyword = Cfe;
  x.assertTSSymbolKeyword = wfe;
  x.assertTSThisType = Ofe;
  x.assertTSTupleType = jfe;
  x.assertTSType = dde;
  x.assertTSTypeAliasDeclaration = tpe;
  x.assertTSTypeAnnotation = ype;
  x.assertTSTypeAssertion = ipe;
  x.assertTSTypeElement = pde;
  x.assertTSTypeLiteral = Bfe;
  x.assertTSTypeOperator = Yfe;
  x.assertTSTypeParameter = Epe;
  x.assertTSTypeParameterDeclaration = bpe;
  x.assertTSTypeParameterInstantiation = gpe;
  x.assertTSTypePredicate = Ffe;
  x.assertTSTypeQuery = Lfe;
  x.assertTSTypeReference = kfe;
  x.assertTSUndefinedKeyword = Dfe;
  x.assertTSUnionType = Vfe;
  x.assertTSUnknownKeyword = Ife;
  x.assertTSVoidKeyword = _fe;
  x.assertTaggedTemplateExpression = nue;
  x.assertTemplateElement = iue;
  x.assertTemplateLiteral = aue;
  x.assertTerminatorless = wpe;
  x.assertThisExpression = Dle;
  x.assertThisTypeAnnotation = lce;
  x.assertThrowStatement = Ile;
  x.assertTopicReference = ife;
  x.assertTryStatement = _le;
  x.assertTupleExpression = rfe;
  x.assertTupleTypeAnnotation = uce;
  x.assertTypeAlias = fce;
  x.assertTypeAnnotation = pce;
  x.assertTypeCastExpression = dce;
  x.assertTypeParameter = hce;
  x.assertTypeParameterDeclaration = mce;
  x.assertTypeParameterInstantiation = yce;
  x.assertTypeScript = fde;
  x.assertTypeofTypeAnnotation = cce;
  x.assertUnaryExpression = Ole;
  x.assertUnaryLike = Ype;
  x.assertUnionTypeAnnotation = gce;
  x.assertUpdateExpression = Nle;
  x.assertUserWhitespacable = Wpe;
  x.assertV8IntrinsicIdentifier = Yce;
  x.assertVariableDeclaration = Rle;
  x.assertVariableDeclarator = kle;
  x.assertVariance = bce;
  x.assertVoidTypeAnnotation = Ece;
  x.assertWhile = Ope;
  x.assertWhileStatement = Fle;
  x.assertWithStatement = Lle;
  x.assertYieldExpression = oue;
  var joe = Go(), Yu = Bu();
  function P(e, t, r) {
    if (!(0, joe.default)(e, t, r))
      throw new Error(`Expected type "${e}" with option ${JSON.stringify(r)}, but instead got "${t.type}".`);
  }
  i(P, "assert");
  function qoe(e, t) {
    P("ArrayExpression", e, t);
  }
  i(qoe, "assertArrayExpression");
  function $oe(e, t) {
    P("AssignmentExpression", e, t);
  }
  i($oe, "assertAssignmentExpression");
  function Uoe(e, t) {
    P("BinaryExpression", e, t);
  }
  i(Uoe, "assertBinaryExpression");
  function Voe(e, t) {
    P("InterpreterDirective", e, t);
  }
  i(Voe, "assertInterpreterDirective");
  function Woe(e, t) {
    P("Directive", e, t);
  }
  i(Woe, "assertDirective");
  function Hoe(e, t) {
    P("DirectiveLiteral", e, t);
  }
  i(Hoe, "assertDirectiveLiteral");
  function Goe(e, t) {
    P("BlockStatement", e, t);
  }
  i(Goe, "assertBlockStatement");
  function Koe(e, t) {
    P("BreakStatement", e, t);
  }
  i(Koe, "assertBreakStatement");
  function Yoe(e, t) {
    P("CallExpression", e, t);
  }
  i(Yoe, "assertCallExpression");
  function Xoe(e, t) {
    P("CatchClause", e, t);
  }
  i(Xoe, "assertCatchClause");
  function zoe(e, t) {
    P("ConditionalExpression", e, t);
  }
  i(zoe, "assertConditionalExpression");
  function Joe(e, t) {
    P("ContinueStatement", e, t);
  }
  i(Joe, "assertContinueStatement");
  function Qoe(e, t) {
    P("DebuggerStatement", e, t);
  }
  i(Qoe, "assertDebuggerStatement");
  function Zoe(e, t) {
    P("DoWhileStatement", e, t);
  }
  i(Zoe, "assertDoWhileStatement");
  function ele(e, t) {
    P("EmptyStatement", e, t);
  }
  i(ele, "assertEmptyStatement");
  function tle(e, t) {
    P("ExpressionStatement", e, t);
  }
  i(tle, "assertExpressionStatement");
  function rle(e, t) {
    P("File", e, t);
  }
  i(rle, "assertFile");
  function sle(e, t) {
    P("ForInStatement", e, t);
  }
  i(sle, "assertForInStatement");
  function nle(e, t) {
    P("ForStatement", e, t);
  }
  i(nle, "assertForStatement");
  function ile(e, t) {
    P("FunctionDeclaration", e, t);
  }
  i(ile, "assertFunctionDeclaration");
  function ale(e, t) {
    P("FunctionExpression", e, t);
  }
  i(ale, "assertFunctionExpression");
  function ole(e, t) {
    P("Identifier", e, t);
  }
  i(ole, "assertIdentifier");
  function lle(e, t) {
    P("IfStatement", e, t);
  }
  i(lle, "assertIfStatement");
  function ule(e, t) {
    P("LabeledStatement", e, t);
  }
  i(ule, "assertLabeledStatement");
  function cle(e, t) {
    P("StringLiteral", e, t);
  }
  i(cle, "assertStringLiteral");
  function fle(e, t) {
    P("NumericLiteral", e, t);
  }
  i(fle, "assertNumericLiteral");
  function ple(e, t) {
    P("NullLiteral", e, t);
  }
  i(ple, "assertNullLiteral");
  function dle(e, t) {
    P("BooleanLiteral", e, t);
  }
  i(dle, "assertBooleanLiteral");
  function hle(e, t) {
    P("RegExpLiteral", e, t);
  }
  i(hle, "assertRegExpLiteral");
  function mle(e, t) {
    P("LogicalExpression", e, t);
  }
  i(mle, "assertLogicalExpression");
  function yle(e, t) {
    P("MemberExpression", e, t);
  }
  i(yle, "assertMemberExpression");
  function gle(e, t) {
    P("NewExpression", e, t);
  }
  i(gle, "assertNewExpression");
  function ble(e, t) {
    P("Program", e, t);
  }
  i(ble, "assertProgram");
  function Ele(e, t) {
    P("ObjectExpression", e, t);
  }
  i(Ele, "assertObjectExpression");
  function vle(e, t) {
    P("ObjectMethod", e, t);
  }
  i(vle, "assertObjectMethod");
  function Sle(e, t) {
    P("ObjectProperty", e, t);
  }
  i(Sle, "assertObjectProperty");
  function Tle(e, t) {
    P("RestElement", e, t);
  }
  i(Tle, "assertRestElement");
  function xle(e, t) {
    P("ReturnStatement", e, t);
  }
  i(xle, "assertReturnStatement");
  function Ple(e, t) {
    P("SequenceExpression", e, t);
  }
  i(Ple, "assertSequenceExpression");
  function Ale(e, t) {
    P("ParenthesizedExpression", e, t);
  }
  i(Ale, "assertParenthesizedExpression");
  function Cle(e, t) {
    P("SwitchCase", e, t);
  }
  i(Cle, "assertSwitchCase");
  function wle(e, t) {
    P("SwitchStatement", e, t);
  }
  i(wle, "assertSwitchStatement");
  function Dle(e, t) {
    P("ThisExpression", e, t);
  }
  i(Dle, "assertThisExpression");
  function Ile(e, t) {
    P("ThrowStatement", e, t);
  }
  i(Ile, "assertThrowStatement");
  function _le(e, t) {
    P("TryStatement", e, t);
  }
  i(_le, "assertTryStatement");
  function Ole(e, t) {
    P("UnaryExpression", e, t);
  }
  i(Ole, "assertUnaryExpression");
  function Nle(e, t) {
    P("UpdateExpression", e, t);
  }
  i(Nle, "assertUpdateExpression");
  function Rle(e, t) {
    P("VariableDeclaration", e, t);
  }
  i(Rle, "assertVariableDeclaration");
  function kle(e, t) {
    P("VariableDeclarator", e, t);
  }
  i(kle, "assertVariableDeclarator");
  function Fle(e, t) {
    P("WhileStatement", e, t);
  }
  i(Fle, "assertWhileStatement");
  function Lle(e, t) {
    P("WithStatement", e, t);
  }
  i(Lle, "assertWithStatement");
  function Ble(e, t) {
    P("AssignmentPattern", e, t);
  }
  i(Ble, "assertAssignmentPattern");
  function Mle(e, t) {
    P("ArrayPattern", e, t);
  }
  i(Mle, "assertArrayPattern");
  function jle(e, t) {
    P("ArrowFunctionExpression", e, t);
  }
  i(jle, "assertArrowFunctionExpression");
  function qle(e, t) {
    P("ClassBody", e, t);
  }
  i(qle, "assertClassBody");
  function $le(e, t) {
    P("ClassExpression", e, t);
  }
  i($le, "assertClassExpression");
  function Ule(e, t) {
    P("ClassDeclaration", e, t);
  }
  i(Ule, "assertClassDeclaration");
  function Vle(e, t) {
    P("ExportAllDeclaration", e, t);
  }
  i(Vle, "assertExportAllDeclaration");
  function Wle(e, t) {
    P("ExportDefaultDeclaration", e, t);
  }
  i(Wle, "assertExportDefaultDeclaration");
  function Hle(e, t) {
    P("ExportNamedDeclaration", e, t);
  }
  i(Hle, "assertExportNamedDeclaration");
  function Gle(e, t) {
    P("ExportSpecifier", e, t);
  }
  i(Gle, "assertExportSpecifier");
  function Kle(e, t) {
    P("ForOfStatement", e, t);
  }
  i(Kle, "assertForOfStatement");
  function Yle(e, t) {
    P("ImportDeclaration", e, t);
  }
  i(Yle, "assertImportDeclaration");
  function Xle(e, t) {
    P("ImportDefaultSpecifier", e, t);
  }
  i(Xle, "assertImportDefaultSpecifier");
  function zle(e, t) {
    P("ImportNamespaceSpecifier", e, t);
  }
  i(zle, "assertImportNamespaceSpecifier");
  function Jle(e, t) {
    P("ImportSpecifier", e, t);
  }
  i(Jle, "assertImportSpecifier");
  function Qle(e, t) {
    P("ImportExpression", e, t);
  }
  i(Qle, "assertImportExpression");
  function Zle(e, t) {
    P("MetaProperty", e, t);
  }
  i(Zle, "assertMetaProperty");
  function eue(e, t) {
    P("ClassMethod", e, t);
  }
  i(eue, "assertClassMethod");
  function tue(e, t) {
    P("ObjectPattern", e, t);
  }
  i(tue, "assertObjectPattern");
  function rue(e, t) {
    P("SpreadElement", e, t);
  }
  i(rue, "assertSpreadElement");
  function sue(e, t) {
    P("Super", e, t);
  }
  i(sue, "assertSuper");
  function nue(e, t) {
    P("TaggedTemplateExpression", e, t);
  }
  i(nue, "assertTaggedTemplateExpression");
  function iue(e, t) {
    P("TemplateElement", e, t);
  }
  i(iue, "assertTemplateElement");
  function aue(e, t) {
    P("TemplateLiteral", e, t);
  }
  i(aue, "assertTemplateLiteral");
  function oue(e, t) {
    P("YieldExpression", e, t);
  }
  i(oue, "assertYieldExpression");
  function lue(e, t) {
    P("AwaitExpression", e, t);
  }
  i(lue, "assertAwaitExpression");
  function uue(e, t) {
    P("Import", e, t);
  }
  i(uue, "assertImport");
  function cue(e, t) {
    P("BigIntLiteral", e, t);
  }
  i(cue, "assertBigIntLiteral");
  function fue(e, t) {
    P("ExportNamespaceSpecifier", e, t);
  }
  i(fue, "assertExportNamespaceSpecifier");
  function pue(e, t) {
    P("OptionalMemberExpression", e, t);
  }
  i(pue, "assertOptionalMemberExpression");
  function due(e, t) {
    P("OptionalCallExpression", e, t);
  }
  i(due, "assertOptionalCallExpression");
  function hue(e, t) {
    P("ClassProperty", e, t);
  }
  i(hue, "assertClassProperty");
  function mue(e, t) {
    P("ClassAccessorProperty", e, t);
  }
  i(mue, "assertClassAccessorProperty");
  function yue(e, t) {
    P("ClassPrivateProperty", e, t);
  }
  i(yue, "assertClassPrivateProperty");
  function gue(e, t) {
    P("ClassPrivateMethod", e, t);
  }
  i(gue, "assertClassPrivateMethod");
  function bue(e, t) {
    P("PrivateName", e, t);
  }
  i(bue, "assertPrivateName");
  function Eue(e, t) {
    P("StaticBlock", e, t);
  }
  i(Eue, "assertStaticBlock");
  function vue(e, t) {
    P("AnyTypeAnnotation", e, t);
  }
  i(vue, "assertAnyTypeAnnotation");
  function Sue(e, t) {
    P("ArrayTypeAnnotation", e, t);
  }
  i(Sue, "assertArrayTypeAnnotation");
  function Tue(e, t) {
    P("BooleanTypeAnnotation", e, t);
  }
  i(Tue, "assertBooleanTypeAnnotation");
  function xue(e, t) {
    P("BooleanLiteralTypeAnnotation", e, t);
  }
  i(xue, "assertBooleanLiteralTypeAnnotation");
  function Pue(e, t) {
    P("NullLiteralTypeAnnotation", e, t);
  }
  i(Pue, "assertNullLiteralTypeAnnotation");
  function Aue(e, t) {
    P("ClassImplements", e, t);
  }
  i(Aue, "assertClassImplements");
  function Cue(e, t) {
    P("DeclareClass", e, t);
  }
  i(Cue, "assertDeclareClass");
  function wue(e, t) {
    P("DeclareFunction", e, t);
  }
  i(wue, "assertDeclareFunction");
  function Due(e, t) {
    P("DeclareInterface", e, t);
  }
  i(Due, "assertDeclareInterface");
  function Iue(e, t) {
    P("DeclareModule", e, t);
  }
  i(Iue, "assertDeclareModule");
  function _ue(e, t) {
    P("DeclareModuleExports", e, t);
  }
  i(_ue, "assertDeclareModuleExports");
  function Oue(e, t) {
    P("DeclareTypeAlias", e, t);
  }
  i(Oue, "assertDeclareTypeAlias");
  function Nue(e, t) {
    P("DeclareOpaqueType", e, t);
  }
  i(Nue, "assertDeclareOpaqueType");
  function Rue(e, t) {
    P("DeclareVariable", e, t);
  }
  i(Rue, "assertDeclareVariable");
  function kue(e, t) {
    P("DeclareExportDeclaration", e, t);
  }
  i(kue, "assertDeclareExportDeclaration");
  function Fue(e, t) {
    P("DeclareExportAllDeclaration", e, t);
  }
  i(Fue, "assertDeclareExportAllDeclaration");
  function Lue(e, t) {
    P("DeclaredPredicate", e, t);
  }
  i(Lue, "assertDeclaredPredicate");
  function Bue(e, t) {
    P("ExistsTypeAnnotation", e, t);
  }
  i(Bue, "assertExistsTypeAnnotation");
  function Mue(e, t) {
    P("FunctionTypeAnnotation", e, t);
  }
  i(Mue, "assertFunctionTypeAnnotation");
  function jue(e, t) {
    P("FunctionTypeParam", e, t);
  }
  i(jue, "assertFunctionTypeParam");
  function que(e, t) {
    P("GenericTypeAnnotation", e, t);
  }
  i(que, "assertGenericTypeAnnotation");
  function $ue(e, t) {
    P("InferredPredicate", e, t);
  }
  i($ue, "assertInferredPredicate");
  function Uue(e, t) {
    P("InterfaceExtends", e, t);
  }
  i(Uue, "assertInterfaceExtends");
  function Vue(e, t) {
    P("InterfaceDeclaration", e, t);
  }
  i(Vue, "assertInterfaceDeclaration");
  function Wue(e, t) {
    P("InterfaceTypeAnnotation", e, t);
  }
  i(Wue, "assertInterfaceTypeAnnotation");
  function Hue(e, t) {
    P("IntersectionTypeAnnotation", e, t);
  }
  i(Hue, "assertIntersectionTypeAnnotation");
  function Gue(e, t) {
    P("MixedTypeAnnotation", e, t);
  }
  i(Gue, "assertMixedTypeAnnotation");
  function Kue(e, t) {
    P("EmptyTypeAnnotation", e, t);
  }
  i(Kue, "assertEmptyTypeAnnotation");
  function Yue(e, t) {
    P("NullableTypeAnnotation", e, t);
  }
  i(Yue, "assertNullableTypeAnnotation");
  function Xue(e, t) {
    P("NumberLiteralTypeAnnotation", e, t);
  }
  i(Xue, "assertNumberLiteralTypeAnnotation");
  function zue(e, t) {
    P("NumberTypeAnnotation", e, t);
  }
  i(zue, "assertNumberTypeAnnotation");
  function Jue(e, t) {
    P("ObjectTypeAnnotation", e, t);
  }
  i(Jue, "assertObjectTypeAnnotation");
  function Que(e, t) {
    P("ObjectTypeInternalSlot", e, t);
  }
  i(Que, "assertObjectTypeInternalSlot");
  function Zue(e, t) {
    P("ObjectTypeCallProperty", e, t);
  }
  i(Zue, "assertObjectTypeCallProperty");
  function ece(e, t) {
    P("ObjectTypeIndexer", e, t);
  }
  i(ece, "assertObjectTypeIndexer");
  function tce(e, t) {
    P("ObjectTypeProperty", e, t);
  }
  i(tce, "assertObjectTypeProperty");
  function rce(e, t) {
    P("ObjectTypeSpreadProperty", e, t);
  }
  i(rce, "assertObjectTypeSpreadProperty");
  function sce(e, t) {
    P("OpaqueType", e, t);
  }
  i(sce, "assertOpaqueType");
  function nce(e, t) {
    P("QualifiedTypeIdentifier", e, t);
  }
  i(nce, "assertQualifiedTypeIdentifier");
  function ice(e, t) {
    P("StringLiteralTypeAnnotation", e, t);
  }
  i(ice, "assertStringLiteralTypeAnnotation");
  function ace(e, t) {
    P("StringTypeAnnotation", e, t);
  }
  i(ace, "assertStringTypeAnnotation");
  function oce(e, t) {
    P("SymbolTypeAnnotation", e, t);
  }
  i(oce, "assertSymbolTypeAnnotation");
  function lce(e, t) {
    P("ThisTypeAnnotation", e, t);
  }
  i(lce, "assertThisTypeAnnotation");
  function uce(e, t) {
    P("TupleTypeAnnotation", e, t);
  }
  i(uce, "assertTupleTypeAnnotation");
  function cce(e, t) {
    P("TypeofTypeAnnotation", e, t);
  }
  i(cce, "assertTypeofTypeAnnotation");
  function fce(e, t) {
    P("TypeAlias", e, t);
  }
  i(fce, "assertTypeAlias");
  function pce(e, t) {
    P("TypeAnnotation", e, t);
  }
  i(pce, "assertTypeAnnotation");
  function dce(e, t) {
    P("TypeCastExpression", e, t);
  }
  i(dce, "assertTypeCastExpression");
  function hce(e, t) {
    P("TypeParameter", e, t);
  }
  i(hce, "assertTypeParameter");
  function mce(e, t) {
    P("TypeParameterDeclaration", e, t);
  }
  i(mce, "assertTypeParameterDeclaration");
  function yce(e, t) {
    P("TypeParameterInstantiation", e, t);
  }
  i(yce, "assertTypeParameterInstantiation");
  function gce(e, t) {
    P("UnionTypeAnnotation", e, t);
  }
  i(gce, "assertUnionTypeAnnotation");
  function bce(e, t) {
    P("Variance", e, t);
  }
  i(bce, "assertVariance");
  function Ece(e, t) {
    P("VoidTypeAnnotation", e, t);
  }
  i(Ece, "assertVoidTypeAnnotation");
  function vce(e, t) {
    P("EnumDeclaration", e, t);
  }
  i(vce, "assertEnumDeclaration");
  function Sce(e, t) {
    P("EnumBooleanBody", e, t);
  }
  i(Sce, "assertEnumBooleanBody");
  function Tce(e, t) {
    P("EnumNumberBody", e, t);
  }
  i(Tce, "assertEnumNumberBody");
  function xce(e, t) {
    P("EnumStringBody", e, t);
  }
  i(xce, "assertEnumStringBody");
  function Pce(e, t) {
    P("EnumSymbolBody", e, t);
  }
  i(Pce, "assertEnumSymbolBody");
  function Ace(e, t) {
    P("EnumBooleanMember", e, t);
  }
  i(Ace, "assertEnumBooleanMember");
  function Cce(e, t) {
    P("EnumNumberMember", e, t);
  }
  i(Cce, "assertEnumNumberMember");
  function wce(e, t) {
    P("EnumStringMember", e, t);
  }
  i(wce, "assertEnumStringMember");
  function Dce(e, t) {
    P("EnumDefaultedMember", e, t);
  }
  i(Dce, "assertEnumDefaultedMember");
  function Ice(e, t) {
    P("IndexedAccessType", e, t);
  }
  i(Ice, "assertIndexedAccessType");
  function _ce(e, t) {
    P("OptionalIndexedAccessType", e, t);
  }
  i(_ce, "assertOptionalIndexedAccessType");
  function Oce(e, t) {
    P("JSXAttribute", e, t);
  }
  i(Oce, "assertJSXAttribute");
  function Nce(e, t) {
    P("JSXClosingElement", e, t);
  }
  i(Nce, "assertJSXClosingElement");
  function Rce(e, t) {
    P("JSXElement", e, t);
  }
  i(Rce, "assertJSXElement");
  function kce(e, t) {
    P("JSXEmptyExpression", e, t);
  }
  i(kce, "assertJSXEmptyExpression");
  function Fce(e, t) {
    P("JSXExpressionContainer", e, t);
  }
  i(Fce, "assertJSXExpressionContainer");
  function Lce(e, t) {
    P("JSXSpreadChild", e, t);
  }
  i(Lce, "assertJSXSpreadChild");
  function Bce(e, t) {
    P("JSXIdentifier", e, t);
  }
  i(Bce, "assertJSXIdentifier");
  function Mce(e, t) {
    P("JSXMemberExpression", e, t);
  }
  i(Mce, "assertJSXMemberExpression");
  function jce(e, t) {
    P("JSXNamespacedName", e, t);
  }
  i(jce, "assertJSXNamespacedName");
  function qce(e, t) {
    P("JSXOpeningElement", e, t);
  }
  i(qce, "assertJSXOpeningElement");
  function $ce(e, t) {
    P("JSXSpreadAttribute", e, t);
  }
  i($ce, "assertJSXSpreadAttribute");
  function Uce(e, t) {
    P("JSXText", e, t);
  }
  i(Uce, "assertJSXText");
  function Vce(e, t) {
    P("JSXFragment", e, t);
  }
  i(Vce, "assertJSXFragment");
  function Wce(e, t) {
    P("JSXOpeningFragment", e, t);
  }
  i(Wce, "assertJSXOpeningFragment");
  function Hce(e, t) {
    P("JSXClosingFragment", e, t);
  }
  i(Hce, "assertJSXClosingFragment");
  function Gce(e, t) {
    P("Noop", e, t);
  }
  i(Gce, "assertNoop");
  function Kce(e, t) {
    P("Placeholder", e, t);
  }
  i(Kce, "assertPlaceholder");
  function Yce(e, t) {
    P("V8IntrinsicIdentifier", e, t);
  }
  i(Yce, "assertV8IntrinsicIdentifier");
  function Xce(e, t) {
    P("ArgumentPlaceholder", e, t);
  }
  i(Xce, "assertArgumentPlaceholder");
  function zce(e, t) {
    P("BindExpression", e, t);
  }
  i(zce, "assertBindExpression");
  function Jce(e, t) {
    P("ImportAttribute", e, t);
  }
  i(Jce, "assertImportAttribute");
  function Qce(e, t) {
    P("Decorator", e, t);
  }
  i(Qce, "assertDecorator");
  function Zce(e, t) {
    P("DoExpression", e, t);
  }
  i(Zce, "assertDoExpression");
  function efe(e, t) {
    P("ExportDefaultSpecifier", e, t);
  }
  i(efe, "assertExportDefaultSpecifier");
  function tfe(e, t) {
    P("RecordExpression", e, t);
  }
  i(tfe, "assertRecordExpression");
  function rfe(e, t) {
    P("TupleExpression", e, t);
  }
  i(rfe, "assertTupleExpression");
  function sfe(e, t) {
    P("DecimalLiteral", e, t);
  }
  i(sfe, "assertDecimalLiteral");
  function nfe(e, t) {
    P("ModuleExpression", e, t);
  }
  i(nfe, "assertModuleExpression");
  function ife(e, t) {
    P("TopicReference", e, t);
  }
  i(ife, "assertTopicReference");
  function afe(e, t) {
    P("PipelineTopicExpression", e, t);
  }
  i(afe, "assertPipelineTopicExpression");
  function ofe(e, t) {
    P("PipelineBareFunction", e, t);
  }
  i(ofe, "assertPipelineBareFunction");
  function lfe(e, t) {
    P("PipelinePrimaryTopicReference", e, t);
  }
  i(lfe, "assertPipelinePrimaryTopicReference");
  function ufe(e, t) {
    P("TSParameterProperty", e, t);
  }
  i(ufe, "assertTSParameterProperty");
  function cfe(e, t) {
    P("TSDeclareFunction", e, t);
  }
  i(cfe, "assertTSDeclareFunction");
  function ffe(e, t) {
    P("TSDeclareMethod", e, t);
  }
  i(ffe, "assertTSDeclareMethod");
  function pfe(e, t) {
    P("TSQualifiedName", e, t);
  }
  i(pfe, "assertTSQualifiedName");
  function dfe(e, t) {
    P("TSCallSignatureDeclaration", e, t);
  }
  i(dfe, "assertTSCallSignatureDeclaration");
  function hfe(e, t) {
    P("TSConstructSignatureDeclaration", e, t);
  }
  i(hfe, "assertTSConstructSignatureDeclaration");
  function mfe(e, t) {
    P("TSPropertySignature", e, t);
  }
  i(mfe, "assertTSPropertySignature");
  function yfe(e, t) {
    P("TSMethodSignature", e, t);
  }
  i(yfe, "assertTSMethodSignature");
  function gfe(e, t) {
    P("TSIndexSignature", e, t);
  }
  i(gfe, "assertTSIndexSignature");
  function bfe(e, t) {
    P("TSAnyKeyword", e, t);
  }
  i(bfe, "assertTSAnyKeyword");
  function Efe(e, t) {
    P("TSBooleanKeyword", e, t);
  }
  i(Efe, "assertTSBooleanKeyword");
  function vfe(e, t) {
    P("TSBigIntKeyword", e, t);
  }
  i(vfe, "assertTSBigIntKeyword");
  function Sfe(e, t) {
    P("TSIntrinsicKeyword", e, t);
  }
  i(Sfe, "assertTSIntrinsicKeyword");
  function Tfe(e, t) {
    P("TSNeverKeyword", e, t);
  }
  i(Tfe, "assertTSNeverKeyword");
  function xfe(e, t) {
    P("TSNullKeyword", e, t);
  }
  i(xfe, "assertTSNullKeyword");
  function Pfe(e, t) {
    P("TSNumberKeyword", e, t);
  }
  i(Pfe, "assertTSNumberKeyword");
  function Afe(e, t) {
    P("TSObjectKeyword", e, t);
  }
  i(Afe, "assertTSObjectKeyword");
  function Cfe(e, t) {
    P("TSStringKeyword", e, t);
  }
  i(Cfe, "assertTSStringKeyword");
  function wfe(e, t) {
    P("TSSymbolKeyword", e, t);
  }
  i(wfe, "assertTSSymbolKeyword");
  function Dfe(e, t) {
    P("TSUndefinedKeyword", e, t);
  }
  i(Dfe, "assertTSUndefinedKeyword");
  function Ife(e, t) {
    P("TSUnknownKeyword", e, t);
  }
  i(Ife, "assertTSUnknownKeyword");
  function _fe(e, t) {
    P("TSVoidKeyword", e, t);
  }
  i(_fe, "assertTSVoidKeyword");
  function Ofe(e, t) {
    P("TSThisType", e, t);
  }
  i(Ofe, "assertTSThisType");
  function Nfe(e, t) {
    P("TSFunctionType", e, t);
  }
  i(Nfe, "assertTSFunctionType");
  function Rfe(e, t) {
    P("TSConstructorType", e, t);
  }
  i(Rfe, "assertTSConstructorType");
  function kfe(e, t) {
    P("TSTypeReference", e, t);
  }
  i(kfe, "assertTSTypeReference");
  function Ffe(e, t) {
    P("TSTypePredicate", e, t);
  }
  i(Ffe, "assertTSTypePredicate");
  function Lfe(e, t) {
    P("TSTypeQuery", e, t);
  }
  i(Lfe, "assertTSTypeQuery");
  function Bfe(e, t) {
    P("TSTypeLiteral", e, t);
  }
  i(Bfe, "assertTSTypeLiteral");
  function Mfe(e, t) {
    P("TSArrayType", e, t);
  }
  i(Mfe, "assertTSArrayType");
  function jfe(e, t) {
    P("TSTupleType", e, t);
  }
  i(jfe, "assertTSTupleType");
  function qfe(e, t) {
    P("TSOptionalType", e, t);
  }
  i(qfe, "assertTSOptionalType");
  function $fe(e, t) {
    P("TSRestType", e, t);
  }
  i($fe, "assertTSRestType");
  function Ufe(e, t) {
    P("TSNamedTupleMember", e, t);
  }
  i(Ufe, "assertTSNamedTupleMember");
  function Vfe(e, t) {
    P("TSUnionType", e, t);
  }
  i(Vfe, "assertTSUnionType");
  function Wfe(e, t) {
    P("TSIntersectionType", e, t);
  }
  i(Wfe, "assertTSIntersectionType");
  function Hfe(e, t) {
    P("TSConditionalType", e, t);
  }
  i(Hfe, "assertTSConditionalType");
  function Gfe(e, t) {
    P("TSInferType", e, t);
  }
  i(Gfe, "assertTSInferType");
  function Kfe(e, t) {
    P("TSParenthesizedType", e, t);
  }
  i(Kfe, "assertTSParenthesizedType");
  function Yfe(e, t) {
    P("TSTypeOperator", e, t);
  }
  i(Yfe, "assertTSTypeOperator");
  function Xfe(e, t) {
    P("TSIndexedAccessType", e, t);
  }
  i(Xfe, "assertTSIndexedAccessType");
  function zfe(e, t) {
    P("TSMappedType", e, t);
  }
  i(zfe, "assertTSMappedType");
  function Jfe(e, t) {
    P("TSLiteralType", e, t);
  }
  i(Jfe, "assertTSLiteralType");
  function Qfe(e, t) {
    P("TSExpressionWithTypeArguments", e, t);
  }
  i(Qfe, "assertTSExpressionWithTypeArguments");
  function Zfe(e, t) {
    P("TSInterfaceDeclaration", e, t);
  }
  i(Zfe, "assertTSInterfaceDeclaration");
  function epe(e, t) {
    P("TSInterfaceBody", e, t);
  }
  i(epe, "assertTSInterfaceBody");
  function tpe(e, t) {
    P("TSTypeAliasDeclaration", e, t);
  }
  i(tpe, "assertTSTypeAliasDeclaration");
  function rpe(e, t) {
    P("TSInstantiationExpression", e, t);
  }
  i(rpe, "assertTSInstantiationExpression");
  function spe(e, t) {
    P("TSAsExpression", e, t);
  }
  i(spe, "assertTSAsExpression");
  function npe(e, t) {
    P("TSSatisfiesExpression", e, t);
  }
  i(npe, "assertTSSatisfiesExpression");
  function ipe(e, t) {
    P("TSTypeAssertion", e, t);
  }
  i(ipe, "assertTSTypeAssertion");
  function ape(e, t) {
    P("TSEnumDeclaration", e, t);
  }
  i(ape, "assertTSEnumDeclaration");
  function ope(e, t) {
    P("TSEnumMember", e, t);
  }
  i(ope, "assertTSEnumMember");
  function lpe(e, t) {
    P("TSModuleDeclaration", e, t);
  }
  i(lpe, "assertTSModuleDeclaration");
  function upe(e, t) {
    P("TSModuleBlock", e, t);
  }
  i(upe, "assertTSModuleBlock");
  function cpe(e, t) {
    P("TSImportType", e, t);
  }
  i(cpe, "assertTSImportType");
  function fpe(e, t) {
    P("TSImportEqualsDeclaration", e, t);
  }
  i(fpe, "assertTSImportEqualsDeclaration");
  function ppe(e, t) {
    P("TSExternalModuleReference", e, t);
  }
  i(ppe, "assertTSExternalModuleReference");
  function dpe(e, t) {
    P("TSNonNullExpression", e, t);
  }
  i(dpe, "assertTSNonNullExpression");
  function hpe(e, t) {
    P("TSExportAssignment", e, t);
  }
  i(hpe, "assertTSExportAssignment");
  function mpe(e, t) {
    P("TSNamespaceExportDeclaration", e, t);
  }
  i(mpe, "assertTSNamespaceExportDeclaration");
  function ype(e, t) {
    P("TSTypeAnnotation", e, t);
  }
  i(ype, "assertTSTypeAnnotation");
  function gpe(e, t) {
    P("TSTypeParameterInstantiation", e, t);
  }
  i(gpe, "assertTSTypeParameterInstantiation");
  function bpe(e, t) {
    P("TSTypeParameterDeclaration", e, t);
  }
  i(bpe, "assertTSTypeParameterDeclaration");
  function Epe(e, t) {
    P("TSTypeParameter", e, t);
  }
  i(Epe, "assertTSTypeParameter");
  function vpe(e, t) {
    P("Standardized", e, t);
  }
  i(vpe, "assertStandardized");
  function Spe(e, t) {
    P("Expression", e, t);
  }
  i(Spe, "assertExpression");
  function Tpe(e, t) {
    P("Binary", e, t);
  }
  i(Tpe, "assertBinary");
  function xpe(e, t) {
    P("Scopable", e, t);
  }
  i(xpe, "assertScopable");
  function Ppe(e, t) {
    P("BlockParent", e, t);
  }
  i(Ppe, "assertBlockParent");
  function Ape(e, t) {
    P("Block", e, t);
  }
  i(Ape, "assertBlock");
  function Cpe(e, t) {
    P("Statement", e, t);
  }
  i(Cpe, "assertStatement");
  function wpe(e, t) {
    P("Terminatorless", e, t);
  }
  i(wpe, "assertTerminatorless");
  function Dpe(e, t) {
    P("CompletionStatement", e, t);
  }
  i(Dpe, "assertCompletionStatement");
  function Ipe(e, t) {
    P("Conditional", e, t);
  }
  i(Ipe, "assertConditional");
  function _pe(e, t) {
    P("Loop", e, t);
  }
  i(_pe, "assertLoop");
  function Ope(e, t) {
    P("While", e, t);
  }
  i(Ope, "assertWhile");
  function Npe(e, t) {
    P("ExpressionWrapper", e, t);
  }
  i(Npe, "assertExpressionWrapper");
  function Rpe(e, t) {
    P("For", e, t);
  }
  i(Rpe, "assertFor");
  function kpe(e, t) {
    P("ForXStatement", e, t);
  }
  i(kpe, "assertForXStatement");
  function Fpe(e, t) {
    P("Function", e, t);
  }
  i(Fpe, "assertFunction");
  function Lpe(e, t) {
    P("FunctionParent", e, t);
  }
  i(Lpe, "assertFunctionParent");
  function Bpe(e, t) {
    P("Pureish", e, t);
  }
  i(Bpe, "assertPureish");
  function Mpe(e, t) {
    P("Declaration", e, t);
  }
  i(Mpe, "assertDeclaration");
  function jpe(e, t) {
    P("PatternLike", e, t);
  }
  i(jpe, "assertPatternLike");
  function qpe(e, t) {
    P("LVal", e, t);
  }
  i(qpe, "assertLVal");
  function $pe(e, t) {
    P("TSEntityName", e, t);
  }
  i($pe, "assertTSEntityName");
  function Upe(e, t) {
    P("Literal", e, t);
  }
  i(Upe, "assertLiteral");
  function Vpe(e, t) {
    P("Immutable", e, t);
  }
  i(Vpe, "assertImmutable");
  function Wpe(e, t) {
    P("UserWhitespacable", e, t);
  }
  i(Wpe, "assertUserWhitespacable");
  function Hpe(e, t) {
    P("Method", e, t);
  }
  i(Hpe, "assertMethod");
  function Gpe(e, t) {
    P("ObjectMember", e, t);
  }
  i(Gpe, "assertObjectMember");
  function Kpe(e, t) {
    P("Property", e, t);
  }
  i(Kpe, "assertProperty");
  function Ype(e, t) {
    P("UnaryLike", e, t);
  }
  i(Ype, "assertUnaryLike");
  function Xpe(e, t) {
    P("Pattern", e, t);
  }
  i(Xpe, "assertPattern");
  function zpe(e, t) {
    P("Class", e, t);
  }
  i(zpe, "assertClass");
  function Jpe(e, t) {
    P("ImportOrExportDeclaration", e, t);
  }
  i(Jpe, "assertImportOrExportDeclaration");
  function Qpe(e, t) {
    P("ExportDeclaration", e, t);
  }
  i(Qpe, "assertExportDeclaration");
  function Zpe(e, t) {
    P("ModuleSpecifier", e, t);
  }
  i(Zpe, "assertModuleSpecifier");
  function ede(e, t) {
    P("Accessor", e, t);
  }
  i(ede, "assertAccessor");
  function tde(e, t) {
    P("Private", e, t);
  }
  i(tde, "assertPrivate");
  function rde(e, t) {
    P("Flow", e, t);
  }
  i(rde, "assertFlow");
  function sde(e, t) {
    P("FlowType", e, t);
  }
  i(sde, "assertFlowType");
  function nde(e, t) {
    P("FlowBaseAnnotation", e, t);
  }
  i(nde, "assertFlowBaseAnnotation");
  function ide(e, t) {
    P("FlowDeclaration", e, t);
  }
  i(ide, "assertFlowDeclaration");
  function ade(e, t) {
    P("FlowPredicate", e, t);
  }
  i(ade, "assertFlowPredicate");
  function ode(e, t) {
    P("EnumBody", e, t);
  }
  i(ode, "assertEnumBody");
  function lde(e, t) {
    P("EnumMember", e, t);
  }
  i(lde, "assertEnumMember");
  function ude(e, t) {
    P("JSX", e, t);
  }
  i(ude, "assertJSX");
  function cde(e, t) {
    P("Miscellaneous", e, t);
  }
  i(cde, "assertMiscellaneous");
  function fde(e, t) {
    P("TypeScript", e, t);
  }
  i(fde, "assertTypeScript");
  function pde(e, t) {
    P("TSTypeElement", e, t);
  }
  i(pde, "assertTSTypeElement");
  function dde(e, t) {
    P("TSType", e, t);
  }
  i(dde, "assertTSType");
  function hde(e, t) {
    P("TSBaseType", e, t);
  }
  i(hde, "assertTSBaseType");
  function mde(e, t) {
    (0, Yu.default)("assertNumberLiteral", "assertNumericLiteral"), P("NumberLiteral", e, t);
  }
  i(mde, "assertNumberLiteral");
  function yde(e, t) {
    (0, Yu.default)("assertRegexLiteral", "assertRegExpLiteral"), P("RegexLiteral", e, t);
  }
  i(yde, "assertRegexLiteral");
  function gde(e, t) {
    (0, Yu.default)("assertRestProperty", "assertRestElement"), P("RestProperty", e, t);
  }
  i(gde, "assertRestProperty");
  function bde(e, t) {
    (0, Yu.default)("assertSpreadProperty", "assertSpreadElement"), P("SpreadProperty", e, t);
  }
  i(bde, "assertSpreadProperty");
  function Ede(e, t) {
    (0, Yu.default)("assertModuleDeclaration", "assertImportOrExportDeclaration"), P("ModuleDeclaration", e, t);
  }
  i(Ede, "assertModuleDeclaration");
});

// ../node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js
var jR = y((kp) => {
  "use strict";
  Object.defineProperty(kp, "__esModule", {
    value: !0
  });
  kp.default = void 0;
  var un = is(), uze = kp.default = vde;
  function vde(e) {
    switch (e) {
      case "string":
        return (0, un.stringTypeAnnotation)();
      case "number":
        return (0, un.numberTypeAnnotation)();
      case "undefined":
        return (0, un.voidTypeAnnotation)();
      case "boolean":
        return (0, un.booleanTypeAnnotation)();
      case "function":
        return (0, un.genericTypeAnnotation)((0, un.identifier)("Function"));
      case "object":
        return (0, un.genericTypeAnnotation)((0, un.identifier)("Object"));
      case "symbol":
        return (0, un.genericTypeAnnotation)((0, un.identifier)("Symbol"));
      case "bigint":
        return (0, un.anyTypeAnnotation)();
    }
    throw new Error("Invalid typeof value: " + e);
  }
  i(vde, "createTypeAnnotationBasedOnTypeof");
});

// ../node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js
var Sb = y((vb) => {
  "use strict";
  Object.defineProperty(vb, "__esModule", {
    value: !0
  });
  vb.default = $R;
  var Xu = hr();
  function qR(e) {
    return (0, Xu.isIdentifier)(e) ? e.name : `${e.id.name}.${qR(e.qualification)}`;
  }
  i(qR, "getQualifiedName");
  function $R(e) {
    let t = Array.from(e), r = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), a = [];
    for (let o = 0; o < t.length; o++) {
      let l = t[o];
      if (l && !(a.indexOf(l) >= 0)) {
        if ((0, Xu.isAnyTypeAnnotation)(l))
          return [l];
        if ((0, Xu.isFlowBaseAnnotation)(l)) {
          s.set(l.type, l);
          continue;
        }
        if ((0, Xu.isUnionTypeAnnotation)(l)) {
          n.has(l.types) || (t.push(...l.types), n.add(l.types));
          continue;
        }
        if ((0, Xu.isGenericTypeAnnotation)(l)) {
          let u = qR(l.id);
          if (r.has(u)) {
            let c = r.get(u);
            c.typeParameters ? l.typeParameters && (c.typeParameters.params.push(...l.typeParameters.params), c.typeParameters.params = $R(c.
            typeParameters.params)) : c = l.typeParameters;
          } else
            r.set(u, l);
          continue;
        }
        a.push(l);
      }
    }
    for (let [, o] of s)
      a.push(o);
    for (let [, o] of r)
      a.push(o);
    return a;
  }
  i($R, "removeTypeDuplicates");
});

// ../node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js
var UR = y((Tb) => {
  "use strict";
  Object.defineProperty(Tb, "__esModule", {
    value: !0
  });
  Tb.default = xde;
  var Sde = is(), Tde = Sb();
  function xde(e) {
    let t = (0, Tde.default)(e);
    return t.length === 1 ? t[0] : (0, Sde.unionTypeAnnotation)(t);
  }
  i(xde, "createFlowUnionType");
});

// ../node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js
var HR = y((xb) => {
  "use strict";
  Object.defineProperty(xb, "__esModule", {
    value: !0
  });
  xb.default = WR;
  var zu = hr();
  function VR(e) {
    return (0, zu.isIdentifier)(e) ? e.name : `${e.right.name}.${VR(e.left)}`;
  }
  i(VR, "getQualifiedName");
  function WR(e) {
    let t = Array.from(e), r = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), a = [];
    for (let o = 0; o < t.length; o++) {
      let l = t[o];
      if (l && !(a.indexOf(l) >= 0)) {
        if ((0, zu.isTSAnyKeyword)(l))
          return [l];
        if ((0, zu.isTSBaseType)(l)) {
          s.set(l.type, l);
          continue;
        }
        if ((0, zu.isTSUnionType)(l)) {
          n.has(l.types) || (t.push(...l.types), n.add(l.types));
          continue;
        }
        if ((0, zu.isTSTypeReference)(l) && l.typeParameters) {
          let u = VR(l.typeName);
          if (r.has(u)) {
            let c = r.get(u);
            c.typeParameters ? l.typeParameters && (c.typeParameters.params.push(...l.typeParameters.params), c.typeParameters.params = WR(c.
            typeParameters.params)) : c = l.typeParameters;
          } else
            r.set(u, l);
          continue;
        }
        a.push(l);
      }
    }
    for (let [, o] of s)
      a.push(o);
    for (let [, o] of r)
      a.push(o);
    return a;
  }
  i(WR, "removeTypeDuplicates");
});

// ../node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js
var GR = y((Pb) => {
  "use strict";
  Object.defineProperty(Pb, "__esModule", {
    value: !0
  });
  Pb.default = wde;
  var Pde = is(), Ade = HR(), Cde = hr();
  function wde(e) {
    let t = e.map((s) => (0, Cde.isTSTypeAnnotation)(s) ? s.typeAnnotation : s), r = (0, Ade.default)(t);
    return r.length === 1 ? r[0] : (0, Pde.tsUnionType)(r);
  }
  i(wde, "createTSUnionType");
});

// ../node_modules/@babel/types/lib/builders/generated/uppercase.js
var KR = y((_) => {
  "use strict";
  Object.defineProperty(_, "__esModule", {
    value: !0
  });
  Object.defineProperty(_, "AnyTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.anyTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ArgumentPlaceholder", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.argumentPlaceholder;
    }, "get")
  });
  Object.defineProperty(_, "ArrayExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.arrayExpression;
    }, "get")
  });
  Object.defineProperty(_, "ArrayPattern", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.arrayPattern;
    }, "get")
  });
  Object.defineProperty(_, "ArrayTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.arrayTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ArrowFunctionExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.arrowFunctionExpression;
    }, "get")
  });
  Object.defineProperty(_, "AssignmentExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.assignmentExpression;
    }, "get")
  });
  Object.defineProperty(_, "AssignmentPattern", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.assignmentPattern;
    }, "get")
  });
  Object.defineProperty(_, "AwaitExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.awaitExpression;
    }, "get")
  });
  Object.defineProperty(_, "BigIntLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.bigIntLiteral;
    }, "get")
  });
  Object.defineProperty(_, "BinaryExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.binaryExpression;
    }, "get")
  });
  Object.defineProperty(_, "BindExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.bindExpression;
    }, "get")
  });
  Object.defineProperty(_, "BlockStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.blockStatement;
    }, "get")
  });
  Object.defineProperty(_, "BooleanLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.booleanLiteral;
    }, "get")
  });
  Object.defineProperty(_, "BooleanLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.booleanLiteralTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "BooleanTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.booleanTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "BreakStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.breakStatement;
    }, "get")
  });
  Object.defineProperty(_, "CallExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.callExpression;
    }, "get")
  });
  Object.defineProperty(_, "CatchClause", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.catchClause;
    }, "get")
  });
  Object.defineProperty(_, "ClassAccessorProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classAccessorProperty;
    }, "get")
  });
  Object.defineProperty(_, "ClassBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classBody;
    }, "get")
  });
  Object.defineProperty(_, "ClassDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "ClassExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classExpression;
    }, "get")
  });
  Object.defineProperty(_, "ClassImplements", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classImplements;
    }, "get")
  });
  Object.defineProperty(_, "ClassMethod", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classMethod;
    }, "get")
  });
  Object.defineProperty(_, "ClassPrivateMethod", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classPrivateMethod;
    }, "get")
  });
  Object.defineProperty(_, "ClassPrivateProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classPrivateProperty;
    }, "get")
  });
  Object.defineProperty(_, "ClassProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.classProperty;
    }, "get")
  });
  Object.defineProperty(_, "ConditionalExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.conditionalExpression;
    }, "get")
  });
  Object.defineProperty(_, "ContinueStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.continueStatement;
    }, "get")
  });
  Object.defineProperty(_, "DebuggerStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.debuggerStatement;
    }, "get")
  });
  Object.defineProperty(_, "DecimalLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.decimalLiteral;
    }, "get")
  });
  Object.defineProperty(_, "DeclareClass", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareClass;
    }, "get")
  });
  Object.defineProperty(_, "DeclareExportAllDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareExportAllDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "DeclareExportDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareExportDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "DeclareFunction", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareFunction;
    }, "get")
  });
  Object.defineProperty(_, "DeclareInterface", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareInterface;
    }, "get")
  });
  Object.defineProperty(_, "DeclareModule", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareModule;
    }, "get")
  });
  Object.defineProperty(_, "DeclareModuleExports", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareModuleExports;
    }, "get")
  });
  Object.defineProperty(_, "DeclareOpaqueType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareOpaqueType;
    }, "get")
  });
  Object.defineProperty(_, "DeclareTypeAlias", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareTypeAlias;
    }, "get")
  });
  Object.defineProperty(_, "DeclareVariable", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declareVariable;
    }, "get")
  });
  Object.defineProperty(_, "DeclaredPredicate", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.declaredPredicate;
    }, "get")
  });
  Object.defineProperty(_, "Decorator", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.decorator;
    }, "get")
  });
  Object.defineProperty(_, "Directive", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.directive;
    }, "get")
  });
  Object.defineProperty(_, "DirectiveLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.directiveLiteral;
    }, "get")
  });
  Object.defineProperty(_, "DoExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.doExpression;
    }, "get")
  });
  Object.defineProperty(_, "DoWhileStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.doWhileStatement;
    }, "get")
  });
  Object.defineProperty(_, "EmptyStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.emptyStatement;
    }, "get")
  });
  Object.defineProperty(_, "EmptyTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.emptyTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "EnumBooleanBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumBooleanBody;
    }, "get")
  });
  Object.defineProperty(_, "EnumBooleanMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumBooleanMember;
    }, "get")
  });
  Object.defineProperty(_, "EnumDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "EnumDefaultedMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumDefaultedMember;
    }, "get")
  });
  Object.defineProperty(_, "EnumNumberBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumNumberBody;
    }, "get")
  });
  Object.defineProperty(_, "EnumNumberMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumNumberMember;
    }, "get")
  });
  Object.defineProperty(_, "EnumStringBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumStringBody;
    }, "get")
  });
  Object.defineProperty(_, "EnumStringMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumStringMember;
    }, "get")
  });
  Object.defineProperty(_, "EnumSymbolBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.enumSymbolBody;
    }, "get")
  });
  Object.defineProperty(_, "ExistsTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.existsTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ExportAllDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportAllDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "ExportDefaultDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportDefaultDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "ExportDefaultSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportDefaultSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "ExportNamedDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportNamedDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "ExportNamespaceSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportNamespaceSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "ExportSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.exportSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "ExpressionStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.expressionStatement;
    }, "get")
  });
  Object.defineProperty(_, "File", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.file;
    }, "get")
  });
  Object.defineProperty(_, "ForInStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.forInStatement;
    }, "get")
  });
  Object.defineProperty(_, "ForOfStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.forOfStatement;
    }, "get")
  });
  Object.defineProperty(_, "ForStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.forStatement;
    }, "get")
  });
  Object.defineProperty(_, "FunctionDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.functionDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "FunctionExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.functionExpression;
    }, "get")
  });
  Object.defineProperty(_, "FunctionTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.functionTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "FunctionTypeParam", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.functionTypeParam;
    }, "get")
  });
  Object.defineProperty(_, "GenericTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.genericTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "Identifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.identifier;
    }, "get")
  });
  Object.defineProperty(_, "IfStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.ifStatement;
    }, "get")
  });
  Object.defineProperty(_, "Import", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.import;
    }, "get")
  });
  Object.defineProperty(_, "ImportAttribute", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importAttribute;
    }, "get")
  });
  Object.defineProperty(_, "ImportDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "ImportDefaultSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importDefaultSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "ImportExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importExpression;
    }, "get")
  });
  Object.defineProperty(_, "ImportNamespaceSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importNamespaceSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "ImportSpecifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.importSpecifier;
    }, "get")
  });
  Object.defineProperty(_, "IndexedAccessType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.indexedAccessType;
    }, "get")
  });
  Object.defineProperty(_, "InferredPredicate", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.inferredPredicate;
    }, "get")
  });
  Object.defineProperty(_, "InterfaceDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.interfaceDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "InterfaceExtends", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.interfaceExtends;
    }, "get")
  });
  Object.defineProperty(_, "InterfaceTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.interfaceTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "InterpreterDirective", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.interpreterDirective;
    }, "get")
  });
  Object.defineProperty(_, "IntersectionTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.intersectionTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "JSXAttribute", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxAttribute;
    }, "get")
  });
  Object.defineProperty(_, "JSXClosingElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxClosingElement;
    }, "get")
  });
  Object.defineProperty(_, "JSXClosingFragment", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxClosingFragment;
    }, "get")
  });
  Object.defineProperty(_, "JSXElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxElement;
    }, "get")
  });
  Object.defineProperty(_, "JSXEmptyExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxEmptyExpression;
    }, "get")
  });
  Object.defineProperty(_, "JSXExpressionContainer", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxExpressionContainer;
    }, "get")
  });
  Object.defineProperty(_, "JSXFragment", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxFragment;
    }, "get")
  });
  Object.defineProperty(_, "JSXIdentifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxIdentifier;
    }, "get")
  });
  Object.defineProperty(_, "JSXMemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxMemberExpression;
    }, "get")
  });
  Object.defineProperty(_, "JSXNamespacedName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxNamespacedName;
    }, "get")
  });
  Object.defineProperty(_, "JSXOpeningElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxOpeningElement;
    }, "get")
  });
  Object.defineProperty(_, "JSXOpeningFragment", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxOpeningFragment;
    }, "get")
  });
  Object.defineProperty(_, "JSXSpreadAttribute", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxSpreadAttribute;
    }, "get")
  });
  Object.defineProperty(_, "JSXSpreadChild", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxSpreadChild;
    }, "get")
  });
  Object.defineProperty(_, "JSXText", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.jsxText;
    }, "get")
  });
  Object.defineProperty(_, "LabeledStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.labeledStatement;
    }, "get")
  });
  Object.defineProperty(_, "LogicalExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.logicalExpression;
    }, "get")
  });
  Object.defineProperty(_, "MemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.memberExpression;
    }, "get")
  });
  Object.defineProperty(_, "MetaProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.metaProperty;
    }, "get")
  });
  Object.defineProperty(_, "MixedTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.mixedTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ModuleExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.moduleExpression;
    }, "get")
  });
  Object.defineProperty(_, "NewExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.newExpression;
    }, "get")
  });
  Object.defineProperty(_, "Noop", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.noop;
    }, "get")
  });
  Object.defineProperty(_, "NullLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.nullLiteral;
    }, "get")
  });
  Object.defineProperty(_, "NullLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.nullLiteralTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "NullableTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.nullableTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "NumberLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.numberLiteral;
    }, "get")
  });
  Object.defineProperty(_, "NumberLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.numberLiteralTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "NumberTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.numberTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "NumericLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.numericLiteral;
    }, "get")
  });
  Object.defineProperty(_, "ObjectExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectExpression;
    }, "get")
  });
  Object.defineProperty(_, "ObjectMethod", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectMethod;
    }, "get")
  });
  Object.defineProperty(_, "ObjectPattern", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectPattern;
    }, "get")
  });
  Object.defineProperty(_, "ObjectProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectProperty;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeCallProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeCallProperty;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeIndexer", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeIndexer;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeInternalSlot", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeInternalSlot;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeProperty;
    }, "get")
  });
  Object.defineProperty(_, "ObjectTypeSpreadProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.objectTypeSpreadProperty;
    }, "get")
  });
  Object.defineProperty(_, "OpaqueType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.opaqueType;
    }, "get")
  });
  Object.defineProperty(_, "OptionalCallExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.optionalCallExpression;
    }, "get")
  });
  Object.defineProperty(_, "OptionalIndexedAccessType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.optionalIndexedAccessType;
    }, "get")
  });
  Object.defineProperty(_, "OptionalMemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.optionalMemberExpression;
    }, "get")
  });
  Object.defineProperty(_, "ParenthesizedExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.parenthesizedExpression;
    }, "get")
  });
  Object.defineProperty(_, "PipelineBareFunction", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.pipelineBareFunction;
    }, "get")
  });
  Object.defineProperty(_, "PipelinePrimaryTopicReference", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.pipelinePrimaryTopicReference;
    }, "get")
  });
  Object.defineProperty(_, "PipelineTopicExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.pipelineTopicExpression;
    }, "get")
  });
  Object.defineProperty(_, "Placeholder", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.placeholder;
    }, "get")
  });
  Object.defineProperty(_, "PrivateName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.privateName;
    }, "get")
  });
  Object.defineProperty(_, "Program", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.program;
    }, "get")
  });
  Object.defineProperty(_, "QualifiedTypeIdentifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.qualifiedTypeIdentifier;
    }, "get")
  });
  Object.defineProperty(_, "RecordExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.recordExpression;
    }, "get")
  });
  Object.defineProperty(_, "RegExpLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.regExpLiteral;
    }, "get")
  });
  Object.defineProperty(_, "RegexLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.regexLiteral;
    }, "get")
  });
  Object.defineProperty(_, "RestElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.restElement;
    }, "get")
  });
  Object.defineProperty(_, "RestProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.restProperty;
    }, "get")
  });
  Object.defineProperty(_, "ReturnStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.returnStatement;
    }, "get")
  });
  Object.defineProperty(_, "SequenceExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.sequenceExpression;
    }, "get")
  });
  Object.defineProperty(_, "SpreadElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.spreadElement;
    }, "get")
  });
  Object.defineProperty(_, "SpreadProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.spreadProperty;
    }, "get")
  });
  Object.defineProperty(_, "StaticBlock", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.staticBlock;
    }, "get")
  });
  Object.defineProperty(_, "StringLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.stringLiteral;
    }, "get")
  });
  Object.defineProperty(_, "StringLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.stringLiteralTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "StringTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.stringTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "Super", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.super;
    }, "get")
  });
  Object.defineProperty(_, "SwitchCase", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.switchCase;
    }, "get")
  });
  Object.defineProperty(_, "SwitchStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.switchStatement;
    }, "get")
  });
  Object.defineProperty(_, "SymbolTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.symbolTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "TSAnyKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsAnyKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSArrayType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsArrayType;
    }, "get")
  });
  Object.defineProperty(_, "TSAsExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsAsExpression;
    }, "get")
  });
  Object.defineProperty(_, "TSBigIntKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsBigIntKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSBooleanKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsBooleanKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSCallSignatureDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsCallSignatureDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSConditionalType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsConditionalType;
    }, "get")
  });
  Object.defineProperty(_, "TSConstructSignatureDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsConstructSignatureDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSConstructorType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsConstructorType;
    }, "get")
  });
  Object.defineProperty(_, "TSDeclareFunction", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsDeclareFunction;
    }, "get")
  });
  Object.defineProperty(_, "TSDeclareMethod", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsDeclareMethod;
    }, "get")
  });
  Object.defineProperty(_, "TSEnumDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsEnumDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSEnumMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsEnumMember;
    }, "get")
  });
  Object.defineProperty(_, "TSExportAssignment", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsExportAssignment;
    }, "get")
  });
  Object.defineProperty(_, "TSExpressionWithTypeArguments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsExpressionWithTypeArguments;
    }, "get")
  });
  Object.defineProperty(_, "TSExternalModuleReference", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsExternalModuleReference;
    }, "get")
  });
  Object.defineProperty(_, "TSFunctionType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsFunctionType;
    }, "get")
  });
  Object.defineProperty(_, "TSImportEqualsDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsImportEqualsDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSImportType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsImportType;
    }, "get")
  });
  Object.defineProperty(_, "TSIndexSignature", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsIndexSignature;
    }, "get")
  });
  Object.defineProperty(_, "TSIndexedAccessType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsIndexedAccessType;
    }, "get")
  });
  Object.defineProperty(_, "TSInferType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsInferType;
    }, "get")
  });
  Object.defineProperty(_, "TSInstantiationExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsInstantiationExpression;
    }, "get")
  });
  Object.defineProperty(_, "TSInterfaceBody", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsInterfaceBody;
    }, "get")
  });
  Object.defineProperty(_, "TSInterfaceDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsInterfaceDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSIntersectionType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsIntersectionType;
    }, "get")
  });
  Object.defineProperty(_, "TSIntrinsicKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsIntrinsicKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSLiteralType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsLiteralType;
    }, "get")
  });
  Object.defineProperty(_, "TSMappedType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsMappedType;
    }, "get")
  });
  Object.defineProperty(_, "TSMethodSignature", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsMethodSignature;
    }, "get")
  });
  Object.defineProperty(_, "TSModuleBlock", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsModuleBlock;
    }, "get")
  });
  Object.defineProperty(_, "TSModuleDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsModuleDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSNamedTupleMember", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNamedTupleMember;
    }, "get")
  });
  Object.defineProperty(_, "TSNamespaceExportDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNamespaceExportDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSNeverKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNeverKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSNonNullExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNonNullExpression;
    }, "get")
  });
  Object.defineProperty(_, "TSNullKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNullKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSNumberKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsNumberKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSObjectKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsObjectKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSOptionalType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsOptionalType;
    }, "get")
  });
  Object.defineProperty(_, "TSParameterProperty", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsParameterProperty;
    }, "get")
  });
  Object.defineProperty(_, "TSParenthesizedType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsParenthesizedType;
    }, "get")
  });
  Object.defineProperty(_, "TSPropertySignature", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsPropertySignature;
    }, "get")
  });
  Object.defineProperty(_, "TSQualifiedName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsQualifiedName;
    }, "get")
  });
  Object.defineProperty(_, "TSRestType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsRestType;
    }, "get")
  });
  Object.defineProperty(_, "TSSatisfiesExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsSatisfiesExpression;
    }, "get")
  });
  Object.defineProperty(_, "TSStringKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsStringKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSSymbolKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsSymbolKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSThisType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsThisType;
    }, "get")
  });
  Object.defineProperty(_, "TSTupleType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTupleType;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeAliasDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeAliasDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeAssertion", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeAssertion;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeLiteral;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeOperator", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeOperator;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeParameter", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeParameter;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeParameterDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeParameterDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeParameterInstantiation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeParameterInstantiation;
    }, "get")
  });
  Object.defineProperty(_, "TSTypePredicate", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypePredicate;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeQuery", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeQuery;
    }, "get")
  });
  Object.defineProperty(_, "TSTypeReference", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsTypeReference;
    }, "get")
  });
  Object.defineProperty(_, "TSUndefinedKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsUndefinedKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSUnionType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsUnionType;
    }, "get")
  });
  Object.defineProperty(_, "TSUnknownKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsUnknownKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TSVoidKeyword", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tsVoidKeyword;
    }, "get")
  });
  Object.defineProperty(_, "TaggedTemplateExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.taggedTemplateExpression;
    }, "get")
  });
  Object.defineProperty(_, "TemplateElement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.templateElement;
    }, "get")
  });
  Object.defineProperty(_, "TemplateLiteral", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.templateLiteral;
    }, "get")
  });
  Object.defineProperty(_, "ThisExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.thisExpression;
    }, "get")
  });
  Object.defineProperty(_, "ThisTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.thisTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "ThrowStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.throwStatement;
    }, "get")
  });
  Object.defineProperty(_, "TopicReference", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.topicReference;
    }, "get")
  });
  Object.defineProperty(_, "TryStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tryStatement;
    }, "get")
  });
  Object.defineProperty(_, "TupleExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tupleExpression;
    }, "get")
  });
  Object.defineProperty(_, "TupleTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.tupleTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "TypeAlias", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeAlias;
    }, "get")
  });
  Object.defineProperty(_, "TypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "TypeCastExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeCastExpression;
    }, "get")
  });
  Object.defineProperty(_, "TypeParameter", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeParameter;
    }, "get")
  });
  Object.defineProperty(_, "TypeParameterDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeParameterDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "TypeParameterInstantiation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeParameterInstantiation;
    }, "get")
  });
  Object.defineProperty(_, "TypeofTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.typeofTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "UnaryExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.unaryExpression;
    }, "get")
  });
  Object.defineProperty(_, "UnionTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.unionTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "UpdateExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.updateExpression;
    }, "get")
  });
  Object.defineProperty(_, "V8IntrinsicIdentifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.v8IntrinsicIdentifier;
    }, "get")
  });
  Object.defineProperty(_, "VariableDeclaration", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.variableDeclaration;
    }, "get")
  });
  Object.defineProperty(_, "VariableDeclarator", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.variableDeclarator;
    }, "get")
  });
  Object.defineProperty(_, "Variance", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.variance;
    }, "get")
  });
  Object.defineProperty(_, "VoidTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.voidTypeAnnotation;
    }, "get")
  });
  Object.defineProperty(_, "WhileStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.whileStatement;
    }, "get")
  });
  Object.defineProperty(_, "WithStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.withStatement;
    }, "get")
  });
  Object.defineProperty(_, "YieldExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return O.yieldExpression;
    }, "get")
  });
  var O = is();
});

// ../node_modules/@babel/types/lib/builders/productions.js
var XR = y((Ab) => {
  "use strict";
  Object.defineProperty(Ab, "__esModule", {
    value: !0
  });
  Ab.buildUndefinedNode = Dde;
  var YR = is();
  function Dde() {
    return (0, YR.unaryExpression)("void", (0, YR.numericLiteral)(0), !0);
  }
  i(Dde, "buildUndefinedNode");
});

// ../node_modules/@babel/types/lib/clone/cloneNode.js
var Ji = y((Cb) => {
  "use strict";
  Object.defineProperty(Cb, "__esModule", {
    value: !0
  });
  Cb.default = Ide;
  var zR = Fs(), JR = hr(), {
    hasOwn: ui
  } = {
    hasOwn: Function.call.bind(Object.prototype.hasOwnProperty)
  };
  function QR(e, t, r, s) {
    return e && typeof e.type == "string" ? ek(e, t, r, s) : e;
  }
  i(QR, "cloneIfNode");
  function ZR(e, t, r, s) {
    return Array.isArray(e) ? e.map((n) => QR(n, t, r, s)) : QR(e, t, r, s);
  }
  i(ZR, "cloneIfNodeOrArray");
  function Ide(e, t = !0, r = !1) {
    return ek(e, t, r, /* @__PURE__ */ new Map());
  }
  i(Ide, "cloneNode");
  function ek(e, t = !0, r = !1, s) {
    if (!e) return e;
    let {
      type: n
    } = e, a = {
      type: e.type
    };
    if ((0, JR.isIdentifier)(e))
      a.name = e.name, ui(e, "optional") && typeof e.optional == "boolean" && (a.optional = e.optional), ui(e, "typeAnnotation") && (a.typeAnnotation =
      t ? ZR(e.typeAnnotation, !0, r, s) : e.typeAnnotation);
    else if (ui(zR.NODE_FIELDS, n))
      for (let o of Object.keys(zR.NODE_FIELDS[n]))
        ui(e, o) && (t ? a[o] = (0, JR.isFile)(e) && o === "comments" ? Fp(e.comments, t, r, s) : ZR(e[o], !0, r, s) : a[o] = e[o]);
    else
      throw new Error(`Unknown node type: "${n}"`);
    return ui(e, "loc") && (r ? a.loc = null : a.loc = e.loc), ui(e, "leadingComments") && (a.leadingComments = Fp(e.leadingComments, t, r, s)),
    ui(e, "innerComments") && (a.innerComments = Fp(e.innerComments, t, r, s)), ui(e, "trailingComments") && (a.trailingComments = Fp(e.trailingComments,
    t, r, s)), ui(e, "extra") && (a.extra = Object.assign({}, e.extra)), a;
  }
  i(ek, "cloneNodeInternal");
  function Fp(e, t, r, s) {
    return !e || !t ? e : e.map((n) => {
      let a = s.get(n);
      if (a) return a;
      let {
        type: o,
        value: l,
        loc: u
      } = n, c = {
        type: o,
        value: l,
        loc: u
      };
      return r && (c.loc = null), s.set(n, c), c;
    });
  }
  i(Fp, "maybeCloneComments");
});

// ../node_modules/@babel/types/lib/clone/clone.js
var tk = y((wb) => {
  "use strict";
  Object.defineProperty(wb, "__esModule", {
    value: !0
  });
  wb.default = Ode;
  var _de = Ji();
  function Ode(e) {
    return (0, _de.default)(e, !1);
  }
  i(Ode, "clone");
});

// ../node_modules/@babel/types/lib/clone/cloneDeep.js
var rk = y((Db) => {
  "use strict";
  Object.defineProperty(Db, "__esModule", {
    value: !0
  });
  Db.default = Rde;
  var Nde = Ji();
  function Rde(e) {
    return (0, Nde.default)(e);
  }
  i(Rde, "cloneDeep");
});

// ../node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js
var sk = y((Ib) => {
  "use strict";
  Object.defineProperty(Ib, "__esModule", {
    value: !0
  });
  Ib.default = Fde;
  var kde = Ji();
  function Fde(e) {
    return (0, kde.default)(e, !0, !0);
  }
  i(Fde, "cloneDeepWithoutLoc");
});

// ../node_modules/@babel/types/lib/clone/cloneWithoutLoc.js
var nk = y((_b) => {
  "use strict";
  Object.defineProperty(_b, "__esModule", {
    value: !0
  });
  _b.default = Bde;
  var Lde = Ji();
  function Bde(e) {
    return (0, Lde.default)(e, !1, !0);
  }
  i(Bde, "cloneWithoutLoc");
});

// ../node_modules/@babel/types/lib/comments/addComments.js
var Nb = y((Ob) => {
  "use strict";
  Object.defineProperty(Ob, "__esModule", {
    value: !0
  });
  Ob.default = Mde;
  function Mde(e, t, r) {
    if (!r || !e) return e;
    let s = `${t}Comments`;
    return e[s] ? t === "leading" ? e[s] = r.concat(e[s]) : e[s].push(...r) : e[s] = r, e;
  }
  i(Mde, "addComments");
});

// ../node_modules/@babel/types/lib/comments/addComment.js
var ik = y((Rb) => {
  "use strict";
  Object.defineProperty(Rb, "__esModule", {
    value: !0
  });
  Rb.default = qde;
  var jde = Nb();
  function qde(e, t, r, s) {
    return (0, jde.default)(e, t, [{
      type: s ? "CommentLine" : "CommentBlock",
      value: r
    }]);
  }
  i(qde, "addComment");
});

// ../node_modules/@babel/types/lib/utils/inherit.js
var Lp = y((kb) => {
  "use strict";
  Object.defineProperty(kb, "__esModule", {
    value: !0
  });
  kb.default = $de;
  function $de(e, t, r) {
    t && r && (t[e] = Array.from(new Set([].concat(t[e], r[e]).filter(Boolean))));
  }
  i($de, "inherit");
});

// ../node_modules/@babel/types/lib/comments/inheritInnerComments.js
var Lb = y((Fb) => {
  "use strict";
  Object.defineProperty(Fb, "__esModule", {
    value: !0
  });
  Fb.default = Vde;
  var Ude = Lp();
  function Vde(e, t) {
    (0, Ude.default)("innerComments", e, t);
  }
  i(Vde, "inheritInnerComments");
});

// ../node_modules/@babel/types/lib/comments/inheritLeadingComments.js
var Mb = y((Bb) => {
  "use strict";
  Object.defineProperty(Bb, "__esModule", {
    value: !0
  });
  Bb.default = Hde;
  var Wde = Lp();
  function Hde(e, t) {
    (0, Wde.default)("leadingComments", e, t);
  }
  i(Hde, "inheritLeadingComments");
});

// ../node_modules/@babel/types/lib/comments/inheritTrailingComments.js
var qb = y((jb) => {
  "use strict";
  Object.defineProperty(jb, "__esModule", {
    value: !0
  });
  jb.default = Kde;
  var Gde = Lp();
  function Kde(e, t) {
    (0, Gde.default)("trailingComments", e, t);
  }
  i(Kde, "inheritTrailingComments");
});

// ../node_modules/@babel/types/lib/comments/inheritsComments.js
var Ub = y(($b) => {
  "use strict";
  Object.defineProperty($b, "__esModule", {
    value: !0
  });
  $b.default = Jde;
  var Yde = qb(), Xde = Mb(), zde = Lb();
  function Jde(e, t) {
    return (0, Yde.default)(e, t), (0, Xde.default)(e, t), (0, zde.default)(e, t), e;
  }
  i(Jde, "inheritsComments");
});

// ../node_modules/@babel/types/lib/comments/removeComments.js
var ak = y((Vb) => {
  "use strict";
  Object.defineProperty(Vb, "__esModule", {
    value: !0
  });
  Vb.default = Zde;
  var Qde = Yi();
  function Zde(e) {
    return Qde.COMMENT_KEYS.forEach((t) => {
      e[t] = null;
    }), e;
  }
  i(Zde, "removeComments");
});

// ../node_modules/@babel/types/lib/constants/generated/index.js
var ok = y((ie) => {
  "use strict";
  Object.defineProperty(ie, "__esModule", {
    value: !0
  });
  ie.WHILE_TYPES = ie.USERWHITESPACABLE_TYPES = ie.UNARYLIKE_TYPES = ie.TYPESCRIPT_TYPES = ie.TSTYPE_TYPES = ie.TSTYPEELEMENT_TYPES = ie.TSENTITYNAME_TYPES =
  ie.TSBASETYPE_TYPES = ie.TERMINATORLESS_TYPES = ie.STATEMENT_TYPES = ie.STANDARDIZED_TYPES = ie.SCOPABLE_TYPES = ie.PUREISH_TYPES = ie.PROPERTY_TYPES =
  ie.PRIVATE_TYPES = ie.PATTERN_TYPES = ie.PATTERNLIKE_TYPES = ie.OBJECTMEMBER_TYPES = ie.MODULESPECIFIER_TYPES = ie.MODULEDECLARATION_TYPES =
  ie.MISCELLANEOUS_TYPES = ie.METHOD_TYPES = ie.LVAL_TYPES = ie.LOOP_TYPES = ie.LITERAL_TYPES = ie.JSX_TYPES = ie.IMPORTOREXPORTDECLARATION_TYPES =
  ie.IMMUTABLE_TYPES = ie.FUNCTION_TYPES = ie.FUNCTIONPARENT_TYPES = ie.FOR_TYPES = ie.FORXSTATEMENT_TYPES = ie.FLOW_TYPES = ie.FLOWTYPE_TYPES =
  ie.FLOWPREDICATE_TYPES = ie.FLOWDECLARATION_TYPES = ie.FLOWBASEANNOTATION_TYPES = ie.EXPRESSION_TYPES = ie.EXPRESSIONWRAPPER_TYPES = ie.EXPORTDECLARATION_TYPES =
  ie.ENUMMEMBER_TYPES = ie.ENUMBODY_TYPES = ie.DECLARATION_TYPES = ie.CONDITIONAL_TYPES = ie.COMPLETIONSTATEMENT_TYPES = ie.CLASS_TYPES = ie.
  BLOCK_TYPES = ie.BLOCKPARENT_TYPES = ie.BINARY_TYPES = ie.ACCESSOR_TYPES = void 0;
  var je = Fs(), zze = ie.STANDARDIZED_TYPES = je.FLIPPED_ALIAS_KEYS.Standardized, Jze = ie.EXPRESSION_TYPES = je.FLIPPED_ALIAS_KEYS.Expression,
  Qze = ie.BINARY_TYPES = je.FLIPPED_ALIAS_KEYS.Binary, Zze = ie.SCOPABLE_TYPES = je.FLIPPED_ALIAS_KEYS.Scopable, eJe = ie.BLOCKPARENT_TYPES =
  je.FLIPPED_ALIAS_KEYS.BlockParent, tJe = ie.BLOCK_TYPES = je.FLIPPED_ALIAS_KEYS.Block, rJe = ie.STATEMENT_TYPES = je.FLIPPED_ALIAS_KEYS.Statement,
  sJe = ie.TERMINATORLESS_TYPES = je.FLIPPED_ALIAS_KEYS.Terminatorless, nJe = ie.COMPLETIONSTATEMENT_TYPES = je.FLIPPED_ALIAS_KEYS.CompletionStatement,
  iJe = ie.CONDITIONAL_TYPES = je.FLIPPED_ALIAS_KEYS.Conditional, aJe = ie.LOOP_TYPES = je.FLIPPED_ALIAS_KEYS.Loop, oJe = ie.WHILE_TYPES = je.
  FLIPPED_ALIAS_KEYS.While, lJe = ie.EXPRESSIONWRAPPER_TYPES = je.FLIPPED_ALIAS_KEYS.ExpressionWrapper, uJe = ie.FOR_TYPES = je.FLIPPED_ALIAS_KEYS.
  For, cJe = ie.FORXSTATEMENT_TYPES = je.FLIPPED_ALIAS_KEYS.ForXStatement, fJe = ie.FUNCTION_TYPES = je.FLIPPED_ALIAS_KEYS.Function, pJe = ie.
  FUNCTIONPARENT_TYPES = je.FLIPPED_ALIAS_KEYS.FunctionParent, dJe = ie.PUREISH_TYPES = je.FLIPPED_ALIAS_KEYS.Pureish, hJe = ie.DECLARATION_TYPES =
  je.FLIPPED_ALIAS_KEYS.Declaration, mJe = ie.PATTERNLIKE_TYPES = je.FLIPPED_ALIAS_KEYS.PatternLike, yJe = ie.LVAL_TYPES = je.FLIPPED_ALIAS_KEYS.
  LVal, gJe = ie.TSENTITYNAME_TYPES = je.FLIPPED_ALIAS_KEYS.TSEntityName, bJe = ie.LITERAL_TYPES = je.FLIPPED_ALIAS_KEYS.Literal, EJe = ie.IMMUTABLE_TYPES =
  je.FLIPPED_ALIAS_KEYS.Immutable, vJe = ie.USERWHITESPACABLE_TYPES = je.FLIPPED_ALIAS_KEYS.UserWhitespacable, SJe = ie.METHOD_TYPES = je.FLIPPED_ALIAS_KEYS.
  Method, TJe = ie.OBJECTMEMBER_TYPES = je.FLIPPED_ALIAS_KEYS.ObjectMember, xJe = ie.PROPERTY_TYPES = je.FLIPPED_ALIAS_KEYS.Property, PJe = ie.
  UNARYLIKE_TYPES = je.FLIPPED_ALIAS_KEYS.UnaryLike, AJe = ie.PATTERN_TYPES = je.FLIPPED_ALIAS_KEYS.Pattern, CJe = ie.CLASS_TYPES = je.FLIPPED_ALIAS_KEYS.
  Class, ehe = ie.IMPORTOREXPORTDECLARATION_TYPES = je.FLIPPED_ALIAS_KEYS.ImportOrExportDeclaration, wJe = ie.EXPORTDECLARATION_TYPES = je.FLIPPED_ALIAS_KEYS.
  ExportDeclaration, DJe = ie.MODULESPECIFIER_TYPES = je.FLIPPED_ALIAS_KEYS.ModuleSpecifier, IJe = ie.ACCESSOR_TYPES = je.FLIPPED_ALIAS_KEYS.
  Accessor, _Je = ie.PRIVATE_TYPES = je.FLIPPED_ALIAS_KEYS.Private, OJe = ie.FLOW_TYPES = je.FLIPPED_ALIAS_KEYS.Flow, NJe = ie.FLOWTYPE_TYPES =
  je.FLIPPED_ALIAS_KEYS.FlowType, RJe = ie.FLOWBASEANNOTATION_TYPES = je.FLIPPED_ALIAS_KEYS.FlowBaseAnnotation, kJe = ie.FLOWDECLARATION_TYPES =
  je.FLIPPED_ALIAS_KEYS.FlowDeclaration, FJe = ie.FLOWPREDICATE_TYPES = je.FLIPPED_ALIAS_KEYS.FlowPredicate, LJe = ie.ENUMBODY_TYPES = je.FLIPPED_ALIAS_KEYS.
  EnumBody, BJe = ie.ENUMMEMBER_TYPES = je.FLIPPED_ALIAS_KEYS.EnumMember, MJe = ie.JSX_TYPES = je.FLIPPED_ALIAS_KEYS.JSX, jJe = ie.MISCELLANEOUS_TYPES =
  je.FLIPPED_ALIAS_KEYS.Miscellaneous, qJe = ie.TYPESCRIPT_TYPES = je.FLIPPED_ALIAS_KEYS.TypeScript, $Je = ie.TSTYPEELEMENT_TYPES = je.FLIPPED_ALIAS_KEYS.
  TSTypeElement, UJe = ie.TSTYPE_TYPES = je.FLIPPED_ALIAS_KEYS.TSType, VJe = ie.TSBASETYPE_TYPES = je.FLIPPED_ALIAS_KEYS.TSBaseType, WJe = ie.
  MODULEDECLARATION_TYPES = ehe;
});

// ../node_modules/@babel/types/lib/converters/toBlock.js
var Gb = y((Hb) => {
  "use strict";
  Object.defineProperty(Hb, "__esModule", {
    value: !0
  });
  Hb.default = the;
  var Bp = hr(), Wb = is();
  function the(e, t) {
    if ((0, Bp.isBlockStatement)(e))
      return e;
    let r = [];
    return (0, Bp.isEmptyStatement)(e) ? r = [] : ((0, Bp.isStatement)(e) || ((0, Bp.isFunction)(t) ? e = (0, Wb.returnStatement)(e) : e = (0, Wb.
    expressionStatement)(e)), r = [e]), (0, Wb.blockStatement)(r);
  }
  i(the, "toBlock");
});

// ../node_modules/@babel/types/lib/converters/ensureBlock.js
var lk = y((Kb) => {
  "use strict";
  Object.defineProperty(Kb, "__esModule", {
    value: !0
  });
  Kb.default = she;
  var rhe = Gb();
  function she(e, t = "body") {
    let r = (0, rhe.default)(e[t], e);
    return e[t] = r, r;
  }
  i(she, "ensureBlock");
});

// ../node_modules/@babel/types/lib/converters/toIdentifier.js
var Xb = y((Yb) => {
  "use strict";
  Object.defineProperty(Yb, "__esModule", {
    value: !0
  });
  Yb.default = ahe;
  var nhe = Yo(), ihe = Ko();
  function ahe(e) {
    e = e + "";
    let t = "";
    for (let r of e)
      t += (0, ihe.isIdentifierChar)(r.codePointAt(0)) ? r : "-";
    return t = t.replace(/^[-0-9]+/, ""), t = t.replace(/[-\s]+(.)?/g, function(r, s) {
      return s ? s.toUpperCase() : "";
    }), (0, nhe.default)(t) || (t = `_${t}`), t || "_";
  }
  i(ahe, "toIdentifier");
});

// ../node_modules/@babel/types/lib/converters/toBindingIdentifierName.js
var uk = y((zb) => {
  "use strict";
  Object.defineProperty(zb, "__esModule", {
    value: !0
  });
  zb.default = lhe;
  var ohe = Xb();
  function lhe(e) {
    return e = (0, ohe.default)(e), (e === "eval" || e === "arguments") && (e = "_" + e), e;
  }
  i(lhe, "toBindingIdentifierName");
});

// ../node_modules/@babel/types/lib/converters/toComputedKey.js
var ck = y((Jb) => {
  "use strict";
  Object.defineProperty(Jb, "__esModule", {
    value: !0
  });
  Jb.default = fhe;
  var uhe = hr(), che = is();
  function fhe(e, t = e.key || e.property) {
    return !e.computed && (0, uhe.isIdentifier)(t) && (t = (0, che.stringLiteral)(t.name)), t;
  }
  i(fhe, "toComputedKey");
});

// ../node_modules/@babel/types/lib/converters/toExpression.js
var fk = y((Mp) => {
  "use strict";
  Object.defineProperty(Mp, "__esModule", {
    value: !0
  });
  Mp.default = void 0;
  var Ju = hr(), rQe = Mp.default = phe;
  function phe(e) {
    if ((0, Ju.isExpressionStatement)(e) && (e = e.expression), (0, Ju.isExpression)(e))
      return e;
    if ((0, Ju.isClass)(e) ? e.type = "ClassExpression" : (0, Ju.isFunction)(e) && (e.type = "FunctionExpression"), !(0, Ju.isExpression)(e))
      throw new Error(`cannot turn ${e.type} to an expression`);
    return e;
  }
  i(phe, "toExpression");
});

// ../node_modules/@babel/types/lib/traverse/traverseFast.js
var eE = y((Zb) => {
  "use strict";
  Object.defineProperty(Zb, "__esModule", {
    value: !0
  });
  Zb.default = Qb;
  var dhe = Fs();
  function Qb(e, t, r) {
    if (!e) return;
    let s = dhe.VISITOR_KEYS[e.type];
    if (s) {
      r = r || {}, t(e, r);
      for (let n of s) {
        let a = e[n];
        if (Array.isArray(a))
          for (let o of a)
            Qb(o, t, r);
        else
          Qb(a, t, r);
      }
    }
  }
  i(Qb, "traverseFast");
});

// ../node_modules/@babel/types/lib/modifications/removeProperties.js
var rE = y((tE) => {
  "use strict";
  Object.defineProperty(tE, "__esModule", {
    value: !0
  });
  tE.default = yhe;
  var hhe = Yi(), pk = ["tokens", "start", "end", "loc", "raw", "rawValue"], mhe = [...hhe.COMMENT_KEYS, "comments", ...pk];
  function yhe(e, t = {}) {
    let r = t.preserveComments ? pk : mhe;
    for (let n of r)
      e[n] != null && (e[n] = void 0);
    for (let n of Object.keys(e))
      n[0] === "_" && e[n] != null && (e[n] = void 0);
    let s = Object.getOwnPropertySymbols(e);
    for (let n of s)
      e[n] = null;
  }
  i(yhe, "removeProperties");
});

// ../node_modules/@babel/types/lib/modifications/removePropertiesDeep.js
var nE = y((sE) => {
  "use strict";
  Object.defineProperty(sE, "__esModule", {
    value: !0
  });
  sE.default = Ehe;
  var ghe = eE(), bhe = rE();
  function Ehe(e, t) {
    return (0, ghe.default)(e, bhe.default, t), e;
  }
  i(Ehe, "removePropertiesDeep");
});

// ../node_modules/@babel/types/lib/converters/toKeyAlias.js
var hk = y((iE) => {
  "use strict";
  Object.defineProperty(iE, "__esModule", {
    value: !0
  });
  iE.default = $a;
  var dk = hr(), vhe = Ji(), She = nE();
  function $a(e, t = e.key) {
    let r;
    return e.kind === "method" ? $a.increment() + "" : ((0, dk.isIdentifier)(t) ? r = t.name : (0, dk.isStringLiteral)(t) ? r = JSON.stringify(
    t.value) : r = JSON.stringify((0, She.default)((0, vhe.default)(t))), e.computed && (r = `[${r}]`), e.static && (r = `static:${r}`), r);
  }
  i($a, "toKeyAlias");
  $a.uid = 0;
  $a.increment = function() {
    return $a.uid >= Number.MAX_SAFE_INTEGER ? $a.uid = 0 : $a.uid++;
  };
});

// ../node_modules/@babel/types/lib/converters/toStatement.js
var mk = y((qp) => {
  "use strict";
  Object.defineProperty(qp, "__esModule", {
    value: !0
  });
  qp.default = void 0;
  var jp = hr(), The = is(), dQe = qp.default = xhe;
  function xhe(e, t) {
    if ((0, jp.isStatement)(e))
      return e;
    let r = !1, s;
    if ((0, jp.isClass)(e))
      r = !0, s = "ClassDeclaration";
    else if ((0, jp.isFunction)(e))
      r = !0, s = "FunctionDeclaration";
    else if ((0, jp.isAssignmentExpression)(e))
      return (0, The.expressionStatement)(e);
    if (r && !e.id && (s = !1), !s) {
      if (t)
        return !1;
      throw new Error(`cannot turn ${e.type} to a statement`);
    }
    return e.type = s, e;
  }
  i(xhe, "toStatement");
});

// ../node_modules/@babel/types/lib/converters/valueToNode.js
var yk = y(($p) => {
  "use strict";
  Object.defineProperty($p, "__esModule", {
    value: !0
  });
  $p.default = void 0;
  var Phe = Yo(), Mr = is(), yQe = $p.default = aE, Ahe = Function.call.bind(Object.prototype.toString);
  function Che(e) {
    return Ahe(e) === "[object RegExp]";
  }
  i(Che, "isRegExp");
  function whe(e) {
    if (typeof e != "object" || e === null || Object.prototype.toString.call(e) !== "[object Object]")
      return !1;
    let t = Object.getPrototypeOf(e);
    return t === null || Object.getPrototypeOf(t) === null;
  }
  i(whe, "isPlainObject");
  function aE(e) {
    if (e === void 0)
      return (0, Mr.identifier)("undefined");
    if (e === !0 || e === !1)
      return (0, Mr.booleanLiteral)(e);
    if (e === null)
      return (0, Mr.nullLiteral)();
    if (typeof e == "string")
      return (0, Mr.stringLiteral)(e);
    if (typeof e == "number") {
      let t;
      if (Number.isFinite(e))
        t = (0, Mr.numericLiteral)(Math.abs(e));
      else {
        let r;
        Number.isNaN(e) ? r = (0, Mr.numericLiteral)(0) : r = (0, Mr.numericLiteral)(1), t = (0, Mr.binaryExpression)("/", r, (0, Mr.numericLiteral)(
        0));
      }
      return (e < 0 || Object.is(e, -0)) && (t = (0, Mr.unaryExpression)("-", t)), t;
    }
    if (Che(e)) {
      let t = e.source, r = e.toString().match(/\/([a-z]+|)$/)[1];
      return (0, Mr.regExpLiteral)(t, r);
    }
    if (Array.isArray(e))
      return (0, Mr.arrayExpression)(e.map(aE));
    if (whe(e)) {
      let t = [];
      for (let r of Object.keys(e)) {
        let s;
        (0, Phe.default)(r) ? s = (0, Mr.identifier)(r) : s = (0, Mr.stringLiteral)(r), t.push((0, Mr.objectProperty)(s, aE(e[r])));
      }
      return (0, Mr.objectExpression)(t);
    }
    throw new Error("don't know how to turn this value into a node");
  }
  i(aE, "valueToNode");
});

// ../node_modules/@babel/types/lib/modifications/appendToMemberExpression.js
var gk = y((oE) => {
  "use strict";
  Object.defineProperty(oE, "__esModule", {
    value: !0
  });
  oE.default = Ihe;
  var Dhe = is();
  function Ihe(e, t, r = !1) {
    return e.object = (0, Dhe.memberExpression)(e.object, e.property, e.computed), e.property = t, e.computed = !!r, e;
  }
  i(Ihe, "appendToMemberExpression");
});

// ../node_modules/@babel/types/lib/modifications/inherits.js
var Ek = y((lE) => {
  "use strict";
  Object.defineProperty(lE, "__esModule", {
    value: !0
  });
  lE.default = Ohe;
  var bk = Yi(), _he = Ub();
  function Ohe(e, t) {
    if (!e || !t) return e;
    for (let r of bk.INHERIT_KEYS.optional)
      e[r] == null && (e[r] = t[r]);
    for (let r of Object.keys(t))
      r[0] === "_" && r !== "__clone" && (e[r] = t[r]);
    for (let r of bk.INHERIT_KEYS.force)
      e[r] = t[r];
    return (0, _he.default)(e, t), e;
  }
  i(Ohe, "inherits");
});

// ../node_modules/@babel/types/lib/modifications/prependToMemberExpression.js
var vk = y((uE) => {
  "use strict";
  Object.defineProperty(uE, "__esModule", {
    value: !0
  });
  uE.default = khe;
  var Nhe = is(), Rhe = Re();
  function khe(e, t) {
    if ((0, Rhe.isSuper)(e.object))
      throw new Error("Cannot prepend node to super property access (`super.foo`).");
    return e.object = (0, Nhe.memberExpression)(t, e.object), e;
  }
  i(khe, "prependToMemberExpression");
});

// ../node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js
var Qu = y((fE) => {
  "use strict";
  Object.defineProperty(fE, "__esModule", {
    value: !0
  });
  fE.default = cE;
  var Qi = hr();
  function cE(e, t, r, s) {
    let n = [].concat(e), a = /* @__PURE__ */ Object.create(null);
    for (; n.length; ) {
      let o = n.shift();
      if (!o || s && ((0, Qi.isAssignmentExpression)(o) || (0, Qi.isUnaryExpression)(o)))
        continue;
      let l = cE.keys[o.type];
      if ((0, Qi.isIdentifier)(o)) {
        t ? (a[o.name] = a[o.name] || []).push(o) : a[o.name] = o;
        continue;
      }
      if ((0, Qi.isExportDeclaration)(o) && !(0, Qi.isExportAllDeclaration)(o)) {
        (0, Qi.isDeclaration)(o.declaration) && n.push(o.declaration);
        continue;
      }
      if (r) {
        if ((0, Qi.isFunctionDeclaration)(o)) {
          n.push(o.id);
          continue;
        }
        if ((0, Qi.isFunctionExpression)(o))
          continue;
      }
      if (l)
        for (let u = 0; u < l.length; u++) {
          let c = l[u], f = o[c];
          f && (Array.isArray(f) ? n.push(...f) : n.push(f));
        }
    }
    return a;
  }
  i(cE, "getBindingIdentifiers");
  cE.keys = {
    DeclareClass: ["id"],
    DeclareFunction: ["id"],
    DeclareModule: ["id"],
    DeclareVariable: ["id"],
    DeclareInterface: ["id"],
    DeclareTypeAlias: ["id"],
    DeclareOpaqueType: ["id"],
    InterfaceDeclaration: ["id"],
    TypeAlias: ["id"],
    OpaqueType: ["id"],
    CatchClause: ["param"],
    LabeledStatement: ["label"],
    UnaryExpression: ["argument"],
    AssignmentExpression: ["left"],
    ImportSpecifier: ["local"],
    ImportNamespaceSpecifier: ["local"],
    ImportDefaultSpecifier: ["local"],
    ImportDeclaration: ["specifiers"],
    ExportSpecifier: ["exported"],
    ExportNamespaceSpecifier: ["exported"],
    ExportDefaultSpecifier: ["exported"],
    FunctionDeclaration: ["id", "params"],
    FunctionExpression: ["id", "params"],
    ArrowFunctionExpression: ["params"],
    ObjectMethod: ["params"],
    ClassMethod: ["params"],
    ClassPrivateMethod: ["params"],
    ForInStatement: ["left"],
    ForOfStatement: ["left"],
    ClassDeclaration: ["id"],
    ClassExpression: ["id"],
    RestElement: ["argument"],
    UpdateExpression: ["argument"],
    ObjectProperty: ["value"],
    AssignmentPattern: ["left"],
    ArrayPattern: ["elements"],
    ObjectPattern: ["properties"],
    VariableDeclaration: ["declarations"],
    VariableDeclarator: ["id"]
  };
});

// ../node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js
var Sk = y((Up) => {
  "use strict";
  Object.defineProperty(Up, "__esModule", {
    value: !0
  });
  Up.default = void 0;
  var Fhe = Qu(), wQe = Up.default = Lhe;
  function Lhe(e, t) {
    return (0, Fhe.default)(e, t, !0);
  }
  i(Lhe, "getOuterBindingIdentifiers");
});

// ../node_modules/@babel/types/lib/traverse/traverse.js
var Tk = y((dE) => {
  "use strict";
  Object.defineProperty(dE, "__esModule", {
    value: !0
  });
  dE.default = Mhe;
  var Bhe = Fs();
  function Mhe(e, t, r) {
    typeof t == "function" && (t = {
      enter: t
    });
    let {
      enter: s,
      exit: n
    } = t;
    pE(e, s, n, r, []);
  }
  i(Mhe, "traverse");
  function pE(e, t, r, s, n) {
    let a = Bhe.VISITOR_KEYS[e.type];
    if (a) {
      t && t(e, n, s);
      for (let o of a) {
        let l = e[o];
        if (Array.isArray(l))
          for (let u = 0; u < l.length; u++) {
            let c = l[u];
            c && (n.push({
              node: e,
              key: o,
              index: u
            }), pE(c, t, r, s, n), n.pop());
          }
        else l && (n.push({
          node: e,
          key: o
        }), pE(l, t, r, s, n), n.pop());
      }
      r && r(e, n, s);
    }
  }
  i(pE, "traverseSimpleImpl");
});

// ../node_modules/@babel/types/lib/validators/isBinding.js
var xk = y((hE) => {
  "use strict";
  Object.defineProperty(hE, "__esModule", {
    value: !0
  });
  hE.default = qhe;
  var jhe = Qu();
  function qhe(e, t, r) {
    if (r && e.type === "Identifier" && t.type === "ObjectProperty" && r.type === "ObjectExpression")
      return !1;
    let s = jhe.default.keys[t.type];
    if (s)
      for (let n = 0; n < s.length; n++) {
        let a = s[n], o = t[a];
        if (Array.isArray(o)) {
          if (o.indexOf(e) >= 0) return !0;
        } else if (o === e) return !0;
      }
    return !1;
  }
  i(qhe, "isBinding");
});

// ../node_modules/@babel/types/lib/validators/isLet.js
var yE = y((mE) => {
  "use strict";
  Object.defineProperty(mE, "__esModule", {
    value: !0
  });
  mE.default = Vhe;
  var $he = hr(), Uhe = Yi();
  function Vhe(e) {
    return (0, $he.isVariableDeclaration)(e) && (e.kind !== "var" || e[Uhe.BLOCK_SCOPED_SYMBOL]);
  }
  i(Vhe, "isLet");
});

// ../node_modules/@babel/types/lib/validators/isBlockScoped.js
var Ak = y((gE) => {
  "use strict";
  Object.defineProperty(gE, "__esModule", {
    value: !0
  });
  gE.default = Hhe;
  var Pk = hr(), Whe = yE();
  function Hhe(e) {
    return (0, Pk.isFunctionDeclaration)(e) || (0, Pk.isClassDeclaration)(e) || (0, Whe.default)(e);
  }
  i(Hhe, "isBlockScoped");
});

// ../node_modules/@babel/types/lib/validators/isImmutable.js
var Ck = y((bE) => {
  "use strict";
  Object.defineProperty(bE, "__esModule", {
    value: !0
  });
  bE.default = Yhe;
  var Ghe = xp(), Khe = hr();
  function Yhe(e) {
    return (0, Ghe.default)(e.type, "Immutable") ? !0 : (0, Khe.isIdentifier)(e) ? e.name === "undefined" : !1;
  }
  i(Yhe, "isImmutable");
});

// ../node_modules/@babel/types/lib/validators/isNodesEquivalent.js
var Dk = y((vE) => {
  "use strict";
  Object.defineProperty(vE, "__esModule", {
    value: !0
  });
  vE.default = EE;
  var wk = Fs();
  function EE(e, t) {
    if (typeof e != "object" || typeof t != "object" || e == null || t == null)
      return e === t;
    if (e.type !== t.type)
      return !1;
    let r = Object.keys(wk.NODE_FIELDS[e.type] || e.type), s = wk.VISITOR_KEYS[e.type];
    for (let n of r) {
      let a = e[n], o = t[n];
      if (typeof a != typeof o)
        return !1;
      if (!(a == null && o == null)) {
        if (a == null || o == null)
          return !1;
        if (Array.isArray(a)) {
          if (!Array.isArray(o) || a.length !== o.length)
            return !1;
          for (let l = 0; l < a.length; l++)
            if (!EE(a[l], o[l]))
              return !1;
          continue;
        }
        if (typeof a == "object" && !(s != null && s.includes(n))) {
          for (let l of Object.keys(a))
            if (a[l] !== o[l])
              return !1;
          continue;
        }
        if (!EE(a, o))
          return !1;
      }
    }
    return !0;
  }
  i(EE, "isNodesEquivalent");
});

// ../node_modules/@babel/types/lib/validators/isReferenced.js
var Ik = y((SE) => {
  "use strict";
  Object.defineProperty(SE, "__esModule", {
    value: !0
  });
  SE.default = Xhe;
  function Xhe(e, t, r) {
    switch (t.type) {
      case "MemberExpression":
      case "OptionalMemberExpression":
        return t.property === e ? !!t.computed : t.object === e;
      case "JSXMemberExpression":
        return t.object === e;
      case "VariableDeclarator":
        return t.init === e;
      case "ArrowFunctionExpression":
        return t.body === e;
      case "PrivateName":
        return !1;
      case "ClassMethod":
      case "ClassPrivateMethod":
      case "ObjectMethod":
        return t.key === e ? !!t.computed : !1;
      case "ObjectProperty":
        return t.key === e ? !!t.computed : !r || r.type !== "ObjectPattern";
      case "ClassProperty":
      case "ClassAccessorProperty":
        return t.key === e ? !!t.computed : !0;
      case "ClassPrivateProperty":
        return t.key !== e;
      case "ClassDeclaration":
      case "ClassExpression":
        return t.superClass === e;
      case "AssignmentExpression":
        return t.right === e;
      case "AssignmentPattern":
        return t.right === e;
      case "LabeledStatement":
        return !1;
      case "CatchClause":
        return !1;
      case "RestElement":
        return !1;
      case "BreakStatement":
      case "ContinueStatement":
        return !1;
      case "FunctionDeclaration":
      case "FunctionExpression":
        return !1;
      case "ExportNamespaceSpecifier":
      case "ExportDefaultSpecifier":
        return !1;
      case "ExportSpecifier":
        return r != null && r.source ? !1 : t.local === e;
      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
        return !1;
      case "ImportAttribute":
        return !1;
      case "JSXAttribute":
        return !1;
      case "ObjectPattern":
      case "ArrayPattern":
        return !1;
      case "MetaProperty":
        return !1;
      case "ObjectTypeProperty":
        return t.key !== e;
      case "TSEnumMember":
        return t.id !== e;
      case "TSPropertySignature":
        return t.key === e ? !!t.computed : !0;
    }
    return !0;
  }
  i(Xhe, "isReferenced");
});

// ../node_modules/@babel/types/lib/validators/isScope.js
var _k = y((TE) => {
  "use strict";
  Object.defineProperty(TE, "__esModule", {
    value: !0
  });
  TE.default = zhe;
  var Ua = hr();
  function zhe(e, t) {
    return (0, Ua.isBlockStatement)(e) && ((0, Ua.isFunction)(t) || (0, Ua.isCatchClause)(t)) ? !1 : (0, Ua.isPattern)(e) && ((0, Ua.isFunction)(
    t) || (0, Ua.isCatchClause)(t)) ? !0 : (0, Ua.isScopable)(e);
  }
  i(zhe, "isScope");
});

// ../node_modules/@babel/types/lib/validators/isSpecifierDefault.js
var Nk = y((xE) => {
  "use strict";
  Object.defineProperty(xE, "__esModule", {
    value: !0
  });
  xE.default = Jhe;
  var Ok = hr();
  function Jhe(e) {
    return (0, Ok.isImportDefaultSpecifier)(e) || (0, Ok.isIdentifier)(e.imported || e.exported, {
      name: "default"
    });
  }
  i(Jhe, "isSpecifierDefault");
});

// ../node_modules/@babel/types/lib/validators/isValidES3Identifier.js
var Rk = y((PE) => {
  "use strict";
  Object.defineProperty(PE, "__esModule", {
    value: !0
  });
  PE.default = eme;
  var Qhe = Yo(), Zhe = /* @__PURE__ */ new Set(["abstract", "boolean", "byte", "char", "double", "enum", "final", "float", "goto", "impleme\
nts", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "synchronized", "throws", "trans\
ient", "volatile"]);
  function eme(e) {
    return (0, Qhe.default)(e) && !Zhe.has(e);
  }
  i(eme, "isValidES3Identifier");
});

// ../node_modules/@babel/types/lib/validators/isVar.js
var kk = y((AE) => {
  "use strict";
  Object.defineProperty(AE, "__esModule", {
    value: !0
  });
  AE.default = sme;
  var tme = hr(), rme = Yi();
  function sme(e) {
    return (0, tme.isVariableDeclaration)(e, {
      kind: "var"
    }) && !e[rme.BLOCK_SCOPED_SYMBOL];
  }
  i(sme, "isVar");
});

// ../node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js
var Fk = y((wE) => {
  "use strict";
  Object.defineProperty(wE, "__esModule", {
    value: !0
  });
  wE.default = Vp;
  var nme = Qu(), Va = hr(), CE = is(), ime = Ji();
  function Vp(e, t, r) {
    let s = [], n = !0;
    for (let a of e)
      if ((0, Va.isEmptyStatement)(a) || (n = !1), (0, Va.isExpression)(a))
        s.push(a);
      else if ((0, Va.isExpressionStatement)(a))
        s.push(a.expression);
      else if ((0, Va.isVariableDeclaration)(a)) {
        if (a.kind !== "var") return;
        for (let o of a.declarations) {
          let l = (0, nme.default)(o);
          for (let u of Object.keys(l))
            r.push({
              kind: a.kind,
              id: (0, ime.default)(l[u])
            });
          o.init && s.push((0, CE.assignmentExpression)("=", o.id, o.init));
        }
        n = !0;
      } else if ((0, Va.isIfStatement)(a)) {
        let o = a.consequent ? Vp([a.consequent], t, r) : t.buildUndefinedNode(), l = a.alternate ? Vp([a.alternate], t, r) : t.buildUndefinedNode();
        if (!o || !l) return;
        s.push((0, CE.conditionalExpression)(a.test, o, l));
      } else if ((0, Va.isBlockStatement)(a)) {
        let o = Vp(a.body, t, r);
        if (!o) return;
        s.push(o);
      } else if ((0, Va.isEmptyStatement)(a))
        e.indexOf(a) === 0 && (n = !0);
      else
        return;
    return n && s.push(t.buildUndefinedNode()), s.length === 1 ? s[0] : (0, CE.sequenceExpression)(s);
  }
  i(Vp, "gatherSequenceExpressions");
});

// ../node_modules/@babel/types/lib/converters/toSequenceExpression.js
var Lk = y((DE) => {
  "use strict";
  Object.defineProperty(DE, "__esModule", {
    value: !0
  });
  DE.default = ome;
  var ame = Fk();
  function ome(e, t) {
    if (!(e != null && e.length)) return;
    let r = [], s = (0, ame.default)(e, t, r);
    if (s) {
      for (let n of r)
        t.push(n);
      return s;
    }
  }
  i(ome, "toSequenceExpression");
});

// ../node_modules/@babel/types/lib/index.js
var Re = y((ce) => {
  "use strict";
  Object.defineProperty(ce, "__esModule", {
    value: !0
  });
  var ci = {
    react: !0,
    assertNode: !0,
    createTypeAnnotationBasedOnTypeof: !0,
    createUnionTypeAnnotation: !0,
    createFlowUnionType: !0,
    createTSUnionType: !0,
    cloneNode: !0,
    clone: !0,
    cloneDeep: !0,
    cloneDeepWithoutLoc: !0,
    cloneWithoutLoc: !0,
    addComment: !0,
    addComments: !0,
    inheritInnerComments: !0,
    inheritLeadingComments: !0,
    inheritsComments: !0,
    inheritTrailingComments: !0,
    removeComments: !0,
    ensureBlock: !0,
    toBindingIdentifierName: !0,
    toBlock: !0,
    toComputedKey: !0,
    toExpression: !0,
    toIdentifier: !0,
    toKeyAlias: !0,
    toStatement: !0,
    valueToNode: !0,
    appendToMemberExpression: !0,
    inherits: !0,
    prependToMemberExpression: !0,
    removeProperties: !0,
    removePropertiesDeep: !0,
    removeTypeDuplicates: !0,
    getBindingIdentifiers: !0,
    getOuterBindingIdentifiers: !0,
    traverse: !0,
    traverseFast: !0,
    shallowEqual: !0,
    is: !0,
    isBinding: !0,
    isBlockScoped: !0,
    isImmutable: !0,
    isLet: !0,
    isNode: !0,
    isNodesEquivalent: !0,
    isPlaceholderType: !0,
    isReferenced: !0,
    isScope: !0,
    isSpecifierDefault: !0,
    isType: !0,
    isValidES3Identifier: !0,
    isValidIdentifier: !0,
    isVar: !0,
    matchesPattern: !0,
    validate: !0,
    buildMatchMemberExpression: !0,
    __internal__deprecationWarning: !0
  };
  Object.defineProperty(ce, "__internal__deprecationWarning", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return uye.default;
    }, "get")
  });
  Object.defineProperty(ce, "addComment", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Eme.default;
    }, "get")
  });
  Object.defineProperty(ce, "addComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return vme.default;
    }, "get")
  });
  Object.defineProperty(ce, "appendToMemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Fme.default;
    }, "get")
  });
  Object.defineProperty(ce, "assertNode", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fme.default;
    }, "get")
  });
  Object.defineProperty(ce, "buildMatchMemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return lye.default;
    }, "get")
  });
  Object.defineProperty(ce, "clone", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return mme.default;
    }, "get")
  });
  Object.defineProperty(ce, "cloneDeep", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return yme.default;
    }, "get")
  });
  Object.defineProperty(ce, "cloneDeepWithoutLoc", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return gme.default;
    }, "get")
  });
  Object.defineProperty(ce, "cloneNode", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return hme.default;
    }, "get")
  });
  Object.defineProperty(ce, "cloneWithoutLoc", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return bme.default;
    }, "get")
  });
  Object.defineProperty(ce, "createFlowUnionType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Bk.default;
    }, "get")
  });
  Object.defineProperty(ce, "createTSUnionType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return dme.default;
    }, "get")
  });
  Object.defineProperty(ce, "createTypeAnnotationBasedOnTypeof", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return pme.default;
    }, "get")
  });
  Object.defineProperty(ce, "createUnionTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Bk.default;
    }, "get")
  });
  Object.defineProperty(ce, "ensureBlock", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Cme.default;
    }, "get")
  });
  Object.defineProperty(ce, "getBindingIdentifiers", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return $me.default;
    }, "get")
  });
  Object.defineProperty(ce, "getOuterBindingIdentifiers", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Ume.default;
    }, "get")
  });
  Object.defineProperty(ce, "inheritInnerComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Sme.default;
    }, "get")
  });
  Object.defineProperty(ce, "inheritLeadingComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Tme.default;
    }, "get")
  });
  Object.defineProperty(ce, "inheritTrailingComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Pme.default;
    }, "get")
  });
  Object.defineProperty(ce, "inherits", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Lme.default;
    }, "get")
  });
  Object.defineProperty(ce, "inheritsComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return xme.default;
    }, "get")
  });
  Object.defineProperty(ce, "is", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Hme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isBinding", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Gme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isBlockScoped", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isImmutable", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Yme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isLet", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Xme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isNode", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return zme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isNodesEquivalent", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Jme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isPlaceholderType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Qme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isReferenced", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zme.default;
    }, "get")
  });
  Object.defineProperty(ce, "isScope", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return eye.default;
    }, "get")
  });
  Object.defineProperty(ce, "isSpecifierDefault", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return tye.default;
    }, "get")
  });
  Object.defineProperty(ce, "isType", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return rye.default;
    }, "get")
  });
  Object.defineProperty(ce, "isValidES3Identifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return sye.default;
    }, "get")
  });
  Object.defineProperty(ce, "isValidIdentifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return nye.default;
    }, "get")
  });
  Object.defineProperty(ce, "isVar", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return iye.default;
    }, "get")
  });
  Object.defineProperty(ce, "matchesPattern", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return aye.default;
    }, "get")
  });
  Object.defineProperty(ce, "prependToMemberExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Bme.default;
    }, "get")
  });
  ce.react = void 0;
  Object.defineProperty(ce, "removeComments", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Ame.default;
    }, "get")
  });
  Object.defineProperty(ce, "removeProperties", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Mme.default;
    }, "get")
  });
  Object.defineProperty(ce, "removePropertiesDeep", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return jme.default;
    }, "get")
  });
  Object.defineProperty(ce, "removeTypeDuplicates", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return qme.default;
    }, "get")
  });
  Object.defineProperty(ce, "shallowEqual", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Wme.default;
    }, "get")
  });
  Object.defineProperty(ce, "toBindingIdentifierName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return wme.default;
    }, "get")
  });
  Object.defineProperty(ce, "toBlock", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Dme.default;
    }, "get")
  });
  Object.defineProperty(ce, "toComputedKey", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Ime.default;
    }, "get")
  });
  Object.defineProperty(ce, "toExpression", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return _me.default;
    }, "get")
  });
  Object.defineProperty(ce, "toIdentifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Ome.default;
    }, "get")
  });
  Object.defineProperty(ce, "toKeyAlias", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Nme.default;
    }, "get")
  });
  Object.defineProperty(ce, "toStatement", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Rme.default;
    }, "get")
  });
  Object.defineProperty(ce, "traverse", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Wp.default;
    }, "get")
  });
  Object.defineProperty(ce, "traverseFast", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Vme.default;
    }, "get")
  });
  Object.defineProperty(ce, "validate", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return oye.default;
    }, "get")
  });
  Object.defineProperty(ce, "valueToNode", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return kme.default;
    }, "get")
  });
  var lme = $N(), ume = UN(), cme = LR(), fme = BR(), IE = MR();
  Object.keys(IE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === IE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return IE[e];
      }, "get")
    });
  });
  var pme = jR(), Bk = UR(), dme = GR(), _E = is();
  Object.keys(_E).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === _E[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return _E[e];
      }, "get")
    });
  });
  var OE = KR();
  Object.keys(OE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === OE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return OE[e];
      }, "get")
    });
  });
  var NE = XR();
  Object.keys(NE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === NE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return NE[e];
      }, "get")
    });
  });
  var hme = Ji(), mme = tk(), yme = rk(), gme = sk(), bme = nk(), Eme = ik(), vme = Nb(), Sme = Lb(), Tme = Mb(), xme = Ub(), Pme = qb(), Ame = ak(),
  RE = ok();
  Object.keys(RE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === RE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return RE[e];
      }, "get")
    });
  });
  var kE = Yi();
  Object.keys(kE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === kE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return kE[e];
      }, "get")
    });
  });
  var Cme = lk(), wme = uk(), Dme = Gb(), Ime = ck(), _me = fk(), Ome = Xb(), Nme = hk(), Rme = mk(), kme = yk(), FE = Fs();
  Object.keys(FE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === FE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return FE[e];
      }, "get")
    });
  });
  var Fme = gk(), Lme = Ek(), Bme = vk(), Mme = rE(), jme = nE(), qme = Sb(), $me = Qu(), Ume = Sk(), Wp = Tk();
  Object.keys(Wp).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === Wp[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Wp[e];
      }, "get")
    });
  });
  var Vme = eE(), Wme = Sp(), Hme = Go(), Gme = xk(), Kme = Ak(), Yme = Ck(), Xme = yE(), zme = bb(), Jme = Dk(), Qme = Hg(), Zme = Ik(), eye = _k(),
  tye = Nk(), rye = xp(), sye = Rk(), nye = Yo(), iye = kk(), aye = jg(), oye = Dp(), lye = $g(), LE = hr();
  Object.keys(LE).forEach(function(e) {
    e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(ci, e) || e in ce && ce[e] === LE[e] || Object.defineProperty(
    ce, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return LE[e];
      }, "get")
    });
  });
  var uye = Bu(), rZe = ce.react = {
    isReactComponent: lme.default,
    isCompatTag: ume.default,
    buildChildren: cme.default
  };
  ce.toSequenceExpression = Lk().default;
});

// ../node_modules/@babel/traverse/lib/path/lib/virtual-types.js
var BE = y((st) => {
  "use strict";
  Object.defineProperty(st, "__esModule", {
    value: !0
  });
  st.Var = st.User = st.Statement = st.SpreadProperty = st.Scope = st.RestProperty = st.ReferencedMemberExpression = st.ReferencedIdentifier =
  st.Referenced = st.Pure = st.NumericLiteralTypeAnnotation = st.Generated = st.ForAwaitStatement = st.Flow = st.Expression = st.ExistentialTypeParam =
  st.BlockScoped = st.BindingIdentifier = void 0;
  var iZe = st.ReferencedIdentifier = ["Identifier", "JSXIdentifier"], aZe = st.ReferencedMemberExpression = ["MemberExpression"], oZe = st.
  BindingIdentifier = ["Identifier"], lZe = st.Statement = ["Statement"], uZe = st.Expression = ["Expression"], cZe = st.Scope = ["Scopable",
  "Pattern"], fZe = st.Referenced = null, pZe = st.BlockScoped = null, dZe = st.Var = ["VariableDeclaration"], hZe = st.User = null, mZe = st.
  Generated = null, yZe = st.Pure = null, gZe = st.Flow = ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"], bZe = st.RestProperty =
  ["RestElement"], EZe = st.SpreadProperty = ["RestElement"], vZe = st.ExistentialTypeParam = ["ExistsTypeAnnotation"], SZe = st.NumericLiteralTypeAnnotation =
  ["NumberLiteralTypeAnnotation"], TZe = st.ForAwaitStatement = ["ForOfStatement"];
});

// ../node_modules/@babel/traverse/lib/path/lib/virtual-types-validator.js
var jE = y((br) => {
  "use strict";
  Object.defineProperty(br, "__esModule", {
    value: !0
  });
  br.isBindingIdentifier = Nye;
  br.isBlockScoped = Bye;
  br.isExpression = kye;
  br.isFlow = Uye;
  br.isForAwaitStatement = Hye;
  br.isGenerated = qye;
  br.isPure = $ye;
  br.isReferenced = Lye;
  br.isReferencedIdentifier = _ye;
  br.isReferencedMemberExpression = Oye;
  br.isRestProperty = Vye;
  br.isScope = Fye;
  br.isSpreadProperty = Wye;
  br.isStatement = Rye;
  br.isUser = jye;
  br.isVar = Mye;
  var cye = Re(), {
    isBinding: fye,
    isBlockScoped: pye,
    isExportDeclaration: dye,
    isExpression: hye,
    isFlow: mye,
    isForStatement: yye,
    isForXStatement: gye,
    isIdentifier: Mk,
    isImportDeclaration: bye,
    isImportSpecifier: Eye,
    isJSXIdentifier: vye,
    isJSXMemberExpression: Sye,
    isMemberExpression: Tye,
    isRestElement: jk,
    isReferenced: ME,
    isScope: xye,
    isStatement: Pye,
    isVar: Aye,
    isVariableDeclaration: Cye,
    react: wye,
    isForOfStatement: Dye
  } = cye, {
    isCompatTag: Iye
  } = wye;
  function _ye(e) {
    let {
      node: t,
      parent: r
    } = this;
    if (!Mk(t, e) && !Sye(r, e))
      if (vye(t, e)) {
        if (Iye(t.name)) return !1;
      } else
        return !1;
    return ME(t, r, this.parentPath.parent);
  }
  i(_ye, "isReferencedIdentifier");
  function Oye() {
    let {
      node: e,
      parent: t
    } = this;
    return Tye(e) && ME(e, t);
  }
  i(Oye, "isReferencedMemberExpression");
  function Nye() {
    let {
      node: e,
      parent: t
    } = this, r = this.parentPath.parent;
    return Mk(e) && fye(e, t, r);
  }
  i(Nye, "isBindingIdentifier");
  function Rye() {
    let {
      node: e,
      parent: t
    } = this;
    return Pye(e) ? !(Cye(e) && (gye(t, {
      left: e
    }) || yye(t, {
      init: e
    }))) : !1;
  }
  i(Rye, "isStatement");
  function kye() {
    return this.isIdentifier() ? this.isReferencedIdentifier() : hye(this.node);
  }
  i(kye, "isExpression");
  function Fye() {
    return xye(this.node, this.parent);
  }
  i(Fye, "isScope");
  function Lye() {
    return ME(this.node, this.parent);
  }
  i(Lye, "isReferenced");
  function Bye() {
    return pye(this.node);
  }
  i(Bye, "isBlockScoped");
  function Mye() {
    return Aye(this.node);
  }
  i(Mye, "isVar");
  function jye() {
    return this.node && !!this.node.loc;
  }
  i(jye, "isUser");
  function qye() {
    return !this.isUser();
  }
  i(qye, "isGenerated");
  function $ye(e) {
    return this.scope.isPure(this.node, e);
  }
  i($ye, "isPure");
  function Uye() {
    let {
      node: e
    } = this;
    return mye(e) ? !0 : bye(e) ? e.importKind === "type" || e.importKind === "typeof" : dye(e) ? e.exportKind === "type" : Eye(e) ? e.importKind ===
    "type" || e.importKind === "typeof" : !1;
  }
  i(Uye, "isFlow");
  function Vye() {
    return jk(this.node) && this.parentPath && this.parentPath.isObjectPattern();
  }
  i(Vye, "isRestProperty");
  function Wye() {
    return jk(this.node) && this.parentPath && this.parentPath.isObjectExpression();
  }
  i(Wye, "isSpreadProperty");
  function Hye() {
    return Dye(this.node, {
      await: !0
    });
  }
  i(Hye, "isForAwaitStatement");
  br.isExistentialTypeParam = /* @__PURE__ */ i(function() {
    throw new Error("`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.");
  }, "isExistentialTypeParam"), br.isNumericLiteralTypeAnnotation = /* @__PURE__ */ i(function() {
    throw new Error("`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.");
  }, "isNumericLiteralTypeAnnotation");
});

// ../node_modules/@babel/traverse/lib/visitors.js
var ec = y((Jo) => {
  "use strict";
  Object.defineProperty(Jo, "__esModule", {
    value: !0
  });
  Jo.explode = Xk;
  Jo.isExplodedVisitor = Yk;
  Jo.merge = zye;
  Jo.verify = zk;
  var Kk = BE(), Gye = jE(), Kye = Re(), {
    DEPRECATED_KEYS: qk,
    DEPRECATED_ALIASES: $k,
    FLIPPED_ALIAS_KEYS: Uk,
    TYPES: Yye,
    __internal__deprecationWarning: Vk
  } = Kye;
  function Xye(e) {
    return e in Kk;
  }
  i(Xye, "isVirtualType");
  function Yk(e) {
    return e?._exploded;
  }
  i(Yk, "isExplodedVisitor");
  function Xk(e) {
    if (Yk(e)) return e;
    e._exploded = !0;
    for (let t of Object.keys(e)) {
      if (Wa(t)) continue;
      let r = t.split("|");
      if (r.length === 1) continue;
      let s = e[t];
      delete e[t];
      for (let n of r)
        e[n] = s;
    }
    zk(e), delete e.__esModule, Jye(e), Gk(e);
    for (let t of Object.keys(e)) {
      if (Wa(t) || !Xye(t)) continue;
      let r = e[t];
      for (let n of Object.keys(r))
        r[n] = Qye(t, r[n]);
      delete e[t];
      let s = Kk[t];
      if (s !== null)
        for (let n of s)
          e[n] ? Zu(e[n], r) : e[n] = r;
      else
        Zu(e, r);
    }
    for (let t of Object.keys(e)) {
      if (Wa(t)) continue;
      let r = Uk[t];
      if (t in qk) {
        let n = qk[t];
        Vk(t, n, "Visitor "), r = [n];
      } else if (t in $k) {
        let n = $k[t];
        Vk(t, n, "Visitor "), r = Uk[n];
      }
      if (!r) continue;
      let s = e[t];
      delete e[t];
      for (let n of r) {
        let a = e[n];
        a ? Zu(a, s) : e[n] = Object.assign({}, s);
      }
    }
    for (let t of Object.keys(e))
      Wa(t) || Gk(e[t]);
    return e;
  }
  i(Xk, "explode");
  function zk(e) {
    if (!e._verified) {
      if (typeof e == "function")
        throw new Error("You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Functi\
on }`?");
      for (let t of Object.keys(e)) {
        if ((t === "enter" || t === "exit") && Wk(t, e[t]), Wa(t)) continue;
        if (Yye.indexOf(t) < 0)
          throw new Error(`You gave us a visitor for the node type ${t} but it's not a valid type`);
        let r = e[t];
        if (typeof r == "object")
          for (let s of Object.keys(r))
            if (s === "enter" || s === "exit")
              Wk(`${t}.${s}`, r[s]);
            else
              throw new Error(`You passed \`traverse()\` a visitor object with the property ${t} that has the invalid property ${s}`);
      }
      e._verified = !0;
    }
  }
  i(zk, "verify");
  function Wk(e, t) {
    let r = [].concat(t);
    for (let s of r)
      if (typeof s != "function")
        throw new TypeError(`Non-function found defined in ${e} with type ${typeof s}`);
  }
  i(Wk, "validateVisitorMethods");
  function zye(e, t = [], r) {
    let s = {};
    for (let n = 0; n < e.length; n++) {
      let a = Xk(e[n]), o = t[n], l = a;
      (o || r) && (l = Hk(l, o, r)), Zu(s, l);
      for (let u of Object.keys(a)) {
        if (Wa(u)) continue;
        let c = a[u];
        (o || r) && (c = Hk(c, o, r));
        let f = s[u] || (s[u] = {});
        Zu(f, c);
      }
    }
    return s;
  }
  i(zye, "merge");
  function Hk(e, t, r) {
    let s = {};
    for (let n of ["enter", "exit"]) {
      let a = e[n];
      Array.isArray(a) && (a = a.map(function(o) {
        let l = o;
        return t && (l = /* @__PURE__ */ i(function(u) {
          o.call(t, u, t);
        }, "newFn")), r && (l = r(t?.key, n, l)), l !== o && (l.toString = () => o.toString()), l;
      }), s[n] = a);
    }
    return s;
  }
  i(Hk, "wrapWithStateOrWrapper");
  function Jye(e) {
    for (let t of Object.keys(e)) {
      if (Wa(t)) continue;
      let r = e[t];
      typeof r == "function" && (e[t] = {
        enter: r
      });
    }
  }
  i(Jye, "ensureEntranceObjects");
  function Gk(e) {
    e.enter && !Array.isArray(e.enter) && (e.enter = [e.enter]), e.exit && !Array.isArray(e.exit) && (e.exit = [e.exit]);
  }
  i(Gk, "ensureCallbackArrays");
  function Qye(e, t) {
    let r = `is${e}`, s = Gye[r], n = /* @__PURE__ */ i(function(a) {
      if (s.call(a))
        return t.apply(this, arguments);
    }, "newFn");
    return n.toString = () => t.toString(), n;
  }
  i(Qye, "wrapCheck");
  function Wa(e) {
    return e[0] === "_" || e === "enter" || e === "exit" || e === "shouldSkip" || e === "denylist" || e === "noScope" || e === "skipKeys" ||
    e === "blacklist";
  }
  i(Wa, "shouldIgnoreKey");
  function Zu(e, t) {
    for (let r of ["enter", "exit"])
      t[r] && (e[r] = [].concat(e[r] || [], t[r]));
  }
  i(Zu, "mergePair");
});

// ../node_modules/@babel/traverse/lib/cache.js
var Ha = y((xs) => {
  "use strict";
  Object.defineProperty(xs, "__esModule", {
    value: !0
  });
  xs.clear = e0e;
  xs.clearPath = Jk;
  xs.clearScope = Qk;
  xs.getCachedPaths = t0e;
  xs.getOrCreateCachedPaths = r0e;
  xs.scope = xs.path = void 0;
  var Hp = xs.path = /* @__PURE__ */ new WeakMap(), Zye = xs.scope = /* @__PURE__ */ new WeakMap();
  function e0e() {
    Jk(), Qk();
  }
  i(e0e, "clear");
  function Jk() {
    xs.path = Hp = /* @__PURE__ */ new WeakMap();
  }
  i(Jk, "clearPath");
  function Qk() {
    xs.scope = Zye = /* @__PURE__ */ new WeakMap();
  }
  i(Qk, "clearScope");
  var qE = Object.freeze({});
  function t0e(e, t) {
    var r, s;
    return e = null, (r = Hp.get((s = e) != null ? s : qE)) == null ? void 0 : r.get(t);
  }
  i(t0e, "getCachedPaths");
  function r0e(e, t) {
    var r, s;
    e = null;
    let n = Hp.get((r = e) != null ? r : qE);
    n || Hp.set((s = e) != null ? s : qE, n = /* @__PURE__ */ new WeakMap());
    let a = n.get(t);
    return a || n.set(t, a = /* @__PURE__ */ new Map()), a;
  }
  i(r0e, "getOrCreateCachedPaths");
});

// ../node_modules/debug/node_modules/ms/index.js
var eF = y((_Ze, Zk) => {
  var Qo = 1e3, Zo = Qo * 60, el = Zo * 60, Ga = el * 24, s0e = Ga * 7, n0e = Ga * 365.25;
  Zk.exports = function(e, t) {
    t = t || {};
    var r = typeof e;
    if (r === "string" && e.length > 0)
      return i0e(e);
    if (r === "number" && isFinite(e))
      return t.long ? o0e(e) : a0e(e);
    throw new Error(
      "val is not a non-empty string or a valid number. val=" + JSON.stringify(e)
    );
  };
  function i0e(e) {
    if (e = String(e), !(e.length > 100)) {
      var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.
      exec(
        e
      );
      if (t) {
        var r = parseFloat(t[1]), s = (t[2] || "ms").toLowerCase();
        switch (s) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return r * n0e;
          case "weeks":
          case "week":
          case "w":
            return r * s0e;
          case "days":
          case "day":
          case "d":
            return r * Ga;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return r * el;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return r * Zo;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return r * Qo;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return r;
          default:
            return;
        }
      }
    }
  }
  i(i0e, "parse");
  function a0e(e) {
    var t = Math.abs(e);
    return t >= Ga ? Math.round(e / Ga) + "d" : t >= el ? Math.round(e / el) + "h" : t >= Zo ? Math.round(e / Zo) + "m" : t >= Qo ? Math.round(
    e / Qo) + "s" : e + "ms";
  }
  i(a0e, "fmtShort");
  function o0e(e) {
    var t = Math.abs(e);
    return t >= Ga ? Gp(e, t, Ga, "day") : t >= el ? Gp(e, t, el, "hour") : t >= Zo ? Gp(e, t, Zo, "minute") : t >= Qo ? Gp(e, t, Qo, "secon\
d") : e + " ms";
  }
  i(o0e, "fmtLong");
  function Gp(e, t, r, s) {
    var n = t >= r * 1.5;
    return Math.round(e / r) + " " + s + (n ? "s" : "");
  }
  i(Gp, "plural");
});

// ../node_modules/debug/src/common.js
var $E = y((NZe, tF) => {
  function l0e(e) {
    r.debug = r, r.default = r, r.coerce = u, r.disable = a, r.enable = n, r.enabled = o, r.humanize = eF(), r.destroy = c, Object.keys(e).forEach(
    (f) => {
      r[f] = e[f];
    }), r.names = [], r.skips = [], r.formatters = {};
    function t(f) {
      let p = 0;
      for (let d = 0; d < f.length; d++)
        p = (p << 5) - p + f.charCodeAt(d), p |= 0;
      return r.colors[Math.abs(p) % r.colors.length];
    }
    i(t, "selectColor"), r.selectColor = t;
    function r(f) {
      let p, d = null, m, b;
      function h(...g) {
        if (!h.enabled)
          return;
        let E = h, D = Number(/* @__PURE__ */ new Date()), C = D - (p || D);
        E.diff = C, E.prev = p, E.curr = D, p = D, g[0] = r.coerce(g[0]), typeof g[0] != "string" && g.unshift("%O");
        let N = 0;
        g[0] = g[0].replace(/%([a-zA-Z%])/g, (M, q) => {
          if (M === "%%")
            return "%";
          N++;
          let V = r.formatters[q];
          if (typeof V == "function") {
            let W = g[N];
            M = V.call(E, W), g.splice(N, 1), N--;
          }
          return M;
        }), r.formatArgs.call(E, g), (E.log || r.log).apply(E, g);
      }
      return i(h, "debug"), h.namespace = f, h.useColors = r.useColors(), h.color = r.selectColor(f), h.extend = s, h.destroy = r.destroy, Object.
      defineProperty(h, "enabled", {
        enumerable: !0,
        configurable: !1,
        get: /* @__PURE__ */ i(() => d !== null ? d : (m !== r.namespaces && (m = r.namespaces, b = r.enabled(f)), b), "get"),
        set: /* @__PURE__ */ i((g) => {
          d = g;
        }, "set")
      }), typeof r.init == "function" && r.init(h), h;
    }
    i(r, "createDebug");
    function s(f, p) {
      let d = r(this.namespace + (typeof p > "u" ? ":" : p) + f);
      return d.log = this.log, d;
    }
    i(s, "extend");
    function n(f) {
      r.save(f), r.namespaces = f, r.names = [], r.skips = [];
      let p, d = (typeof f == "string" ? f : "").split(/[\s,]+/), m = d.length;
      for (p = 0; p < m; p++)
        d[p] && (f = d[p].replace(/\*/g, ".*?"), f[0] === "-" ? r.skips.push(new RegExp("^" + f.slice(1) + "$")) : r.names.push(new RegExp("\
^" + f + "$")));
    }
    i(n, "enable");
    function a() {
      let f = [
        ...r.names.map(l),
        ...r.skips.map(l).map((p) => "-" + p)
      ].join(",");
      return r.enable(""), f;
    }
    i(a, "disable");
    function o(f) {
      if (f[f.length - 1] === "*")
        return !0;
      let p, d;
      for (p = 0, d = r.skips.length; p < d; p++)
        if (r.skips[p].test(f))
          return !1;
      for (p = 0, d = r.names.length; p < d; p++)
        if (r.names[p].test(f))
          return !0;
      return !1;
    }
    i(o, "enabled");
    function l(f) {
      return f.toString().substring(2, f.toString().length - 2).replace(/\.\*\?$/, "*");
    }
    i(l, "toNamespace");
    function u(f) {
      return f instanceof Error ? f.stack || f.message : f;
    }
    i(u, "coerce");
    function c() {
      console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major versio\
n of `debug`.");
    }
    return i(c, "destroy"), r.enable(r.load()), r;
  }
  i(l0e, "setup");
  tF.exports = l0e;
});

// ../node_modules/debug/src/browser.js
var rF = y((Ps, Kp) => {
  Ps.formatArgs = c0e;
  Ps.save = f0e;
  Ps.load = p0e;
  Ps.useColors = u0e;
  Ps.storage = d0e();
  Ps.destroy = /* @__PURE__ */ (() => {
    let e = !1;
    return () => {
      e || (e = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the nex\
t major version of `debug`."));
    };
  })();
  Ps.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function u0e() {
    return typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs) ? !0 : typeof navigator < "\
u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/) ? !1 : typeof document < "u" && document.documentElement &&
    document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
    typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >=
    31 || // Double check webkit in userAgent just in case we are in a worker
    typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  i(u0e, "useColors");
  function c0e(e) {
    if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" +
    Kp.exports.humanize(this.diff), !this.useColors)
      return;
    let t = "color: " + this.color;
    e.splice(1, 0, t, "color: inherit");
    let r = 0, s = 0;
    e[0].replace(/%[a-zA-Z%]/g, (n) => {
      n !== "%%" && (r++, n === "%c" && (s = r));
    }), e.splice(s, 0, t);
  }
  i(c0e, "formatArgs");
  Ps.log = console.debug || console.log || (() => {
  });
  function f0e(e) {
    try {
      e ? Ps.storage.setItem("debug", e) : Ps.storage.removeItem("debug");
    } catch {
    }
  }
  i(f0e, "save");
  function p0e() {
    let e;
    try {
      e = Ps.storage.getItem("debug");
    } catch {
    }
    return !e && typeof process < "u" && "env" in process && (e = process.env.DEBUG), e;
  }
  i(p0e, "load");
  function d0e() {
    try {
      return localStorage;
    } catch {
    }
  }
  i(d0e, "localstorage");
  Kp.exports = $E()(Ps);
  var { formatters: h0e } = Kp.exports;
  h0e.j = function(e) {
    try {
      return JSON.stringify(e);
    } catch (t) {
      return "[UnexpectedJSONParseError]: " + t.message;
    }
  };
});

// ../node_modules/has-flag/index.js
var nF = y((FZe, sF) => {
  "use strict";
  sF.exports = (e, t = process.argv) => {
    let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", s = t.indexOf(r + e), n = t.indexOf("--");
    return s !== -1 && (n === -1 || s < n);
  };
});

// ../node_modules/supports-color/index.js
var oF = y((LZe, aF) => {
  "use strict";
  var m0e = Q("os"), iF = Q("tty"), Ls = nF(), { env: wr } = process, Zi;
  Ls("no-color") || Ls("no-colors") || Ls("color=false") || Ls("color=never") ? Zi = 0 : (Ls("color") || Ls("colors") || Ls("color=true") ||
  Ls("color=always")) && (Zi = 1);
  "FORCE_COLOR" in wr && (wr.FORCE_COLOR === "true" ? Zi = 1 : wr.FORCE_COLOR === "false" ? Zi = 0 : Zi = wr.FORCE_COLOR.length === 0 ? 1 : Math.
  min(parseInt(wr.FORCE_COLOR, 10), 3));
  function UE(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  i(UE, "translateLevel");
  function VE(e, t) {
    if (Zi === 0)
      return 0;
    if (Ls("color=16m") || Ls("color=full") || Ls("color=truecolor"))
      return 3;
    if (Ls("color=256"))
      return 2;
    if (e && !t && Zi === void 0)
      return 0;
    let r = Zi || 0;
    if (wr.TERM === "dumb")
      return r;
    if (process.platform === "win32") {
      let s = m0e.release().split(".");
      return Number(s[0]) >= 10 && Number(s[2]) >= 10586 ? Number(s[2]) >= 14931 ? 3 : 2 : 1;
    }
    if ("CI" in wr)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((s) => s in wr) || wr.CI_NAME === "codeship" ?
      1 : r;
    if ("TEAMCITY_VERSION" in wr)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(wr.TEAMCITY_VERSION) ? 1 : 0;
    if (wr.COLORTERM === "truecolor")
      return 3;
    if ("TERM_PROGRAM" in wr) {
      let s = parseInt((wr.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (wr.TERM_PROGRAM) {
        case "iTerm.app":
          return s >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(wr.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(wr.TERM) || "COLORTERM" in
    wr ? 1 : r;
  }
  i(VE, "supportsColor");
  function y0e(e) {
    let t = VE(e, e && e.isTTY);
    return UE(t);
  }
  i(y0e, "getSupportLevel");
  aF.exports = {
    supportsColor: y0e,
    stdout: UE(VE(!0, iF.isatty(1))),
    stderr: UE(VE(!0, iF.isatty(2)))
  };
});

// ../node_modules/debug/src/node.js
var uF = y((Rr, Xp) => {
  var g0e = Q("tty"), Yp = Q("util");
  Rr.init = P0e;
  Rr.log = S0e;
  Rr.formatArgs = E0e;
  Rr.save = T0e;
  Rr.load = x0e;
  Rr.useColors = b0e;
  Rr.destroy = Yp.deprecate(
    () => {
    },
    "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
  );
  Rr.colors = [6, 2, 3, 4, 5, 1];
  try {
    let e = oF();
    e && (e.stderr || e).level >= 2 && (Rr.colors = [
      20,
      21,
      26,
      27,
      32,
      33,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      56,
      57,
      62,
      63,
      68,
      69,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      92,
      93,
      98,
      99,
      112,
      113,
      128,
      129,
      134,
      135,
      148,
      149,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      178,
      179,
      184,
      185,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      214,
      215,
      220,
      221
    ]);
  } catch {
  }
  Rr.inspectOpts = Object.keys(process.env).filter((e) => /^debug_/i.test(e)).reduce((e, t) => {
    let r = t.substring(6).toLowerCase().replace(/_([a-z])/g, (n, a) => a.toUpperCase()), s = process.env[t];
    return /^(yes|on|true|enabled)$/i.test(s) ? s = !0 : /^(no|off|false|disabled)$/i.test(s) ? s = !1 : s === "null" ? s = null : s = Number(
    s), e[r] = s, e;
  }, {});
  function b0e() {
    return "colors" in Rr.inspectOpts ? !!Rr.inspectOpts.colors : g0e.isatty(process.stderr.fd);
  }
  i(b0e, "useColors");
  function E0e(e) {
    let { namespace: t, useColors: r } = this;
    if (r) {
      let s = this.color, n = "\x1B[3" + (s < 8 ? s : "8;5;" + s), a = `  ${n};1m${t} \x1B[0m`;
      e[0] = a + e[0].split(`
`).join(`
` + a), e.push(n + "m+" + Xp.exports.humanize(this.diff) + "\x1B[0m");
    } else
      e[0] = v0e() + t + " " + e[0];
  }
  i(E0e, "formatArgs");
  function v0e() {
    return Rr.inspectOpts.hideDate ? "" : (/* @__PURE__ */ new Date()).toISOString() + " ";
  }
  i(v0e, "getDate");
  function S0e(...e) {
    return process.stderr.write(Yp.format(...e) + `
`);
  }
  i(S0e, "log");
  function T0e(e) {
    e ? process.env.DEBUG = e : delete process.env.DEBUG;
  }
  i(T0e, "save");
  function x0e() {
    return process.env.DEBUG;
  }
  i(x0e, "load");
  function P0e(e) {
    e.inspectOpts = {};
    let t = Object.keys(Rr.inspectOpts);
    for (let r = 0; r < t.length; r++)
      e.inspectOpts[t[r]] = Rr.inspectOpts[t[r]];
  }
  i(P0e, "init");
  Xp.exports = $E()(Rr);
  var { formatters: lF } = Xp.exports;
  lF.o = function(e) {
    return this.inspectOpts.colors = this.useColors, Yp.inspect(e, this.inspectOpts).split(`
`).map((t) => t.trim()).join(" ");
  };
  lF.O = function(e) {
    return this.inspectOpts.colors = this.useColors, Yp.inspect(e, this.inspectOpts);
  };
});

// ../node_modules/debug/src/index.js
var Ka = y((jZe, WE) => {
  typeof process > "u" || process.type === "renderer" || process.browser === !0 || process.__nwjs ? WE.exports = rF() : WE.exports = uF();
});

// ../node_modules/@babel/helper-split-export-declaration/lib/index.js
var tc = y((KE) => {
  "use strict";
  Object.defineProperty(KE, "__esModule", {
    value: !0
  });
  KE.default = D0e;
  var A0e = Re(), {
    cloneNode: HE,
    exportNamedDeclaration: cF,
    exportSpecifier: fF,
    identifier: GE,
    variableDeclaration: C0e,
    variableDeclarator: w0e
  } = A0e;
  function D0e(e) {
    if (!e.isExportDeclaration() || e.isExportAllDeclaration())
      throw new Error("Only default and named export declarations can be split.");
    if (e.isExportDefaultDeclaration()) {
      let a = e.get("declaration"), o = a.isFunctionDeclaration() || a.isClassDeclaration(), l = a.isFunctionExpression() || a.isClassExpression(),
      u = a.isScope() ? a.scope.parent : a.scope, c = a.node.id, f = !1;
      c ? l && u.hasBinding(c.name) && (f = !0, c = u.generateUidIdentifier(c.name)) : (f = !0, c = u.generateUidIdentifier("default"), (o ||
      l) && (a.node.id = HE(c)));
      let p = o ? a.node : C0e("var", [w0e(HE(c), a.node)]), d = cF(null, [fF(HE(c), GE("default"))]);
      return e.insertAfter(d), e.replaceWith(p), f && u.registerDeclaration(e), e;
    } else if (e.get("specifiers").length > 0)
      throw new Error("It doesn't make sense to split exported specifiers.");
    let t = e.get("declaration"), r = t.getOuterBindingIdentifiers(), s = Object.keys(r).map((a) => fF(GE(a), GE(a))), n = cF(null, s);
    return e.insertAfter(n), e.replaceWith(t.node), e;
  }
  i(D0e, "splitExportDeclaration");
});

// ../node_modules/@babel/helper-environment-visitor/lib/index.js
var ea = y((tl) => {
  "use strict";
  Object.defineProperty(tl, "__esModule", {
    value: !0
  });
  tl.default = void 0;
  tl.requeueComputedKeyAndDecorators = YE;
  tl.skipAllButComputedKey = /* @__PURE__ */ i(function(t) {
    t.skip(), t.node.computed && t.context.maybeQueue(t.get("key"));
  }, "skipAllButComputedKey");
  function YE(e) {
    let {
      context: t,
      node: r
    } = e;
    if (r.computed && t.maybeQueue(e.get("key")), r.decorators)
      for (let s of e.get("decorators"))
        t.maybeQueue(s);
  }
  i(YE, "requeueComputedKeyAndDecorators");
  var I0e = {
    FunctionParent(e) {
      e.isArrowFunctionExpression() || (e.skip(), e.isMethod() && YE(e));
    },
    Property(e) {
      e.isObjectProperty() || (e.skip(), YE(e));
    }
  }, _0e = I0e;
  tl.default = _0e;
});

// ../node_modules/@babel/traverse/lib/scope/lib/renamer.js
var pF = y((zp) => {
  "use strict";
  Object.defineProperty(zp, "__esModule", {
    value: !0
  });
  zp.default = void 0;
  var O0e = tc(), N0e = Re(), R0e = ea(), k0e = Jp(), F0e = ec(), L0e = {
    ReferencedIdentifier({
      node: e
    }, t) {
      e.name === t.oldName && (e.name = t.newName);
    },
    Scope(e, t) {
      e.scope.bindingIdentifierEquals(t.oldName, t.binding.identifier) || (e.skip(), e.isMethod() && (0, R0e.requeueComputedKeyAndDecorators)(
      e));
    },
    ObjectProperty({
      node: e,
      scope: t
    }, r) {
      let {
        name: s
      } = e.key;
      if (e.shorthand && (s === r.oldName || s === r.newName) && t.getBindingIdentifier(s) === r.binding.identifier) {
        var n;
        e.shorthand = !1, (n = e.extra) != null && n.shorthand && (e.extra.shorthand = !1);
      }
    },
    "AssignmentExpression|Declaration|VariableDeclarator"(e, t) {
      if (e.isVariableDeclaration()) return;
      let r = e.getOuterBindingIdentifiers();
      for (let s in r)
        s === t.oldName && (r[s].name = t.newName);
    }
  }, XE = class {
    static {
      i(this, "Renamer");
    }
    constructor(t, r, s) {
      this.newName = s, this.oldName = r, this.binding = t;
    }
    maybeConvertFromExportDeclaration(t) {
      let r = t.parentPath;
      if (r.isExportDeclaration()) {
        if (r.isExportDefaultDeclaration()) {
          let {
            declaration: s
          } = r.node;
          if (N0e.isDeclaration(s) && !s.id)
            return;
        }
        r.isExportAllDeclaration() || (0, O0e.default)(r);
      }
    }
    maybeConvertFromClassFunctionDeclaration(t) {
      return t;
    }
    maybeConvertFromClassFunctionExpression(t) {
      return t;
    }
    rename() {
      let {
        binding: t,
        oldName: r,
        newName: s
      } = this, {
        scope: n,
        path: a
      } = t, o = a.find((u) => u.isDeclaration() || u.isFunctionExpression() || u.isClassExpression());
      o && o.getOuterBindingIdentifiers()[r] === t.identifier && this.maybeConvertFromExportDeclaration(o);
      let l = arguments[0] || n.block;
      (0, k0e.traverseNode)(l, (0, F0e.explode)(L0e), n, this, n.path, {
        discriminant: !0
      }), arguments[0] || (n.removeOwnBinding(r), n.bindings[s] = t, this.binding.identifier.name = s), o && (this.maybeConvertFromClassFunctionDeclaration(
      a), this.maybeConvertFromClassFunctionExpression(a));
    }
  };
  zp.default = XE;
});

// ../node_modules/@babel/traverse/lib/scope/binding.js
var dF = y((Qp) => {
  "use strict";
  Object.defineProperty(Qp, "__esModule", {
    value: !0
  });
  Qp.default = void 0;
  var zE = class {
    static {
      i(this, "Binding");
    }
    constructor({
      identifier: t,
      scope: r,
      path: s,
      kind: n
    }) {
      this.identifier = void 0, this.scope = void 0, this.path = void 0, this.kind = void 0, this.constantViolations = [], this.constant = !0,
      this.referencePaths = [], this.referenced = !1, this.references = 0, this.identifier = t, this.scope = r, this.path = s, this.kind = n,
      (n === "var" || n === "hoisted") && B0e(s) && this.reassign(s), this.clearValue();
    }
    deoptValue() {
      this.clearValue(), this.hasDeoptedValue = !0;
    }
    setValue(t) {
      this.hasDeoptedValue || (this.hasValue = !0, this.value = t);
    }
    clearValue() {
      this.hasDeoptedValue = !1, this.hasValue = !1, this.value = null;
    }
    reassign(t) {
      this.constant = !1, this.constantViolations.indexOf(t) === -1 && this.constantViolations.push(t);
    }
    reference(t) {
      this.referencePaths.indexOf(t) === -1 && (this.referenced = !0, this.references++, this.referencePaths.push(t));
    }
    dereference() {
      this.references--, this.referenced = !!this.references;
    }
  };
  Qp.default = zE;
  function B0e(e) {
    for (let {
      parentPath: t,
      key: r
    } = e; t; {
      parentPath: t,
      key: r
    } = t) {
      if (t.isFunctionParent()) return !1;
      if (t.isWhile() || t.isForXStatement() || t.isForStatement() && r === "body")
        return !0;
    }
    return !1;
  }
  i(B0e, "isDeclaredInLoop");
});

// ../node_modules/@babel/traverse/node_modules/globals/globals.json
var hF = y((YZe, M0e) => {
  M0e.exports = {
    builtin: {
      Array: !1,
      ArrayBuffer: !1,
      Atomics: !1,
      BigInt: !1,
      BigInt64Array: !1,
      BigUint64Array: !1,
      Boolean: !1,
      constructor: !1,
      DataView: !1,
      Date: !1,
      decodeURI: !1,
      decodeURIComponent: !1,
      encodeURI: !1,
      encodeURIComponent: !1,
      Error: !1,
      escape: !1,
      eval: !1,
      EvalError: !1,
      Float32Array: !1,
      Float64Array: !1,
      Function: !1,
      globalThis: !1,
      hasOwnProperty: !1,
      Infinity: !1,
      Int16Array: !1,
      Int32Array: !1,
      Int8Array: !1,
      isFinite: !1,
      isNaN: !1,
      isPrototypeOf: !1,
      JSON: !1,
      Map: !1,
      Math: !1,
      NaN: !1,
      Number: !1,
      Object: !1,
      parseFloat: !1,
      parseInt: !1,
      Promise: !1,
      propertyIsEnumerable: !1,
      Proxy: !1,
      RangeError: !1,
      ReferenceError: !1,
      Reflect: !1,
      RegExp: !1,
      Set: !1,
      SharedArrayBuffer: !1,
      String: !1,
      Symbol: !1,
      SyntaxError: !1,
      toLocaleString: !1,
      toString: !1,
      TypeError: !1,
      Uint16Array: !1,
      Uint32Array: !1,
      Uint8Array: !1,
      Uint8ClampedArray: !1,
      undefined: !1,
      unescape: !1,
      URIError: !1,
      valueOf: !1,
      WeakMap: !1,
      WeakSet: !1
    },
    es5: {
      Array: !1,
      Boolean: !1,
      constructor: !1,
      Date: !1,
      decodeURI: !1,
      decodeURIComponent: !1,
      encodeURI: !1,
      encodeURIComponent: !1,
      Error: !1,
      escape: !1,
      eval: !1,
      EvalError: !1,
      Function: !1,
      hasOwnProperty: !1,
      Infinity: !1,
      isFinite: !1,
      isNaN: !1,
      isPrototypeOf: !1,
      JSON: !1,
      Math: !1,
      NaN: !1,
      Number: !1,
      Object: !1,
      parseFloat: !1,
      parseInt: !1,
      propertyIsEnumerable: !1,
      RangeError: !1,
      ReferenceError: !1,
      RegExp: !1,
      String: !1,
      SyntaxError: !1,
      toLocaleString: !1,
      toString: !1,
      TypeError: !1,
      undefined: !1,
      unescape: !1,
      URIError: !1,
      valueOf: !1
    },
    es2015: {
      Array: !1,
      ArrayBuffer: !1,
      Boolean: !1,
      constructor: !1,
      DataView: !1,
      Date: !1,
      decodeURI: !1,
      decodeURIComponent: !1,
      encodeURI: !1,
      encodeURIComponent: !1,
      Error: !1,
      escape: !1,
      eval: !1,
      EvalError: !1,
      Float32Array: !1,
      Float64Array: !1,
      Function: !1,
      hasOwnProperty: !1,
      Infinity: !1,
      Int16Array: !1,
      Int32Array: !1,
      Int8Array: !1,
      isFinite: !1,
      isNaN: !1,
      isPrototypeOf: !1,
      JSON: !1,
      Map: !1,
      Math: !1,
      NaN: !1,
      Number: !1,
      Object: !1,
      parseFloat: !1,
      parseInt: !1,
      Promise: !1,
      propertyIsEnumerable: !1,
      Proxy: !1,
      RangeError: !1,
      ReferenceError: !1,
      Reflect: !1,
      RegExp: !1,
      Set: !1,
      String: !1,
      Symbol: !1,
      SyntaxError: !1,
      toLocaleString: !1,
      toString: !1,
      TypeError: !1,
      Uint16Array: !1,
      Uint32Array: !1,
      Uint8Array: !1,
      Uint8ClampedArray: !1,
      undefined: !1,
      unescape: !1,
      URIError: !1,
      valueOf: !1,
      WeakMap: !1,
      WeakSet: !1
    },
    es2017: {
      Array: !1,
      ArrayBuffer: !1,
      Atomics: !1,
      Boolean: !1,
      constructor: !1,
      DataView: !1,
      Date: !1,
      decodeURI: !1,
      decodeURIComponent: !1,
      encodeURI: !1,
      encodeURIComponent: !1,
      Error: !1,
      escape: !1,
      eval: !1,
      EvalError: !1,
      Float32Array: !1,
      Float64Array: !1,
      Function: !1,
      hasOwnProperty: !1,
      Infinity: !1,
      Int16Array: !1,
      Int32Array: !1,
      Int8Array: !1,
      isFinite: !1,
      isNaN: !1,
      isPrototypeOf: !1,
      JSON: !1,
      Map: !1,
      Math: !1,
      NaN: !1,
      Number: !1,
      Object: !1,
      parseFloat: !1,
      parseInt: !1,
      Promise: !1,
      propertyIsEnumerable: !1,
      Proxy: !1,
      RangeError: !1,
      ReferenceError: !1,
      Reflect: !1,
      RegExp: !1,
      Set: !1,
      SharedArrayBuffer: !1,
      String: !1,
      Symbol: !1,
      SyntaxError: !1,
      toLocaleString: !1,
      toString: !1,
      TypeError: !1,
      Uint16Array: !1,
      Uint32Array: !1,
      Uint8Array: !1,
      Uint8ClampedArray: !1,
      undefined: !1,
      unescape: !1,
      URIError: !1,
      valueOf: !1,
      WeakMap: !1,
      WeakSet: !1
    },
    browser: {
      AbortController: !1,
      AbortSignal: !1,
      addEventListener: !1,
      alert: !1,
      AnalyserNode: !1,
      Animation: !1,
      AnimationEffectReadOnly: !1,
      AnimationEffectTiming: !1,
      AnimationEffectTimingReadOnly: !1,
      AnimationEvent: !1,
      AnimationPlaybackEvent: !1,
      AnimationTimeline: !1,
      applicationCache: !1,
      ApplicationCache: !1,
      ApplicationCacheErrorEvent: !1,
      atob: !1,
      Attr: !1,
      Audio: !1,
      AudioBuffer: !1,
      AudioBufferSourceNode: !1,
      AudioContext: !1,
      AudioDestinationNode: !1,
      AudioListener: !1,
      AudioNode: !1,
      AudioParam: !1,
      AudioProcessingEvent: !1,
      AudioScheduledSourceNode: !1,
      "AudioWorkletGlobalScope ": !1,
      AudioWorkletNode: !1,
      AudioWorkletProcessor: !1,
      BarProp: !1,
      BaseAudioContext: !1,
      BatteryManager: !1,
      BeforeUnloadEvent: !1,
      BiquadFilterNode: !1,
      Blob: !1,
      BlobEvent: !1,
      blur: !1,
      BroadcastChannel: !1,
      btoa: !1,
      BudgetService: !1,
      ByteLengthQueuingStrategy: !1,
      Cache: !1,
      caches: !1,
      CacheStorage: !1,
      cancelAnimationFrame: !1,
      cancelIdleCallback: !1,
      CanvasCaptureMediaStreamTrack: !1,
      CanvasGradient: !1,
      CanvasPattern: !1,
      CanvasRenderingContext2D: !1,
      ChannelMergerNode: !1,
      ChannelSplitterNode: !1,
      CharacterData: !1,
      clearInterval: !1,
      clearTimeout: !1,
      clientInformation: !1,
      ClipboardEvent: !1,
      close: !1,
      closed: !1,
      CloseEvent: !1,
      Comment: !1,
      CompositionEvent: !1,
      confirm: !1,
      console: !1,
      ConstantSourceNode: !1,
      ConvolverNode: !1,
      CountQueuingStrategy: !1,
      createImageBitmap: !1,
      Credential: !1,
      CredentialsContainer: !1,
      crypto: !1,
      Crypto: !1,
      CryptoKey: !1,
      CSS: !1,
      CSSConditionRule: !1,
      CSSFontFaceRule: !1,
      CSSGroupingRule: !1,
      CSSImportRule: !1,
      CSSKeyframeRule: !1,
      CSSKeyframesRule: !1,
      CSSMediaRule: !1,
      CSSNamespaceRule: !1,
      CSSPageRule: !1,
      CSSRule: !1,
      CSSRuleList: !1,
      CSSStyleDeclaration: !1,
      CSSStyleRule: !1,
      CSSStyleSheet: !1,
      CSSSupportsRule: !1,
      CustomElementRegistry: !1,
      customElements: !1,
      CustomEvent: !1,
      DataTransfer: !1,
      DataTransferItem: !1,
      DataTransferItemList: !1,
      defaultstatus: !1,
      defaultStatus: !1,
      DelayNode: !1,
      DeviceMotionEvent: !1,
      DeviceOrientationEvent: !1,
      devicePixelRatio: !1,
      dispatchEvent: !1,
      document: !1,
      Document: !1,
      DocumentFragment: !1,
      DocumentType: !1,
      DOMError: !1,
      DOMException: !1,
      DOMImplementation: !1,
      DOMMatrix: !1,
      DOMMatrixReadOnly: !1,
      DOMParser: !1,
      DOMPoint: !1,
      DOMPointReadOnly: !1,
      DOMQuad: !1,
      DOMRect: !1,
      DOMRectReadOnly: !1,
      DOMStringList: !1,
      DOMStringMap: !1,
      DOMTokenList: !1,
      DragEvent: !1,
      DynamicsCompressorNode: !1,
      Element: !1,
      ErrorEvent: !1,
      event: !1,
      Event: !1,
      EventSource: !1,
      EventTarget: !1,
      external: !1,
      fetch: !1,
      File: !1,
      FileList: !1,
      FileReader: !1,
      find: !1,
      focus: !1,
      FocusEvent: !1,
      FontFace: !1,
      FontFaceSetLoadEvent: !1,
      FormData: !1,
      frameElement: !1,
      frames: !1,
      GainNode: !1,
      Gamepad: !1,
      GamepadButton: !1,
      GamepadEvent: !1,
      getComputedStyle: !1,
      getSelection: !1,
      HashChangeEvent: !1,
      Headers: !1,
      history: !1,
      History: !1,
      HTMLAllCollection: !1,
      HTMLAnchorElement: !1,
      HTMLAreaElement: !1,
      HTMLAudioElement: !1,
      HTMLBaseElement: !1,
      HTMLBodyElement: !1,
      HTMLBRElement: !1,
      HTMLButtonElement: !1,
      HTMLCanvasElement: !1,
      HTMLCollection: !1,
      HTMLContentElement: !1,
      HTMLDataElement: !1,
      HTMLDataListElement: !1,
      HTMLDetailsElement: !1,
      HTMLDialogElement: !1,
      HTMLDirectoryElement: !1,
      HTMLDivElement: !1,
      HTMLDListElement: !1,
      HTMLDocument: !1,
      HTMLElement: !1,
      HTMLEmbedElement: !1,
      HTMLFieldSetElement: !1,
      HTMLFontElement: !1,
      HTMLFormControlsCollection: !1,
      HTMLFormElement: !1,
      HTMLFrameElement: !1,
      HTMLFrameSetElement: !1,
      HTMLHeadElement: !1,
      HTMLHeadingElement: !1,
      HTMLHRElement: !1,
      HTMLHtmlElement: !1,
      HTMLIFrameElement: !1,
      HTMLImageElement: !1,
      HTMLInputElement: !1,
      HTMLLabelElement: !1,
      HTMLLegendElement: !1,
      HTMLLIElement: !1,
      HTMLLinkElement: !1,
      HTMLMapElement: !1,
      HTMLMarqueeElement: !1,
      HTMLMediaElement: !1,
      HTMLMenuElement: !1,
      HTMLMetaElement: !1,
      HTMLMeterElement: !1,
      HTMLModElement: !1,
      HTMLObjectElement: !1,
      HTMLOListElement: !1,
      HTMLOptGroupElement: !1,
      HTMLOptionElement: !1,
      HTMLOptionsCollection: !1,
      HTMLOutputElement: !1,
      HTMLParagraphElement: !1,
      HTMLParamElement: !1,
      HTMLPictureElement: !1,
      HTMLPreElement: !1,
      HTMLProgressElement: !1,
      HTMLQuoteElement: !1,
      HTMLScriptElement: !1,
      HTMLSelectElement: !1,
      HTMLShadowElement: !1,
      HTMLSlotElement: !1,
      HTMLSourceElement: !1,
      HTMLSpanElement: !1,
      HTMLStyleElement: !1,
      HTMLTableCaptionElement: !1,
      HTMLTableCellElement: !1,
      HTMLTableColElement: !1,
      HTMLTableElement: !1,
      HTMLTableRowElement: !1,
      HTMLTableSectionElement: !1,
      HTMLTemplateElement: !1,
      HTMLTextAreaElement: !1,
      HTMLTimeElement: !1,
      HTMLTitleElement: !1,
      HTMLTrackElement: !1,
      HTMLUListElement: !1,
      HTMLUnknownElement: !1,
      HTMLVideoElement: !1,
      IDBCursor: !1,
      IDBCursorWithValue: !1,
      IDBDatabase: !1,
      IDBFactory: !1,
      IDBIndex: !1,
      IDBKeyRange: !1,
      IDBObjectStore: !1,
      IDBOpenDBRequest: !1,
      IDBRequest: !1,
      IDBTransaction: !1,
      IDBVersionChangeEvent: !1,
      IdleDeadline: !1,
      IIRFilterNode: !1,
      Image: !1,
      ImageBitmap: !1,
      ImageBitmapRenderingContext: !1,
      ImageCapture: !1,
      ImageData: !1,
      indexedDB: !1,
      innerHeight: !1,
      innerWidth: !1,
      InputEvent: !1,
      IntersectionObserver: !1,
      IntersectionObserverEntry: !1,
      Intl: !1,
      isSecureContext: !1,
      KeyboardEvent: !1,
      KeyframeEffect: !1,
      KeyframeEffectReadOnly: !1,
      length: !1,
      localStorage: !1,
      location: !0,
      Location: !1,
      locationbar: !1,
      matchMedia: !1,
      MediaDeviceInfo: !1,
      MediaDevices: !1,
      MediaElementAudioSourceNode: !1,
      MediaEncryptedEvent: !1,
      MediaError: !1,
      MediaKeyMessageEvent: !1,
      MediaKeySession: !1,
      MediaKeyStatusMap: !1,
      MediaKeySystemAccess: !1,
      MediaList: !1,
      MediaQueryList: !1,
      MediaQueryListEvent: !1,
      MediaRecorder: !1,
      MediaSettingsRange: !1,
      MediaSource: !1,
      MediaStream: !1,
      MediaStreamAudioDestinationNode: !1,
      MediaStreamAudioSourceNode: !1,
      MediaStreamEvent: !1,
      MediaStreamTrack: !1,
      MediaStreamTrackEvent: !1,
      menubar: !1,
      MessageChannel: !1,
      MessageEvent: !1,
      MessagePort: !1,
      MIDIAccess: !1,
      MIDIConnectionEvent: !1,
      MIDIInput: !1,
      MIDIInputMap: !1,
      MIDIMessageEvent: !1,
      MIDIOutput: !1,
      MIDIOutputMap: !1,
      MIDIPort: !1,
      MimeType: !1,
      MimeTypeArray: !1,
      MouseEvent: !1,
      moveBy: !1,
      moveTo: !1,
      MutationEvent: !1,
      MutationObserver: !1,
      MutationRecord: !1,
      name: !1,
      NamedNodeMap: !1,
      NavigationPreloadManager: !1,
      navigator: !1,
      Navigator: !1,
      NetworkInformation: !1,
      Node: !1,
      NodeFilter: !1,
      NodeIterator: !1,
      NodeList: !1,
      Notification: !1,
      OfflineAudioCompletionEvent: !1,
      OfflineAudioContext: !1,
      offscreenBuffering: !1,
      OffscreenCanvas: !0,
      onabort: !0,
      onafterprint: !0,
      onanimationend: !0,
      onanimationiteration: !0,
      onanimationstart: !0,
      onappinstalled: !0,
      onauxclick: !0,
      onbeforeinstallprompt: !0,
      onbeforeprint: !0,
      onbeforeunload: !0,
      onblur: !0,
      oncancel: !0,
      oncanplay: !0,
      oncanplaythrough: !0,
      onchange: !0,
      onclick: !0,
      onclose: !0,
      oncontextmenu: !0,
      oncuechange: !0,
      ondblclick: !0,
      ondevicemotion: !0,
      ondeviceorientation: !0,
      ondeviceorientationabsolute: !0,
      ondrag: !0,
      ondragend: !0,
      ondragenter: !0,
      ondragleave: !0,
      ondragover: !0,
      ondragstart: !0,
      ondrop: !0,
      ondurationchange: !0,
      onemptied: !0,
      onended: !0,
      onerror: !0,
      onfocus: !0,
      ongotpointercapture: !0,
      onhashchange: !0,
      oninput: !0,
      oninvalid: !0,
      onkeydown: !0,
      onkeypress: !0,
      onkeyup: !0,
      onlanguagechange: !0,
      onload: !0,
      onloadeddata: !0,
      onloadedmetadata: !0,
      onloadstart: !0,
      onlostpointercapture: !0,
      onmessage: !0,
      onmessageerror: !0,
      onmousedown: !0,
      onmouseenter: !0,
      onmouseleave: !0,
      onmousemove: !0,
      onmouseout: !0,
      onmouseover: !0,
      onmouseup: !0,
      onmousewheel: !0,
      onoffline: !0,
      ononline: !0,
      onpagehide: !0,
      onpageshow: !0,
      onpause: !0,
      onplay: !0,
      onplaying: !0,
      onpointercancel: !0,
      onpointerdown: !0,
      onpointerenter: !0,
      onpointerleave: !0,
      onpointermove: !0,
      onpointerout: !0,
      onpointerover: !0,
      onpointerup: !0,
      onpopstate: !0,
      onprogress: !0,
      onratechange: !0,
      onrejectionhandled: !0,
      onreset: !0,
      onresize: !0,
      onscroll: !0,
      onsearch: !0,
      onseeked: !0,
      onseeking: !0,
      onselect: !0,
      onstalled: !0,
      onstorage: !0,
      onsubmit: !0,
      onsuspend: !0,
      ontimeupdate: !0,
      ontoggle: !0,
      ontransitionend: !0,
      onunhandledrejection: !0,
      onunload: !0,
      onvolumechange: !0,
      onwaiting: !0,
      onwheel: !0,
      open: !1,
      openDatabase: !1,
      opener: !1,
      Option: !1,
      origin: !1,
      OscillatorNode: !1,
      outerHeight: !1,
      outerWidth: !1,
      PageTransitionEvent: !1,
      pageXOffset: !1,
      pageYOffset: !1,
      PannerNode: !1,
      parent: !1,
      Path2D: !1,
      PaymentAddress: !1,
      PaymentRequest: !1,
      PaymentRequestUpdateEvent: !1,
      PaymentResponse: !1,
      performance: !1,
      Performance: !1,
      PerformanceEntry: !1,
      PerformanceLongTaskTiming: !1,
      PerformanceMark: !1,
      PerformanceMeasure: !1,
      PerformanceNavigation: !1,
      PerformanceNavigationTiming: !1,
      PerformanceObserver: !1,
      PerformanceObserverEntryList: !1,
      PerformancePaintTiming: !1,
      PerformanceResourceTiming: !1,
      PerformanceTiming: !1,
      PeriodicWave: !1,
      Permissions: !1,
      PermissionStatus: !1,
      personalbar: !1,
      PhotoCapabilities: !1,
      Plugin: !1,
      PluginArray: !1,
      PointerEvent: !1,
      PopStateEvent: !1,
      postMessage: !1,
      Presentation: !1,
      PresentationAvailability: !1,
      PresentationConnection: !1,
      PresentationConnectionAvailableEvent: !1,
      PresentationConnectionCloseEvent: !1,
      PresentationConnectionList: !1,
      PresentationReceiver: !1,
      PresentationRequest: !1,
      print: !1,
      ProcessingInstruction: !1,
      ProgressEvent: !1,
      PromiseRejectionEvent: !1,
      prompt: !1,
      PushManager: !1,
      PushSubscription: !1,
      PushSubscriptionOptions: !1,
      queueMicrotask: !1,
      RadioNodeList: !1,
      Range: !1,
      ReadableStream: !1,
      registerProcessor: !1,
      RemotePlayback: !1,
      removeEventListener: !1,
      Request: !1,
      requestAnimationFrame: !1,
      requestIdleCallback: !1,
      resizeBy: !1,
      ResizeObserver: !1,
      ResizeObserverEntry: !1,
      resizeTo: !1,
      Response: !1,
      RTCCertificate: !1,
      RTCDataChannel: !1,
      RTCDataChannelEvent: !1,
      RTCDtlsTransport: !1,
      RTCIceCandidate: !1,
      RTCIceGatherer: !1,
      RTCIceTransport: !1,
      RTCPeerConnection: !1,
      RTCPeerConnectionIceEvent: !1,
      RTCRtpContributingSource: !1,
      RTCRtpReceiver: !1,
      RTCRtpSender: !1,
      RTCSctpTransport: !1,
      RTCSessionDescription: !1,
      RTCStatsReport: !1,
      RTCTrackEvent: !1,
      screen: !1,
      Screen: !1,
      screenLeft: !1,
      ScreenOrientation: !1,
      screenTop: !1,
      screenX: !1,
      screenY: !1,
      ScriptProcessorNode: !1,
      scroll: !1,
      scrollbars: !1,
      scrollBy: !1,
      scrollTo: !1,
      scrollX: !1,
      scrollY: !1,
      SecurityPolicyViolationEvent: !1,
      Selection: !1,
      self: !1,
      ServiceWorker: !1,
      ServiceWorkerContainer: !1,
      ServiceWorkerRegistration: !1,
      sessionStorage: !1,
      setInterval: !1,
      setTimeout: !1,
      ShadowRoot: !1,
      SharedWorker: !1,
      SourceBuffer: !1,
      SourceBufferList: !1,
      speechSynthesis: !1,
      SpeechSynthesisEvent: !1,
      SpeechSynthesisUtterance: !1,
      StaticRange: !1,
      status: !1,
      statusbar: !1,
      StereoPannerNode: !1,
      stop: !1,
      Storage: !1,
      StorageEvent: !1,
      StorageManager: !1,
      styleMedia: !1,
      StyleSheet: !1,
      StyleSheetList: !1,
      SubtleCrypto: !1,
      SVGAElement: !1,
      SVGAngle: !1,
      SVGAnimatedAngle: !1,
      SVGAnimatedBoolean: !1,
      SVGAnimatedEnumeration: !1,
      SVGAnimatedInteger: !1,
      SVGAnimatedLength: !1,
      SVGAnimatedLengthList: !1,
      SVGAnimatedNumber: !1,
      SVGAnimatedNumberList: !1,
      SVGAnimatedPreserveAspectRatio: !1,
      SVGAnimatedRect: !1,
      SVGAnimatedString: !1,
      SVGAnimatedTransformList: !1,
      SVGAnimateElement: !1,
      SVGAnimateMotionElement: !1,
      SVGAnimateTransformElement: !1,
      SVGAnimationElement: !1,
      SVGCircleElement: !1,
      SVGClipPathElement: !1,
      SVGComponentTransferFunctionElement: !1,
      SVGDefsElement: !1,
      SVGDescElement: !1,
      SVGDiscardElement: !1,
      SVGElement: !1,
      SVGEllipseElement: !1,
      SVGFEBlendElement: !1,
      SVGFEColorMatrixElement: !1,
      SVGFEComponentTransferElement: !1,
      SVGFECompositeElement: !1,
      SVGFEConvolveMatrixElement: !1,
      SVGFEDiffuseLightingElement: !1,
      SVGFEDisplacementMapElement: !1,
      SVGFEDistantLightElement: !1,
      SVGFEDropShadowElement: !1,
      SVGFEFloodElement: !1,
      SVGFEFuncAElement: !1,
      SVGFEFuncBElement: !1,
      SVGFEFuncGElement: !1,
      SVGFEFuncRElement: !1,
      SVGFEGaussianBlurElement: !1,
      SVGFEImageElement: !1,
      SVGFEMergeElement: !1,
      SVGFEMergeNodeElement: !1,
      SVGFEMorphologyElement: !1,
      SVGFEOffsetElement: !1,
      SVGFEPointLightElement: !1,
      SVGFESpecularLightingElement: !1,
      SVGFESpotLightElement: !1,
      SVGFETileElement: !1,
      SVGFETurbulenceElement: !1,
      SVGFilterElement: !1,
      SVGForeignObjectElement: !1,
      SVGGElement: !1,
      SVGGeometryElement: !1,
      SVGGradientElement: !1,
      SVGGraphicsElement: !1,
      SVGImageElement: !1,
      SVGLength: !1,
      SVGLengthList: !1,
      SVGLinearGradientElement: !1,
      SVGLineElement: !1,
      SVGMarkerElement: !1,
      SVGMaskElement: !1,
      SVGMatrix: !1,
      SVGMetadataElement: !1,
      SVGMPathElement: !1,
      SVGNumber: !1,
      SVGNumberList: !1,
      SVGPathElement: !1,
      SVGPatternElement: !1,
      SVGPoint: !1,
      SVGPointList: !1,
      SVGPolygonElement: !1,
      SVGPolylineElement: !1,
      SVGPreserveAspectRatio: !1,
      SVGRadialGradientElement: !1,
      SVGRect: !1,
      SVGRectElement: !1,
      SVGScriptElement: !1,
      SVGSetElement: !1,
      SVGStopElement: !1,
      SVGStringList: !1,
      SVGStyleElement: !1,
      SVGSVGElement: !1,
      SVGSwitchElement: !1,
      SVGSymbolElement: !1,
      SVGTextContentElement: !1,
      SVGTextElement: !1,
      SVGTextPathElement: !1,
      SVGTextPositioningElement: !1,
      SVGTitleElement: !1,
      SVGTransform: !1,
      SVGTransformList: !1,
      SVGTSpanElement: !1,
      SVGUnitTypes: !1,
      SVGUseElement: !1,
      SVGViewElement: !1,
      TaskAttributionTiming: !1,
      Text: !1,
      TextDecoder: !1,
      TextEncoder: !1,
      TextEvent: !1,
      TextMetrics: !1,
      TextTrack: !1,
      TextTrackCue: !1,
      TextTrackCueList: !1,
      TextTrackList: !1,
      TimeRanges: !1,
      toolbar: !1,
      top: !1,
      Touch: !1,
      TouchEvent: !1,
      TouchList: !1,
      TrackEvent: !1,
      TransitionEvent: !1,
      TreeWalker: !1,
      UIEvent: !1,
      URL: !1,
      URLSearchParams: !1,
      ValidityState: !1,
      visualViewport: !1,
      VisualViewport: !1,
      VTTCue: !1,
      WaveShaperNode: !1,
      WebAssembly: !1,
      WebGL2RenderingContext: !1,
      WebGLActiveInfo: !1,
      WebGLBuffer: !1,
      WebGLContextEvent: !1,
      WebGLFramebuffer: !1,
      WebGLProgram: !1,
      WebGLQuery: !1,
      WebGLRenderbuffer: !1,
      WebGLRenderingContext: !1,
      WebGLSampler: !1,
      WebGLShader: !1,
      WebGLShaderPrecisionFormat: !1,
      WebGLSync: !1,
      WebGLTexture: !1,
      WebGLTransformFeedback: !1,
      WebGLUniformLocation: !1,
      WebGLVertexArrayObject: !1,
      WebSocket: !1,
      WheelEvent: !1,
      window: !1,
      Window: !1,
      Worker: !1,
      WritableStream: !1,
      XMLDocument: !1,
      XMLHttpRequest: !1,
      XMLHttpRequestEventTarget: !1,
      XMLHttpRequestUpload: !1,
      XMLSerializer: !1,
      XPathEvaluator: !1,
      XPathExpression: !1,
      XPathResult: !1,
      XSLTProcessor: !1
    },
    worker: {
      addEventListener: !1,
      applicationCache: !1,
      atob: !1,
      Blob: !1,
      BroadcastChannel: !1,
      btoa: !1,
      Cache: !1,
      caches: !1,
      clearInterval: !1,
      clearTimeout: !1,
      close: !0,
      console: !1,
      fetch: !1,
      FileReaderSync: !1,
      FormData: !1,
      Headers: !1,
      IDBCursor: !1,
      IDBCursorWithValue: !1,
      IDBDatabase: !1,
      IDBFactory: !1,
      IDBIndex: !1,
      IDBKeyRange: !1,
      IDBObjectStore: !1,
      IDBOpenDBRequest: !1,
      IDBRequest: !1,
      IDBTransaction: !1,
      IDBVersionChangeEvent: !1,
      ImageData: !1,
      importScripts: !0,
      indexedDB: !1,
      location: !1,
      MessageChannel: !1,
      MessagePort: !1,
      name: !1,
      navigator: !1,
      Notification: !1,
      onclose: !0,
      onconnect: !0,
      onerror: !0,
      onlanguagechange: !0,
      onmessage: !0,
      onoffline: !0,
      ononline: !0,
      onrejectionhandled: !0,
      onunhandledrejection: !0,
      performance: !1,
      Performance: !1,
      PerformanceEntry: !1,
      PerformanceMark: !1,
      PerformanceMeasure: !1,
      PerformanceNavigation: !1,
      PerformanceResourceTiming: !1,
      PerformanceTiming: !1,
      postMessage: !0,
      Promise: !1,
      queueMicrotask: !1,
      removeEventListener: !1,
      Request: !1,
      Response: !1,
      self: !0,
      ServiceWorkerRegistration: !1,
      setInterval: !1,
      setTimeout: !1,
      TextDecoder: !1,
      TextEncoder: !1,
      URL: !1,
      URLSearchParams: !1,
      WebSocket: !1,
      Worker: !1,
      WorkerGlobalScope: !1,
      XMLHttpRequest: !1
    },
    node: {
      __dirname: !1,
      __filename: !1,
      Buffer: !1,
      clearImmediate: !1,
      clearInterval: !1,
      clearTimeout: !1,
      console: !1,
      exports: !0,
      global: !1,
      Intl: !1,
      module: !1,
      process: !1,
      queueMicrotask: !1,
      require: !1,
      setImmediate: !1,
      setInterval: !1,
      setTimeout: !1,
      TextDecoder: !1,
      TextEncoder: !1,
      URL: !1,
      URLSearchParams: !1
    },
    commonjs: {
      exports: !0,
      global: !1,
      module: !1,
      require: !1
    },
    amd: {
      define: !1,
      require: !1
    },
    mocha: {
      after: !1,
      afterEach: !1,
      before: !1,
      beforeEach: !1,
      context: !1,
      describe: !1,
      it: !1,
      mocha: !1,
      run: !1,
      setup: !1,
      specify: !1,
      suite: !1,
      suiteSetup: !1,
      suiteTeardown: !1,
      teardown: !1,
      test: !1,
      xcontext: !1,
      xdescribe: !1,
      xit: !1,
      xspecify: !1
    },
    jasmine: {
      afterAll: !1,
      afterEach: !1,
      beforeAll: !1,
      beforeEach: !1,
      describe: !1,
      expect: !1,
      fail: !1,
      fdescribe: !1,
      fit: !1,
      it: !1,
      jasmine: !1,
      pending: !1,
      runs: !1,
      spyOn: !1,
      spyOnProperty: !1,
      waits: !1,
      waitsFor: !1,
      xdescribe: !1,
      xit: !1
    },
    jest: {
      afterAll: !1,
      afterEach: !1,
      beforeAll: !1,
      beforeEach: !1,
      describe: !1,
      expect: !1,
      fdescribe: !1,
      fit: !1,
      it: !1,
      jest: !1,
      pit: !1,
      require: !1,
      test: !1,
      xdescribe: !1,
      xit: !1,
      xtest: !1
    },
    qunit: {
      asyncTest: !1,
      deepEqual: !1,
      equal: !1,
      expect: !1,
      module: !1,
      notDeepEqual: !1,
      notEqual: !1,
      notOk: !1,
      notPropEqual: !1,
      notStrictEqual: !1,
      ok: !1,
      propEqual: !1,
      QUnit: !1,
      raises: !1,
      start: !1,
      stop: !1,
      strictEqual: !1,
      test: !1,
      throws: !1
    },
    phantomjs: {
      console: !0,
      exports: !0,
      phantom: !0,
      require: !0,
      WebPage: !0
    },
    couch: {
      emit: !1,
      exports: !1,
      getRow: !1,
      log: !1,
      module: !1,
      provides: !1,
      require: !1,
      respond: !1,
      send: !1,
      start: !1,
      sum: !1
    },
    rhino: {
      defineClass: !1,
      deserialize: !1,
      gc: !1,
      help: !1,
      importClass: !1,
      importPackage: !1,
      java: !1,
      load: !1,
      loadClass: !1,
      Packages: !1,
      print: !1,
      quit: !1,
      readFile: !1,
      readUrl: !1,
      runCommand: !1,
      seal: !1,
      serialize: !1,
      spawn: !1,
      sync: !1,
      toint32: !1,
      version: !1
    },
    nashorn: {
      __DIR__: !1,
      __FILE__: !1,
      __LINE__: !1,
      com: !1,
      edu: !1,
      exit: !1,
      java: !1,
      Java: !1,
      javafx: !1,
      JavaImporter: !1,
      javax: !1,
      JSAdapter: !1,
      load: !1,
      loadWithNewGlobal: !1,
      org: !1,
      Packages: !1,
      print: !1,
      quit: !1
    },
    wsh: {
      ActiveXObject: !0,
      Enumerator: !0,
      GetObject: !0,
      ScriptEngine: !0,
      ScriptEngineBuildVersion: !0,
      ScriptEngineMajorVersion: !0,
      ScriptEngineMinorVersion: !0,
      VBArray: !0,
      WScript: !0,
      WSH: !0,
      XDomainRequest: !0
    },
    jquery: {
      $: !1,
      jQuery: !1
    },
    yui: {
      YAHOO: !1,
      YAHOO_config: !1,
      YUI: !1,
      YUI_config: !1
    },
    shelljs: {
      cat: !1,
      cd: !1,
      chmod: !1,
      config: !1,
      cp: !1,
      dirs: !1,
      echo: !1,
      env: !1,
      error: !1,
      exec: !1,
      exit: !1,
      find: !1,
      grep: !1,
      ln: !1,
      ls: !1,
      mkdir: !1,
      mv: !1,
      popd: !1,
      pushd: !1,
      pwd: !1,
      rm: !1,
      sed: !1,
      set: !1,
      target: !1,
      tempdir: !1,
      test: !1,
      touch: !1,
      which: !1
    },
    prototypejs: {
      $: !1,
      $$: !1,
      $A: !1,
      $break: !1,
      $continue: !1,
      $F: !1,
      $H: !1,
      $R: !1,
      $w: !1,
      Abstract: !1,
      Ajax: !1,
      Autocompleter: !1,
      Builder: !1,
      Class: !1,
      Control: !1,
      Draggable: !1,
      Draggables: !1,
      Droppables: !1,
      Effect: !1,
      Element: !1,
      Enumerable: !1,
      Event: !1,
      Field: !1,
      Form: !1,
      Hash: !1,
      Insertion: !1,
      ObjectRange: !1,
      PeriodicalExecuter: !1,
      Position: !1,
      Prototype: !1,
      Scriptaculous: !1,
      Selector: !1,
      Sortable: !1,
      SortableObserver: !1,
      Sound: !1,
      Template: !1,
      Toggle: !1,
      Try: !1
    },
    meteor: {
      _: !1,
      $: !1,
      Accounts: !1,
      AccountsClient: !1,
      AccountsCommon: !1,
      AccountsServer: !1,
      App: !1,
      Assets: !1,
      Blaze: !1,
      check: !1,
      Cordova: !1,
      DDP: !1,
      DDPRateLimiter: !1,
      DDPServer: !1,
      Deps: !1,
      EJSON: !1,
      Email: !1,
      HTTP: !1,
      Log: !1,
      Match: !1,
      Meteor: !1,
      Mongo: !1,
      MongoInternals: !1,
      Npm: !1,
      Package: !1,
      Plugin: !1,
      process: !1,
      Random: !1,
      ReactiveDict: !1,
      ReactiveVar: !1,
      Router: !1,
      ServiceConfiguration: !1,
      Session: !1,
      share: !1,
      Spacebars: !1,
      Template: !1,
      Tinytest: !1,
      Tracker: !1,
      UI: !1,
      Utils: !1,
      WebApp: !1,
      WebAppInternals: !1
    },
    mongo: {
      _isWindows: !1,
      _rand: !1,
      BulkWriteResult: !1,
      cat: !1,
      cd: !1,
      connect: !1,
      db: !1,
      getHostName: !1,
      getMemInfo: !1,
      hostname: !1,
      ISODate: !1,
      listFiles: !1,
      load: !1,
      ls: !1,
      md5sumFile: !1,
      mkdir: !1,
      Mongo: !1,
      NumberInt: !1,
      NumberLong: !1,
      ObjectId: !1,
      PlanCache: !1,
      print: !1,
      printjson: !1,
      pwd: !1,
      quit: !1,
      removeFile: !1,
      rs: !1,
      sh: !1,
      UUID: !1,
      version: !1,
      WriteResult: !1
    },
    applescript: {
      $: !1,
      Application: !1,
      Automation: !1,
      console: !1,
      delay: !1,
      Library: !1,
      ObjC: !1,
      ObjectSpecifier: !1,
      Path: !1,
      Progress: !1,
      Ref: !1
    },
    serviceworker: {
      addEventListener: !1,
      applicationCache: !1,
      atob: !1,
      Blob: !1,
      BroadcastChannel: !1,
      btoa: !1,
      Cache: !1,
      caches: !1,
      CacheStorage: !1,
      clearInterval: !1,
      clearTimeout: !1,
      Client: !1,
      clients: !1,
      Clients: !1,
      close: !0,
      console: !1,
      ExtendableEvent: !1,
      ExtendableMessageEvent: !1,
      fetch: !1,
      FetchEvent: !1,
      FileReaderSync: !1,
      FormData: !1,
      Headers: !1,
      IDBCursor: !1,
      IDBCursorWithValue: !1,
      IDBDatabase: !1,
      IDBFactory: !1,
      IDBIndex: !1,
      IDBKeyRange: !1,
      IDBObjectStore: !1,
      IDBOpenDBRequest: !1,
      IDBRequest: !1,
      IDBTransaction: !1,
      IDBVersionChangeEvent: !1,
      ImageData: !1,
      importScripts: !1,
      indexedDB: !1,
      location: !1,
      MessageChannel: !1,
      MessagePort: !1,
      name: !1,
      navigator: !1,
      Notification: !1,
      onclose: !0,
      onconnect: !0,
      onerror: !0,
      onfetch: !0,
      oninstall: !0,
      onlanguagechange: !0,
      onmessage: !0,
      onmessageerror: !0,
      onnotificationclick: !0,
      onnotificationclose: !0,
      onoffline: !0,
      ononline: !0,
      onpush: !0,
      onpushsubscriptionchange: !0,
      onrejectionhandled: !0,
      onsync: !0,
      onunhandledrejection: !0,
      performance: !1,
      Performance: !1,
      PerformanceEntry: !1,
      PerformanceMark: !1,
      PerformanceMeasure: !1,
      PerformanceNavigation: !1,
      PerformanceResourceTiming: !1,
      PerformanceTiming: !1,
      postMessage: !0,
      Promise: !1,
      queueMicrotask: !1,
      registration: !1,
      removeEventListener: !1,
      Request: !1,
      Response: !1,
      self: !1,
      ServiceWorker: !1,
      ServiceWorkerContainer: !1,
      ServiceWorkerGlobalScope: !1,
      ServiceWorkerMessageEvent: !1,
      ServiceWorkerRegistration: !1,
      setInterval: !1,
      setTimeout: !1,
      skipWaiting: !1,
      TextDecoder: !1,
      TextEncoder: !1,
      URL: !1,
      URLSearchParams: !1,
      WebSocket: !1,
      WindowClient: !1,
      Worker: !1,
      WorkerGlobalScope: !1,
      XMLHttpRequest: !1
    },
    atomtest: {
      advanceClock: !1,
      fakeClearInterval: !1,
      fakeClearTimeout: !1,
      fakeSetInterval: !1,
      fakeSetTimeout: !1,
      resetTimeouts: !1,
      waitsForPromise: !1
    },
    embertest: {
      andThen: !1,
      click: !1,
      currentPath: !1,
      currentRouteName: !1,
      currentURL: !1,
      fillIn: !1,
      find: !1,
      findAll: !1,
      findWithAssert: !1,
      keyEvent: !1,
      pauseTest: !1,
      resumeTest: !1,
      triggerEvent: !1,
      visit: !1,
      wait: !1
    },
    protractor: {
      $: !1,
      $$: !1,
      browser: !1,
      by: !1,
      By: !1,
      DartObject: !1,
      element: !1,
      protractor: !1
    },
    "shared-node-browser": {
      clearInterval: !1,
      clearTimeout: !1,
      console: !1,
      setInterval: !1,
      setTimeout: !1,
      URL: !1,
      URLSearchParams: !1
    },
    webextensions: {
      browser: !1,
      chrome: !1,
      opr: !1
    },
    greasemonkey: {
      cloneInto: !1,
      createObjectIn: !1,
      exportFunction: !1,
      GM: !1,
      GM_addStyle: !1,
      GM_deleteValue: !1,
      GM_getResourceText: !1,
      GM_getResourceURL: !1,
      GM_getValue: !1,
      GM_info: !1,
      GM_listValues: !1,
      GM_log: !1,
      GM_openInTab: !1,
      GM_registerMenuCommand: !1,
      GM_setClipboard: !1,
      GM_setValue: !1,
      GM_xmlhttpRequest: !1,
      unsafeWindow: !1
    },
    devtools: {
      $: !1,
      $_: !1,
      $$: !1,
      $0: !1,
      $1: !1,
      $2: !1,
      $3: !1,
      $4: !1,
      $x: !1,
      chrome: !1,
      clear: !1,
      copy: !1,
      debug: !1,
      dir: !1,
      dirxml: !1,
      getEventListeners: !1,
      inspect: !1,
      keys: !1,
      monitor: !1,
      monitorEvents: !1,
      profile: !1,
      profileEnd: !1,
      queryObjects: !1,
      table: !1,
      undebug: !1,
      unmonitor: !1,
      unmonitorEvents: !1,
      values: !1
    }
  };
});

// ../node_modules/@babel/traverse/node_modules/globals/index.js
var yF = y((XZe, mF) => {
  "use strict";
  mF.exports = hF();
});

// ../node_modules/@babel/traverse/lib/scope/index.js
var ev = y((ed) => {
  "use strict";
  Object.defineProperty(ed, "__esModule", {
    value: !0
  });
  ed.default = void 0;
  var j0e = pF(), q0e = Bs(), $0e = dF(), U0e = yF(), CF = Re(), V0e = CF, gF = Ha(), W0e = ec(), {
    NOT_LOCAL_BINDING: bF,
    callExpression: EF,
    cloneNode: vF,
    getBindingIdentifiers: H0e,
    identifier: rl,
    isArrayExpression: SF,
    isBinary: G0e,
    isCallExpression: TF,
    isClass: K0e,
    isClassBody: Y0e,
    isClassDeclaration: X0e,
    isExportAllDeclaration: wF,
    isExportDefaultDeclaration: z0e,
    isExportNamedDeclaration: JE,
    isFunctionDeclaration: J0e,
    isIdentifier: Ya,
    isImportDeclaration: QE,
    isLiteral: Q0e,
    isMemberExpression: Z0e,
    isMethod: ege,
    isModuleSpecifier: tge,
    isNullLiteral: rge,
    isObjectExpression: sge,
    isProperty: nge,
    isPureish: ige,
    isRegExpLiteral: age,
    isSuper: oge,
    isTaggedTemplateExpression: lge,
    isTemplateLiteral: DF,
    isThisExpression: xF,
    isUnaryExpression: uge,
    isVariableDeclaration: cge,
    matchesPattern: PF,
    memberExpression: ZE,
    numericLiteral: fge,
    toIdentifier: pge,
    variableDeclaration: dge,
    variableDeclarator: hge,
    isRecordExpression: mge,
    isTupleExpression: yge,
    isObjectProperty: gge,
    isTopicReference: AF,
    isMetaProperty: bge,
    isPrivateName: Ege,
    isExportDeclaration: vge,
    buildUndefinedNode: Sge
  } = CF;
  function Ut(e, t) {
    switch (e?.type) {
      default:
        if (QE(e) || vge(e)) {
          var r;
          if ((wF(e) || JE(e) || QE(e)) && e.source)
            Ut(e.source, t);
          else if ((JE(e) || QE(e)) && (r = e.specifiers) != null && r.length)
            for (let s of e.specifiers) Ut(s, t);
          else (z0e(e) || JE(e)) && e.declaration && Ut(e.declaration, t);
        } else tge(e) ? Ut(e.local, t) : Q0e(e) && !rge(e) && !age(e) && !DF(e) && t.push(e.value);
        break;
      case "MemberExpression":
      case "OptionalMemberExpression":
      case "JSXMemberExpression":
        Ut(e.object, t), Ut(e.property, t);
        break;
      case "Identifier":
      case "JSXIdentifier":
        t.push(e.name);
        break;
      case "CallExpression":
      case "OptionalCallExpression":
      case "NewExpression":
        Ut(e.callee, t);
        break;
      case "ObjectExpression":
      case "ObjectPattern":
        for (let s of e.properties)
          Ut(s, t);
        break;
      case "SpreadElement":
      case "RestElement":
        Ut(e.argument, t);
        break;
      case "ObjectProperty":
      case "ObjectMethod":
      case "ClassProperty":
      case "ClassMethod":
      case "ClassPrivateProperty":
      case "ClassPrivateMethod":
        Ut(e.key, t);
        break;
      case "ThisExpression":
        t.push("this");
        break;
      case "Super":
        t.push("super");
        break;
      case "Import":
        t.push("import");
        break;
      case "DoExpression":
        t.push("do");
        break;
      case "YieldExpression":
        t.push("yield"), Ut(e.argument, t);
        break;
      case "AwaitExpression":
        t.push("await"), Ut(e.argument, t);
        break;
      case "AssignmentExpression":
        Ut(e.left, t);
        break;
      case "VariableDeclarator":
        Ut(e.id, t);
        break;
      case "FunctionExpression":
      case "FunctionDeclaration":
      case "ClassExpression":
      case "ClassDeclaration":
        Ut(e.id, t);
        break;
      case "PrivateName":
        Ut(e.id, t);
        break;
      case "ParenthesizedExpression":
        Ut(e.expression, t);
        break;
      case "UnaryExpression":
      case "UpdateExpression":
        Ut(e.argument, t);
        break;
      case "MetaProperty":
        Ut(e.meta, t), Ut(e.property, t);
        break;
      case "JSXElement":
        Ut(e.openingElement, t);
        break;
      case "JSXOpeningElement":
        Ut(e.name, t);
        break;
      case "JSXFragment":
        Ut(e.openingFragment, t);
        break;
      case "JSXOpeningFragment":
        t.push("Fragment");
        break;
      case "JSXNamespacedName":
        Ut(e.namespace, t), Ut(e.name, t);
        break;
    }
  }
  i(Ut, "gatherNodeParts");
  var Zp = {
    ForStatement(e) {
      let t = e.get("init");
      if (t.isVar()) {
        let {
          scope: r
        } = e;
        (r.getFunctionParent() || r.getProgramParent()).registerBinding("var", t);
      }
    },
    Declaration(e) {
      if (e.isBlockScoped() || e.isImportDeclaration() || e.isExportDeclaration()) return;
      (e.scope.getFunctionParent() || e.scope.getProgramParent()).registerDeclaration(e);
    },
    ImportDeclaration(e) {
      e.scope.getBlockParent().registerDeclaration(e);
    },
    ReferencedIdentifier(e, t) {
      t.references.push(e);
    },
    ForXStatement(e, t) {
      let r = e.get("left");
      if (r.isPattern() || r.isIdentifier())
        t.constantViolations.push(e);
      else if (r.isVar()) {
        let {
          scope: s
        } = e;
        (s.getFunctionParent() || s.getProgramParent()).registerBinding("var", r);
      }
    },
    ExportDeclaration: {
      exit(e) {
        let {
          node: t,
          scope: r
        } = e;
        if (wF(t)) return;
        let s = t.declaration;
        if (X0e(s) || J0e(s)) {
          let n = s.id;
          if (!n) return;
          let a = r.getBinding(n.name);
          a?.reference(e);
        } else if (cge(s))
          for (let n of s.declarations)
            for (let a of Object.keys(H0e(n))) {
              let o = r.getBinding(a);
              o?.reference(e);
            }
      }
    },
    LabeledStatement(e) {
      e.scope.getBlockParent().registerDeclaration(e);
    },
    AssignmentExpression(e, t) {
      t.assignments.push(e);
    },
    UpdateExpression(e, t) {
      t.constantViolations.push(e);
    },
    UnaryExpression(e, t) {
      e.node.operator === "delete" && t.constantViolations.push(e);
    },
    BlockScoped(e) {
      let t = e.scope;
      if (t.path === e && (t = t.parent), t.getBlockParent().registerDeclaration(e), e.isClassDeclaration() && e.node.id) {
        let n = e.node.id.name;
        e.scope.bindings[n] = e.scope.parent.getBinding(n);
      }
    },
    CatchClause(e) {
      e.scope.registerBinding("let", e);
    },
    Function(e) {
      let t = e.get("params");
      for (let r of t)
        e.scope.registerBinding("param", r);
      e.isFunctionExpression() && e.has("id") && !e.get("id").node[bF] && e.scope.registerBinding("local", e.get("id"), e);
    },
    ClassExpression(e) {
      e.has("id") && !e.get("id").node[bF] && e.scope.registerBinding("local", e);
    }
  }, Tge = 0, rc = class e {
    static {
      i(this, "Scope");
    }
    constructor(t) {
      this.uid = void 0, this.path = void 0, this.block = void 0, this.labels = void 0, this.inited = void 0, this.bindings = void 0, this.references =
      void 0, this.globals = void 0, this.uids = void 0, this.data = void 0, this.crawling = void 0;
      let {
        node: r
      } = t, s = gF.scope.get(r);
      if (s?.path === t)
        return s;
      gF.scope.set(r, this), this.uid = Tge++, this.block = r, this.path = t, this.labels = /* @__PURE__ */ new Map(), this.inited = !1;
    }
    get parent() {
      var t;
      let r, s = this.path;
      do {
        let n = s.key === "key" || s.listKey === "decorators";
        s = s.parentPath, n && s.isMethod() && (s = s.parentPath), s && s.isScope() && (r = s);
      } while (s && !r);
      return (t = r) == null ? void 0 : t.scope;
    }
    get parentBlock() {
      return this.path.parent;
    }
    get hub() {
      return this.path.hub;
    }
    traverse(t, r, s) {
      (0, q0e.default)(t, r, this, s, this.path);
    }
    generateDeclaredUidIdentifier(t) {
      let r = this.generateUidIdentifier(t);
      return this.push({
        id: r
      }), vF(r);
    }
    generateUidIdentifier(t) {
      return rl(this.generateUid(t));
    }
    generateUid(t = "temp") {
      t = pge(t).replace(/^_+/, "").replace(/[0-9]+$/g, "");
      let r, s = 1;
      do
        r = this._generateUid(t, s), s++;
      while (this.hasLabel(r) || this.hasBinding(r) || this.hasGlobal(r) || this.hasReference(r));
      let n = this.getProgramParent();
      return n.references[r] = !0, n.uids[r] = !0, r;
    }
    _generateUid(t, r) {
      let s = t;
      return r > 1 && (s += r), `_${s}`;
    }
    generateUidBasedOnNode(t, r) {
      let s = [];
      Ut(t, s);
      let n = s.join("$");
      return n = n.replace(/^_/, "") || r || "ref", this.generateUid(n.slice(0, 20));
    }
    generateUidIdentifierBasedOnNode(t, r) {
      return rl(this.generateUidBasedOnNode(t, r));
    }
    isStatic(t) {
      if (xF(t) || oge(t) || AF(t))
        return !0;
      if (Ya(t)) {
        let r = this.getBinding(t.name);
        return r ? r.constant : this.hasBinding(t.name);
      }
      return !1;
    }
    maybeGenerateMemoised(t, r) {
      if (this.isStatic(t))
        return null;
      {
        let s = this.generateUidIdentifierBasedOnNode(t);
        return r ? s : (this.push({
          id: s
        }), vF(s));
      }
    }
    checkBlockScopedCollisions(t, r, s, n) {
      if (r === "param" || t.kind === "local") return;
      if (r === "let" || t.kind === "let" || t.kind === "const" || t.kind === "module" || t.kind === "param" && r === "const")
        throw this.hub.buildError(n, `Duplicate declaration "${s}"`, TypeError);
    }
    rename(t, r) {
      let s = this.getBinding(t);
      s && (r || (r = this.generateUidIdentifier(t).name), new j0e.default(s, t, r).rename(arguments[2]));
    }
    _renameFromMap(t, r, s, n) {
      t[r] && (t[s] = n, t[r] = null);
    }
    dump() {
      let t = "-".repeat(60);
      console.log(t);
      let r = this;
      do {
        console.log("#", r.block.type);
        for (let s of Object.keys(r.bindings)) {
          let n = r.bindings[s];
          console.log(" -", s, {
            constant: n.constant,
            references: n.references,
            violations: n.constantViolations.length,
            kind: n.kind
          });
        }
      } while (r = r.parent);
      console.log(t);
    }
    toArray(t, r, s) {
      if (Ya(t)) {
        let o = this.getBinding(t.name);
        if (o != null && o.constant && o.path.isGenericType("Array"))
          return t;
      }
      if (SF(t))
        return t;
      if (Ya(t, {
        name: "arguments"
      }))
        return EF(ZE(ZE(ZE(rl("Array"), rl("prototype")), rl("slice")), rl("call")), [t]);
      let n, a = [t];
      return r === !0 ? n = "toConsumableArray" : typeof r == "number" ? (a.push(fge(r)), n = "slicedToArray") : n = "toArray", s && (a.unshift(
      this.hub.addHelper(n)), n = "maybeArrayLike"), EF(this.hub.addHelper(n), a);
    }
    hasLabel(t) {
      return !!this.getLabel(t);
    }
    getLabel(t) {
      return this.labels.get(t);
    }
    registerLabel(t) {
      this.labels.set(t.node.label.name, t);
    }
    registerDeclaration(t) {
      if (t.isLabeledStatement())
        this.registerLabel(t);
      else if (t.isFunctionDeclaration())
        this.registerBinding("hoisted", t.get("id"), t);
      else if (t.isVariableDeclaration()) {
        let r = t.get("declarations"), {
          kind: s
        } = t.node;
        for (let n of r)
          this.registerBinding(s === "using" || s === "await using" ? "const" : s, n);
      } else if (t.isClassDeclaration()) {
        if (t.node.declare) return;
        this.registerBinding("let", t);
      } else if (t.isImportDeclaration()) {
        let r = t.node.importKind === "type" || t.node.importKind === "typeof", s = t.get("specifiers");
        for (let n of s) {
          let a = r || n.isImportSpecifier() && (n.node.importKind === "type" || n.node.importKind === "typeof");
          this.registerBinding(a ? "unknown" : "module", n);
        }
      } else if (t.isExportDeclaration()) {
        let r = t.get("declaration");
        (r.isClassDeclaration() || r.isFunctionDeclaration() || r.isVariableDeclaration()) && this.registerDeclaration(r);
      } else
        this.registerBinding("unknown", t);
    }
    buildUndefinedNode() {
      return Sge();
    }
    registerConstantViolation(t) {
      let r = t.getBindingIdentifiers();
      for (let n of Object.keys(r)) {
        var s;
        (s = this.getBinding(n)) == null || s.reassign(t);
      }
    }
    registerBinding(t, r, s = r) {
      if (!t) throw new ReferenceError("no `kind`");
      if (r.isVariableDeclaration()) {
        let o = r.get("declarations");
        for (let l of o)
          this.registerBinding(t, l);
        return;
      }
      let n = this.getProgramParent(), a = r.getOuterBindingIdentifiers(!0);
      for (let o of Object.keys(a)) {
        n.references[o] = !0;
        for (let l of a[o]) {
          let u = this.getOwnBinding(o);
          if (u) {
            if (u.identifier === l) continue;
            this.checkBlockScopedCollisions(u, t, o, l);
          }
          u ? this.registerConstantViolation(s) : this.bindings[o] = new $0e.default({
            identifier: l,
            scope: this,
            path: s,
            kind: t
          });
        }
      }
    }
    addGlobal(t) {
      this.globals[t.name] = t;
    }
    hasUid(t) {
      let r = this;
      do
        if (r.uids[t]) return !0;
      while (r = r.parent);
      return !1;
    }
    hasGlobal(t) {
      let r = this;
      do
        if (r.globals[t]) return !0;
      while (r = r.parent);
      return !1;
    }
    hasReference(t) {
      return !!this.getProgramParent().references[t];
    }
    isPure(t, r) {
      if (Ya(t)) {
        let o = this.getBinding(t.name);
        return o ? r ? o.constant : !0 : !1;
      } else {
        if (xF(t) || bge(t) || AF(t) || Ege(t))
          return !0;
        if (K0e(t)) {
          var s;
          return t.superClass && !this.isPure(t.superClass, r) || ((s = t.decorators) == null ? void 0 : s.length) > 0 ? !1 : this.isPure(t.
          body, r);
        } else if (Y0e(t)) {
          for (let o of t.body)
            if (!this.isPure(o, r)) return !1;
          return !0;
        } else {
          if (G0e(t))
            return this.isPure(t.left, r) && this.isPure(t.right, r);
          if (SF(t) || yge(t)) {
            for (let o of t.elements)
              if (o !== null && !this.isPure(o, r)) return !1;
            return !0;
          } else if (sge(t) || mge(t)) {
            for (let o of t.properties)
              if (!this.isPure(o, r)) return !1;
            return !0;
          } else if (ege(t)) {
            var n;
            return !(t.computed && !this.isPure(t.key, r) || ((n = t.decorators) == null ? void 0 : n.length) > 0);
          } else if (nge(t)) {
            var a;
            return !(t.computed && !this.isPure(t.key, r) || ((a = t.decorators) == null ? void 0 : a.length) > 0 || (gge(t) || t.static) &&
            t.value !== null && !this.isPure(t.value, r));
          } else {
            if (uge(t))
              return this.isPure(t.argument, r);
            if (DF(t)) {
              for (let o of t.expressions)
                if (!this.isPure(o, r)) return !1;
              return !0;
            } else return lge(t) ? PF(t.tag, "String.raw") && !this.hasBinding("String", {
              noGlobals: !0
            }) && this.isPure(t.quasi, r) : Z0e(t) ? !t.computed && Ya(t.object) && t.object.name === "Symbol" && Ya(t.property) && t.property.
            name !== "for" && !this.hasBinding("Symbol", {
              noGlobals: !0
            }) : TF(t) ? PF(t.callee, "Symbol.for") && !this.hasBinding("Symbol", {
              noGlobals: !0
            }) && t.arguments.length === 1 && V0e.isStringLiteral(t.arguments[0]) : ige(t);
          }
        }
      }
    }
    setData(t, r) {
      return this.data[t] = r;
    }
    getData(t) {
      let r = this;
      do {
        let s = r.data[t];
        if (s != null) return s;
      } while (r = r.parent);
    }
    removeData(t) {
      let r = this;
      do
        r.data[t] != null && (r.data[t] = null);
      while (r = r.parent);
    }
    init() {
      this.inited || (this.inited = !0, this.crawl());
    }
    crawl() {
      let t = this.path;
      this.references = /* @__PURE__ */ Object.create(null), this.bindings = /* @__PURE__ */ Object.create(null), this.globals = /* @__PURE__ */ Object.
      create(null), this.uids = /* @__PURE__ */ Object.create(null), this.data = /* @__PURE__ */ Object.create(null);
      let r = this.getProgramParent();
      if (r.crawling) return;
      let s = {
        references: [],
        constantViolations: [],
        assignments: []
      };
      if (this.crawling = !0, t.type !== "Program" && (0, W0e.isExplodedVisitor)(Zp)) {
        for (let a of Zp.enter)
          a.call(s, t, s);
        let n = Zp[t.type];
        if (n)
          for (let a of n.enter)
            a.call(s, t, s);
      }
      t.traverse(Zp, s), this.crawling = !1;
      for (let n of s.assignments) {
        let a = n.getBindingIdentifiers();
        for (let o of Object.keys(a))
          n.scope.getBinding(o) || r.addGlobal(a[o]);
        n.scope.registerConstantViolation(n);
      }
      for (let n of s.references) {
        let a = n.scope.getBinding(n.node.name);
        a ? a.reference(n) : r.addGlobal(n.node);
      }
      for (let n of s.constantViolations)
        n.scope.registerConstantViolation(n);
    }
    push(t) {
      let r = this.path;
      r.isPattern() ? r = this.getPatternParent().path : !r.isBlockStatement() && !r.isProgram() && (r = this.getBlockParent().path), r.isSwitchStatement() &&
      (r = (this.getFunctionParent() || this.getProgramParent()).path);
      let {
        init: s,
        unique: n,
        kind: a = "var",
        id: o
      } = t;
      if (!s && !n && (a === "var" || a === "let") && r.isFunction() && !r.node.name && TF(r.parent, {
        callee: r.node
      }) && r.parent.arguments.length <= r.node.params.length && Ya(o)) {
        r.pushContainer("params", o), r.scope.registerBinding("param", r.get("params")[r.node.params.length - 1]);
        return;
      }
      (r.isLoop() || r.isCatchClause() || r.isFunction()) && (r.ensureBlock(), r = r.get("body"));
      let l = t._blockHoist == null ? 2 : t._blockHoist, u = `declaration:${a}:${l}`, c = !n && r.getData(u);
      if (!c) {
        let d = dge(a, []);
        d._blockHoist = l, [c] = r.unshiftContainer("body", [d]), n || r.setData(u, c);
      }
      let f = hge(o, s), p = c.node.declarations.push(f);
      r.scope.registerBinding(a, c.get("declarations")[p - 1]);
    }
    getProgramParent() {
      let t = this;
      do
        if (t.path.isProgram())
          return t;
      while (t = t.parent);
      throw new Error("Couldn't find a Program");
    }
    getFunctionParent() {
      let t = this;
      do
        if (t.path.isFunctionParent())
          return t;
      while (t = t.parent);
      return null;
    }
    getBlockParent() {
      let t = this;
      do
        if (t.path.isBlockParent())
          return t;
      while (t = t.parent);
      throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
    }
    getPatternParent() {
      let t = this;
      do
        if (!t.path.isPattern())
          return t.getBlockParent();
      while (t = t.parent.parent);
      throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
    }
    getAllBindings() {
      let t = /* @__PURE__ */ Object.create(null), r = this;
      do {
        for (let s of Object.keys(r.bindings))
          s in t || (t[s] = r.bindings[s]);
        r = r.parent;
      } while (r);
      return t;
    }
    getAllBindingsOfKind(...t) {
      let r = /* @__PURE__ */ Object.create(null);
      for (let s of t) {
        let n = this;
        do {
          for (let a of Object.keys(n.bindings)) {
            let o = n.bindings[a];
            o.kind === s && (r[a] = o);
          }
          n = n.parent;
        } while (n);
      }
      return r;
    }
    bindingIdentifierEquals(t, r) {
      return this.getBindingIdentifier(t) === r;
    }
    getBinding(t) {
      let r = this, s;
      do {
        let a = r.getOwnBinding(t);
        if (a) {
          var n;
          if (!((n = s) != null && n.isPattern() && a.kind !== "param" && a.kind !== "local"))
            return a;
        } else if (!a && t === "arguments" && r.path.isFunction() && !r.path.isArrowFunctionExpression())
          break;
        s = r.path;
      } while (r = r.parent);
    }
    getOwnBinding(t) {
      return this.bindings[t];
    }
    getBindingIdentifier(t) {
      var r;
      return (r = this.getBinding(t)) == null ? void 0 : r.identifier;
    }
    getOwnBindingIdentifier(t) {
      let r = this.bindings[t];
      return r?.identifier;
    }
    hasOwnBinding(t) {
      return !!this.getOwnBinding(t);
    }
    hasBinding(t, r) {
      var s, n, a;
      return t ? !!(this.hasOwnBinding(t) || (typeof r == "boolean" && (r = {
        noGlobals: r
      }), this.parentHasBinding(t, r)) || !((s = r) != null && s.noUids) && this.hasUid(t) || !((n = r) != null && n.noGlobals) && e.globals.
      includes(t) || !((a = r) != null && a.noGlobals) && e.contextVariables.includes(t)) : !1;
    }
    parentHasBinding(t, r) {
      var s;
      return (s = this.parent) == null ? void 0 : s.hasBinding(t, r);
    }
    moveBindingTo(t, r) {
      let s = this.getBinding(t);
      s && (s.scope.removeOwnBinding(t), s.scope = r, r.bindings[t] = s);
    }
    removeOwnBinding(t) {
      delete this.bindings[t];
    }
    removeBinding(t) {
      var r;
      (r = this.getBinding(t)) == null || r.scope.removeOwnBinding(t);
      let s = this;
      do
        s.uids[t] && (s.uids[t] = !1);
      while (s = s.parent);
    }
  };
  ed.default = rc;
  rc.globals = Object.keys(U0e.builtin);
  rc.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];
});

// ../node_modules/@jridgewell/set-array/dist/set-array.umd.js
var _F = y((td, IF) => {
  (function(e, t) {
    typeof td == "object" && typeof IF < "u" ? t(td) : typeof define == "function" && define.amd ? define(["exports"], t) : (e = typeof globalThis <
    "u" ? globalThis : e || self, t(e.setArray = {}));
  })(td, function(e) {
    "use strict";
    class t {
      static {
        i(this, "SetArray");
      }
      constructor() {
        this._indexes = { __proto__: null }, this.array = [];
      }
    }
    function r(l) {
      return l;
    }
    i(r, "cast");
    function s(l, u) {
      return l._indexes[u];
    }
    i(s, "get");
    function n(l, u) {
      let c = s(l, u);
      if (c !== void 0)
        return c;
      let { array: f, _indexes: p } = l, d = f.push(u);
      return p[u] = d - 1;
    }
    i(n, "put");
    function a(l) {
      let { array: u, _indexes: c } = l;
      if (u.length === 0)
        return;
      let f = u.pop();
      c[f] = void 0;
    }
    i(a, "pop");
    function o(l, u) {
      let c = s(l, u);
      if (c === void 0)
        return;
      let { array: f, _indexes: p } = l;
      for (let d = c + 1; d < f.length; d++) {
        let m = f[d];
        f[d - 1] = m, p[m]--;
      }
      p[u] = void 0, f.pop();
    }
    i(o, "remove"), e.SetArray = t, e.get = s, e.pop = a, e.put = n, e.remove = o, Object.defineProperty(e, "__esModule", { value: !0 });
  });
});

// ../node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js
var tv = y((rd, OF) => {
  (function(e, t) {
    typeof rd == "object" && typeof OF < "u" ? t(rd) : typeof define == "function" && define.amd ? define(["exports"], t) : (e = typeof globalThis <
    "u" ? globalThis : e || self, t(e.sourcemapCodec = {}));
  })(rd, function(e) {
    "use strict";
    let s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(64), a = new Uint8Array(128);
    for (let h = 0; h < s.length; h++) {
      let g = s.charCodeAt(h);
      n[h] = g, a[g] = h;
    }
    let o = typeof TextDecoder < "u" ? /* @__PURE__ */ new TextDecoder() : typeof Buffer < "u" ? {
      decode(h) {
        return Buffer.from(h.buffer, h.byteOffset, h.byteLength).toString();
      }
    } : {
      decode(h) {
        let g = "";
        for (let E = 0; E < h.length; E++)
          g += String.fromCharCode(h[E]);
        return g;
      }
    };
    function l(h) {
      let g = new Int32Array(5), E = [], D = 0;
      do {
        let C = u(h, D), N = [], I = !0, M = 0;
        g[0] = 0;
        for (let q = D; q < C; q++) {
          let V;
          q = c(h, q, g, 0);
          let W = g[0];
          W < M && (I = !1), M = W, f(h, q, C) ? (q = c(h, q, g, 1), q = c(h, q, g, 2), q = c(h, q, g, 3), f(h, q, C) ? (q = c(h, q, g, 4), V =
          [W, g[1], g[2], g[3], g[4]]) : V = [W, g[1], g[2], g[3]]) : V = [W], N.push(V);
        }
        I || p(N), E.push(N), D = C + 1;
      } while (D <= h.length);
      return E;
    }
    i(l, "decode");
    function u(h, g) {
      let E = h.indexOf(";", g);
      return E === -1 ? h.length : E;
    }
    i(u, "indexOf");
    function c(h, g, E, D) {
      let C = 0, N = 0, I = 0;
      do {
        let q = h.charCodeAt(g++);
        I = a[q], C |= (I & 31) << N, N += 5;
      } while (I & 32);
      let M = C & 1;
      return C >>>= 1, M && (C = -2147483648 | -C), E[D] += C, g;
    }
    i(c, "decodeInteger");
    function f(h, g, E) {
      return g >= E ? !1 : h.charCodeAt(g) !== 44;
    }
    i(f, "hasMoreVlq");
    function p(h) {
      h.sort(d);
    }
    i(p, "sort");
    function d(h, g) {
      return h[0] - g[0];
    }
    i(d, "sortComparator");
    function m(h) {
      let g = new Int32Array(5), E = 1024 * 16, D = E - 36, C = new Uint8Array(E), N = C.subarray(0, D), I = 0, M = "";
      for (let q = 0; q < h.length; q++) {
        let V = h[q];
        if (q > 0 && (I === E && (M += o.decode(C), I = 0), C[I++] = 59), V.length !== 0) {
          g[0] = 0;
          for (let W = 0; W < V.length; W++) {
            let Y = V[W];
            I > D && (M += o.decode(N), C.copyWithin(0, D, I), I -= D), W > 0 && (C[I++] = 44), I = b(C, I, g, Y, 0), Y.length !== 1 && (I =
            b(C, I, g, Y, 1), I = b(C, I, g, Y, 2), I = b(C, I, g, Y, 3), Y.length !== 4 && (I = b(C, I, g, Y, 4)));
          }
        }
      }
      return M + o.decode(C.subarray(0, I));
    }
    i(m, "encode");
    function b(h, g, E, D, C) {
      let N = D[C], I = N - E[C];
      E[C] = N, I = I < 0 ? -I << 1 | 1 : I << 1;
      do {
        let M = I & 31;
        I >>>= 5, I > 0 && (M |= 32), h[g++] = n[M];
      } while (I > 0);
      return g;
    }
    i(b, "encodeInteger"), e.decode = l, e.encode = m, Object.defineProperty(e, "__esModule", { value: !0 });
  });
});

// ../node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js
var NF = y((rv, sv) => {
  (function(e, t) {
    typeof rv == "object" && typeof sv < "u" ? sv.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis <
    "u" ? globalThis : e || self, e.resolveURI = t());
  })(rv, function() {
    "use strict";
    let e = /^[\w+.-]+:\/\//, t = /^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/, r = /^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;
    var s;
    (function(E) {
      E[E.Empty = 1] = "Empty", E[E.Hash = 2] = "Hash", E[E.Query = 3] = "Query", E[E.RelativePath = 4] = "RelativePath", E[E.AbsolutePath =
      5] = "AbsolutePath", E[E.SchemeRelative = 6] = "SchemeRelative", E[E.Absolute = 7] = "Absolute";
    })(s || (s = {}));
    function n(E) {
      return e.test(E);
    }
    i(n, "isAbsoluteUrl");
    function a(E) {
      return E.startsWith("//");
    }
    i(a, "isSchemeRelativeUrl");
    function o(E) {
      return E.startsWith("/");
    }
    i(o, "isAbsolutePath");
    function l(E) {
      return E.startsWith("file:");
    }
    i(l, "isFileUrl");
    function u(E) {
      return /^[.?#]/.test(E);
    }
    i(u, "isRelative");
    function c(E) {
      let D = t.exec(E);
      return p(D[1], D[2] || "", D[3], D[4] || "", D[5] || "/", D[6] || "", D[7] || "");
    }
    i(c, "parseAbsoluteUrl");
    function f(E) {
      let D = r.exec(E), C = D[2];
      return p("file:", "", D[1] || "", "", o(C) ? C : "/" + C, D[3] || "", D[4] || "");
    }
    i(f, "parseFileUrl");
    function p(E, D, C, N, I, M, q) {
      return {
        scheme: E,
        user: D,
        host: C,
        port: N,
        path: I,
        query: M,
        hash: q,
        type: s.Absolute
      };
    }
    i(p, "makeUrl");
    function d(E) {
      if (a(E)) {
        let C = c("http:" + E);
        return C.scheme = "", C.type = s.SchemeRelative, C;
      }
      if (o(E)) {
        let C = c("http://foo.com" + E);
        return C.scheme = "", C.host = "", C.type = s.AbsolutePath, C;
      }
      if (l(E))
        return f(E);
      if (n(E))
        return c(E);
      let D = c("http://foo.com/" + E);
      return D.scheme = "", D.host = "", D.type = E ? E.startsWith("?") ? s.Query : E.startsWith("#") ? s.Hash : s.RelativePath : s.Empty, D;
    }
    i(d, "parseUrl");
    function m(E) {
      if (E.endsWith("/.."))
        return E;
      let D = E.lastIndexOf("/");
      return E.slice(0, D + 1);
    }
    i(m, "stripPathFilename");
    function b(E, D) {
      h(D, D.type), E.path === "/" ? E.path = D.path : E.path = m(D.path) + E.path;
    }
    i(b, "mergePaths");
    function h(E, D) {
      let C = D <= s.RelativePath, N = E.path.split("/"), I = 1, M = 0, q = !1;
      for (let W = 1; W < N.length; W++) {
        let Y = N[W];
        if (!Y) {
          q = !0;
          continue;
        }
        if (q = !1, Y !== ".") {
          if (Y === "..") {
            M ? (q = !0, M--, I--) : C && (N[I++] = Y);
            continue;
          }
          N[I++] = Y, M++;
        }
      }
      let V = "";
      for (let W = 1; W < I; W++)
        V += "/" + N[W];
      (!V || q && !V.endsWith("/..")) && (V += "/"), E.path = V;
    }
    i(h, "normalizePath");
    function g(E, D) {
      if (!E && !D)
        return "";
      let C = d(E), N = C.type;
      if (D && N !== s.Absolute) {
        let M = d(D), q = M.type;
        switch (N) {
          case s.Empty:
            C.hash = M.hash;
          case s.Hash:
            C.query = M.query;
          case s.Query:
          case s.RelativePath:
            b(C, M);
          case s.AbsolutePath:
            C.user = M.user, C.host = M.host, C.port = M.port;
          case s.SchemeRelative:
            C.scheme = M.scheme;
        }
        q > N && (N = q);
      }
      h(C, N);
      let I = C.query + C.hash;
      switch (N) {
        case s.Hash:
        case s.Query:
          return I;
        case s.RelativePath: {
          let M = C.path.slice(1);
          return M ? u(D || E) && !u(M) ? "./" + M + I : M + I : I || ".";
        }
        case s.AbsolutePath:
          return C.path + I;
        default:
          return C.scheme + "//" + C.user + C.host + C.port + C.path + I;
      }
    }
    return i(g, "resolve"), g;
  });
});

// ../node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js
var nd = y((sd, RF) => {
  (function(e, t) {
    typeof sd == "object" && typeof RF < "u" ? t(sd, tv(), NF()) : typeof define == "function" && define.amd ? define(["exports", "@jridgewe\
ll/sourcemap-codec", "@jridgewell/resolve-uri"], t) : (e = typeof globalThis < "u" ? globalThis : e || self, t(e.traceMapping = {}, e.sourcemapCodec,
    e.resolveURI));
  })(sd, function(e, t, r) {
    "use strict";
    function s(U, z) {
      return z && !z.endsWith("/") && (z += "/"), r(U, z);
    }
    i(s, "resolve");
    function n(U) {
      if (!U)
        return "";
      let z = U.lastIndexOf("/");
      return U.slice(0, z + 1);
    }
    i(n, "stripFilename");
    let a = 0, o = 1, l = 2, u = 3, c = 4, f = 1, p = 2;
    function d(U, z) {
      let J = m(U, 0);
      if (J === U.length)
        return U;
      z || (U = U.slice());
      for (let oe = J; oe < U.length; oe = m(U, oe + 1))
        U[oe] = h(U[oe], z);
      return U;
    }
    i(d, "maybeSort");
    function m(U, z) {
      for (let J = z; J < U.length; J++)
        if (!b(U[J]))
          return J;
      return U.length;
    }
    i(m, "nextUnsortedSegmentLine");
    function b(U) {
      for (let z = 1; z < U.length; z++)
        if (U[z][a] < U[z - 1][a])
          return !1;
      return !0;
    }
    i(b, "isSorted");
    function h(U, z) {
      return z || (U = U.slice()), U.sort(g);
    }
    i(h, "sortSegments");
    function g(U, z) {
      return U[a] - z[a];
    }
    i(g, "sortComparator");
    let E = !1;
    function D(U, z, J, oe) {
      for (; J <= oe; ) {
        let ke = J + (oe - J >> 1), be = U[ke][a] - z;
        if (be === 0)
          return E = !0, ke;
        be < 0 ? J = ke + 1 : oe = ke - 1;
      }
      return E = !1, J - 1;
    }
    i(D, "binarySearch");
    function C(U, z, J) {
      for (let oe = J + 1; oe < U.length && U[oe][a] === z; J = oe++)
        ;
      return J;
    }
    i(C, "upperBound");
    function N(U, z, J) {
      for (let oe = J - 1; oe >= 0 && U[oe][a] === z; J = oe--)
        ;
      return J;
    }
    i(N, "lowerBound");
    function I() {
      return {
        lastKey: -1,
        lastNeedle: -1,
        lastIndex: -1
      };
    }
    i(I, "memoizedState");
    function M(U, z, J, oe) {
      let { lastKey: ke, lastNeedle: be, lastIndex: Me } = J, Xe = 0, Le = U.length - 1;
      if (oe === ke) {
        if (z === be)
          return E = Me !== -1 && U[Me][a] === z, Me;
        z >= be ? Xe = Me === -1 ? 0 : Me : Le = Me;
      }
      return J.lastKey = oe, J.lastNeedle = z, J.lastIndex = D(U, z, Xe, Le);
    }
    i(M, "memoizedBinarySearch");
    function q(U, z) {
      let J = z.map(W);
      for (let oe = 0; oe < U.length; oe++) {
        let ke = U[oe];
        for (let be = 0; be < ke.length; be++) {
          let Me = ke[be];
          if (Me.length === 1)
            continue;
          let Xe = Me[o], Le = Me[l], ht = Me[u], Mt = J[Xe], ot = Mt[Le] || (Mt[Le] = []), mt = z[Xe], Vt = C(ot, ht, M(ot, ht, mt, Le));
          mt.lastIndex = ++Vt, V(ot, Vt, [ht, oe, Me[a]]);
        }
      }
      return J;
    }
    i(q, "buildBySources");
    function V(U, z, J) {
      for (let oe = U.length; oe > z; oe--)
        U[oe] = U[oe - 1];
      U[z] = J;
    }
    i(V, "insert");
    function W() {
      return { __proto__: null };
    }
    i(W, "buildNullArray");
    let Y = /* @__PURE__ */ i(function(U, z) {
      let J = j(U);
      if (!("sections" in J))
        return new qe(J, z);
      let oe = [], ke = [], be = [], Me = [], Xe = [];
      ae(J, z, oe, ke, be, Me, Xe, 0, 0, 1 / 0, 1 / 0);
      let Le = {
        version: 3,
        file: J.file,
        names: Me,
        sources: ke,
        sourcesContent: be,
        mappings: oe,
        ignoreList: Xe
      };
      return He(Le);
    }, "AnyMap");
    function j(U) {
      return typeof U == "string" ? JSON.parse(U) : U;
    }
    i(j, "parse");
    function ae(U, z, J, oe, ke, be, Me, Xe, Le, ht, Mt) {
      let { sections: ot } = U;
      for (let mt = 0; mt < ot.length; mt++) {
        let { map: Vt, offset: Zt } = ot[mt], Ts = ht, Cn = Mt;
        if (mt + 1 < ot.length) {
          let ji = ot[mt + 1].offset;
          Ts = Math.min(ht, Xe + ji.line), Ts === ht ? Cn = Math.min(Mt, Le + ji.column) : Ts < ht && (Cn = Le + ji.column);
        }
        pe(Vt, z, J, oe, ke, be, Me, Xe + Zt.line, Le + Zt.column, Ts, Cn);
      }
    }
    i(ae, "recurse");
    function pe(U, z, J, oe, ke, be, Me, Xe, Le, ht, Mt) {
      let ot = j(U);
      if ("sections" in ot)
        return ae(...arguments);
      let mt = new qe(ot, z), Vt = oe.length, Zt = be.length, Ts = Bt(mt), { resolvedSources: Cn, sourcesContent: ji, ignoreList: No } = mt;
      if (Ie(oe, Cn), Ie(be, mt.names), ji)
        Ie(ke, ji);
      else
        for (let Jr = 0; Jr < Cn.length; Jr++)
          ke.push(null);
      if (No)
        for (let Jr = 0; Jr < No.length; Jr++)
          Me.push(No[Jr] + Vt);
      for (let Jr = 0; Jr < Ts.length; Jr++) {
        let Ro = Xe + Jr;
        if (Ro > ht)
          return;
        let qw = F(J, Ro), mW = Jr === 0 ? Le : 0, $w = Ts[Jr];
        for (let t0 = 0; t0 < $w.length; t0++) {
          let ka = $w[t0], Wf = mW + ka[a];
          if (Ro === ht && Wf >= Mt)
            return;
          if (ka.length === 1) {
            qw.push([Wf]);
            continue;
          }
          let Uw = Vt + ka[o], Vw = ka[l], Ww = ka[u];
          qw.push(ka.length === 4 ? [Wf, Uw, Vw, Ww] : [Wf, Uw, Vw, Ww, Zt + ka[c]]);
        }
      }
    }
    i(pe, "addSection");
    function Ie(U, z) {
      for (let J = 0; J < z.length; J++)
        U.push(z[J]);
    }
    i(Ie, "append");
    function F(U, z) {
      for (let J = U.length; J <= z; J++)
        U[J] = [];
      return U[z];
    }
    i(F, "getLine");
    let L = "`line` must be greater than 0 (lines start at line 1)", se = "`column` must be greater than or equal to 0 (columns start at col\
umn 0)", ne = -1, Ee = 1;
    class qe {
      static {
        i(this, "TraceMap");
      }
      constructor(z, J) {
        let oe = typeof z == "string";
        if (!oe && z._decodedMemo)
          return z;
        let ke = oe ? JSON.parse(z) : z, { version: be, file: Me, names: Xe, sourceRoot: Le, sources: ht, sourcesContent: Mt } = ke;
        this.version = be, this.file = Me, this.names = Xe || [], this.sourceRoot = Le, this.sources = ht, this.sourcesContent = Mt, this.ignoreList =
        ke.ignoreList || ke.x_google_ignoreList || void 0;
        let ot = s(Le || "", n(J));
        this.resolvedSources = ht.map((Vt) => s(Vt || "", ot));
        let { mappings: mt } = ke;
        typeof mt == "string" ? (this._encoded = mt, this._decoded = void 0) : (this._encoded = void 0, this._decoded = d(mt, oe)), this._decodedMemo =
        I(), this._bySources = void 0, this._bySourceMemos = void 0;
      }
    }
    function Ae(U) {
      return U;
    }
    i(Ae, "cast");
    function Rt(U) {
      var z, J;
      return (z = (J = U)._encoded) !== null && z !== void 0 ? z : J._encoded = t.encode(U._decoded);
    }
    i(Rt, "encodedMappings");
    function Bt(U) {
      var z;
      return (z = U)._decoded || (z._decoded = t.decode(U._encoded));
    }
    i(Bt, "decodedMappings");
    function qt(U, z, J) {
      let oe = Bt(U);
      if (z >= oe.length)
        return null;
      let ke = oe[z], be = ge(ke, U._decodedMemo, z, J, Ee);
      return be === -1 ? null : ke[be];
    }
    i(qt, "traceSegment");
    function _e(U, z) {
      let { line: J, column: oe, bias: ke } = z;
      if (J--, J < 0)
        throw new Error(L);
      if (oe < 0)
        throw new Error(se);
      let be = Bt(U);
      if (J >= be.length)
        return sn(null, null, null, null);
      let Me = be[J], Xe = ge(Me, U._decodedMemo, J, oe, ke || Ee);
      if (Xe === -1)
        return sn(null, null, null, null);
      let Le = Me[Xe];
      if (Le.length === 1)
        return sn(null, null, null, null);
      let { names: ht, resolvedSources: Mt } = U;
      return sn(Mt[Le[o]], Le[l] + 1, Le[u], Le.length === 5 ? ht[Le[c]] : null);
    }
    i(_e, "originalPositionFor");
    function Oe(U, z) {
      let { source: J, line: oe, column: ke, bias: be } = z;
      return Ge(U, J, oe, ke, be || Ee, !1);
    }
    i(Oe, "generatedPositionFor");
    function Jt(U, z) {
      let { source: J, line: oe, column: ke, bias: be } = z;
      return Ge(U, J, oe, ke, be || ne, !0);
    }
    i(Jt, "allGeneratedPositionsFor");
    function Tr(U, z) {
      let J = Bt(U), { names: oe, resolvedSources: ke } = U;
      for (let be = 0; be < J.length; be++) {
        let Me = J[be];
        for (let Xe = 0; Xe < Me.length; Xe++) {
          let Le = Me[Xe], ht = be + 1, Mt = Le[0], ot = null, mt = null, Vt = null, Zt = null;
          Le.length !== 1 && (ot = ke[Le[1]], mt = Le[2] + 1, Vt = Le[3]), Le.length === 5 && (Zt = oe[Le[4]]), z({
            generatedLine: ht,
            generatedColumn: Mt,
            source: ot,
            originalLine: mt,
            originalColumn: Vt,
            name: Zt
          });
        }
      }
    }
    i(Tr, "eachMapping");
    function de(U, z) {
      let { sources: J, resolvedSources: oe } = U, ke = J.indexOf(z);
      return ke === -1 && (ke = oe.indexOf(z)), ke;
    }
    i(de, "sourceIndex");
    function ut(U, z) {
      let { sourcesContent: J } = U;
      if (J == null)
        return null;
      let oe = de(U, z);
      return oe === -1 ? null : J[oe];
    }
    i(ut, "sourceContentFor");
    function le(U, z) {
      let { ignoreList: J } = U;
      if (J == null)
        return !1;
      let oe = de(U, z);
      return oe === -1 ? !1 : J.includes(oe);
    }
    i(le, "isIgnored");
    function He(U, z) {
      let J = new qe(kt(U, []), z);
      return J._decoded = U.mappings, J;
    }
    i(He, "presortedDecodedMap");
    function Pt(U) {
      return kt(U, Bt(U));
    }
    i(Pt, "decodedMap");
    function Qt(U) {
      return kt(U, Rt(U));
    }
    i(Qt, "encodedMap");
    function kt(U, z) {
      return {
        version: U.version,
        file: U.file,
        names: U.names,
        sourceRoot: U.sourceRoot,
        sources: U.sources,
        sourcesContent: U.sourcesContent,
        mappings: z,
        ignoreList: U.ignoreList || U.x_google_ignoreList
      };
    }
    i(kt, "clone");
    function sn(U, z, J, oe) {
      return { source: U, line: z, column: J, name: oe };
    }
    i(sn, "OMapping");
    function zr(U, z) {
      return { line: U, column: z };
    }
    i(zr, "GMapping");
    function ge(U, z, J, oe, ke) {
      let be = M(U, oe, z, J);
      return E ? be = (ke === ne ? C : N)(U, oe, be) : ke === ne && be++, be === -1 || be === U.length ? -1 : be;
    }
    i(ge, "traceSegmentInternal");
    function fe(U, z, J, oe, ke) {
      let be = ge(U, z, J, oe, Ee);
      if (!E && ke === ne && be++, be === -1 || be === U.length)
        return [];
      let Me = E ? oe : U[be][a];
      E || (be = N(U, Me, be));
      let Xe = C(U, Me, be), Le = [];
      for (; be <= Xe; be++) {
        let ht = U[be];
        Le.push(zr(ht[f] + 1, ht[p]));
      }
      return Le;
    }
    i(fe, "sliceGeneratedPositions");
    function Ge(U, z, J, oe, ke, be) {
      var Me;
      if (J--, J < 0)
        throw new Error(L);
      if (oe < 0)
        throw new Error(se);
      let { sources: Xe, resolvedSources: Le } = U, ht = Xe.indexOf(z);
      if (ht === -1 && (ht = Le.indexOf(z)), ht === -1)
        return be ? [] : zr(null, null);
      let ot = ((Me = U)._bySources || (Me._bySources = q(Bt(U), U._bySourceMemos = Xe.map(I))))[ht][J];
      if (ot == null)
        return be ? [] : zr(null, null);
      let mt = U._bySourceMemos[ht];
      if (be)
        return fe(ot, mt, J, oe, ke);
      let Vt = ge(ot, mt, J, oe, ke);
      if (Vt === -1)
        return zr(null, null);
      let Zt = ot[Vt];
      return zr(Zt[f] + 1, Zt[p]);
    }
    i(Ge, "generatedPosition"), e.AnyMap = Y, e.GREATEST_LOWER_BOUND = Ee, e.LEAST_UPPER_BOUND = ne, e.TraceMap = qe, e.allGeneratedPositionsFor =
    Jt, e.decodedMap = Pt, e.decodedMappings = Bt, e.eachMapping = Tr, e.encodedMap = Qt, e.encodedMappings = Rt, e.generatedPositionFor = Oe,
    e.isIgnored = le, e.originalPositionFor = _e, e.presortedDecodedMap = He, e.sourceContentFor = ut, e.traceSegment = qt;
  });
});

// ../node_modules/@jridgewell/gen-mapping/dist/gen-mapping.umd.js
var nv = y((id, kF) => {
  (function(e, t) {
    typeof id == "object" && typeof kF < "u" ? t(id, _F(), tv(), nd()) : typeof define == "function" && define.amd ? define(["exports", "@jr\
idgewell/set-array", "@jridgewell/sourcemap-codec", "@jridgewell/trace-mapping"], t) : (e = typeof globalThis < "u" ? globalThis : e || self,
    t(e.genMapping = {}, e.setArray, e.sourcemapCodec, e.traceMapping));
  })(id, function(e, t, r, s) {
    "use strict";
    class f {
      static {
        i(this, "GenMapping");
      }
      constructor({ file: L, sourceRoot: se } = {}) {
        this._names = new t.SetArray(), this._sources = new t.SetArray(), this._sourcesContent = [], this._mappings = [], this.file = L, this.
        sourceRoot = se, this._ignoreList = new t.SetArray();
      }
    }
    function p(F) {
      return F;
    }
    i(p, "cast");
    function d(F, L, se, ne, Ee, qe, Ae, Rt) {
      return M(!1, F, L, se, ne, Ee, qe, Ae, Rt);
    }
    i(d, "addSegment");
    function m(F, L) {
      return Ie(!1, F, L);
    }
    i(m, "addMapping");
    let b = /* @__PURE__ */ i((F, L, se, ne, Ee, qe, Ae, Rt) => M(!0, F, L, se, ne, Ee, qe, Ae, Rt), "maybeAddSegment"), h = /* @__PURE__ */ i(
    (F, L) => Ie(!0, F, L), "maybeAddMapping");
    function g(F, L, se) {
      let { _sources: ne, _sourcesContent: Ee } = F, qe = t.put(ne, L);
      Ee[qe] = se;
    }
    i(g, "setSourceContent");
    function E(F, L, se = !0) {
      let { _sources: ne, _sourcesContent: Ee, _ignoreList: qe } = F, Ae = t.put(ne, L);
      Ae === Ee.length && (Ee[Ae] = null), se ? t.put(qe, Ae) : t.remove(qe, Ae);
    }
    i(E, "setIgnore");
    function D(F) {
      let { _mappings: L, _sources: se, _sourcesContent: ne, _names: Ee, _ignoreList: qe } = F;
      return Y(L), {
        version: 3,
        file: F.file || void 0,
        names: Ee.array,
        sourceRoot: F.sourceRoot || void 0,
        sources: se.array,
        sourcesContent: ne,
        mappings: L,
        ignoreList: qe.array
      };
    }
    i(D, "toDecodedMap");
    function C(F) {
      let L = D(F);
      return Object.assign(Object.assign({}, L), { mappings: r.encode(L.mappings) });
    }
    i(C, "toEncodedMap");
    function N(F) {
      let L = new s.TraceMap(F), se = new f({ file: L.file, sourceRoot: L.sourceRoot });
      return j(se._names, L.names), j(se._sources, L.sources), se._sourcesContent = L.sourcesContent || L.sources.map(() => null), se._mappings =
      s.decodedMappings(L), L.ignoreList && j(se._ignoreList, L.ignoreList), se;
    }
    i(N, "fromMap");
    function I(F) {
      let L = [], { _mappings: se, _sources: ne, _names: Ee } = F;
      for (let qe = 0; qe < se.length; qe++) {
        let Ae = se[qe];
        for (let Rt = 0; Rt < Ae.length; Rt++) {
          let Bt = Ae[Rt], qt = { line: qe + 1, column: Bt[0] }, _e, Oe, Jt;
          Bt.length !== 1 && (_e = ne.array[Bt[1]], Oe = { line: Bt[2] + 1, column: Bt[3] }, Bt.length === 5 && (Jt = Ee.array[Bt[4]])), L.push(
          { generated: qt, source: _e, original: Oe, name: Jt });
        }
      }
      return L;
    }
    i(I, "allMappings");
    function M(F, L, se, ne, Ee, qe, Ae, Rt, Bt) {
      let { _mappings: qt, _sources: _e, _sourcesContent: Oe, _names: Jt } = L, Tr = q(qt, se), de = V(Tr, ne);
      if (!Ee)
        return F && ae(Tr, de) ? void 0 : W(Tr, de, [ne]);
      let ut = t.put(_e, Ee), le = Rt ? t.put(Jt, Rt) : -1;
      if (ut === Oe.length && (Oe[ut] = Bt ?? null), !(F && pe(Tr, de, ut, qe, Ae, le)))
        return W(Tr, de, Rt ? [ne, ut, qe, Ae, le] : [ne, ut, qe, Ae]);
    }
    i(M, "addSegmentInternal");
    function q(F, L) {
      for (let se = F.length; se <= L; se++)
        F[se] = [];
      return F[L];
    }
    i(q, "getLine");
    function V(F, L) {
      let se = F.length;
      for (let ne = se - 1; ne >= 0; se = ne--) {
        let Ee = F[ne];
        if (L >= Ee[0])
          break;
      }
      return se;
    }
    i(V, "getColumnIndex");
    function W(F, L, se) {
      for (let ne = F.length; ne > L; ne--)
        F[ne] = F[ne - 1];
      F[L] = se;
    }
    i(W, "insert");
    function Y(F) {
      let { length: L } = F, se = L;
      for (let ne = se - 1; ne >= 0 && !(F[ne].length > 0); se = ne, ne--)
        ;
      se < L && (F.length = se);
    }
    i(Y, "removeEmptyFinalLines");
    function j(F, L) {
      for (let se = 0; se < L.length; se++)
        t.put(F, L[se]);
    }
    i(j, "putAll");
    function ae(F, L) {
      return L === 0 ? !0 : F[L - 1].length === 1;
    }
    i(ae, "skipSourceless");
    function pe(F, L, se, ne, Ee, qe) {
      if (L === 0)
        return !1;
      let Ae = F[L - 1];
      return Ae.length === 1 ? !1 : se === Ae[1] && ne === Ae[2] && Ee === Ae[3] && qe === (Ae.length === 5 ? Ae[4] : -1);
    }
    i(pe, "skipSource");
    function Ie(F, L, se) {
      let { generated: ne, source: Ee, original: qe, name: Ae, content: Rt } = se;
      return Ee ? M(F, L, ne.line - 1, ne.column, Ee, qe.line - 1, qe.column, Ae, Rt) : M(F, L, ne.line - 1, ne.column, null, null, null, null,
      null);
    }
    i(Ie, "addMappingInternal"), e.GenMapping = f, e.addMapping = m, e.addSegment = d, e.allMappings = I, e.fromMap = N, e.maybeAddMapping =
    h, e.maybeAddSegment = b, e.setIgnore = E, e.setSourceContent = g, e.toDecodedMap = D, e.toEncodedMap = C, Object.defineProperty(e, "__e\
sModule", { value: !0 });
  });
});

// ../node_modules/@babel/generator/lib/source-map.js
var FF = y((ad) => {
  "use strict";
  Object.defineProperty(ad, "__esModule", {
    value: !0
  });
  ad.default = void 0;
  var ta = nv(), iv = nd(), av = class {
    static {
      i(this, "SourceMap");
    }
    constructor(t, r) {
      var s;
      this._map = void 0, this._rawMappings = void 0, this._sourceFileName = void 0, this._lastGenLine = 0, this._lastSourceLine = 0, this._lastSourceColumn =
      0, this._inputMap = void 0;
      let n = this._map = new ta.GenMapping({
        sourceRoot: t.sourceRoot
      });
      if (this._sourceFileName = (s = t.sourceFileName) == null ? void 0 : s.replace(/\\/g, "/"), this._rawMappings = void 0, t.inputSourceMap) {
        this._inputMap = new iv.TraceMap(t.inputSourceMap);
        let o = this._inputMap.resolvedSources;
        if (o.length)
          for (let l = 0; l < o.length; l++) {
            var a;
            (0, ta.setSourceContent)(n, o[l], (a = this._inputMap.sourcesContent) == null ? void 0 : a[l]);
          }
      }
      if (typeof r == "string" && !t.inputSourceMap)
        (0, ta.setSourceContent)(n, this._sourceFileName, r);
      else if (typeof r == "object")
        for (let o of Object.keys(r))
          (0, ta.setSourceContent)(n, o.replace(/\\/g, "/"), r[o]);
    }
    get() {
      return (0, ta.toEncodedMap)(this._map);
    }
    getDecoded() {
      return (0, ta.toDecodedMap)(this._map);
    }
    getRawMappings() {
      return this._rawMappings || (this._rawMappings = (0, ta.allMappings)(this._map));
    }
    mark(t, r, s, n, a, o) {
      var l;
      this._rawMappings = void 0;
      let u;
      if (r != null)
        if (this._inputMap) {
          if (u = (0, iv.originalPositionFor)(this._inputMap, {
            line: r,
            column: s
          }), !u.name && a) {
            let c = (0, iv.originalPositionFor)(this._inputMap, a);
            c.name && (n = c.name);
          }
        } else
          u = {
            source: o?.replace(/\\/g, "/") || this._sourceFileName,
            line: r,
            column: s
          };
      (0, ta.maybeAddMapping)(this._map, {
        name: n,
        generated: t,
        source: (l = u) == null ? void 0 : l.source,
        original: u
      });
    }
  };
  ad.default = av;
});

// ../node_modules/@babel/generator/lib/buffer.js
var LF = y((od) => {
  "use strict";
  Object.defineProperty(od, "__esModule", {
    value: !0
  });
  od.default = void 0;
  var ov = class {
    static {
      i(this, "Buffer");
    }
    constructor(t, r) {
      this._map = null, this._buf = "", this._str = "", this._appendCount = 0, this._last = 0, this._queue = [], this._queueCursor = 0, this.
      _canMarkIdName = !0, this._indentChar = "", this._fastIndentations = [], this._position = {
        line: 1,
        column: 0
      }, this._sourcePosition = {
        identifierName: void 0,
        identifierNamePos: void 0,
        line: void 0,
        column: void 0,
        filename: void 0
      }, this._map = t, this._indentChar = r;
      for (let s = 0; s < 64; s++)
        this._fastIndentations.push(r.repeat(s));
      this._allocQueue();
    }
    _allocQueue() {
      let t = this._queue;
      for (let r = 0; r < 16; r++)
        t.push({
          char: 0,
          repeat: 1,
          line: void 0,
          column: void 0,
          identifierName: void 0,
          identifierNamePos: void 0,
          filename: ""
        });
    }
    _pushQueue(t, r, s, n, a) {
      let o = this._queueCursor;
      o === this._queue.length && this._allocQueue();
      let l = this._queue[o];
      l.char = t, l.repeat = r, l.line = s, l.column = n, l.filename = a, this._queueCursor++;
    }
    _popQueue() {
      if (this._queueCursor === 0)
        throw new Error("Cannot pop from empty queue");
      return this._queue[--this._queueCursor];
    }
    get() {
      this._flush();
      let t = this._map, r = {
        code: (this._buf + this._str).trimRight(),
        decodedMap: t?.getDecoded(),
        get __mergedMap() {
          return this.map;
        },
        get map() {
          let s = t ? t.get() : null;
          return r.map = s, s;
        },
        set map(s) {
          Object.defineProperty(r, "map", {
            value: s,
            writable: !0
          });
        },
        get rawMappings() {
          let s = t?.getRawMappings();
          return r.rawMappings = s, s;
        },
        set rawMappings(s) {
          Object.defineProperty(r, "rawMappings", {
            value: s,
            writable: !0
          });
        }
      };
      return r;
    }
    append(t, r) {
      this._flush(), this._append(t, this._sourcePosition, r);
    }
    appendChar(t) {
      this._flush(), this._appendChar(t, 1, this._sourcePosition);
    }
    queue(t) {
      if (t === 10)
        for (; this._queueCursor !== 0; ) {
          let s = this._queue[this._queueCursor - 1].char;
          if (s !== 32 && s !== 9)
            break;
          this._queueCursor--;
        }
      let r = this._sourcePosition;
      this._pushQueue(t, 1, r.line, r.column, r.filename);
    }
    queueIndentation(t) {
      t !== 0 && this._pushQueue(-1, t, void 0, void 0, void 0);
    }
    _flush() {
      let t = this._queueCursor, r = this._queue;
      for (let s = 0; s < t; s++) {
        let n = r[s];
        this._appendChar(n.char, n.repeat, n);
      }
      this._queueCursor = 0;
    }
    _appendChar(t, r, s) {
      if (this._last = t, t === -1) {
        let n = this._fastIndentations[r];
        n !== void 0 ? this._str += n : this._str += r > 1 ? this._indentChar.repeat(r) : this._indentChar;
      } else
        this._str += r > 1 ? String.fromCharCode(t).repeat(r) : String.fromCharCode(t);
      t !== 10 ? (this._mark(s.line, s.column, s.identifierName, s.identifierNamePos, s.filename), this._position.column += r) : (this._position.
      line++, this._position.column = 0), this._canMarkIdName && (s.identifierName = void 0, s.identifierNamePos = void 0);
    }
    _append(t, r, s) {
      let n = t.length, a = this._position;
      if (this._last = t.charCodeAt(n - 1), ++this._appendCount > 4096 ? (+this._str, this._buf += this._str, this._str = t, this._appendCount =
      0) : this._str += t, !s && !this._map) {
        a.column += n;
        return;
      }
      let {
        column: o,
        identifierName: l,
        identifierNamePos: u,
        filename: c
      } = r, f = r.line;
      (l != null || u != null) && this._canMarkIdName && (r.identifierName = void 0, r.identifierNamePos = void 0);
      let p = t.indexOf(`
`), d = 0;
      for (p !== 0 && this._mark(f, o, l, u, c); p !== -1; )
        a.line++, a.column = 0, d = p + 1, d < n && f !== void 0 && this._mark(++f, 0, null, null, c), p = t.indexOf(`
`, d);
      a.column += n - d;
    }
    _mark(t, r, s, n, a) {
      var o;
      (o = this._map) == null || o.mark(this._position, t, r, s, n, a);
    }
    removeTrailingNewline() {
      let t = this._queueCursor;
      t !== 0 && this._queue[t - 1].char === 10 && this._queueCursor--;
    }
    removeLastSemicolon() {
      let t = this._queueCursor;
      t !== 0 && this._queue[t - 1].char === 59 && this._queueCursor--;
    }
    getLastChar() {
      let t = this._queueCursor;
      return t !== 0 ? this._queue[t - 1].char : this._last;
    }
    getNewlineCount() {
      let t = this._queueCursor, r = 0;
      if (t === 0) return this._last === 10 ? 1 : 0;
      for (let s = t - 1; s >= 0 && this._queue[s].char === 10; s--)
        r++;
      return r === t && this._last === 10 ? r + 1 : r;
    }
    endsWithCharAndNewline() {
      let t = this._queue, r = this._queueCursor;
      if (r !== 0)
        return t[r - 1].char !== 10 ? void 0 : r > 1 ? t[r - 2].char : this._last;
    }
    hasContent() {
      return this._queueCursor !== 0 || !!this._last;
    }
    exactSource(t, r) {
      if (!this._map) {
        r();
        return;
      }
      this.source("start", t);
      let s = t.identifierName, n = this._sourcePosition;
      s && (this._canMarkIdName = !1, n.identifierName = s), r(), s && (this._canMarkIdName = !0, n.identifierName = void 0, n.identifierNamePos =
      void 0), this.source("end", t);
    }
    source(t, r) {
      this._map && this._normalizePosition(t, r, 0);
    }
    sourceWithOffset(t, r, s) {
      this._map && this._normalizePosition(t, r, s);
    }
    withSource(t, r, s) {
      this._map && this.source(t, r), s();
    }
    _normalizePosition(t, r, s) {
      let n = r[t], a = this._sourcePosition;
      n && (a.line = n.line, a.column = Math.max(n.column + s, 0), a.filename = r.filename);
    }
    getCurrentColumn() {
      let t = this._queue, r = this._queueCursor, s = -1, n = 0;
      for (let a = 0; a < r; a++) {
        let o = t[a];
        o.char === 10 && (s = n), n += o.repeat;
      }
      return s === -1 ? this._position.column + n : n - 1 - s;
    }
    getCurrentLine() {
      let t = 0, r = this._queue;
      for (let s = 0; s < this._queueCursor; s++)
        r[s].char === 10 && t++;
      return this._position.line + t;
    }
  };
  od.default = ov;
});

// ../node_modules/@babel/generator/lib/node/whitespace.js
var $F = y((ud) => {
  "use strict";
  Object.defineProperty(ud, "__esModule", {
    value: !0
  });
  ud.nodes = void 0;
  var xge = Re(), {
    FLIPPED_ALIAS_KEYS: Pge,
    isArrayExpression: Age,
    isAssignmentExpression: MF,
    isBinary: jF,
    isBlockStatement: Cge,
    isCallExpression: qF,
    isFunction: sc,
    isIdentifier: ld,
    isLiteral: wge,
    isMemberExpression: lv,
    isObjectExpression: Dge,
    isOptionalCallExpression: Ige,
    isOptionalMemberExpression: _ge,
    isStringLiteral: Oge
  } = xge;
  function sl(e, t) {
    return e && (lv(e) || _ge(e) ? (sl(e.object, t), e.computed && sl(e.property, t)) : jF(e) || MF(e) ? (sl(e.left, t), sl(e.right, t)) : qF(
    e) || Ige(e) ? (t.hasCall = !0, sl(e.callee, t)) : sc(e) ? t.hasFunction = !0 : ld(e) && (t.hasHelper = t.hasHelper || e.callee && fi(e.
    callee))), t;
  }
  i(sl, "crawlInternal");
  function BF(e) {
    return sl(e, {
      hasCall: !1,
      hasFunction: !1,
      hasHelper: !1
    });
  }
  i(BF, "crawl");
  function fi(e) {
    return e ? lv(e) ? fi(e.object) || fi(e.property) : ld(e) ? e.name === "require" || e.name.charCodeAt(0) === 95 : qF(e) ? fi(e.callee) :
    jF(e) || MF(e) ? ld(e.left) && fi(e.left) || fi(e.right) : !1 : !1;
  }
  i(fi, "isHelper");
  function Nge(e) {
    return wge(e) || Dge(e) || Age(e) || ld(e) || lv(e);
  }
  i(Nge, "isType");
  var Xa = ud.nodes = {
    AssignmentExpression(e) {
      let t = BF(e.right);
      if (t.hasCall && t.hasHelper || t.hasFunction)
        return t.hasFunction ? 3 : 2;
    },
    SwitchCase(e, t) {
      return (e.consequent.length || t.cases[0] === e ? 1 : 0) | (!e.consequent.length && t.cases[t.cases.length - 1] === e ? 2 : 0);
    },
    LogicalExpression(e) {
      if (sc(e.left) || sc(e.right))
        return 2;
    },
    Literal(e) {
      if (Oge(e) && e.value === "use strict")
        return 2;
    },
    CallExpression(e) {
      if (sc(e.callee) || fi(e))
        return 3;
    },
    OptionalCallExpression(e) {
      if (sc(e.callee))
        return 3;
    },
    VariableDeclaration(e) {
      for (let t = 0; t < e.declarations.length; t++) {
        let r = e.declarations[t], s = fi(r.id) && !Nge(r.init);
        if (!s && r.init) {
          let n = BF(r.init);
          s = fi(r.init) && n.hasCall || n.hasFunction;
        }
        if (s)
          return 3;
      }
    },
    IfStatement(e) {
      if (Cge(e.consequent))
        return 3;
    }
  };
  Xa.ObjectProperty = Xa.ObjectTypeProperty = Xa.ObjectMethod = function(e, t) {
    if (t.properties[0] === e)
      return 1;
  };
  Xa.ObjectTypeCallProperty = function(e, t) {
    var r;
    if (t.callProperties[0] === e && !((r = t.properties) != null && r.length))
      return 1;
  };
  Xa.ObjectTypeIndexer = function(e, t) {
    var r, s;
    if (t.indexers[0] === e && !((r = t.properties) != null && r.length) && !((s = t.callProperties) != null && s.length))
      return 1;
  };
  Xa.ObjectTypeInternalSlot = function(e, t) {
    var r, s, n;
    if (t.internalSlots[0] === e && !((r = t.properties) != null && r.length) && !((s = t.callProperties) != null && s.length) && !((n = t.indexers) !=
    null && n.length))
      return 1;
  };
  [["Function", !0], ["Class", !0], ["Loop", !0], ["LabeledStatement", !0], ["SwitchStatement", !0], ["TryStatement", !0]].forEach(function([
  e, t]) {
    [e].concat(Pge[e] || []).forEach(function(r) {
      let s = t ? 3 : 0;
      Xa[r] = () => s;
    });
  });
});

// ../node_modules/@babel/generator/lib/node/parentheses.js
var GF = y((vt) => {
  "use strict";
  Object.defineProperty(vt, "__esModule", {
    value: !0
  });
  vt.ArrowFunctionExpression = obe;
  vt.AssignmentExpression = ube;
  vt.Binary = Xge;
  vt.BinaryExpression = rbe;
  vt.ClassExpression = ibe;
  vt.ConditionalExpression = uv;
  vt.DoExpression = Yge;
  vt.FunctionExpression = abe;
  vt.FunctionTypeAnnotation = Hge;
  vt.Identifier = fbe;
  vt.LogicalExpression = cbe;
  vt.NullableTypeAnnotation = Wge;
  vt.ObjectExpression = Kge;
  vt.OptionalIndexedAccessType = Jge;
  vt.OptionalCallExpression = vt.OptionalMemberExpression = lbe;
  vt.SequenceExpression = sbe;
  vt.TSTypeAssertion = vt.TSSatisfiesExpression = vt.TSAsExpression = Qge;
  vt.TSInferType = ebe;
  vt.TSInstantiationExpression = tbe;
  vt.TSIntersectionType = vt.TSUnionType = Zge;
  vt.UnaryLike = HF;
  vt.IntersectionTypeAnnotation = vt.UnionTypeAnnotation = zge;
  vt.UpdateExpression = Gge;
  vt.AwaitExpression = vt.YieldExpression = nbe;
  var Rge = Re(), {
    isArrayTypeAnnotation: kge,
    isArrowFunctionExpression: Fge,
    isBinaryExpression: Lge,
    isCallExpression: Bge,
    isExportDeclaration: Mge,
    isForOfStatement: jge,
    isIndexedAccessType: qge,
    isMemberExpression: VF,
    isObjectPattern: $ge,
    isOptionalMemberExpression: Uge,
    isYieldExpression: Vge
  } = Rge, UF = /* @__PURE__ */ new Map([["||", 0], ["??", 0], ["|>", 0], ["&&", 1], ["|", 2], ["^", 3], ["&", 4], ["==", 5], ["===", 5], ["\
!=", 5], ["!==", 5], ["<", 6], [">", 6], ["<=", 6], [">=", 6], ["in", 6], ["instanceof", 6], [">>", 7], ["<<", 7], [">>>", 7], ["+", 8], ["-",
  8], ["*", 9], ["/", 9], ["%", 9], ["**", 10]]);
  function WF(e) {
    return e === "TSAsExpression" || e === "TSSatisfiesExpression" || e === "TSTypeAssertion";
  }
  i(WF, "isTSTypeExpression");
  var cd = /* @__PURE__ */ i((e, t) => {
    let r = t.type;
    return (r === "ClassDeclaration" || r === "ClassExpression") && t.superClass === e;
  }, "isClassExtendsClause"), nc = /* @__PURE__ */ i((e, t) => {
    let r = t.type;
    return (r === "MemberExpression" || r === "OptionalMemberExpression") && t.object === e || (r === "CallExpression" || r === "OptionalCal\
lExpression" || r === "NewExpression") && t.callee === e || r === "TaggedTemplateExpression" && t.tag === e || r === "TSNonNullExpression";
  }, "hasPostfixPart");
  function Wge(e, t) {
    return kge(t);
  }
  i(Wge, "NullableTypeAnnotation");
  function Hge(e, t, r) {
    if (r.length < 3) return;
    let s = t.type;
    return s === "UnionTypeAnnotation" || s === "IntersectionTypeAnnotation" || s === "ArrayTypeAnnotation" || s === "TypeAnnotation" && Fge(
    r[r.length - 3]);
  }
  i(Hge, "FunctionTypeAnnotation");
  function Gge(e, t) {
    return nc(e, t) || cd(e, t);
  }
  i(Gge, "UpdateExpression");
  function Kge(e, t, r) {
    return ic(r, 3);
  }
  i(Kge, "ObjectExpression");
  function Yge(e, t, r) {
    return !e.async && ic(r, 1);
  }
  i(Yge, "DoExpression");
  function Xge(e, t) {
    let r = t.type;
    if (e.operator === "**" && r === "BinaryExpression" && t.operator === "**")
      return t.left === e;
    if (cd(e, t) || nc(e, t) || r === "UnaryExpression" || r === "SpreadElement" || r === "AwaitExpression")
      return !0;
    if (r === "BinaryExpression" || r === "LogicalExpression") {
      let s = UF.get(t.operator), n = UF.get(e.operator);
      if (s === n && t.right === e && r !== "LogicalExpression" || s > n)
        return !0;
    }
  }
  i(Xge, "Binary");
  function zge(e, t) {
    let r = t.type;
    return r === "ArrayTypeAnnotation" || r === "NullableTypeAnnotation" || r === "IntersectionTypeAnnotation" || r === "UnionTypeAnnotation";
  }
  i(zge, "UnionTypeAnnotation");
  function Jge(e, t) {
    return qge(t) && t.objectType === e;
  }
  i(Jge, "OptionalIndexedAccessType");
  function Qge() {
    return !0;
  }
  i(Qge, "TSAsExpression");
  function Zge(e, t) {
    let r = t.type;
    return r === "TSArrayType" || r === "TSOptionalType" || r === "TSIntersectionType" || r === "TSUnionType" || r === "TSRestType";
  }
  i(Zge, "TSUnionType");
  function ebe(e, t) {
    let r = t.type;
    return r === "TSArrayType" || r === "TSOptionalType";
  }
  i(ebe, "TSInferType");
  function tbe(e, t) {
    let r = t.type;
    return (r === "CallExpression" || r === "OptionalCallExpression" || r === "NewExpression" || r === "TSInstantiationExpression") && !!t.typeParameters;
  }
  i(tbe, "TSInstantiationExpression");
  function rbe(e, t) {
    if (e.operator === "in") {
      let r = t.type;
      return r === "VariableDeclarator" || r === "ForStatement" || r === "ForInStatement" || r === "ForOfStatement";
    }
    return !1;
  }
  i(rbe, "BinaryExpression");
  function sbe(e, t) {
    let r = t.type;
    return !(r === "ForStatement" || r === "ThrowStatement" || r === "ReturnStatement" || r === "IfStatement" && t.test === e || r === "Whil\
eStatement" && t.test === e || r === "ForInStatement" && t.right === e || r === "SwitchStatement" && t.discriminant === e || r === "Expressi\
onStatement" && t.expression === e);
  }
  i(sbe, "SequenceExpression");
  function nbe(e, t) {
    let r = t.type;
    return r === "BinaryExpression" || r === "LogicalExpression" || r === "UnaryExpression" || r === "SpreadElement" || nc(e, t) || r === "A\
waitExpression" && Vge(e) || r === "ConditionalExpression" && e === t.test || cd(e, t);
  }
  i(nbe, "YieldExpression");
  function ibe(e, t, r) {
    return ic(r, 5);
  }
  i(ibe, "ClassExpression");
  function HF(e, t) {
    return nc(e, t) || Lge(t) && t.operator === "**" && t.left === e || cd(e, t);
  }
  i(HF, "UnaryLike");
  function abe(e, t, r) {
    return ic(r, 5);
  }
  i(abe, "FunctionExpression");
  function obe(e, t) {
    return Mge(t) || uv(e, t);
  }
  i(obe, "ArrowFunctionExpression");
  function uv(e, t) {
    let r = t.type;
    return r === "UnaryExpression" || r === "SpreadElement" || r === "BinaryExpression" || r === "LogicalExpression" || r === "ConditionalEx\
pression" && t.test === e || r === "AwaitExpression" || WF(r) ? !0 : HF(e, t);
  }
  i(uv, "ConditionalExpression");
  function lbe(e, t) {
    return Bge(t) && t.callee === e || VF(t) && t.object === e;
  }
  i(lbe, "OptionalMemberExpression");
  function ube(e, t) {
    return $ge(e.left) ? !0 : uv(e, t);
  }
  i(ube, "AssignmentExpression");
  function cbe(e, t) {
    let r = t.type;
    if (WF(r)) return !0;
    if (r !== "LogicalExpression") return !1;
    switch (e.operator) {
      case "||":
        return t.operator === "??" || t.operator === "&&";
      case "&&":
        return t.operator === "??";
      case "??":
        return t.operator !== "??";
    }
  }
  i(cbe, "LogicalExpression");
  function fbe(e, t, r) {
    var s;
    let n = t.type;
    if ((s = e.extra) != null && s.parenthesized && n === "AssignmentExpression" && t.left === e) {
      let a = t.right.type;
      if ((a === "FunctionExpression" || a === "ClassExpression") && t.right.id == null)
        return !0;
    }
    if (e.name === "let") {
      let a = VF(t, {
        object: e,
        computed: !0
      }) || Uge(t, {
        object: e,
        computed: !0,
        optional: !1
      });
      return ic(r, a ? 57 : 32);
    }
    return e.name === "async" && jge(t) && e === t.left;
  }
  i(fbe, "Identifier");
  function ic(e, t) {
    let r = t & 1, s = t & 2, n = t & 4, a = t & 8, o = t & 16, l = t & 32, u = e.length - 1;
    if (u <= 0) return;
    let c = e[u];
    u--;
    let f = e[u];
    for (; u >= 0; ) {
      let p = f.type;
      if (r && p === "ExpressionStatement" && f.expression === c || n && p === "ExportDefaultDeclaration" && c === f.declaration || s && p ===
      "ArrowFunctionExpression" && f.body === c || a && p === "ForStatement" && f.init === c || o && p === "ForInStatement" && f.left === c ||
      l && p === "ForOfStatement" && f.left === c)
        return !0;
      if (u > 0 && (nc(c, f) && p !== "NewExpression" || p === "SequenceExpression" && f.expressions[0] === c || p === "UpdateExpression" &&
      !f.prefix || p === "ConditionalExpression" && f.test === c || (p === "BinaryExpression" || p === "LogicalExpression") && f.left === c ||
      p === "AssignmentExpression" && f.left === c))
        c = f, u--, f = e[u];
      else
        return !1;
    }
    return !1;
  }
  i(ic, "isFirstInContext");
});

// ../node_modules/@babel/generator/lib/node/index.js
var fv = y((nl) => {
  "use strict";
  Object.defineProperty(nl, "__esModule", {
    value: !0
  });
  nl.needsParens = Pbe;
  nl.needsWhitespace = cv;
  nl.needsWhitespaceAfter = xbe;
  nl.needsWhitespaceBefore = Tbe;
  var pbe = $F(), dbe = GF(), hbe = Re(), {
    FLIPPED_ALIAS_KEYS: mbe,
    isCallExpression: ybe,
    isExpressionStatement: gbe,
    isMemberExpression: bbe,
    isNewExpression: Ebe
  } = hbe;
  function KF(e) {
    let t = /* @__PURE__ */ new Map();
    function r(s, n) {
      let a = t.get(s);
      t.set(s, a ? function(o, l, u) {
        var c;
        return (c = a(o, l, u)) != null ? c : n(o, l, u);
      } : n);
    }
    i(r, "add");
    for (let s of Object.keys(e)) {
      let n = mbe[s];
      if (n)
        for (let a of n)
          r(a, e[s]);
      else
        r(s, e[s]);
    }
    return t;
  }
  i(KF, "expandAliases");
  var vbe = KF(dbe), Sbe = KF(pbe.nodes);
  function YF(e) {
    return ybe(e) ? !0 : bbe(e) && YF(e.object);
  }
  i(YF, "isOrHasCallExpression");
  function cv(e, t, r) {
    var s;
    if (!e) return !1;
    gbe(e) && (e = e.expression);
    let n = (s = Sbe.get(e.type)) == null ? void 0 : s(e, t);
    return typeof n == "number" ? (n & r) !== 0 : !1;
  }
  i(cv, "needsWhitespace");
  function Tbe(e, t) {
    return cv(e, t, 1);
  }
  i(Tbe, "needsWhitespaceBefore");
  function xbe(e, t) {
    return cv(e, t, 2);
  }
  i(xbe, "needsWhitespaceAfter");
  function Pbe(e, t, r) {
    var s;
    return t ? Ebe(t) && t.callee === e && YF(e) ? !0 : (s = vbe.get(e.type)) == null ? void 0 : s(e, t, r) : !1;
  }
  i(Pbe, "needsParens");
});

// ../node_modules/@babel/generator/lib/generators/template-literals.js
var XF = y((ac) => {
  "use strict";
  Object.defineProperty(ac, "__esModule", {
    value: !0
  });
  ac.TaggedTemplateExpression = Abe;
  ac.TemplateElement = Cbe;
  ac.TemplateLiteral = wbe;
  function Abe(e) {
    this.print(e.tag, e), this.print(e.typeParameters, e), this.print(e.quasi, e);
  }
  i(Abe, "TaggedTemplateExpression");
  function Cbe(e, t) {
    let r = t.quasis[0] === e, s = t.quasis[t.quasis.length - 1] === e, n = (r ? "`" : "}") + e.value.raw + (s ? "`" : "${");
    this.token(n, !0);
  }
  i(Cbe, "TemplateElement");
  function wbe(e) {
    let t = e.quasis;
    for (let r = 0; r < t.length; r++)
      this.print(t[r], e), r + 1 < t.length && this.print(e.expressions[r], e);
  }
  i(wbe, "TemplateLiteral");
});

// ../node_modules/@babel/generator/lib/generators/expressions.js
var QF = y((At) => {
  "use strict";
  Object.defineProperty(At, "__esModule", {
    value: !0
  });
  At.LogicalExpression = At.BinaryExpression = At.AssignmentExpression = Zbe;
  At.AssignmentPattern = Qbe;
  At.AwaitExpression = Ybe;
  At.BindExpression = eEe;
  At.CallExpression = Gbe;
  At.ConditionalExpression = Lbe;
  At.Decorator = Vbe;
  At.DoExpression = Rbe;
  At.EmptyStatement = zbe;
  At.ExpressionStatement = Jbe;
  At.Import = Kbe;
  At.MemberExpression = tEe;
  At.MetaProperty = rEe;
  At.ModuleExpression = iEe;
  At.NewExpression = Bbe;
  At.OptionalCallExpression = Hbe;
  At.OptionalMemberExpression = Wbe;
  At.ParenthesizedExpression = kbe;
  At.PrivateName = sEe;
  At.SequenceExpression = Mbe;
  At.Super = qbe;
  At.ThisExpression = jbe;
  At.UnaryExpression = Nbe;
  At.UpdateExpression = Fbe;
  At.V8IntrinsicIdentifier = nEe;
  At.YieldExpression = Xbe;
  At._shouldPrintDecoratorsBeforeExport = Ube;
  var Dbe = Re(), Ibe = fv(), {
    isCallExpression: _be,
    isLiteral: zF,
    isMemberExpression: pv,
    isNewExpression: Obe
  } = Dbe;
  function Nbe(e) {
    let {
      operator: t
    } = e;
    t === "void" || t === "delete" || t === "typeof" || t === "throw" ? (this.word(t), this.space()) : this.token(t), this.print(e.argument,
    e);
  }
  i(Nbe, "UnaryExpression");
  function Rbe(e) {
    e.async && (this.word("async", !0), this.space()), this.word("do"), this.space(), this.print(e.body, e);
  }
  i(Rbe, "DoExpression");
  function kbe(e) {
    this.tokenChar(40), this.print(e.expression, e), this.rightParens(e);
  }
  i(kbe, "ParenthesizedExpression");
  function Fbe(e) {
    e.prefix ? (this.token(e.operator), this.print(e.argument, e)) : (this.printTerminatorless(e.argument, e, !0), this.token(e.operator));
  }
  i(Fbe, "UpdateExpression");
  function Lbe(e) {
    this.print(e.test, e), this.space(), this.tokenChar(63), this.space(), this.print(e.consequent, e), this.space(), this.tokenChar(58), this.
    space(), this.print(e.alternate, e);
  }
  i(Lbe, "ConditionalExpression");
  function Bbe(e, t) {
    this.word("new"), this.space(), this.print(e.callee, e), !(this.format.minified && e.arguments.length === 0 && !e.optional && !_be(t, {
      callee: e
    }) && !pv(t) && !Obe(t)) && (this.print(e.typeArguments, e), this.print(e.typeParameters, e), e.optional && this.token("?."), this.tokenChar(
    40), this.printList(e.arguments, e), this.rightParens(e));
  }
  i(Bbe, "NewExpression");
  function Mbe(e) {
    this.printList(e.expressions, e);
  }
  i(Mbe, "SequenceExpression");
  function jbe() {
    this.word("this");
  }
  i(jbe, "ThisExpression");
  function qbe() {
    this.word("super");
  }
  i(qbe, "Super");
  function JF(e) {
    switch (e.type) {
      case "Identifier":
        return !0;
      case "MemberExpression":
        return !e.computed && e.property.type === "Identifier" && JF(e.object);
      default:
        return !1;
    }
  }
  i(JF, "isDecoratorMemberExpression");
  function $be(e) {
    return e.type === "ParenthesizedExpression" ? !1 : !JF(e.type === "CallExpression" ? e.callee : e);
  }
  i($be, "shouldParenthesizeDecoratorExpression");
  function Ube(e) {
    return typeof this.format.decoratorsBeforeExport == "boolean" ? this.format.decoratorsBeforeExport : typeof e.start == "number" && e.start ===
    e.declaration.start;
  }
  i(Ube, "_shouldPrintDecoratorsBeforeExport");
  function Vbe(e) {
    this.tokenChar(64);
    let {
      expression: t
    } = e;
    $be(t) ? (this.tokenChar(40), this.print(t, e), this.tokenChar(41)) : this.print(t, e), this.newline();
  }
  i(Vbe, "Decorator");
  function Wbe(e) {
    let {
      computed: t
    } = e, {
      optional: r,
      property: s
    } = e;
    if (this.print(e.object, e), !t && pv(s))
      throw new TypeError("Got a MemberExpression for MemberExpression property");
    zF(s) && typeof s.value == "number" && (t = !0), r && this.token("?."), t ? (this.tokenChar(91), this.print(s, e), this.tokenChar(93)) :
    (r || this.tokenChar(46), this.print(s, e));
  }
  i(Wbe, "OptionalMemberExpression");
  function Hbe(e) {
    this.print(e.callee, e), this.print(e.typeParameters, e), e.optional && this.token("?."), this.print(e.typeArguments, e), this.tokenChar(
    40), this.printList(e.arguments, e), this.rightParens(e);
  }
  i(Hbe, "OptionalCallExpression");
  function Gbe(e) {
    this.print(e.callee, e), this.print(e.typeArguments, e), this.print(e.typeParameters, e), this.tokenChar(40), this.printList(e.arguments,
    e), this.rightParens(e);
  }
  i(Gbe, "CallExpression");
  function Kbe() {
    this.word("import");
  }
  i(Kbe, "Import");
  function Ybe(e) {
    this.word("await"), e.argument && (this.space(), this.printTerminatorless(e.argument, e, !1));
  }
  i(Ybe, "AwaitExpression");
  function Xbe(e) {
    this.word("yield", !0), e.delegate ? (this.tokenChar(42), e.argument && (this.space(), this.print(e.argument, e))) : e.argument && (this.
    space(), this.printTerminatorless(e.argument, e, !1));
  }
  i(Xbe, "YieldExpression");
  function zbe() {
    this.semicolon(!0);
  }
  i(zbe, "EmptyStatement");
  function Jbe(e) {
    this.print(e.expression, e), this.semicolon();
  }
  i(Jbe, "ExpressionStatement");
  function Qbe(e) {
    this.print(e.left, e), e.left.optional && this.tokenChar(63), this.print(e.left.typeAnnotation, e), this.space(), this.tokenChar(61), this.
    space(), this.print(e.right, e);
  }
  i(Qbe, "AssignmentPattern");
  function Zbe(e, t) {
    let r = this.inForStatementInitCounter && e.operator === "in" && !Ibe.needsParens(e, t);
    r && this.tokenChar(40), this.print(e.left, e), this.space(), e.operator === "in" || e.operator === "instanceof" ? this.word(e.operator) :
    this.token(e.operator), this.space(), this.print(e.right, e), r && this.tokenChar(41);
  }
  i(Zbe, "AssignmentExpression");
  function eEe(e) {
    this.print(e.object, e), this.token("::"), this.print(e.callee, e);
  }
  i(eEe, "BindExpression");
  function tEe(e) {
    if (this.print(e.object, e), !e.computed && pv(e.property))
      throw new TypeError("Got a MemberExpression for MemberExpression property");
    let t = e.computed;
    zF(e.property) && typeof e.property.value == "number" && (t = !0), t ? (this.tokenChar(91), this.print(e.property, e), this.tokenChar(93)) :
    (this.tokenChar(46), this.print(e.property, e));
  }
  i(tEe, "MemberExpression");
  function rEe(e) {
    this.print(e.meta, e), this.tokenChar(46), this.print(e.property, e);
  }
  i(rEe, "MetaProperty");
  function sEe(e) {
    this.tokenChar(35), this.print(e.id, e);
  }
  i(sEe, "PrivateName");
  function nEe(e) {
    this.tokenChar(37), this.word(e.name);
  }
  i(nEe, "V8IntrinsicIdentifier");
  function iEe(e) {
    this.word("module", !0), this.space(), this.tokenChar(123), this.indent();
    let {
      body: t
    } = e;
    (t.body.length || t.directives.length) && this.newline(), this.print(t, e), this.dedent(), this.rightBrace(e);
  }
  i(iEe, "ModuleExpression");
});

// ../node_modules/@babel/generator/lib/generators/statements.js
var rL = y((ir) => {
  "use strict";
  Object.defineProperty(ir, "__esModule", {
    value: !0
  });
  ir.BreakStatement = mEe;
  ir.CatchClause = SEe;
  ir.ContinueStatement = yEe;
  ir.DebuggerStatement = PEe;
  ir.DoWhileStatement = hEe;
  ir.ForOfStatement = ir.ForInStatement = void 0;
  ir.ForStatement = pEe;
  ir.IfStatement = fEe;
  ir.LabeledStatement = EEe;
  ir.ReturnStatement = gEe;
  ir.SwitchCase = xEe;
  ir.SwitchStatement = TEe;
  ir.ThrowStatement = bEe;
  ir.TryStatement = vEe;
  ir.VariableDeclaration = AEe;
  ir.VariableDeclarator = CEe;
  ir.WhileStatement = dEe;
  ir.WithStatement = cEe;
  var aEe = Re(), {
    isFor: ZF,
    isForStatement: oEe,
    isIfStatement: lEe,
    isStatement: uEe
  } = aEe;
  function cEe(e) {
    this.word("with"), this.space(), this.tokenChar(40), this.print(e.object, e), this.tokenChar(41), this.printBlock(e);
  }
  i(cEe, "WithStatement");
  function fEe(e) {
    this.word("if"), this.space(), this.tokenChar(40), this.print(e.test, e), this.tokenChar(41), this.space();
    let t = e.alternate && lEe(eL(e.consequent));
    t && (this.tokenChar(123), this.newline(), this.indent()), this.printAndIndentOnComments(e.consequent, e), t && (this.dedent(), this.newline(),
    this.tokenChar(125)), e.alternate && (this.endsWith(125) && this.space(), this.word("else"), this.space(), this.printAndIndentOnComments(
    e.alternate, e));
  }
  i(fEe, "IfStatement");
  function eL(e) {
    let {
      body: t
    } = e;
    return uEe(t) === !1 ? e : eL(t);
  }
  i(eL, "getLastStatement");
  function pEe(e) {
    this.word("for"), this.space(), this.tokenChar(40), this.inForStatementInitCounter++, this.print(e.init, e), this.inForStatementInitCounter--,
    this.tokenChar(59), e.test && (this.space(), this.print(e.test, e)), this.tokenChar(59), e.update && (this.space(), this.print(e.update,
    e)), this.tokenChar(41), this.printBlock(e);
  }
  i(pEe, "ForStatement");
  function dEe(e) {
    this.word("while"), this.space(), this.tokenChar(40), this.print(e.test, e), this.tokenChar(41), this.printBlock(e);
  }
  i(dEe, "WhileStatement");
  function tL(e) {
    this.word("for"), this.space();
    let t = e.type === "ForOfStatement";
    t && e.await && (this.word("await"), this.space()), this.noIndentInnerCommentsHere(), this.tokenChar(40), this.print(e.left, e), this.space(),
    this.word(t ? "of" : "in"), this.space(), this.print(e.right, e), this.tokenChar(41), this.printBlock(e);
  }
  i(tL, "ForXStatement");
  var bet = ir.ForInStatement = tL, Eet = ir.ForOfStatement = tL;
  function hEe(e) {
    this.word("do"), this.space(), this.print(e.body, e), this.space(), this.word("while"), this.space(), this.tokenChar(40), this.print(e.test,
    e), this.tokenChar(41), this.semicolon();
  }
  i(hEe, "DoWhileStatement");
  function fd(e, t, r, s) {
    t && (e.space(), e.printTerminatorless(t, r, s)), e.semicolon();
  }
  i(fd, "printStatementAfterKeyword");
  function mEe(e) {
    this.word("break"), fd(this, e.label, e, !0);
  }
  i(mEe, "BreakStatement");
  function yEe(e) {
    this.word("continue"), fd(this, e.label, e, !0);
  }
  i(yEe, "ContinueStatement");
  function gEe(e) {
    this.word("return"), fd(this, e.argument, e, !1);
  }
  i(gEe, "ReturnStatement");
  function bEe(e) {
    this.word("throw"), fd(this, e.argument, e, !1);
  }
  i(bEe, "ThrowStatement");
  function EEe(e) {
    this.print(e.label, e), this.tokenChar(58), this.space(), this.print(e.body, e);
  }
  i(EEe, "LabeledStatement");
  function vEe(e) {
    this.word("try"), this.space(), this.print(e.block, e), this.space(), e.handlers ? this.print(e.handlers[0], e) : this.print(e.handler, e),
    e.finalizer && (this.space(), this.word("finally"), this.space(), this.print(e.finalizer, e));
  }
  i(vEe, "TryStatement");
  function SEe(e) {
    this.word("catch"), this.space(), e.param && (this.tokenChar(40), this.print(e.param, e), this.print(e.param.typeAnnotation, e), this.tokenChar(
    41), this.space()), this.print(e.body, e);
  }
  i(SEe, "CatchClause");
  function TEe(e) {
    this.word("switch"), this.space(), this.tokenChar(40), this.print(e.discriminant, e), this.tokenChar(41), this.space(), this.tokenChar(123),
    this.printSequence(e.cases, e, {
      indent: !0,
      addNewlines(t, r) {
        if (!t && e.cases[e.cases.length - 1] === r) return -1;
      }
    }), this.rightBrace(e);
  }
  i(TEe, "SwitchStatement");
  function xEe(e) {
    e.test ? (this.word("case"), this.space(), this.print(e.test, e), this.tokenChar(58)) : (this.word("default"), this.tokenChar(58)), e.consequent.
    length && (this.newline(), this.printSequence(e.consequent, e, {
      indent: !0
    }));
  }
  i(xEe, "SwitchCase");
  function PEe() {
    this.word("debugger"), this.semicolon();
  }
  i(PEe, "DebuggerStatement");
  function AEe(e, t) {
    e.declare && (this.word("declare"), this.space());
    let {
      kind: r
    } = e;
    this.word(r, r === "using" || r === "await using"), this.space();
    let s = !1;
    if (!ZF(t))
      for (let n of e.declarations)
        n.init && (s = !0);
    if (this.printList(e.declarations, e, {
      separator: s ? function() {
        this.tokenChar(44), this.newline();
      } : void 0,
      indent: e.declarations.length > 1
    }), ZF(t)) {
      if (oEe(t)) {
        if (t.init === e) return;
      } else if (t.left === e) return;
    }
    this.semicolon();
  }
  i(AEe, "VariableDeclaration");
  function CEe(e) {
    this.print(e.id, e), e.definite && this.tokenChar(33), this.print(e.id.typeAnnotation, e), e.init && (this.space(), this.tokenChar(61), this.
    space(), this.print(e.init, e));
  }
  i(CEe, "VariableDeclarator");
});

// ../node_modules/@babel/generator/lib/generators/classes.js
var sL = y((Ms) => {
  "use strict";
  Object.defineProperty(Ms, "__esModule", {
    value: !0
  });
  Ms.ClassAccessorProperty = REe;
  Ms.ClassBody = OEe;
  Ms.ClassExpression = Ms.ClassDeclaration = _Ee;
  Ms.ClassMethod = FEe;
  Ms.ClassPrivateMethod = LEe;
  Ms.ClassPrivateProperty = kEe;
  Ms.ClassProperty = NEe;
  Ms.StaticBlock = MEe;
  Ms._classMethodHead = BEe;
  var wEe = Re(), {
    isExportDefaultDeclaration: DEe,
    isExportNamedDeclaration: IEe
  } = wEe;
  function _Ee(e, t) {
    (!(DEe(t) || IEe(t)) || !this._shouldPrintDecoratorsBeforeExport(t)) && this.printJoin(e.decorators, e), e.declare && (this.word("declar\
e"), this.space()), e.abstract && (this.word("abstract"), this.space()), this.word("class"), e.id && (this.space(), this.print(e.id, e)), this.
    print(e.typeParameters, e), e.superClass && (this.space(), this.word("extends"), this.space(), this.print(e.superClass, e), this.print(e.
    superTypeParameters, e)), e.implements && (this.space(), this.word("implements"), this.space(), this.printList(e.implements, e)), this.space(),
    this.print(e.body, e);
  }
  i(_Ee, "ClassDeclaration");
  function OEe(e) {
    this.tokenChar(123), e.body.length === 0 ? this.tokenChar(125) : (this.newline(), this.printSequence(e.body, e, {
      indent: !0
    }), this.endsWith(10) || this.newline(), this.rightBrace(e));
  }
  i(OEe, "ClassBody");
  function NEe(e) {
    var t;
    this.printJoin(e.decorators, e);
    let r = (t = e.key.loc) == null || (t = t.end) == null ? void 0 : t.line;
    r && this.catchUp(r), this.tsPrintClassMemberModifiers(e), e.computed ? (this.tokenChar(91), this.print(e.key, e), this.tokenChar(93)) :
    (this._variance(e), this.print(e.key, e)), e.optional && this.tokenChar(63), e.definite && this.tokenChar(33), this.print(e.typeAnnotation,
    e), e.value && (this.space(), this.tokenChar(61), this.space(), this.print(e.value, e)), this.semicolon();
  }
  i(NEe, "ClassProperty");
  function REe(e) {
    var t;
    this.printJoin(e.decorators, e);
    let r = (t = e.key.loc) == null || (t = t.end) == null ? void 0 : t.line;
    r && this.catchUp(r), this.tsPrintClassMemberModifiers(e), this.word("accessor", !0), this.space(), e.computed ? (this.tokenChar(91), this.
    print(e.key, e), this.tokenChar(93)) : (this._variance(e), this.print(e.key, e)), e.optional && this.tokenChar(63), e.definite && this.tokenChar(
    33), this.print(e.typeAnnotation, e), e.value && (this.space(), this.tokenChar(61), this.space(), this.print(e.value, e)), this.semicolon();
  }
  i(REe, "ClassAccessorProperty");
  function kEe(e) {
    this.printJoin(e.decorators, e), e.static && (this.word("static"), this.space()), this.print(e.key, e), this.print(e.typeAnnotation, e),
    e.value && (this.space(), this.tokenChar(61), this.space(), this.print(e.value, e)), this.semicolon();
  }
  i(kEe, "ClassPrivateProperty");
  function FEe(e) {
    this._classMethodHead(e), this.space(), this.print(e.body, e);
  }
  i(FEe, "ClassMethod");
  function LEe(e) {
    this._classMethodHead(e), this.space(), this.print(e.body, e);
  }
  i(LEe, "ClassPrivateMethod");
  function BEe(e) {
    var t;
    this.printJoin(e.decorators, e);
    let r = (t = e.key.loc) == null || (t = t.end) == null ? void 0 : t.line;
    r && this.catchUp(r), this.tsPrintClassMemberModifiers(e), this._methodHead(e);
  }
  i(BEe, "_classMethodHead");
  function MEe(e) {
    this.word("static"), this.space(), this.tokenChar(123), e.body.length === 0 ? this.tokenChar(125) : (this.newline(), this.printSequence(
    e.body, e, {
      indent: !0
    }), this.rightBrace(e));
  }
  i(MEe, "StaticBlock");
});

// ../node_modules/@babel/generator/lib/generators/methods.js
var nL = y((cn) => {
  "use strict";
  Object.defineProperty(cn, "__esModule", {
    value: !0
  });
  cn.ArrowFunctionExpression = YEe;
  cn.FunctionDeclaration = cn.FunctionExpression = KEe;
  cn._functionHead = GEe;
  cn._methodHead = WEe;
  cn._param = VEe;
  cn._parameters = UEe;
  cn._params = $Ee;
  cn._predicate = HEe;
  var jEe = Re(), {
    isIdentifier: qEe
  } = jEe;
  function $Ee(e, t, r) {
    this.print(e.typeParameters, e);
    let s = zEe.call(this, t, r);
    s && this.sourceIdentifierName(s.name, s.pos), this.tokenChar(40), this._parameters(e.params, e), this.tokenChar(41);
    let n = e.type === "ArrowFunctionExpression";
    this.print(e.returnType, e, n), this._noLineTerminator = n;
  }
  i($Ee, "_params");
  function UEe(e, t) {
    let r = e.length;
    for (let s = 0; s < r; s++)
      this._param(e[s], t), s < e.length - 1 && (this.tokenChar(44), this.space());
  }
  i(UEe, "_parameters");
  function VEe(e, t) {
    this.printJoin(e.decorators, e), this.print(e, t), e.optional && this.tokenChar(63), this.print(e.typeAnnotation, e);
  }
  i(VEe, "_param");
  function WEe(e) {
    let t = e.kind, r = e.key;
    (t === "get" || t === "set") && (this.word(t), this.space()), e.async && (this.word("async", !0), this.space()), (t === "method" || t ===
    "init") && e.generator && this.tokenChar(42), e.computed ? (this.tokenChar(91), this.print(r, e), this.tokenChar(93)) : this.print(r, e),
    e.optional && this.tokenChar(63), this._params(e, e.computed && e.key.type !== "StringLiteral" ? void 0 : e.key, void 0);
  }
  i(WEe, "_methodHead");
  function HEe(e, t) {
    e.predicate && (e.returnType || this.tokenChar(58), this.space(), this.print(e.predicate, e, t));
  }
  i(HEe, "_predicate");
  function GEe(e, t) {
    e.async && (this.word("async"), this._endsWithInnerRaw = !1, this.space()), this.word("function"), e.generator && (this._endsWithInnerRaw =
    !1, this.tokenChar(42)), this.space(), e.id && this.print(e.id, e), this._params(e, e.id, t), e.type !== "TSDeclareFunction" && this._predicate(
    e);
  }
  i(GEe, "_functionHead");
  function KEe(e, t) {
    this._functionHead(e, t), this.space(), this.print(e.body, e);
  }
  i(KEe, "FunctionExpression");
  function YEe(e, t) {
    e.async && (this.word("async", !0), this.space());
    let r;
    !this.format.retainLines && e.params.length === 1 && qEe(r = e.params[0]) && !XEe(e, r) ? this.print(r, e, !0) : this._params(e, void 0,
    t), this._predicate(e, !0), this.space(), this.printInnerComments(), this.token("=>"), this.space(), this.print(e.body, e);
  }
  i(YEe, "ArrowFunctionExpression");
  function XEe(e, t) {
    var r, s;
    return !!(e.typeParameters || e.returnType || e.predicate || t.typeAnnotation || t.optional || (r = t.leadingComments) != null && r.length ||
    (s = t.trailingComments) != null && s.length);
  }
  i(XEe, "hasTypesOrComments");
  function zEe(e, t) {
    let r = e;
    if (!r && t) {
      let u = t.type;
      u === "VariableDeclarator" ? r = t.id : u === "AssignmentExpression" || u === "AssignmentPattern" ? r = t.left : u === "ObjectProperty" ||
      u === "ClassProperty" ? (!t.computed || t.key.type === "StringLiteral") && (r = t.key) : (u === "ClassPrivateProperty" || u === "Class\
AccessorProperty") && (r = t.key);
    }
    if (!r) return;
    let s;
    if (r.type === "Identifier") {
      var n, a;
      s = {
        pos: (n = r.loc) == null ? void 0 : n.start,
        name: ((a = r.loc) == null ? void 0 : a.identifierName) || r.name
      };
    } else if (r.type === "PrivateName") {
      var o;
      s = {
        pos: (o = r.loc) == null ? void 0 : o.start,
        name: "#" + r.id.name
      };
    } else if (r.type === "StringLiteral") {
      var l;
      s = {
        pos: (l = r.loc) == null ? void 0 : l.start,
        name: r.value
      };
    }
    return s;
  }
  i(zEe, "_getFuncIdName");
});

// ../node_modules/@babel/generator/lib/generators/modules.js
var dv = y((as) => {
  "use strict";
  Object.defineProperty(as, "__esModule", {
    value: !0
  });
  as.ExportAllDeclaration = uve;
  as.ExportDefaultDeclaration = fve;
  as.ExportDefaultSpecifier = ive;
  as.ExportNamedDeclaration = cve;
  as.ExportNamespaceSpecifier = ove;
  as.ExportSpecifier = ave;
  as.ImportAttribute = dve;
  as.ImportDeclaration = pve;
  as.ImportDefaultSpecifier = nve;
  as.ImportExpression = mve;
  as.ImportNamespaceSpecifier = hve;
  as.ImportSpecifier = sve;
  as._printAttributes = lve;
  var JEe = Re(), {
    isClassDeclaration: QEe,
    isExportDefaultSpecifier: ZEe,
    isExportNamespaceSpecifier: eve,
    isImportDefaultSpecifier: tve,
    isImportNamespaceSpecifier: rve,
    isStatement: aL
  } = JEe;
  function sve(e) {
    (e.importKind === "type" || e.importKind === "typeof") && (this.word(e.importKind), this.space()), this.print(e.imported, e), e.local &&
    e.local.name !== e.imported.name && (this.space(), this.word("as"), this.space(), this.print(e.local, e));
  }
  i(sve, "ImportSpecifier");
  function nve(e) {
    this.print(e.local, e);
  }
  i(nve, "ImportDefaultSpecifier");
  function ive(e) {
    this.print(e.exported, e);
  }
  i(ive, "ExportDefaultSpecifier");
  function ave(e) {
    e.exportKind === "type" && (this.word("type"), this.space()), this.print(e.local, e), e.exported && e.local.name !== e.exported.name && (this.
    space(), this.word("as"), this.space(), this.print(e.exported, e));
  }
  i(ave, "ExportSpecifier");
  function ove(e) {
    this.tokenChar(42), this.space(), this.word("as"), this.space(), this.print(e.exported, e);
  }
  i(ove, "ExportNamespaceSpecifier");
  var iL = !1;
  function lve(e) {
    let {
      importAttributesKeyword: t
    } = this.format, {
      attributes: r,
      assertions: s
    } = e;
    r && !t && !iL && (iL = !0, console.warn('You are using import attributes, without specifying the desired output syntax.\nPlease specify \
the "importAttributesKeyword" generator option, whose value can be one of:\n - "with"        : `import { a } from "b" with { type: "json" };`\
\n - "assert"      : `import { a } from "b" assert { type: "json" };`\n - "with-legacy" : `import { a } from "b" with type: "json";`\n'));
    let n = t === "assert" || !t && s;
    if (this.word(n ? "assert" : "with"), this.space(), !n && t !== "with") {
      this.printList(r || s, e);
      return;
    }
    this.tokenChar(123), this.space(), this.printList(r || s, e), this.space(), this.tokenChar(125);
  }
  i(lve, "_printAttributes");
  function uve(e) {
    var t, r;
    this.word("export"), this.space(), e.exportKind === "type" && (this.word("type"), this.space()), this.tokenChar(42), this.space(), this.
    word("from"), this.space(), (t = e.attributes) != null && t.length || (r = e.assertions) != null && r.length ? (this.print(e.source, e, !0),
    this.space(), this._printAttributes(e)) : this.print(e.source, e), this.semicolon();
  }
  i(uve, "ExportAllDeclaration");
  function oL(e, t) {
    QEe(t.declaration) && e._shouldPrintDecoratorsBeforeExport(t) && e.printJoin(t.declaration.decorators, t);
  }
  i(oL, "maybePrintDecoratorsBeforeExport");
  function cve(e) {
    if (oL(this, e), this.word("export"), this.space(), e.declaration) {
      let s = e.declaration;
      this.print(s, e), aL(s) || this.semicolon();
    } else {
      e.exportKind === "type" && (this.word("type"), this.space());
      let s = e.specifiers.slice(0), n = !1;
      for (; ; ) {
        let a = s[0];
        if (ZEe(a) || eve(a))
          n = !0, this.print(s.shift(), e), s.length && (this.tokenChar(44), this.space());
        else
          break;
      }
      if ((s.length || !s.length && !n) && (this.tokenChar(123), s.length && (this.space(), this.printList(s, e), this.space()), this.tokenChar(
      125)), e.source) {
        var t, r;
        this.space(), this.word("from"), this.space(), (t = e.attributes) != null && t.length || (r = e.assertions) != null && r.length ? (this.
        print(e.source, e, !0), this.space(), this._printAttributes(e)) : this.print(e.source, e);
      }
      this.semicolon();
    }
  }
  i(cve, "ExportNamedDeclaration");
  function fve(e) {
    oL(this, e), this.word("export"), this.noIndentInnerCommentsHere(), this.space(), this.word("default"), this.space();
    let t = e.declaration;
    this.print(t, e), aL(t) || this.semicolon();
  }
  i(fve, "ExportDefaultDeclaration");
  function pve(e) {
    var t, r;
    this.word("import"), this.space();
    let s = e.importKind === "type" || e.importKind === "typeof";
    s ? (this.noIndentInnerCommentsHere(), this.word(e.importKind), this.space()) : e.module ? (this.noIndentInnerCommentsHere(), this.word(
    "module"), this.space()) : e.phase && (this.noIndentInnerCommentsHere(), this.word(e.phase), this.space());
    let n = e.specifiers.slice(0), a = !!n.length;
    for (; a; ) {
      let o = n[0];
      if (tve(o) || rve(o))
        this.print(n.shift(), e), n.length && (this.tokenChar(44), this.space());
      else
        break;
    }
    n.length ? (this.tokenChar(123), this.space(), this.printList(n, e), this.space(), this.tokenChar(125)) : s && !a && (this.tokenChar(123),
    this.tokenChar(125)), (a || s) && (this.space(), this.word("from"), this.space()), (t = e.attributes) != null && t.length || (r = e.assertions) !=
    null && r.length ? (this.print(e.source, e, !0), this.space(), this._printAttributes(e)) : this.print(e.source, e), this.semicolon();
  }
  i(pve, "ImportDeclaration");
  function dve(e) {
    this.print(e.key), this.tokenChar(58), this.space(), this.print(e.value);
  }
  i(dve, "ImportAttribute");
  function hve(e) {
    this.tokenChar(42), this.space(), this.word("as"), this.space(), this.print(e.local, e);
  }
  i(hve, "ImportNamespaceSpecifier");
  function mve(e) {
    this.word("import"), e.phase && (this.tokenChar(46), this.word(e.phase)), this.tokenChar(40), this.print(e.source, e), e.options != null &&
    (this.tokenChar(44), this.space(), this.print(e.options, e)), this.tokenChar(41);
  }
  i(mve, "ImportExpression");
});

// ../node_modules/jsesc/jsesc.js
var fL = y((Iet, cL) => {
  "use strict";
  var lL = {}, yve = lL.hasOwnProperty, uL = /* @__PURE__ */ i((e, t) => {
    for (let r in e)
      yve.call(e, r) && t(r, e[r]);
  }, "forOwn"), gve = /* @__PURE__ */ i((e, t) => (t && uL(t, (r, s) => {
    e[r] = s;
  }), e), "extend"), bve = /* @__PURE__ */ i((e, t) => {
    let r = e.length, s = -1;
    for (; ++s < r; )
      t(e[s]);
  }, "forEach"), oc = lL.toString, Eve = Array.isArray, vve = Buffer.isBuffer, Sve = /* @__PURE__ */ i((e) => oc.call(e) == "[object Object]",
  "isObject"), Tve = /* @__PURE__ */ i((e) => typeof e == "string" || oc.call(e) == "[object String]", "isString"), xve = /* @__PURE__ */ i(
  (e) => typeof e == "number" || oc.call(e) == "[object Number]", "isNumber"), Pve = /* @__PURE__ */ i((e) => typeof e == "function", "isFun\
ction"), Ave = /* @__PURE__ */ i((e) => oc.call(e) == "[object Map]", "isMap"), Cve = /* @__PURE__ */ i((e) => oc.call(e) == "[object Set]",
  "isSet"), wve = {
    '"': '\\"',
    "'": "\\'",
    "\\": "\\\\",
    "\b": "\\b",
    "\f": "\\f",
    "\n": "\\n",
    "\r": "\\r",
    "	": "\\t"
    // `\v` is omitted intentionally, because in IE < 9, '\v' == 'v'.
    // '\v': '\\x0B'
  }, Dve = /["'\\\b\f\n\r\t]/, Ive = /[0-9]/, _ve = /[ !#-&\(-\[\]-_a-~]/, ra = /* @__PURE__ */ i((e, t) => {
    let r = /* @__PURE__ */ i(() => {
      c = u, ++t.indentLevel, u = t.indent.repeat(t.indentLevel);
    }, "increaseIndentation"), s = {
      escapeEverything: !1,
      minimal: !1,
      isScriptContext: !1,
      quotes: "single",
      wrap: !1,
      es6: !1,
      json: !1,
      compact: !0,
      lowercaseHex: !1,
      numbers: "decimal",
      indent: "	",
      indentLevel: 0,
      __inline1__: !1,
      __inline2__: !1
    }, n = t && t.json;
    n && (s.quotes = "double", s.wrap = !0), t = gve(s, t), t.quotes != "single" && t.quotes != "double" && t.quotes != "backtick" && (t.quotes =
    "single");
    let a = t.quotes == "double" ? '"' : t.quotes == "backtick" ? "`" : "'", o = t.compact, l = t.lowercaseHex, u = t.indent.repeat(t.indentLevel),
    c = "", f = t.__inline1__, p = t.__inline2__, d = o ? "" : `
`, m, b = !0, h = t.numbers == "binary", g = t.numbers == "octal", E = t.numbers == "decimal", D = t.numbers == "hexadecimal";
    if (n && e && Pve(e.toJSON) && (e = e.toJSON()), !Tve(e)) {
      if (Ave(e))
        return e.size == 0 ? "new Map()" : (o || (t.__inline1__ = !0, t.__inline2__ = !1), "new Map(" + ra(Array.from(e), t) + ")");
      if (Cve(e))
        return e.size == 0 ? "new Set()" : "new Set(" + ra(Array.from(e), t) + ")";
      if (vve(e))
        return e.length == 0 ? "Buffer.from([])" : "Buffer.from(" + ra(Array.from(e), t) + ")";
      if (Eve(e))
        return m = [], t.wrap = !0, f && (t.__inline1__ = !1, t.__inline2__ = !0), p || r(), bve(e, (M) => {
          b = !1, p && (t.__inline2__ = !1), m.push(
            (o || p ? "" : u) + ra(M, t)
          );
        }), b ? "[]" : p ? "[" + m.join(", ") + "]" : "[" + d + m.join("," + d) + d + (o ? "" : c) + "]";
      if (xve(e)) {
        if (n)
          return JSON.stringify(e);
        if (E)
          return String(e);
        if (D) {
          let M = e.toString(16);
          return l || (M = M.toUpperCase()), "0x" + M;
        }
        if (h)
          return "0b" + e.toString(2);
        if (g)
          return "0o" + e.toString(8);
      } else return Sve(e) ? (m = [], t.wrap = !0, r(), uL(e, (M, q) => {
        b = !1, m.push(
          (o ? "" : u) + ra(M, t) + ":" + (o ? "" : " ") + ra(q, t)
        );
      }), b ? "{}" : "{" + d + m.join("," + d) + d + (o ? "" : c) + "}") : n ? JSON.stringify(e) || "null" : String(e);
    }
    let C = e, N = -1, I = C.length;
    for (m = ""; ++N < I; ) {
      let M = C.charAt(N);
      if (t.es6) {
        let j = C.charCodeAt(N);
        if (
          // check if it’s the start of a surrogate pair
          j >= 55296 && j <= 56319 && // high surrogate
          I > N + 1
        ) {
          let ae = C.charCodeAt(N + 1);
          if (ae >= 56320 && ae <= 57343) {
            let Ie = ((j - 55296) * 1024 + ae - 56320 + 65536).toString(16);
            l || (Ie = Ie.toUpperCase()), m += "\\u{" + Ie + "}", ++N;
            continue;
          }
        }
      }
      if (!t.escapeEverything) {
        if (_ve.test(M)) {
          m += M;
          continue;
        }
        if (M == '"') {
          m += a == M ? '\\"' : M;
          continue;
        }
        if (M == "`") {
          m += a == M ? "\\`" : M;
          continue;
        }
        if (M == "'") {
          m += a == M ? "\\'" : M;
          continue;
        }
      }
      if (M == "\0" && !n && !Ive.test(C.charAt(N + 1))) {
        m += "\\0";
        continue;
      }
      if (Dve.test(M)) {
        m += wve[M];
        continue;
      }
      let q = M.charCodeAt(0);
      if (t.minimal && q != 8232 && q != 8233) {
        m += M;
        continue;
      }
      let V = q.toString(16);
      l || (V = V.toUpperCase());
      let W = V.length > 2 || n, Y = "\\" + (W ? "u" : "x") + ("0000" + V).slice(W ? -4 : -2);
      m += Y;
    }
    return t.wrap && (m = a + m + a), a == "`" && (m = m.replace(/\$\{/g, "\\${")), t.isScriptContext ? m.replace(/<\/(script|style)/gi, "<\\\
/$1").replace(/<!--/g, n ? "\\u003C!--" : "\\x3C!--") : m;
  }, "jsesc");
  ra.version = "2.5.2";
  cL.exports = ra;
});

// ../node_modules/@babel/generator/lib/generators/types.js
var mv = y((Wt) => {
  "use strict";
  Object.defineProperty(Wt, "__esModule", {
    value: !0
  });
  Wt.ArgumentPlaceholder = kve;
  Wt.ArrayPattern = Wt.ArrayExpression = jve;
  Wt.BigIntLiteral = Kve;
  Wt.BooleanLiteral = Vve;
  Wt.DecimalLiteral = Yve;
  Wt.Identifier = Rve;
  Wt.NullLiteral = Wve;
  Wt.NumericLiteral = Hve;
  Wt.ObjectPattern = Wt.ObjectExpression = Lve;
  Wt.ObjectMethod = Bve;
  Wt.ObjectProperty = Mve;
  Wt.PipelineBareFunction = Jve;
  Wt.PipelinePrimaryTopicReference = Qve;
  Wt.PipelineTopicExpression = zve;
  Wt.RecordExpression = qve;
  Wt.RegExpLiteral = Uve;
  Wt.SpreadElement = Wt.RestElement = Fve;
  Wt.StringLiteral = Gve;
  Wt.TopicReference = Xve;
  Wt.TupleExpression = $ve;
  var Ove = Re(), dL = fL(), {
    isAssignmentPattern: Nve,
    isIdentifier: hv
  } = Ove;
  function Rve(e) {
    var t;
    this.sourceIdentifierName(((t = e.loc) == null ? void 0 : t.identifierName) || e.name), this.word(e.name);
  }
  i(Rve, "Identifier");
  function kve() {
    this.tokenChar(63);
  }
  i(kve, "ArgumentPlaceholder");
  function Fve(e) {
    this.token("..."), this.print(e.argument, e);
  }
  i(Fve, "RestElement");
  function Lve(e) {
    let t = e.properties;
    this.tokenChar(123), t.length && (this.space(), this.printList(t, e, {
      indent: !0,
      statement: !0
    }), this.space()), this.sourceWithOffset("end", e.loc, -1), this.tokenChar(125);
  }
  i(Lve, "ObjectExpression");
  function Bve(e) {
    this.printJoin(e.decorators, e), this._methodHead(e), this.space(), this.print(e.body, e);
  }
  i(Bve, "ObjectMethod");
  function Mve(e) {
    if (this.printJoin(e.decorators, e), e.computed)
      this.tokenChar(91), this.print(e.key, e), this.tokenChar(93);
    else {
      if (Nve(e.value) && hv(e.key) && e.key.name === e.value.left.name) {
        this.print(e.value, e);
        return;
      }
      if (this.print(e.key, e), e.shorthand && hv(e.key) && hv(e.value) && e.key.name === e.value.name)
        return;
    }
    this.tokenChar(58), this.space(), this.print(e.value, e);
  }
  i(Mve, "ObjectProperty");
  function jve(e) {
    let t = e.elements, r = t.length;
    this.tokenChar(91);
    for (let s = 0; s < t.length; s++) {
      let n = t[s];
      n ? (s > 0 && this.space(), this.print(n, e), s < r - 1 && this.tokenChar(44)) : this.tokenChar(44);
    }
    this.tokenChar(93);
  }
  i(jve, "ArrayExpression");
  function qve(e) {
    let t = e.properties, r, s;
    if (this.format.recordAndTupleSyntaxType === "bar")
      r = "{|", s = "|}";
    else {
      if (this.format.recordAndTupleSyntaxType !== "hash" && this.format.recordAndTupleSyntaxType != null)
        throw new Error(`The "recordAndTupleSyntaxType" generator option must be "bar" or "hash" (${JSON.stringify(this.format.recordAndTupleSyntaxType)}\
 received).`);
      r = "#{", s = "}";
    }
    this.token(r), t.length && (this.space(), this.printList(t, e, {
      indent: !0,
      statement: !0
    }), this.space()), this.token(s);
  }
  i(qve, "RecordExpression");
  function $ve(e) {
    let t = e.elements, r = t.length, s, n;
    if (this.format.recordAndTupleSyntaxType === "bar")
      s = "[|", n = "|]";
    else if (this.format.recordAndTupleSyntaxType === "hash")
      s = "#[", n = "]";
    else
      throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);
    this.token(s);
    for (let a = 0; a < t.length; a++) {
      let o = t[a];
      o && (a > 0 && this.space(), this.print(o, e), a < r - 1 && this.tokenChar(44));
    }
    this.token(n);
  }
  i($ve, "TupleExpression");
  function Uve(e) {
    this.word(`/${e.pattern}/${e.flags}`);
  }
  i(Uve, "RegExpLiteral");
  function Vve(e) {
    this.word(e.value ? "true" : "false");
  }
  i(Vve, "BooleanLiteral");
  function Wve() {
    this.word("null");
  }
  i(Wve, "NullLiteral");
  function Hve(e) {
    let t = this.getPossibleRaw(e), r = this.format.jsescOption, s = e.value, n = s + "";
    r.numbers ? this.number(dL(s, r), s) : t == null ? this.number(n, s) : this.format.minified ? this.number(t.length < n.length ? t : n, s) :
    this.number(t, s);
  }
  i(Hve, "NumericLiteral");
  function Gve(e) {
    let t = this.getPossibleRaw(e);
    if (!this.format.minified && t !== void 0) {
      this.token(t);
      return;
    }
    let r = dL(e.value, this.format.jsescOption);
    this.token(r);
  }
  i(Gve, "StringLiteral");
  function Kve(e) {
    let t = this.getPossibleRaw(e);
    if (!this.format.minified && t !== void 0) {
      this.word(t);
      return;
    }
    this.word(e.value + "n");
  }
  i(Kve, "BigIntLiteral");
  function Yve(e) {
    let t = this.getPossibleRaw(e);
    if (!this.format.minified && t !== void 0) {
      this.word(t);
      return;
    }
    this.word(e.value + "m");
  }
  i(Yve, "DecimalLiteral");
  var pL = /* @__PURE__ */ new Set(["^^", "@@", "^", "%", "#"]);
  function Xve() {
    let {
      topicToken: e
    } = this.format;
    if (pL.has(e))
      this.token(e);
    else {
      let t = JSON.stringify(e), r = Array.from(pL, (s) => JSON.stringify(s));
      throw new Error(`The "topicToken" generator option must be one of ${r.join(", ")} (${t} received instead).`);
    }
  }
  i(Xve, "TopicReference");
  function zve(e) {
    this.print(e.expression, e);
  }
  i(zve, "PipelineTopicExpression");
  function Jve(e) {
    this.print(e.callee, e);
  }
  i(Jve, "PipelineBareFunction");
  function Qve() {
    this.tokenChar(35);
  }
  i(Qve, "PipelinePrimaryTopicReference");
});

// ../node_modules/@babel/generator/lib/generators/flow.js
var mL = y((Se) => {
  "use strict";
  Object.defineProperty(Se, "__esModule", {
    value: !0
  });
  Se.AnyTypeAnnotation = rSe;
  Se.ArrayTypeAnnotation = sSe;
  Se.BooleanLiteralTypeAnnotation = iSe;
  Se.BooleanTypeAnnotation = nSe;
  Se.DeclareClass = oSe;
  Se.DeclareExportAllDeclaration = bSe;
  Se.DeclareExportDeclaration = gSe;
  Se.DeclareFunction = lSe;
  Se.DeclareInterface = fSe;
  Se.DeclareModule = pSe;
  Se.DeclareModuleExports = dSe;
  Se.DeclareOpaqueType = mSe;
  Se.DeclareTypeAlias = hSe;
  Se.DeclareVariable = ySe;
  Se.DeclaredPredicate = cSe;
  Se.EmptyTypeAnnotation = qSe;
  Se.EnumBooleanBody = vSe;
  Se.EnumBooleanMember = ASe;
  Se.EnumDeclaration = ESe;
  Se.EnumDefaultedMember = PSe;
  Se.EnumNumberBody = SSe;
  Se.EnumNumberMember = CSe;
  Se.EnumStringBody = TSe;
  Se.EnumStringMember = wSe;
  Se.EnumSymbolBody = xSe;
  Se.ExistsTypeAnnotation = ISe;
  Se.FunctionTypeAnnotation = _Se;
  Se.FunctionTypeParam = OSe;
  Se.IndexedAccessType = f1e;
  Se.InferredPredicate = uSe;
  Se.InterfaceDeclaration = FSe;
  Se.GenericTypeAnnotation = Se.ClassImplements = Se.InterfaceExtends = NSe;
  Se.InterfaceTypeAnnotation = BSe;
  Se.IntersectionTypeAnnotation = MSe;
  Se.MixedTypeAnnotation = jSe;
  Se.NullLiteralTypeAnnotation = aSe;
  Se.NullableTypeAnnotation = $Se;
  Object.defineProperty(Se, "NumberLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return hL.NumericLiteral;
    }, "get")
  });
  Se.NumberTypeAnnotation = USe;
  Se.ObjectTypeAnnotation = QSe;
  Se.ObjectTypeCallProperty = e1e;
  Se.ObjectTypeIndexer = t1e;
  Se.ObjectTypeInternalSlot = ZSe;
  Se.ObjectTypeProperty = r1e;
  Se.ObjectTypeSpreadProperty = s1e;
  Se.OpaqueType = JSe;
  Se.OptionalIndexedAccessType = p1e;
  Se.QualifiedTypeIdentifier = n1e;
  Object.defineProperty(Se, "StringLiteralTypeAnnotation", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return hL.StringLiteral;
    }, "get")
  });
  Se.StringTypeAnnotation = VSe;
  Se.SymbolTypeAnnotation = i1e;
  Se.ThisTypeAnnotation = WSe;
  Se.TupleTypeAnnotation = HSe;
  Se.TypeAlias = KSe;
  Se.TypeAnnotation = YSe;
  Se.TypeCastExpression = l1e;
  Se.TypeParameter = zSe;
  Se.TypeParameterDeclaration = Se.TypeParameterInstantiation = XSe;
  Se.TypeofTypeAnnotation = GSe;
  Se.UnionTypeAnnotation = o1e;
  Se.Variance = u1e;
  Se.VoidTypeAnnotation = c1e;
  Se._interfaceish = RSe;
  Se._variance = kSe;
  var Zve = Re(), eSe = dv(), hL = mv(), {
    isDeclareExportDeclaration: pd,
    isStatement: tSe
  } = Zve;
  function rSe() {
    this.word("any");
  }
  i(rSe, "AnyTypeAnnotation");
  function sSe(e) {
    this.print(e.elementType, e, !0), this.tokenChar(91), this.tokenChar(93);
  }
  i(sSe, "ArrayTypeAnnotation");
  function nSe() {
    this.word("boolean");
  }
  i(nSe, "BooleanTypeAnnotation");
  function iSe(e) {
    this.word(e.value ? "true" : "false");
  }
  i(iSe, "BooleanLiteralTypeAnnotation");
  function aSe() {
    this.word("null");
  }
  i(aSe, "NullLiteralTypeAnnotation");
  function oSe(e, t) {
    pd(t) || (this.word("declare"), this.space()), this.word("class"), this.space(), this._interfaceish(e);
  }
  i(oSe, "DeclareClass");
  function lSe(e, t) {
    pd(t) || (this.word("declare"), this.space()), this.word("function"), this.space(), this.print(e.id, e), this.print(e.id.typeAnnotation.
    typeAnnotation, e), e.predicate && (this.space(), this.print(e.predicate, e)), this.semicolon();
  }
  i(lSe, "DeclareFunction");
  function uSe() {
    this.tokenChar(37), this.word("checks");
  }
  i(uSe, "InferredPredicate");
  function cSe(e) {
    this.tokenChar(37), this.word("checks"), this.tokenChar(40), this.print(e.value, e), this.tokenChar(41);
  }
  i(cSe, "DeclaredPredicate");
  function fSe(e) {
    this.word("declare"), this.space(), this.InterfaceDeclaration(e);
  }
  i(fSe, "DeclareInterface");
  function pSe(e) {
    this.word("declare"), this.space(), this.word("module"), this.space(), this.print(e.id, e), this.space(), this.print(e.body, e);
  }
  i(pSe, "DeclareModule");
  function dSe(e) {
    this.word("declare"), this.space(), this.word("module"), this.tokenChar(46), this.word("exports"), this.print(e.typeAnnotation, e);
  }
  i(dSe, "DeclareModuleExports");
  function hSe(e) {
    this.word("declare"), this.space(), this.TypeAlias(e);
  }
  i(hSe, "DeclareTypeAlias");
  function mSe(e, t) {
    pd(t) || (this.word("declare"), this.space()), this.OpaqueType(e);
  }
  i(mSe, "DeclareOpaqueType");
  function ySe(e, t) {
    pd(t) || (this.word("declare"), this.space()), this.word("var"), this.space(), this.print(e.id, e), this.print(e.id.typeAnnotation, e), this.
    semicolon();
  }
  i(ySe, "DeclareVariable");
  function gSe(e) {
    this.word("declare"), this.space(), this.word("export"), this.space(), e.default && (this.word("default"), this.space()), DSe.call(this,
    e);
  }
  i(gSe, "DeclareExportDeclaration");
  function bSe(e) {
    this.word("declare"), this.space(), eSe.ExportAllDeclaration.call(this, e);
  }
  i(bSe, "DeclareExportAllDeclaration");
  function ESe(e) {
    let {
      id: t,
      body: r
    } = e;
    this.word("enum"), this.space(), this.print(t, e), this.print(r, e);
  }
  i(ESe, "EnumDeclaration");
  function dd(e, t, r) {
    r && (e.space(), e.word("of"), e.space(), e.word(t)), e.space();
  }
  i(dd, "enumExplicitType");
  function hd(e, t) {
    let {
      members: r
    } = t;
    e.token("{"), e.indent(), e.newline();
    for (let s of r)
      e.print(s, t), e.newline();
    t.hasUnknownMembers && (e.token("..."), e.newline()), e.dedent(), e.token("}");
  }
  i(hd, "enumBody");
  function vSe(e) {
    let {
      explicitType: t
    } = e;
    dd(this, "boolean", t), hd(this, e);
  }
  i(vSe, "EnumBooleanBody");
  function SSe(e) {
    let {
      explicitType: t
    } = e;
    dd(this, "number", t), hd(this, e);
  }
  i(SSe, "EnumNumberBody");
  function TSe(e) {
    let {
      explicitType: t
    } = e;
    dd(this, "string", t), hd(this, e);
  }
  i(TSe, "EnumStringBody");
  function xSe(e) {
    dd(this, "symbol", !0), hd(this, e);
  }
  i(xSe, "EnumSymbolBody");
  function PSe(e) {
    let {
      id: t
    } = e;
    this.print(t, e), this.tokenChar(44);
  }
  i(PSe, "EnumDefaultedMember");
  function yv(e, t) {
    let {
      id: r,
      init: s
    } = t;
    e.print(r, t), e.space(), e.token("="), e.space(), e.print(s, t), e.token(",");
  }
  i(yv, "enumInitializedMember");
  function ASe(e) {
    yv(this, e);
  }
  i(ASe, "EnumBooleanMember");
  function CSe(e) {
    yv(this, e);
  }
  i(CSe, "EnumNumberMember");
  function wSe(e) {
    yv(this, e);
  }
  i(wSe, "EnumStringMember");
  function DSe(e) {
    if (e.declaration) {
      let t = e.declaration;
      this.print(t, e), tSe(t) || this.semicolon();
    } else
      this.tokenChar(123), e.specifiers.length && (this.space(), this.printList(e.specifiers, e), this.space()), this.tokenChar(125), e.source &&
      (this.space(), this.word("from"), this.space(), this.print(e.source, e)), this.semicolon();
  }
  i(DSe, "FlowExportDeclaration");
  function ISe() {
    this.tokenChar(42);
  }
  i(ISe, "ExistsTypeAnnotation");
  function _Se(e, t) {
    this.print(e.typeParameters, e), this.tokenChar(40), e.this && (this.word("this"), this.tokenChar(58), this.space(), this.print(e.this.typeAnnotation,
    e), (e.params.length || e.rest) && (this.tokenChar(44), this.space())), this.printList(e.params, e), e.rest && (e.params.length && (this.
    tokenChar(44), this.space()), this.token("..."), this.print(e.rest, e)), this.tokenChar(41);
    let r = t?.type;
    r != null && (r === "ObjectTypeCallProperty" || r === "ObjectTypeInternalSlot" || r === "DeclareFunction" || r === "ObjectTypeProperty" &&
    t.method) ? this.tokenChar(58) : (this.space(), this.token("=>")), this.space(), this.print(e.returnType, e);
  }
  i(_Se, "FunctionTypeAnnotation");
  function OSe(e) {
    this.print(e.name, e), e.optional && this.tokenChar(63), e.name && (this.tokenChar(58), this.space()), this.print(e.typeAnnotation, e);
  }
  i(OSe, "FunctionTypeParam");
  function NSe(e) {
    this.print(e.id, e), this.print(e.typeParameters, e, !0);
  }
  i(NSe, "InterfaceExtends");
  function RSe(e) {
    var t;
    if (this.print(e.id, e), this.print(e.typeParameters, e), (t = e.extends) != null && t.length && (this.space(), this.word("extends"), this.
    space(), this.printList(e.extends, e)), e.type === "DeclareClass") {
      var r, s;
      (r = e.mixins) != null && r.length && (this.space(), this.word("mixins"), this.space(), this.printList(e.mixins, e)), (s = e.implements) !=
      null && s.length && (this.space(), this.word("implements"), this.space(), this.printList(e.implements, e));
    }
    this.space(), this.print(e.body, e);
  }
  i(RSe, "_interfaceish");
  function kSe(e) {
    var t;
    let r = (t = e.variance) == null ? void 0 : t.kind;
    r != null && (r === "plus" ? this.tokenChar(43) : r === "minus" && this.tokenChar(45));
  }
  i(kSe, "_variance");
  function FSe(e) {
    this.word("interface"), this.space(), this._interfaceish(e);
  }
  i(FSe, "InterfaceDeclaration");
  function LSe() {
    this.space(), this.tokenChar(38), this.space();
  }
  i(LSe, "andSeparator");
  function BSe(e) {
    var t;
    this.word("interface"), (t = e.extends) != null && t.length && (this.space(), this.word("extends"), this.space(), this.printList(e.extends,
    e)), this.space(), this.print(e.body, e);
  }
  i(BSe, "InterfaceTypeAnnotation");
  function MSe(e) {
    this.printJoin(e.types, e, {
      separator: LSe
    });
  }
  i(MSe, "IntersectionTypeAnnotation");
  function jSe() {
    this.word("mixed");
  }
  i(jSe, "MixedTypeAnnotation");
  function qSe() {
    this.word("empty");
  }
  i(qSe, "EmptyTypeAnnotation");
  function $Se(e) {
    this.tokenChar(63), this.print(e.typeAnnotation, e);
  }
  i($Se, "NullableTypeAnnotation");
  function USe() {
    this.word("number");
  }
  i(USe, "NumberTypeAnnotation");
  function VSe() {
    this.word("string");
  }
  i(VSe, "StringTypeAnnotation");
  function WSe() {
    this.word("this");
  }
  i(WSe, "ThisTypeAnnotation");
  function HSe(e) {
    this.tokenChar(91), this.printList(e.types, e), this.tokenChar(93);
  }
  i(HSe, "TupleTypeAnnotation");
  function GSe(e) {
    this.word("typeof"), this.space(), this.print(e.argument, e);
  }
  i(GSe, "TypeofTypeAnnotation");
  function KSe(e) {
    this.word("type"), this.space(), this.print(e.id, e), this.print(e.typeParameters, e), this.space(), this.tokenChar(61), this.space(), this.
    print(e.right, e), this.semicolon();
  }
  i(KSe, "TypeAlias");
  function YSe(e) {
    this.tokenChar(58), this.space(), e.optional && this.tokenChar(63), this.print(e.typeAnnotation, e);
  }
  i(YSe, "TypeAnnotation");
  function XSe(e) {
    this.tokenChar(60), this.printList(e.params, e, {}), this.tokenChar(62);
  }
  i(XSe, "TypeParameterInstantiation");
  function zSe(e) {
    this._variance(e), this.word(e.name), e.bound && this.print(e.bound, e), e.default && (this.space(), this.tokenChar(61), this.space(), this.
    print(e.default, e));
  }
  i(zSe, "TypeParameter");
  function JSe(e) {
    this.word("opaque"), this.space(), this.word("type"), this.space(), this.print(e.id, e), this.print(e.typeParameters, e), e.supertype &&
    (this.tokenChar(58), this.space(), this.print(e.supertype, e)), e.impltype && (this.space(), this.tokenChar(61), this.space(), this.print(
    e.impltype, e)), this.semicolon();
  }
  i(JSe, "OpaqueType");
  function QSe(e) {
    e.exact ? this.token("{|") : this.tokenChar(123);
    let t = [...e.properties, ...e.callProperties || [], ...e.indexers || [], ...e.internalSlots || []];
    t.length && (this.newline(), this.space(), this.printJoin(t, e, {
      addNewlines(r) {
        if (r && !t[0]) return 1;
      },
      indent: !0,
      statement: !0,
      iterator: /* @__PURE__ */ i(() => {
        (t.length !== 1 || e.inexact) && (this.tokenChar(44), this.space());
      }, "iterator")
    }), this.space()), e.inexact && (this.indent(), this.token("..."), t.length && this.newline(), this.dedent()), e.exact ? this.token("|}") :
    this.tokenChar(125);
  }
  i(QSe, "ObjectTypeAnnotation");
  function ZSe(e) {
    e.static && (this.word("static"), this.space()), this.tokenChar(91), this.tokenChar(91), this.print(e.id, e), this.tokenChar(93), this.tokenChar(
    93), e.optional && this.tokenChar(63), e.method || (this.tokenChar(58), this.space()), this.print(e.value, e);
  }
  i(ZSe, "ObjectTypeInternalSlot");
  function e1e(e) {
    e.static && (this.word("static"), this.space()), this.print(e.value, e);
  }
  i(e1e, "ObjectTypeCallProperty");
  function t1e(e) {
    e.static && (this.word("static"), this.space()), this._variance(e), this.tokenChar(91), e.id && (this.print(e.id, e), this.tokenChar(58),
    this.space()), this.print(e.key, e), this.tokenChar(93), this.tokenChar(58), this.space(), this.print(e.value, e);
  }
  i(t1e, "ObjectTypeIndexer");
  function r1e(e) {
    e.proto && (this.word("proto"), this.space()), e.static && (this.word("static"), this.space()), (e.kind === "get" || e.kind === "set") &&
    (this.word(e.kind), this.space()), this._variance(e), this.print(e.key, e), e.optional && this.tokenChar(63), e.method || (this.tokenChar(
    58), this.space()), this.print(e.value, e);
  }
  i(r1e, "ObjectTypeProperty");
  function s1e(e) {
    this.token("..."), this.print(e.argument, e);
  }
  i(s1e, "ObjectTypeSpreadProperty");
  function n1e(e) {
    this.print(e.qualification, e), this.tokenChar(46), this.print(e.id, e);
  }
  i(n1e, "QualifiedTypeIdentifier");
  function i1e() {
    this.word("symbol");
  }
  i(i1e, "SymbolTypeAnnotation");
  function a1e() {
    this.space(), this.tokenChar(124), this.space();
  }
  i(a1e, "orSeparator");
  function o1e(e) {
    this.printJoin(e.types, e, {
      separator: a1e
    });
  }
  i(o1e, "UnionTypeAnnotation");
  function l1e(e) {
    this.tokenChar(40), this.print(e.expression, e), this.print(e.typeAnnotation, e), this.tokenChar(41);
  }
  i(l1e, "TypeCastExpression");
  function u1e(e) {
    e.kind === "plus" ? this.tokenChar(43) : this.tokenChar(45);
  }
  i(u1e, "Variance");
  function c1e() {
    this.word("void");
  }
  i(c1e, "VoidTypeAnnotation");
  function f1e(e) {
    this.print(e.objectType, e, !0), this.tokenChar(91), this.print(e.indexType, e), this.tokenChar(93);
  }
  i(f1e, "IndexedAccessType");
  function p1e(e) {
    this.print(e.objectType, e), e.optional && this.token("?."), this.tokenChar(91), this.print(e.indexType, e), this.tokenChar(93);
  }
  i(p1e, "OptionalIndexedAccessType");
});

// ../node_modules/@babel/generator/lib/generators/base.js
var yL = y((pi) => {
  "use strict";
  Object.defineProperty(pi, "__esModule", {
    value: !0
  });
  pi.BlockStatement = m1e;
  pi.Directive = y1e;
  pi.DirectiveLiteral = E1e;
  pi.File = d1e;
  pi.InterpreterDirective = v1e;
  pi.Placeholder = S1e;
  pi.Program = h1e;
  function d1e(e) {
    e.program && this.print(e.program.interpreter, e), this.print(e.program, e);
  }
  i(d1e, "File");
  function h1e(e) {
    var t;
    this.noIndentInnerCommentsHere(), this.printInnerComments();
    let r = (t = e.directives) == null ? void 0 : t.length;
    if (r) {
      var s;
      let n = e.body.length ? 2 : 1;
      this.printSequence(e.directives, e, {
        trailingCommentsLineOffset: n
      }), (s = e.directives[r - 1].trailingComments) != null && s.length || this.newline(n);
    }
    this.printSequence(e.body, e);
  }
  i(h1e, "Program");
  function m1e(e) {
    var t;
    this.tokenChar(123);
    let r = (t = e.directives) == null ? void 0 : t.length;
    if (r) {
      var s;
      let n = e.body.length ? 2 : 1;
      this.printSequence(e.directives, e, {
        indent: !0,
        trailingCommentsLineOffset: n
      }), (s = e.directives[r - 1].trailingComments) != null && s.length || this.newline(n);
    }
    this.printSequence(e.body, e, {
      indent: !0
    }), this.rightBrace(e);
  }
  i(m1e, "BlockStatement");
  function y1e(e) {
    this.print(e.value, e), this.semicolon();
  }
  i(y1e, "Directive");
  var g1e = /(?:^|[^\\])(?:\\\\)*'/, b1e = /(?:^|[^\\])(?:\\\\)*"/;
  function E1e(e) {
    let t = this.getPossibleRaw(e);
    if (!this.format.minified && t !== void 0) {
      this.token(t);
      return;
    }
    let {
      value: r
    } = e;
    if (!b1e.test(r))
      this.token(`"${r}"`);
    else if (!g1e.test(r))
      this.token(`'${r}'`);
    else
      throw new Error("Malformed AST: it is not possible to print a directive containing both unescaped single and double quotes.");
  }
  i(E1e, "DirectiveLiteral");
  function v1e(e) {
    this.token(`#!${e.value}`), this.newline(1, !0);
  }
  i(v1e, "InterpreterDirective");
  function S1e(e) {
    this.token("%%"), this.print(e.name), this.token("%%"), e.expectedNode === "Statement" && this.semicolon();
  }
  i(S1e, "Placeholder");
});

// ../node_modules/@babel/generator/lib/generators/jsx.js
var gL = y((kr) => {
  "use strict";
  Object.defineProperty(kr, "__esModule", {
    value: !0
  });
  kr.JSXAttribute = T1e;
  kr.JSXClosingElement = R1e;
  kr.JSXClosingFragment = B1e;
  kr.JSXElement = _1e;
  kr.JSXEmptyExpression = k1e;
  kr.JSXExpressionContainer = w1e;
  kr.JSXFragment = F1e;
  kr.JSXIdentifier = x1e;
  kr.JSXMemberExpression = A1e;
  kr.JSXNamespacedName = P1e;
  kr.JSXOpeningElement = N1e;
  kr.JSXOpeningFragment = L1e;
  kr.JSXSpreadAttribute = C1e;
  kr.JSXSpreadChild = D1e;
  kr.JSXText = I1e;
  function T1e(e) {
    this.print(e.name, e), e.value && (this.tokenChar(61), this.print(e.value, e));
  }
  i(T1e, "JSXAttribute");
  function x1e(e) {
    this.word(e.name);
  }
  i(x1e, "JSXIdentifier");
  function P1e(e) {
    this.print(e.namespace, e), this.tokenChar(58), this.print(e.name, e);
  }
  i(P1e, "JSXNamespacedName");
  function A1e(e) {
    this.print(e.object, e), this.tokenChar(46), this.print(e.property, e);
  }
  i(A1e, "JSXMemberExpression");
  function C1e(e) {
    this.tokenChar(123), this.token("..."), this.print(e.argument, e), this.tokenChar(125);
  }
  i(C1e, "JSXSpreadAttribute");
  function w1e(e) {
    this.tokenChar(123), this.print(e.expression, e), this.tokenChar(125);
  }
  i(w1e, "JSXExpressionContainer");
  function D1e(e) {
    this.tokenChar(123), this.token("..."), this.print(e.expression, e), this.tokenChar(125);
  }
  i(D1e, "JSXSpreadChild");
  function I1e(e) {
    let t = this.getPossibleRaw(e);
    t !== void 0 ? this.token(t, !0) : this.token(e.value, !0);
  }
  i(I1e, "JSXText");
  function _1e(e) {
    let t = e.openingElement;
    if (this.print(t, e), !t.selfClosing) {
      this.indent();
      for (let r of e.children)
        this.print(r, e);
      this.dedent(), this.print(e.closingElement, e);
    }
  }
  i(_1e, "JSXElement");
  function O1e() {
    this.space();
  }
  i(O1e, "spaceSeparator");
  function N1e(e) {
    this.tokenChar(60), this.print(e.name, e), this.print(e.typeParameters, e), e.attributes.length > 0 && (this.space(), this.printJoin(e.attributes,
    e, {
      separator: O1e
    })), e.selfClosing ? (this.space(), this.token("/>")) : this.tokenChar(62);
  }
  i(N1e, "JSXOpeningElement");
  function R1e(e) {
    this.token("</"), this.print(e.name, e), this.tokenChar(62);
  }
  i(R1e, "JSXClosingElement");
  function k1e() {
    this.printInnerComments();
  }
  i(k1e, "JSXEmptyExpression");
  function F1e(e) {
    this.print(e.openingFragment, e), this.indent();
    for (let t of e.children)
      this.print(t, e);
    this.dedent(), this.print(e.closingFragment, e);
  }
  i(F1e, "JSXFragment");
  function L1e() {
    this.tokenChar(60), this.tokenChar(62);
  }
  i(L1e, "JSXOpeningFragment");
  function B1e() {
    this.token("</"), this.tokenChar(62);
  }
  i(B1e, "JSXClosingFragment");
});

// ../node_modules/@babel/generator/lib/generators/typescript.js
var vL = y((ve) => {
  "use strict";
  Object.defineProperty(ve, "__esModule", {
    value: !0
  });
  ve.TSAnyKeyword = J1e;
  ve.TSArrayType = ETe;
  ve.TSSatisfiesExpression = ve.TSAsExpression = BTe;
  ve.TSBigIntKeyword = Q1e;
  ve.TSBooleanKeyword = rTe;
  ve.TSCallSignatureDeclaration = H1e;
  ve.TSConditionalType = CTe;
  ve.TSConstructSignatureDeclaration = G1e;
  ve.TSConstructorType = pTe;
  ve.TSDeclareFunction = U1e;
  ve.TSDeclareMethod = V1e;
  ve.TSEnumDeclaration = qTe;
  ve.TSEnumMember = $Te;
  ve.TSExportAssignment = YTe;
  ve.TSExpressionWithTypeArguments = RTe;
  ve.TSExternalModuleReference = GTe;
  ve.TSFunctionType = fTe;
  ve.TSImportEqualsDeclaration = HTe;
  ve.TSImportType = WTe;
  ve.TSIndexSignature = z1e;
  ve.TSIndexedAccessType = _Te;
  ve.TSInferType = wTe;
  ve.TSInstantiationExpression = jTe;
  ve.TSInterfaceBody = FTe;
  ve.TSInterfaceDeclaration = kTe;
  ve.TSIntersectionType = ATe;
  ve.TSIntrinsicKeyword = uTe;
  ve.TSLiteralType = NTe;
  ve.TSMappedType = OTe;
  ve.TSMethodSignature = X1e;
  ve.TSModuleBlock = VTe;
  ve.TSModuleDeclaration = UTe;
  ve.TSNamedTupleMember = xTe;
  ve.TSNamespaceExportDeclaration = XTe;
  ve.TSNeverKeyword = lTe;
  ve.TSNonNullExpression = KTe;
  ve.TSNullKeyword = oTe;
  ve.TSNumberKeyword = eTe;
  ve.TSObjectKeyword = tTe;
  ve.TSOptionalType = STe;
  ve.TSParameterProperty = $1e;
  ve.TSParenthesizedType = DTe;
  ve.TSPropertySignature = K1e;
  ve.TSQualifiedName = W1e;
  ve.TSRestType = TTe;
  ve.TSStringKeyword = sTe;
  ve.TSSymbolKeyword = nTe;
  ve.TSThisType = cTe;
  ve.TSTupleType = vTe;
  ve.TSTypeAliasDeclaration = LTe;
  ve.TSTypeAnnotation = M1e;
  ve.TSTypeAssertion = MTe;
  ve.TSTypeLiteral = gTe;
  ve.TSTypeOperator = ITe;
  ve.TSTypeParameter = q1e;
  ve.TSTypeParameterDeclaration = ve.TSTypeParameterInstantiation = j1e;
  ve.TSTypePredicate = mTe;
  ve.TSTypeQuery = yTe;
  ve.TSTypeReference = hTe;
  ve.TSUndefinedKeyword = aTe;
  ve.TSUnionType = PTe;
  ve.TSUnknownKeyword = Z1e;
  ve.TSVoidKeyword = iTe;
  ve.tsPrintClassMemberModifiers = JTe;
  ve.tsPrintFunctionOrConstructorType = dTe;
  ve.tsPrintPropertyOrMethodName = Y1e;
  ve.tsPrintSignatureDeclarationBase = zTe;
  ve.tsPrintTypeLiteralOrInterfaceBody = bTe;
  function M1e(e) {
    this.tokenChar(58), this.space(), e.optional && this.tokenChar(63), this.print(e.typeAnnotation, e);
  }
  i(M1e, "TSTypeAnnotation");
  function j1e(e, t) {
    this.tokenChar(60), this.printList(e.params, e, {}), t.type === "ArrowFunctionExpression" && e.params.length === 1 && this.tokenChar(44),
    this.tokenChar(62);
  }
  i(j1e, "TSTypeParameterInstantiation");
  function q1e(e) {
    e.in && (this.word("in"), this.space()), e.out && (this.word("out"), this.space()), this.word(e.name), e.constraint && (this.space(), this.
    word("extends"), this.space(), this.print(e.constraint, e)), e.default && (this.space(), this.tokenChar(61), this.space(), this.print(e.
    default, e));
  }
  i(q1e, "TSTypeParameter");
  function $1e(e) {
    e.accessibility && (this.word(e.accessibility), this.space()), e.readonly && (this.word("readonly"), this.space()), this._param(e.parameter);
  }
  i($1e, "TSParameterProperty");
  function U1e(e, t) {
    e.declare && (this.word("declare"), this.space()), this._functionHead(e, t), this.tokenChar(59);
  }
  i(U1e, "TSDeclareFunction");
  function V1e(e) {
    this._classMethodHead(e), this.tokenChar(59);
  }
  i(V1e, "TSDeclareMethod");
  function W1e(e) {
    this.print(e.left, e), this.tokenChar(46), this.print(e.right, e);
  }
  i(W1e, "TSQualifiedName");
  function H1e(e) {
    this.tsPrintSignatureDeclarationBase(e), this.tokenChar(59);
  }
  i(H1e, "TSCallSignatureDeclaration");
  function G1e(e) {
    this.word("new"), this.space(), this.tsPrintSignatureDeclarationBase(e), this.tokenChar(59);
  }
  i(G1e, "TSConstructSignatureDeclaration");
  function K1e(e) {
    let {
      readonly: t
    } = e;
    t && (this.word("readonly"), this.space()), this.tsPrintPropertyOrMethodName(e), this.print(e.typeAnnotation, e), this.tokenChar(59);
  }
  i(K1e, "TSPropertySignature");
  function Y1e(e) {
    e.computed && this.tokenChar(91), this.print(e.key, e), e.computed && this.tokenChar(93), e.optional && this.tokenChar(63);
  }
  i(Y1e, "tsPrintPropertyOrMethodName");
  function X1e(e) {
    let {
      kind: t
    } = e;
    (t === "set" || t === "get") && (this.word(t), this.space()), this.tsPrintPropertyOrMethodName(e), this.tsPrintSignatureDeclarationBase(
    e), this.tokenChar(59);
  }
  i(X1e, "TSMethodSignature");
  function z1e(e) {
    let {
      readonly: t,
      static: r
    } = e;
    r && (this.word("static"), this.space()), t && (this.word("readonly"), this.space()), this.tokenChar(91), this._parameters(e.parameters,
    e), this.tokenChar(93), this.print(e.typeAnnotation, e), this.tokenChar(59);
  }
  i(z1e, "TSIndexSignature");
  function J1e() {
    this.word("any");
  }
  i(J1e, "TSAnyKeyword");
  function Q1e() {
    this.word("bigint");
  }
  i(Q1e, "TSBigIntKeyword");
  function Z1e() {
    this.word("unknown");
  }
  i(Z1e, "TSUnknownKeyword");
  function eTe() {
    this.word("number");
  }
  i(eTe, "TSNumberKeyword");
  function tTe() {
    this.word("object");
  }
  i(tTe, "TSObjectKeyword");
  function rTe() {
    this.word("boolean");
  }
  i(rTe, "TSBooleanKeyword");
  function sTe() {
    this.word("string");
  }
  i(sTe, "TSStringKeyword");
  function nTe() {
    this.word("symbol");
  }
  i(nTe, "TSSymbolKeyword");
  function iTe() {
    this.word("void");
  }
  i(iTe, "TSVoidKeyword");
  function aTe() {
    this.word("undefined");
  }
  i(aTe, "TSUndefinedKeyword");
  function oTe() {
    this.word("null");
  }
  i(oTe, "TSNullKeyword");
  function lTe() {
    this.word("never");
  }
  i(lTe, "TSNeverKeyword");
  function uTe() {
    this.word("intrinsic");
  }
  i(uTe, "TSIntrinsicKeyword");
  function cTe() {
    this.word("this");
  }
  i(cTe, "TSThisType");
  function fTe(e) {
    this.tsPrintFunctionOrConstructorType(e);
  }
  i(fTe, "TSFunctionType");
  function pTe(e) {
    e.abstract && (this.word("abstract"), this.space()), this.word("new"), this.space(), this.tsPrintFunctionOrConstructorType(e);
  }
  i(pTe, "TSConstructorType");
  function dTe(e) {
    let {
      typeParameters: t
    } = e, r = e.parameters;
    this.print(t, e), this.tokenChar(40), this._parameters(r, e), this.tokenChar(41), this.space(), this.token("=>"), this.space();
    let s = e.typeAnnotation;
    this.print(s.typeAnnotation, e);
  }
  i(dTe, "tsPrintFunctionOrConstructorType");
  function hTe(e) {
    this.print(e.typeName, e, !0), this.print(e.typeParameters, e, !0);
  }
  i(hTe, "TSTypeReference");
  function mTe(e) {
    e.asserts && (this.word("asserts"), this.space()), this.print(e.parameterName), e.typeAnnotation && (this.space(), this.word("is"), this.
    space(), this.print(e.typeAnnotation.typeAnnotation));
  }
  i(mTe, "TSTypePredicate");
  function yTe(e) {
    this.word("typeof"), this.space(), this.print(e.exprName), e.typeParameters && this.print(e.typeParameters, e);
  }
  i(yTe, "TSTypeQuery");
  function gTe(e) {
    this.tsPrintTypeLiteralOrInterfaceBody(e.members, e);
  }
  i(gTe, "TSTypeLiteral");
  function bTe(e, t) {
    gv(this, e, t);
  }
  i(bTe, "tsPrintTypeLiteralOrInterfaceBody");
  function gv(e, t, r) {
    if (e.token("{"), t.length) {
      e.indent(), e.newline();
      for (let s of t)
        e.print(s, r), e.newline();
      e.dedent();
    }
    e.rightBrace(r);
  }
  i(gv, "tsPrintBraced");
  function ETe(e) {
    this.print(e.elementType, e, !0), this.token("[]");
  }
  i(ETe, "TSArrayType");
  function vTe(e) {
    this.tokenChar(91), this.printList(e.elementTypes, e), this.tokenChar(93);
  }
  i(vTe, "TSTupleType");
  function STe(e) {
    this.print(e.typeAnnotation, e), this.tokenChar(63);
  }
  i(STe, "TSOptionalType");
  function TTe(e) {
    this.token("..."), this.print(e.typeAnnotation, e);
  }
  i(TTe, "TSRestType");
  function xTe(e) {
    this.print(e.label, e), e.optional && this.tokenChar(63), this.tokenChar(58), this.space(), this.print(e.elementType, e);
  }
  i(xTe, "TSNamedTupleMember");
  function PTe(e) {
    EL(this, e, "|");
  }
  i(PTe, "TSUnionType");
  function ATe(e) {
    EL(this, e, "&");
  }
  i(ATe, "TSIntersectionType");
  function EL(e, t, r) {
    e.printJoin(t.types, t, {
      separator() {
        this.space(), this.token(r), this.space();
      }
    });
  }
  i(EL, "tsPrintUnionOrIntersectionType");
  function CTe(e) {
    this.print(e.checkType), this.space(), this.word("extends"), this.space(), this.print(e.extendsType), this.space(), this.tokenChar(63), this.
    space(), this.print(e.trueType), this.space(), this.tokenChar(58), this.space(), this.print(e.falseType);
  }
  i(CTe, "TSConditionalType");
  function wTe(e) {
    this.token("infer"), this.space(), this.print(e.typeParameter);
  }
  i(wTe, "TSInferType");
  function DTe(e) {
    this.tokenChar(40), this.print(e.typeAnnotation, e), this.tokenChar(41);
  }
  i(DTe, "TSParenthesizedType");
  function ITe(e) {
    this.word(e.operator), this.space(), this.print(e.typeAnnotation, e);
  }
  i(ITe, "TSTypeOperator");
  function _Te(e) {
    this.print(e.objectType, e, !0), this.tokenChar(91), this.print(e.indexType, e), this.tokenChar(93);
  }
  i(_Te, "TSIndexedAccessType");
  function OTe(e) {
    let {
      nameType: t,
      optional: r,
      readonly: s,
      typeParameter: n,
      typeAnnotation: a
    } = e;
    this.tokenChar(123), this.space(), s && (bL(this, s), this.word("readonly"), this.space()), this.tokenChar(91), this.word(n.name), this.
    space(), this.word("in"), this.space(), this.print(n.constraint, n), t && (this.space(), this.word("as"), this.space(), this.print(t, e)),
    this.tokenChar(93), r && (bL(this, r), this.tokenChar(63)), a && (this.tokenChar(58), this.space(), this.print(a, e)), this.space(), this.
    tokenChar(125);
  }
  i(OTe, "TSMappedType");
  function bL(e, t) {
    t !== !0 && e.token(t);
  }
  i(bL, "tokenIfPlusMinus");
  function NTe(e) {
    this.print(e.literal, e);
  }
  i(NTe, "TSLiteralType");
  function RTe(e) {
    this.print(e.expression, e), this.print(e.typeParameters, e);
  }
  i(RTe, "TSExpressionWithTypeArguments");
  function kTe(e) {
    let {
      declare: t,
      id: r,
      typeParameters: s,
      extends: n,
      body: a
    } = e;
    t && (this.word("declare"), this.space()), this.word("interface"), this.space(), this.print(r, e), this.print(s, e), n != null && n.length &&
    (this.space(), this.word("extends"), this.space(), this.printList(n, e)), this.space(), this.print(a, e);
  }
  i(kTe, "TSInterfaceDeclaration");
  function FTe(e) {
    this.tsPrintTypeLiteralOrInterfaceBody(e.body, e);
  }
  i(FTe, "TSInterfaceBody");
  function LTe(e) {
    let {
      declare: t,
      id: r,
      typeParameters: s,
      typeAnnotation: n
    } = e;
    t && (this.word("declare"), this.space()), this.word("type"), this.space(), this.print(r, e), this.print(s, e), this.space(), this.tokenChar(
    61), this.space(), this.print(n, e), this.tokenChar(59);
  }
  i(LTe, "TSTypeAliasDeclaration");
  function BTe(e) {
    var t;
    let {
      type: r,
      expression: s,
      typeAnnotation: n
    } = e, a = !!((t = s.trailingComments) != null && t.length);
    this.print(s, e, !0, void 0, a), this.space(), this.word(r === "TSAsExpression" ? "as" : "satisfies"), this.space(), this.print(n, e);
  }
  i(BTe, "TSTypeExpression");
  function MTe(e) {
    let {
      typeAnnotation: t,
      expression: r
    } = e;
    this.tokenChar(60), this.print(t, e), this.tokenChar(62), this.space(), this.print(r, e);
  }
  i(MTe, "TSTypeAssertion");
  function jTe(e) {
    this.print(e.expression, e), this.print(e.typeParameters, e);
  }
  i(jTe, "TSInstantiationExpression");
  function qTe(e) {
    let {
      declare: t,
      const: r,
      id: s,
      members: n
    } = e;
    t && (this.word("declare"), this.space()), r && (this.word("const"), this.space()), this.word("enum"), this.space(), this.print(s, e), this.
    space(), gv(this, n, e);
  }
  i(qTe, "TSEnumDeclaration");
  function $Te(e) {
    let {
      id: t,
      initializer: r
    } = e;
    this.print(t, e), r && (this.space(), this.tokenChar(61), this.space(), this.print(r, e)), this.tokenChar(44);
  }
  i($Te, "TSEnumMember");
  function UTe(e) {
    let {
      declare: t,
      id: r
    } = e;
    if (t && (this.word("declare"), this.space()), e.global || (this.word(r.type === "Identifier" ? "namespace" : "module"), this.space()), this.
    print(r, e), !e.body) {
      this.tokenChar(59);
      return;
    }
    let s = e.body;
    for (; s.type === "TSModuleDeclaration"; )
      this.tokenChar(46), this.print(s.id, s), s = s.body;
    this.space(), this.print(s, e);
  }
  i(UTe, "TSModuleDeclaration");
  function VTe(e) {
    gv(this, e.body, e);
  }
  i(VTe, "TSModuleBlock");
  function WTe(e) {
    let {
      argument: t,
      qualifier: r,
      typeParameters: s
    } = e;
    this.word("import"), this.tokenChar(40), this.print(t, e), this.tokenChar(41), r && (this.tokenChar(46), this.print(r, e)), s && this.print(
    s, e);
  }
  i(WTe, "TSImportType");
  function HTe(e) {
    let {
      isExport: t,
      id: r,
      moduleReference: s
    } = e;
    t && (this.word("export"), this.space()), this.word("import"), this.space(), this.print(r, e), this.space(), this.tokenChar(61), this.space(),
    this.print(s, e), this.tokenChar(59);
  }
  i(HTe, "TSImportEqualsDeclaration");
  function GTe(e) {
    this.token("require("), this.print(e.expression, e), this.tokenChar(41);
  }
  i(GTe, "TSExternalModuleReference");
  function KTe(e) {
    this.print(e.expression, e), this.tokenChar(33);
  }
  i(KTe, "TSNonNullExpression");
  function YTe(e) {
    this.word("export"), this.space(), this.tokenChar(61), this.space(), this.print(e.expression, e), this.tokenChar(59);
  }
  i(YTe, "TSExportAssignment");
  function XTe(e) {
    this.word("export"), this.space(), this.word("as"), this.space(), this.word("namespace"), this.space(), this.print(e.id, e);
  }
  i(XTe, "TSNamespaceExportDeclaration");
  function zTe(e) {
    let {
      typeParameters: t
    } = e, r = e.parameters;
    this.print(t, e), this.tokenChar(40), this._parameters(r, e), this.tokenChar(41);
    let s = e.typeAnnotation;
    this.print(s, e);
  }
  i(zTe, "tsPrintSignatureDeclarationBase");
  function JTe(e) {
    let t = e.type === "ClassAccessorProperty" || e.type === "ClassProperty";
    t && e.declare && (this.word("declare"), this.space()), e.accessibility && (this.word(e.accessibility), this.space()), e.static && (this.
    word("static"), this.space()), e.override && (this.word("override"), this.space()), e.abstract && (this.word("abstract"), this.space()),
    t && e.readonly && (this.word("readonly"), this.space());
  }
  i(JTe, "tsPrintClassMemberModifiers");
});

// ../node_modules/@babel/generator/lib/generators/index.js
var SL = y((pt) => {
  "use strict";
  Object.defineProperty(pt, "__esModule", {
    value: !0
  });
  var bv = XF();
  Object.keys(bv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === bv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return bv[e];
      }, "get")
    });
  });
  var Ev = QF();
  Object.keys(Ev).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Ev[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Ev[e];
      }, "get")
    });
  });
  var vv = rL();
  Object.keys(vv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === vv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return vv[e];
      }, "get")
    });
  });
  var Sv = sL();
  Object.keys(Sv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Sv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Sv[e];
      }, "get")
    });
  });
  var Tv = nL();
  Object.keys(Tv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Tv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Tv[e];
      }, "get")
    });
  });
  var xv = dv();
  Object.keys(xv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === xv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return xv[e];
      }, "get")
    });
  });
  var Pv = mv();
  Object.keys(Pv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Pv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Pv[e];
      }, "get")
    });
  });
  var Av = mL();
  Object.keys(Av).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Av[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Av[e];
      }, "get")
    });
  });
  var Cv = yL();
  Object.keys(Cv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Cv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Cv[e];
      }, "get")
    });
  });
  var wv = gL();
  Object.keys(wv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === wv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return wv[e];
      }, "get")
    });
  });
  var Dv = vL();
  Object.keys(Dv).forEach(function(e) {
    e === "default" || e === "__esModule" || e in pt && pt[e] === Dv[e] || Object.defineProperty(pt, e, {
      enumerable: !0,
      get: /* @__PURE__ */ i(function() {
        return Dv[e];
      }, "get")
    });
  });
});

// ../node_modules/@babel/generator/lib/printer.js
var xL = y((md) => {
  "use strict";
  Object.defineProperty(md, "__esModule", {
    value: !0
  });
  md.default = void 0;
  var QTe = LF(), ZTe = fv(), exe = Re(), txe = SL(), {
    isFunction: rxe,
    isStatement: sxe,
    isClassBody: nxe,
    isTSInterfaceBody: ixe,
    isTSEnumDeclaration: axe
  } = exe, oxe = /e/i, lxe = /\.0+$/, TL = /[\n\r\u2028\u2029]/, uxe = /[\n\r\u2028\u2029]|\*\//, {
    needsParens: cxe
  } = ZTe, lc = class {
    static {
      i(this, "Printer");
    }
    constructor(t, r) {
      this.inForStatementInitCounter = 0, this._printStack = [], this._indent = 0, this._indentRepeat = 0, this._insideAux = !1, this._parenPushNewlineState =
      null, this._noLineTerminator = !1, this._printAuxAfterOnNextUserNode = !1, this._printedComments = /* @__PURE__ */ new Set(), this._endsWithInteger =
      !1, this._endsWithWord = !1, this._lastCommentLine = 0, this._endsWithInnerRaw = !1, this._indentInnerComments = !0, this.format = t, this.
      _indentRepeat = t.indent.style.length, this._inputMap = r?._inputMap, this._buf = new QTe.default(r, t.indent.style[0]);
    }
    generate(t) {
      return this.print(t), this._maybeAddAuxComment(), this._buf.get();
    }
    indent() {
      this.format.compact || this.format.concise || this._indent++;
    }
    dedent() {
      this.format.compact || this.format.concise || this._indent--;
    }
    semicolon(t = !1) {
      this._maybeAddAuxComment(), t ? this._appendChar(59) : this._queue(59), this._noLineTerminator = !1;
    }
    rightBrace(t) {
      this.format.minified && this._buf.removeLastSemicolon(), this.sourceWithOffset("end", t.loc, -1), this.tokenChar(125);
    }
    rightParens(t) {
      this.sourceWithOffset("end", t.loc, -1), this.tokenChar(41);
    }
    space(t = !1) {
      if (!this.format.compact) {
        if (t)
          this._space();
        else if (this._buf.hasContent()) {
          let r = this.getLastChar();
          r !== 32 && r !== 10 && this._space();
        }
      }
    }
    word(t, r = !1) {
      this._maybePrintInnerComments(), (this._endsWithWord || t.charCodeAt(0) === 47 && this.endsWith(47)) && this._space(), this._maybeAddAuxComment(),
      this._append(t, !1), this._endsWithWord = !0, this._noLineTerminator = r;
    }
    number(t, r) {
      function s(n) {
        if (n.length > 2 && n.charCodeAt(0) === 48) {
          let a = n.charCodeAt(1);
          return a === 98 || a === 111 || a === 120;
        }
        return !1;
      }
      i(s, "isNonDecimalLiteral"), this.word(t), this._endsWithInteger = Number.isInteger(r) && !s(t) && !oxe.test(t) && !lxe.test(t) && t.charCodeAt(
      t.length - 1) !== 46;
    }
    token(t, r = !1) {
      this._maybePrintInnerComments();
      let s = this.getLastChar(), n = t.charCodeAt(0);
      (s === 33 && (t === "--" || n === 61) || n === 43 && s === 43 || n === 45 && s === 45 || n === 46 && this._endsWithInteger) && this._space(),
      this._maybeAddAuxComment(), this._append(t, r), this._noLineTerminator = !1;
    }
    tokenChar(t) {
      this._maybePrintInnerComments();
      let r = this.getLastChar();
      (t === 43 && r === 43 || t === 45 && r === 45 || t === 46 && this._endsWithInteger) && this._space(), this._maybeAddAuxComment(), this.
      _appendChar(t), this._noLineTerminator = !1;
    }
    newline(t = 1, r) {
      if (!(t <= 0)) {
        if (!r) {
          if (this.format.retainLines || this.format.compact) return;
          if (this.format.concise) {
            this.space();
            return;
          }
        }
        t > 2 && (t = 2), t -= this._buf.getNewlineCount();
        for (let s = 0; s < t; s++)
          this._newline();
      }
    }
    endsWith(t) {
      return this.getLastChar() === t;
    }
    getLastChar() {
      return this._buf.getLastChar();
    }
    endsWithCharAndNewline() {
      return this._buf.endsWithCharAndNewline();
    }
    removeTrailingNewline() {
      this._buf.removeTrailingNewline();
    }
    exactSource(t, r) {
      if (!t) {
        r();
        return;
      }
      this._catchUp("start", t), this._buf.exactSource(t, r);
    }
    source(t, r) {
      r && (this._catchUp(t, r), this._buf.source(t, r));
    }
    sourceWithOffset(t, r, s) {
      r && (this._catchUp(t, r), this._buf.sourceWithOffset(t, r, s));
    }
    withSource(t, r, s) {
      if (!r) {
        s();
        return;
      }
      this._catchUp(t, r), this._buf.withSource(t, r, s);
    }
    sourceIdentifierName(t, r) {
      if (!this._buf._canMarkIdName) return;
      let s = this._buf._sourcePosition;
      s.identifierNamePos = r, s.identifierName = t;
    }
    _space() {
      this._queue(32);
    }
    _newline() {
      this._queue(10);
    }
    _append(t, r) {
      this._maybeAddParen(t), this._maybeIndent(t.charCodeAt(0)), this._buf.append(t, r), this._endsWithWord = !1, this._endsWithInteger = !1;
    }
    _appendChar(t) {
      this._maybeAddParenChar(t), this._maybeIndent(t), this._buf.appendChar(t), this._endsWithWord = !1, this._endsWithInteger = !1;
    }
    _queue(t) {
      this._maybeAddParenChar(t), this._maybeIndent(t), this._buf.queue(t), this._endsWithWord = !1, this._endsWithInteger = !1;
    }
    _maybeIndent(t) {
      this._indent && t !== 10 && this.endsWith(10) && this._buf.queueIndentation(this._getIndent());
    }
    _shouldIndent(t) {
      if (this._indent && t !== 10 && this.endsWith(10))
        return !0;
    }
    _maybeAddParenChar(t) {
      let r = this._parenPushNewlineState;
      if (r && t !== 32) {
        if (t !== 10) {
          this._parenPushNewlineState = null;
          return;
        }
        this.tokenChar(40), this.indent(), r.printed = !0;
      }
    }
    _maybeAddParen(t) {
      let r = this._parenPushNewlineState;
      if (!r) return;
      let s = t.length, n;
      for (n = 0; n < s && t.charCodeAt(n) === 32; n++) ;
      if (n === s)
        return;
      let a = t.charCodeAt(n);
      if (a !== 10) {
        if (a !== 47 || n + 1 === s) {
          this._parenPushNewlineState = null;
          return;
        }
        let o = t.charCodeAt(n + 1);
        if (o === 42)
          return;
        if (o !== 47) {
          this._parenPushNewlineState = null;
          return;
        }
      }
      this.tokenChar(40), this.indent(), r.printed = !0;
    }
    catchUp(t) {
      if (!this.format.retainLines) return;
      let r = t - this._buf.getCurrentLine();
      for (let s = 0; s < r; s++)
        this._newline();
    }
    _catchUp(t, r) {
      var s;
      if (!this.format.retainLines) return;
      let n = r == null || (s = r[t]) == null ? void 0 : s.line;
      if (n != null) {
        let a = n - this._buf.getCurrentLine();
        for (let o = 0; o < a; o++)
          this._newline();
      }
    }
    _getIndent() {
      return this._indentRepeat * this._indent;
    }
    printTerminatorless(t, r, s) {
      if (s)
        this._noLineTerminator = !0, this.print(t, r);
      else {
        let n = {
          printed: !1
        };
        this._parenPushNewlineState = n, this.print(t, r), n.printed && (this.dedent(), this.newline(), this.tokenChar(41));
      }
    }
    print(t, r, s, n, a) {
      var o, l;
      if (!t) return;
      this._endsWithInnerRaw = !1;
      let u = t.type, c = this.format, f = c.concise;
      t._compact && (c.concise = !0);
      let p = this[u];
      if (p === void 0)
        throw new ReferenceError(`unknown node of type ${JSON.stringify(u)} with constructor ${JSON.stringify(t.constructor.name)}`);
      this._printStack.push(t);
      let d = this._insideAux;
      this._insideAux = t.loc == null, this._maybeAddAuxComment(this._insideAux && !d);
      let m = (o = t.extra) == null ? void 0 : o.parenthesized, b = a || m && c.retainFunctionParens && u === "FunctionExpression" || cxe(t,
      r, this._printStack);
      if (!b && m && (l = t.leadingComments) != null && l.length && t.leadingComments[0].type === "CommentBlock")
        switch (r?.type) {
          case "ExpressionStatement":
          case "VariableDeclarator":
          case "AssignmentExpression":
          case "ReturnStatement":
            break;
          case "CallExpression":
          case "OptionalCallExpression":
          case "NewExpression":
            if (r.callee !== t) break;
          default:
            b = !0;
        }
      b && (this.tokenChar(40), this._endsWithInnerRaw = !1), this._lastCommentLine = 0, this._printLeadingComments(t, r);
      let h = u === "Program" || u === "File" ? null : t.loc;
      this.exactSource(h, p.bind(this, t, r)), b ? (this._printTrailingComments(t, r), this.tokenChar(41), this._noLineTerminator = s) : s &&
      !this._noLineTerminator ? (this._noLineTerminator = !0, this._printTrailingComments(t, r)) : this._printTrailingComments(t, r, n), this.
      _printStack.pop(), c.concise = f, this._insideAux = d, this._endsWithInnerRaw = !1;
    }
    _maybeAddAuxComment(t) {
      t && this._printAuxBeforeComment(), this._insideAux || this._printAuxAfterComment();
    }
    _printAuxBeforeComment() {
      if (this._printAuxAfterOnNextUserNode) return;
      this._printAuxAfterOnNextUserNode = !0;
      let t = this.format.auxiliaryCommentBefore;
      t && this._printComment({
        type: "CommentBlock",
        value: t
      }, 0);
    }
    _printAuxAfterComment() {
      if (!this._printAuxAfterOnNextUserNode) return;
      this._printAuxAfterOnNextUserNode = !1;
      let t = this.format.auxiliaryCommentAfter;
      t && this._printComment({
        type: "CommentBlock",
        value: t
      }, 0);
    }
    getPossibleRaw(t) {
      let r = t.extra;
      if (r?.raw != null && r.rawValue != null && t.value === r.rawValue)
        return r.raw;
    }
    printJoin(t, r, s = {}) {
      if (!(t != null && t.length)) return;
      let {
        indent: n
      } = s;
      if (n == null && this.format.retainLines) {
        var a;
        let p = (a = t[0].loc) == null ? void 0 : a.start.line;
        p != null && p !== this._buf.getCurrentLine() && (n = !0);
      }
      n && this.indent();
      let o = {
        addNewlines: s.addNewlines,
        nextNodeStartLine: 0
      }, l = s.separator ? s.separator.bind(this) : null, u = t.length;
      for (let p = 0; p < u; p++) {
        let d = t[p];
        if (d && (s.statement && this._printNewline(p === 0, o), this.print(d, r, void 0, s.trailingCommentsLineOffset || 0), s.iterator == null ||
        s.iterator(d, p), p < u - 1 && l?.(), s.statement)) {
          var c;
          if ((c = d.trailingComments) != null && c.length || (this._lastCommentLine = 0), p + 1 === u)
            this.newline(1);
          else {
            var f;
            let m = t[p + 1];
            o.nextNodeStartLine = ((f = m.loc) == null ? void 0 : f.start.line) || 0, this._printNewline(!0, o);
          }
        }
      }
      n && this.dedent();
    }
    printAndIndentOnComments(t, r) {
      let s = t.leadingComments && t.leadingComments.length > 0;
      s && this.indent(), this.print(t, r), s && this.dedent();
    }
    printBlock(t) {
      let r = t.body;
      r.type !== "EmptyStatement" && this.space(), this.print(r, t);
    }
    _printTrailingComments(t, r, s) {
      let {
        innerComments: n,
        trailingComments: a
      } = t;
      n != null && n.length && this._printComments(2, n, t, r, s), a != null && a.length && this._printComments(2, a, t, r, s);
    }
    _printLeadingComments(t, r) {
      let s = t.leadingComments;
      s != null && s.length && this._printComments(0, s, t, r);
    }
    _maybePrintInnerComments() {
      this._endsWithInnerRaw && this.printInnerComments(), this._endsWithInnerRaw = !0, this._indentInnerComments = !0;
    }
    printInnerComments() {
      let t = this._printStack[this._printStack.length - 1], r = t.innerComments;
      if (!(r != null && r.length)) return;
      let s = this.endsWith(32), n = this._indentInnerComments, a = this._printedComments.size;
      n && this.indent(), this._printComments(1, r, t), s && a !== this._printedComments.size && this.space(), n && this.dedent();
    }
    noIndentInnerCommentsHere() {
      this._indentInnerComments = !1;
    }
    printSequence(t, r, s = {}) {
      var n;
      s.statement = !0, (n = s.indent) != null || (s.indent = !1), this.printJoin(t, r, s);
    }
    printList(t, r, s = {}) {
      s.separator == null && (s.separator = fxe), this.printJoin(t, r, s);
    }
    _printNewline(t, r) {
      let s = this.format;
      if (s.retainLines || s.compact) return;
      if (s.concise) {
        this.space();
        return;
      }
      if (!t)
        return;
      let n = r.nextNodeStartLine, a = this._lastCommentLine;
      if (n > 0 && a > 0) {
        let o = n - a;
        if (o >= 0) {
          this.newline(o || 1);
          return;
        }
      }
      this._buf.hasContent() && this.newline(1);
    }
    _shouldPrintComment(t) {
      return t.ignore || this._printedComments.has(t) ? 0 : this._noLineTerminator && uxe.test(t.value) ? 2 : (this._printedComments.add(t),
      this.format.shouldPrintComment(t.value) ? 1 : 0);
    }
    _printComment(t, r) {
      let s = this._noLineTerminator, n = t.type === "CommentBlock", a = n && r !== 1 && !this._noLineTerminator;
      a && this._buf.hasContent() && r !== 2 && this.newline(1);
      let o = this.getLastChar();
      o !== 91 && o !== 123 && this.space();
      let l;
      if (n) {
        let {
          _parenPushNewlineState: c
        } = this;
        if (c?.printed === !1 && TL.test(t.value) && (this.tokenChar(40), this.indent(), c.printed = !0), l = `/*${t.value}*/`, this.format.
        indent.adjustMultilineComment) {
          var u;
          let f = (u = t.loc) == null ? void 0 : u.start.column;
          if (f) {
            let p = new RegExp("\\n\\s{1," + f + "}", "g");
            l = l.replace(p, `
`);
          }
          if (this.format.concise)
            l = l.replace(/\n(?!$)/g, `
`);
          else {
            let p = this.format.retainLines ? 0 : this._buf.getCurrentColumn();
            (this._shouldIndent(47) || this.format.retainLines) && (p += this._getIndent()), l = l.replace(/\n(?!$)/g, `
${" ".repeat(p)}`);
          }
        }
      } else s ? l = `/*${t.value}*/` : l = `//${t.value}`;
      this.endsWith(47) && this._space(), this.source("start", t.loc), this._append(l, n), !n && !s && this.newline(1, !0), a && r !== 3 && this.
      newline(1);
    }
    _printComments(t, r, s, n, a = 0) {
      let o = s.loc, l = r.length, u = !!o, c = u ? o.start.line : 0, f = u ? o.end.line : 0, p = 0, d = 0, m = this._noLineTerminator ? function() {
      } : this.newline.bind(this);
      for (let b = 0; b < l; b++) {
        let h = r[b], g = this._shouldPrintComment(h);
        if (g === 2) {
          u = !1;
          break;
        }
        if (u && h.loc && g === 1) {
          let E = h.loc.start.line, D = h.loc.end.line;
          if (t === 0) {
            let C = 0;
            b === 0 ? this._buf.hasContent() && (h.type === "CommentLine" || E != D) && (C = d = 1) : C = E - p, p = D, m(C), this._printComment(
            h, 1), b + 1 === l && (m(Math.max(c - p, d)), p = c);
          } else if (t === 1) {
            let C = E - (b === 0 ? c : p);
            p = D, m(C), this._printComment(h, 1), b + 1 === l && (m(Math.min(1, f - p)), p = f);
          } else {
            let C = E - (b === 0 ? f - a : p);
            p = D, m(C), this._printComment(h, 1);
          }
        } else {
          if (u = !1, g !== 1)
            continue;
          if (l === 1) {
            let E = h.loc ? h.loc.start.line === h.loc.end.line : !TL.test(h.value), D = E && !sxe(s) && !nxe(n) && !ixe(n) && !axe(n);
            t === 0 ? this._printComment(h, D && s.type !== "ObjectExpression" || E && rxe(n, {
              body: s
            }) ? 1 : 0) : D && t === 2 ? this._printComment(h, 1) : this._printComment(h, 0);
          } else t === 1 && !(s.type === "ObjectExpression" && s.properties.length > 1) && s.type !== "ClassBody" && s.type !== "TSInterface\
Body" ? this._printComment(h, b === 0 ? 2 : b === l - 1 ? 3 : 0) : this._printComment(h, 0);
        }
      }
      t === 2 && u && p && (this._lastCommentLine = p);
    }
  };
  Object.assign(lc.prototype, txe);
  lc.prototype.Noop = /* @__PURE__ */ i(function() {
  }, "Noop");
  var Vet = md.default = lc;
  function fxe() {
    this.tokenChar(44), this.space();
  }
  i(fxe, "commaSeparator");
});

// ../node_modules/@babel/generator/lib/index.js
var gd = y((yd) => {
  "use strict";
  Object.defineProperty(yd, "__esModule", {
    value: !0
  });
  yd.default = pxe;
  var PL = FF(), AL = xL();
  function CL(e, t) {
    var r;
    let s = {
      auxiliaryCommentBefore: t.auxiliaryCommentBefore,
      auxiliaryCommentAfter: t.auxiliaryCommentAfter,
      shouldPrintComment: t.shouldPrintComment,
      retainLines: t.retainLines,
      retainFunctionParens: t.retainFunctionParens,
      comments: t.comments == null || t.comments,
      compact: t.compact,
      minified: t.minified,
      concise: t.concise,
      indent: {
        adjustMultilineComment: !0,
        style: "  "
      },
      jsescOption: Object.assign({
        quotes: "double",
        wrap: !0,
        minimal: !1
      }, t.jsescOption),
      recordAndTupleSyntaxType: (r = t.recordAndTupleSyntaxType) != null ? r : "hash",
      topicToken: t.topicToken,
      importAttributesKeyword: t.importAttributesKeyword
    };
    s.decoratorsBeforeExport = t.decoratorsBeforeExport, s.jsescOption.json = t.jsonCompatibleStrings, s.minified ? (s.compact = !0, s.shouldPrintComment =
    s.shouldPrintComment || (() => s.comments)) : s.shouldPrintComment = s.shouldPrintComment || ((l) => s.comments || l.includes("@license") ||
    l.includes("@preserve")), s.compact === "auto" && (s.compact = typeof e == "string" && e.length > 5e5, s.compact && console.error(`[BABE\
L] Note: The code generator has deoptimised the styling of ${t.filename} as it exceeds the max of 500KB.`)), s.compact && (s.indent.adjustMultilineComment =
    !1);
    let {
      auxiliaryCommentBefore: n,
      auxiliaryCommentAfter: a,
      shouldPrintComment: o
    } = s;
    return n && !o(n) && (s.auxiliaryCommentBefore = void 0), a && !o(a) && (s.auxiliaryCommentAfter = void 0), s;
  }
  i(CL, "normalizeOptions");
  yd.CodeGenerator = class {
    static {
      i(this, "CodeGenerator");
    }
    constructor(t, r = {}, s) {
      this._ast = void 0, this._format = void 0, this._map = void 0, this._ast = t, this._format = CL(s, r), this._map = r.sourceMaps ? new PL.
      default(r, s) : null;
    }
    generate() {
      return new AL.default(this._format, this._map).generate(this._ast);
    }
  };
  function pxe(e, t = {}, r) {
    let s = CL(r, t), n = t.sourceMaps ? new PL.default(t, r) : null;
    return new AL.default(s, n).generate(e);
  }
  i(pxe, "generate");
});

// ../node_modules/@babel/traverse/lib/path/ancestry.js
var wL = y((js) => {
  "use strict";
  Object.defineProperty(js, "__esModule", {
    value: !0
  });
  js.find = yxe;
  js.findParent = mxe;
  js.getAncestry = Sxe;
  js.getDeepestCommonAncestorFrom = vxe;
  js.getEarliestCommonAncestorFrom = Exe;
  js.getFunctionParent = gxe;
  js.getStatementParent = bxe;
  js.inType = Pxe;
  js.isAncestor = Txe;
  js.isDescendant = xxe;
  var dxe = Re(), {
    VISITOR_KEYS: hxe
  } = dxe;
  function mxe(e) {
    let t = this;
    for (; t = t.parentPath; )
      if (e(t)) return t;
    return null;
  }
  i(mxe, "findParent");
  function yxe(e) {
    let t = this;
    do
      if (e(t)) return t;
    while (t = t.parentPath);
    return null;
  }
  i(yxe, "find");
  function gxe() {
    return this.findParent((e) => e.isFunction());
  }
  i(gxe, "getFunctionParent");
  function bxe() {
    let e = this;
    do {
      if (!e.parentPath || Array.isArray(e.container) && e.isStatement())
        break;
      e = e.parentPath;
    } while (e);
    if (e && (e.isProgram() || e.isFile()))
      throw new Error("File/Program node, we can't possibly find a statement parent to this");
    return e;
  }
  i(bxe, "getStatementParent");
  function Exe(e) {
    return this.getDeepestCommonAncestorFrom(e, function(t, r, s) {
      let n, a = hxe[t.type];
      for (let o of s) {
        let l = o[r + 1];
        if (!n) {
          n = l;
          continue;
        }
        if (l.listKey && n.listKey === l.listKey && l.key < n.key) {
          n = l;
          continue;
        }
        let u = a.indexOf(n.parentKey), c = a.indexOf(l.parentKey);
        u > c && (n = l);
      }
      return n;
    });
  }
  i(Exe, "getEarliestCommonAncestorFrom");
  function vxe(e, t) {
    if (!e.length)
      return this;
    if (e.length === 1)
      return e[0];
    let r = 1 / 0, s, n, a = e.map((l) => {
      let u = [];
      do
        u.unshift(l);
      while ((l = l.parentPath) && l !== this);
      return u.length < r && (r = u.length), u;
    }), o = a[0];
    e: for (let l = 0; l < r; l++) {
      let u = o[l];
      for (let c of a)
        if (c[l] !== u)
          break e;
      s = l, n = u;
    }
    if (n)
      return t ? t(n, s, a) : n;
    throw new Error("Couldn't find intersection");
  }
  i(vxe, "getDeepestCommonAncestorFrom");
  function Sxe() {
    let e = this, t = [];
    do
      t.push(e);
    while (e = e.parentPath);
    return t;
  }
  i(Sxe, "getAncestry");
  function Txe(e) {
    return e.isDescendant(this);
  }
  i(Txe, "isAncestor");
  function xxe(e) {
    return !!this.findParent((t) => t === e);
  }
  i(xxe, "isDescendant");
  function Pxe(...e) {
    let t = this;
    for (; t; ) {
      for (let r of e)
        if (t.node.type === r) return !0;
      t = t.parentPath;
    }
    return !1;
  }
  i(Pxe, "inType");
});

// ../node_modules/@babel/traverse/lib/path/inference/util.js
var _v = y((Iv) => {
  "use strict";
  Object.defineProperty(Iv, "__esModule", {
    value: !0
  });
  Iv.createUnionType = Ixe;
  var Axe = Re(), {
    createFlowUnionType: DL,
    createTSUnionType: IL,
    createUnionTypeAnnotation: Cxe,
    isFlowType: wxe,
    isTSType: Dxe
  } = Axe;
  function Ixe(e) {
    {
      if (e.every((t) => wxe(t)))
        return DL ? DL(e) : Cxe(e);
      if (e.every((t) => Dxe(t)) && IL)
        return IL(e);
    }
  }
  i(Ixe, "createUnionType");
});

// ../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js
var kL = y((Ov) => {
  "use strict";
  Object.defineProperty(Ov, "__esModule", {
    value: !0
  });
  Ov.default = kxe;
  var _xe = Re(), OL = _v(), {
    BOOLEAN_NUMBER_BINARY_OPERATORS: Oxe,
    createTypeAnnotationBasedOnTypeof: Nxe,
    numberTypeAnnotation: NL,
    voidTypeAnnotation: Rxe
  } = _xe;
  function kxe(e) {
    if (!this.isReferenced()) return;
    let t = this.scope.getBinding(e.name);
    if (t)
      return t.identifier.typeAnnotation ? t.identifier.typeAnnotation : Fxe(t, this, e.name);
    if (e.name === "undefined")
      return Rxe();
    if (e.name === "NaN" || e.name === "Infinity")
      return NL();
    e.name;
  }
  i(kxe, "_default");
  function Fxe(e, t, r) {
    let s = [], n = [], a = _L(e, t, n), o = RL(e, t, r);
    if (o) {
      let l = _L(e, o.ifStatement);
      a = a.filter((u) => l.indexOf(u) < 0), s.push(o.typeAnnotation);
    }
    if (a.length) {
      a.push(...n);
      for (let l of a)
        s.push(l.getTypeAnnotation());
    }
    if (s.length)
      return (0, OL.createUnionType)(s);
  }
  i(Fxe, "getTypeAnnotationBindingConstantViolations");
  function _L(e, t, r) {
    let s = e.constantViolations.slice();
    return s.unshift(e.path), s.filter((n) => {
      n = n.resolve();
      let a = n._guessExecutionStatusRelativeTo(t);
      return r && a === "unknown" && r.push(n), a === "before";
    });
  }
  i(_L, "getConstantViolationsBefore");
  function Lxe(e, t) {
    let r = t.node.operator, s = t.get("right").resolve(), n = t.get("left").resolve(), a;
    if (n.isIdentifier({
      name: e
    }) ? a = s : s.isIdentifier({
      name: e
    }) && (a = n), a)
      return r === "===" ? a.getTypeAnnotation() : Oxe.indexOf(r) >= 0 ? NL() : void 0;
    if (r !== "===" && r !== "==") return;
    let o, l;
    if (n.isUnaryExpression({
      operator: "typeof"
    }) ? (o = n, l = s) : s.isUnaryExpression({
      operator: "typeof"
    }) && (o = s, l = n), !o || !o.get("argument").isIdentifier({
      name: e
    }) || (l = l.resolve(), !l.isLiteral())) return;
    let u = l.node.value;
    if (typeof u == "string")
      return Nxe(u);
  }
  i(Lxe, "inferAnnotationFromBinaryExpression");
  function Bxe(e, t, r) {
    let s;
    for (; s = t.parentPath; ) {
      if (s.isIfStatement() || s.isConditionalExpression())
        return t.key === "test" ? void 0 : s;
      if (s.isFunction() && s.parentPath.scope.getBinding(r) !== e)
        return;
      t = s;
    }
  }
  i(Bxe, "getParentConditionalPath");
  function RL(e, t, r) {
    let s = Bxe(e, t, r);
    if (!s) return;
    let a = [s.get("test")], o = [];
    for (let l = 0; l < a.length; l++) {
      let u = a[l];
      if (u.isLogicalExpression())
        u.node.operator === "&&" && (a.push(u.get("left")), a.push(u.get("right")));
      else if (u.isBinaryExpression()) {
        let c = Lxe(r, u);
        c && o.push(c);
      }
    }
    return o.length ? {
      typeAnnotation: (0, OL.createUnionType)(o),
      ifStatement: s
    } : RL(e, s, r);
  }
  i(RL, "getConditionalAnnotation");
});

// ../node_modules/@babel/traverse/lib/path/inference/inferers.js
var UL = y((St) => {
  "use strict";
  Object.defineProperty(St, "__esModule", {
    value: !0
  });
  St.ArrayExpression = jL;
  St.AssignmentExpression = aPe;
  St.BinaryExpression = tPe;
  St.BooleanLiteral = cPe;
  St.CallExpression = EPe;
  St.ConditionalExpression = sPe;
  St.ClassDeclaration = St.ClassExpression = St.FunctionDeclaration = St.ArrowFunctionExpression = St.FunctionExpression = hPe;
  Object.defineProperty(St, "Identifier", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return jxe.default;
    }, "get")
  });
  St.LogicalExpression = rPe;
  St.NewExpression = Qxe;
  St.NullLiteral = fPe;
  St.NumericLiteral = uPe;
  St.ObjectExpression = dPe;
  St.ParenthesizedExpression = iPe;
  St.RegExpLiteral = pPe;
  St.RestElement = qL;
  St.SequenceExpression = nPe;
  St.StringLiteral = lPe;
  St.TSAsExpression = ML;
  St.TSNonNullExpression = Jxe;
  St.TaggedTemplateExpression = vPe;
  St.TemplateLiteral = Zxe;
  St.TypeCastExpression = BL;
  St.UnaryExpression = ePe;
  St.UpdateExpression = oPe;
  St.VariableDeclarator = zxe;
  var Mxe = Re(), jxe = kL(), LL = _v(), {
    BOOLEAN_BINARY_OPERATORS: qxe,
    BOOLEAN_UNARY_OPERATORS: $xe,
    NUMBER_BINARY_OPERATORS: Uxe,
    NUMBER_UNARY_OPERATORS: Vxe,
    STRING_UNARY_OPERATORS: Wxe,
    anyTypeAnnotation: FL,
    arrayTypeAnnotation: Nv,
    booleanTypeAnnotation: Rv,
    buildMatchMemberExpression: bd,
    genericTypeAnnotation: sa,
    identifier: za,
    nullLiteralTypeAnnotation: Hxe,
    numberTypeAnnotation: il,
    stringTypeAnnotation: Ja,
    tupleTypeAnnotation: Gxe,
    unionTypeAnnotation: Kxe,
    voidTypeAnnotation: Yxe,
    isIdentifier: Xxe
  } = Mxe;
  function zxe() {
    if (this.get("id").isIdentifier())
      return this.get("init").getTypeAnnotation();
  }
  i(zxe, "VariableDeclarator");
  function BL(e) {
    return e.typeAnnotation;
  }
  i(BL, "TypeCastExpression");
  BL.validParent = !0;
  function ML(e) {
    return e.typeAnnotation;
  }
  i(ML, "TSAsExpression");
  ML.validParent = !0;
  function Jxe() {
    return this.get("expression").getTypeAnnotation();
  }
  i(Jxe, "TSNonNullExpression");
  function Qxe(e) {
    if (e.callee.type === "Identifier")
      return sa(e.callee);
  }
  i(Qxe, "NewExpression");
  function Zxe() {
    return Ja();
  }
  i(Zxe, "TemplateLiteral");
  function ePe(e) {
    let t = e.operator;
    if (t === "void")
      return Yxe();
    if (Vxe.indexOf(t) >= 0)
      return il();
    if (Wxe.indexOf(t) >= 0)
      return Ja();
    if ($xe.indexOf(t) >= 0)
      return Rv();
  }
  i(ePe, "UnaryExpression");
  function tPe(e) {
    let t = e.operator;
    if (Uxe.indexOf(t) >= 0)
      return il();
    if (qxe.indexOf(t) >= 0)
      return Rv();
    if (t === "+") {
      let r = this.get("right"), s = this.get("left");
      return s.isBaseType("number") && r.isBaseType("number") ? il() : s.isBaseType("string") || r.isBaseType("string") ? Ja() : Kxe([Ja(), il()]);
    }
  }
  i(tPe, "BinaryExpression");
  function rPe() {
    let e = [this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()];
    return (0, LL.createUnionType)(e);
  }
  i(rPe, "LogicalExpression");
  function sPe() {
    let e = [this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()];
    return (0, LL.createUnionType)(e);
  }
  i(sPe, "ConditionalExpression");
  function nPe() {
    return this.get("expressions").pop().getTypeAnnotation();
  }
  i(nPe, "SequenceExpression");
  function iPe() {
    return this.get("expression").getTypeAnnotation();
  }
  i(iPe, "ParenthesizedExpression");
  function aPe() {
    return this.get("right").getTypeAnnotation();
  }
  i(aPe, "AssignmentExpression");
  function oPe(e) {
    let t = e.operator;
    if (t === "++" || t === "--")
      return il();
  }
  i(oPe, "UpdateExpression");
  function lPe() {
    return Ja();
  }
  i(lPe, "StringLiteral");
  function uPe() {
    return il();
  }
  i(uPe, "NumericLiteral");
  function cPe() {
    return Rv();
  }
  i(cPe, "BooleanLiteral");
  function fPe() {
    return Hxe();
  }
  i(fPe, "NullLiteral");
  function pPe() {
    return sa(za("RegExp"));
  }
  i(pPe, "RegExpLiteral");
  function dPe() {
    return sa(za("Object"));
  }
  i(dPe, "ObjectExpression");
  function jL() {
    return sa(za("Array"));
  }
  i(jL, "ArrayExpression");
  function qL() {
    return jL();
  }
  i(qL, "RestElement");
  qL.validParent = !0;
  function hPe() {
    return sa(za("Function"));
  }
  i(hPe, "Func");
  var mPe = bd("Array.from"), yPe = bd("Object.keys"), gPe = bd("Object.values"), bPe = bd("Object.entries");
  function EPe() {
    let {
      callee: e
    } = this.node;
    return yPe(e) ? Nv(Ja()) : mPe(e) || gPe(e) || Xxe(e, {
      name: "Array"
    }) ? Nv(FL()) : bPe(e) ? Nv(Gxe([Ja(), FL()])) : $L(this.get("callee"));
  }
  i(EPe, "CallExpression");
  function vPe() {
    return $L(this.get("tag"));
  }
  i(vPe, "TaggedTemplateExpression");
  function $L(e) {
    if (e = e.resolve(), e.isFunction()) {
      let {
        node: t
      } = e;
      if (t.async)
        return t.generator ? sa(za("AsyncIterator")) : sa(za("Promise"));
      if (t.generator)
        return sa(za("Iterator"));
      if (e.node.returnType)
        return e.node.returnType;
    }
  }
  i($L, "resolveCall");
});

// ../node_modules/@babel/traverse/lib/path/inference/index.js
var GL = y((na) => {
  "use strict";
  Object.defineProperty(na, "__esModule", {
    value: !0
  });
  na._getTypeAnnotation = qPe;
  na.baseTypeStrictlyMatches = VPe;
  na.couldBeBaseType = UPe;
  na.getTypeAnnotation = jPe;
  na.isBaseType = $Pe;
  na.isGenericType = WPe;
  var VL = UL(), SPe = Re(), {
    anyTypeAnnotation: HL,
    isAnyTypeAnnotation: Ed,
    isArrayTypeAnnotation: TPe,
    isBooleanTypeAnnotation: xPe,
    isEmptyTypeAnnotation: PPe,
    isFlowBaseAnnotation: APe,
    isGenericTypeAnnotation: CPe,
    isIdentifier: WL,
    isMixedTypeAnnotation: wPe,
    isNumberTypeAnnotation: DPe,
    isStringTypeAnnotation: IPe,
    isTSArrayType: _Pe,
    isTSTypeAnnotation: OPe,
    isTSTypeReference: NPe,
    isTupleTypeAnnotation: RPe,
    isTypeAnnotation: kPe,
    isUnionTypeAnnotation: FPe,
    isVoidTypeAnnotation: LPe,
    stringTypeAnnotation: BPe,
    voidTypeAnnotation: MPe
  } = SPe;
  function jPe() {
    let e = this.getData("typeAnnotation");
    return e != null || (e = this._getTypeAnnotation() || HL(), (kPe(e) || OPe(e)) && (e = e.typeAnnotation), this.setData("typeAnnotation",
    e)), e;
  }
  i(jPe, "getTypeAnnotation");
  var kv = /* @__PURE__ */ new WeakSet();
  function qPe() {
    let e = this.node;
    if (!e)
      if (this.key === "init" && this.parentPath.isVariableDeclarator()) {
        let r = this.parentPath.parentPath, s = r.parentPath;
        return r.key === "left" && s.isForInStatement() ? BPe() : r.key === "left" && s.isForOfStatement() ? HL() : MPe();
      } else
        return;
    if (e.typeAnnotation)
      return e.typeAnnotation;
    if (!kv.has(e)) {
      kv.add(e);
      try {
        var t;
        let r = VL[e.type];
        if (r)
          return r.call(this, e);
        if (r = VL[this.parentPath.type], (t = r) != null && t.validParent)
          return this.parentPath.getTypeAnnotation();
      } finally {
        kv.delete(e);
      }
    }
  }
  i(qPe, "_getTypeAnnotation");
  function $Pe(e, t) {
    return Fv(e, this.getTypeAnnotation(), t);
  }
  i($Pe, "isBaseType");
  function Fv(e, t, r) {
    if (e === "string")
      return IPe(t);
    if (e === "number")
      return DPe(t);
    if (e === "boolean")
      return xPe(t);
    if (e === "any")
      return Ed(t);
    if (e === "mixed")
      return wPe(t);
    if (e === "empty")
      return PPe(t);
    if (e === "void")
      return LPe(t);
    if (r)
      return !1;
    throw new Error(`Unknown base type ${e}`);
  }
  i(Fv, "_isBaseType");
  function UPe(e) {
    let t = this.getTypeAnnotation();
    if (Ed(t)) return !0;
    if (FPe(t)) {
      for (let r of t.types)
        if (Ed(r) || Fv(e, r, !0))
          return !0;
      return !1;
    } else
      return Fv(e, t, !0);
  }
  i(UPe, "couldBeBaseType");
  function VPe(e) {
    let t = this.getTypeAnnotation(), r = e.getTypeAnnotation();
    return !Ed(t) && APe(t) ? r.type === t.type : !1;
  }
  i(VPe, "baseTypeStrictlyMatches");
  function WPe(e) {
    let t = this.getTypeAnnotation();
    return e === "Array" && (_Pe(t) || TPe(t) || RPe(t)) ? !0 : CPe(t) && WL(t.id, {
      name: e
    }) || NPe(t) && WL(t.typeName, {
      name: e
    });
  }
  i(WPe, "isGenericType");
});

// ../node_modules/js-tokens/index.js
var KL = y((vd) => {
  Object.defineProperty(vd, "__esModule", {
    value: !0
  });
  vd.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
  vd.matchToToken = function(e) {
    var t = { type: "invalid", value: e[0], closed: void 0 };
    return e[1] ? (t.type = "string", t.closed = !!(e[3] || e[4])) : e[5] ? t.type = "comment" : e[6] ? (t.type = "comment", t.closed = !!e[7]) :
    e[8] ? t.type = "regex" : e[9] ? t.type = "number" : e[10] ? t.type = "name" : e[11] ? t.type = "punctuator" : e[12] && (t.type = "white\
space"), t;
  };
});

// ../node_modules/picocolors/picocolors.js
var Bv = y((att, Lv) => {
  var HPe = Q("tty"), GPe = !("NO_COLOR" in process.env || process.argv.includes("--no-color")) && ("FORCE_COLOR" in process.env || process.
  argv.includes("--color") || process.platform === "win32" || HPe.isatty(1) && process.env.TERM !== "dumb" || "CI" in process.env), Xt = /* @__PURE__ */ i(
  (e, t, r = e) => (s) => {
    let n = "" + s, a = n.indexOf(t, e.length);
    return ~a ? e + YL(n, t, r, a) + t : e + n + t;
  }, "formatter"), YL = /* @__PURE__ */ i((e, t, r, s) => {
    let n = e.substring(0, s) + r, a = e.substring(s + t.length), o = a.indexOf(t);
    return ~o ? n + YL(a, t, r, o) : n + a;
  }, "replaceClose"), XL = /* @__PURE__ */ i((e = GPe) => ({
    isColorSupported: e,
    reset: e ? (t) => `\x1B[0m${t}\x1B[0m` : String,
    bold: e ? Xt("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m") : String,
    dim: e ? Xt("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m") : String,
    italic: e ? Xt("\x1B[3m", "\x1B[23m") : String,
    underline: e ? Xt("\x1B[4m", "\x1B[24m") : String,
    inverse: e ? Xt("\x1B[7m", "\x1B[27m") : String,
    hidden: e ? Xt("\x1B[8m", "\x1B[28m") : String,
    strikethrough: e ? Xt("\x1B[9m", "\x1B[29m") : String,
    black: e ? Xt("\x1B[30m", "\x1B[39m") : String,
    red: e ? Xt("\x1B[31m", "\x1B[39m") : String,
    green: e ? Xt("\x1B[32m", "\x1B[39m") : String,
    yellow: e ? Xt("\x1B[33m", "\x1B[39m") : String,
    blue: e ? Xt("\x1B[34m", "\x1B[39m") : String,
    magenta: e ? Xt("\x1B[35m", "\x1B[39m") : String,
    cyan: e ? Xt("\x1B[36m", "\x1B[39m") : String,
    white: e ? Xt("\x1B[37m", "\x1B[39m") : String,
    gray: e ? Xt("\x1B[90m", "\x1B[39m") : String,
    bgBlack: e ? Xt("\x1B[40m", "\x1B[49m") : String,
    bgRed: e ? Xt("\x1B[41m", "\x1B[49m") : String,
    bgGreen: e ? Xt("\x1B[42m", "\x1B[49m") : String,
    bgYellow: e ? Xt("\x1B[43m", "\x1B[49m") : String,
    bgBlue: e ? Xt("\x1B[44m", "\x1B[49m") : String,
    bgMagenta: e ? Xt("\x1B[45m", "\x1B[49m") : String,
    bgCyan: e ? Xt("\x1B[46m", "\x1B[49m") : String,
    bgWhite: e ? Xt("\x1B[47m", "\x1B[49m") : String
  }), "createColors");
  Lv.exports = XL();
  Lv.exports.createColors = XL;
});

// ../node_modules/escape-string-regexp/index.js
var JL = y((ltt, zL) => {
  "use strict";
  var KPe = /[|\\{}()[\]^$+*?.]/g;
  zL.exports = function(e) {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    return e.replace(KPe, "\\$&");
  };
});

// ../node_modules/@babel/highlight/node_modules/color-name/index.js
var ZL = y((utt, QL) => {
  "use strict";
  QL.exports = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
});

// ../node_modules/@babel/highlight/node_modules/color-convert/conversions.js
var Mv = y((ctt, s3) => {
  var Qa = ZL(), r3 = {};
  for (Sd in Qa)
    Qa.hasOwnProperty(Sd) && (r3[Qa[Sd]] = Sd);
  var Sd, Ce = s3.exports = {
    rgb: { channels: 3, labels: "rgb" },
    hsl: { channels: 3, labels: "hsl" },
    hsv: { channels: 3, labels: "hsv" },
    hwb: { channels: 3, labels: "hwb" },
    cmyk: { channels: 4, labels: "cmyk" },
    xyz: { channels: 3, labels: "xyz" },
    lab: { channels: 3, labels: "lab" },
    lch: { channels: 3, labels: "lch" },
    hex: { channels: 1, labels: ["hex"] },
    keyword: { channels: 1, labels: ["keyword"] },
    ansi16: { channels: 1, labels: ["ansi16"] },
    ansi256: { channels: 1, labels: ["ansi256"] },
    hcg: { channels: 3, labels: ["h", "c", "g"] },
    apple: { channels: 3, labels: ["r16", "g16", "b16"] },
    gray: { channels: 1, labels: ["gray"] }
  };
  for (os in Ce)
    if (Ce.hasOwnProperty(os)) {
      if (!("channels" in Ce[os]))
        throw new Error("missing channels property: " + os);
      if (!("labels" in Ce[os]))
        throw new Error("missing channel labels property: " + os);
      if (Ce[os].labels.length !== Ce[os].channels)
        throw new Error("channel and label counts mismatch: " + os);
      e3 = Ce[os].channels, t3 = Ce[os].labels, delete Ce[os].channels, delete Ce[os].labels, Object.defineProperty(Ce[os], "channels", { value: e3 }),
      Object.defineProperty(Ce[os], "labels", { value: t3 });
    }
  var e3, t3, os;
  Ce.rgb.hsl = function(e) {
    var t = e[0] / 255, r = e[1] / 255, s = e[2] / 255, n = Math.min(t, r, s), a = Math.max(t, r, s), o = a - n, l, u, c;
    return a === n ? l = 0 : t === a ? l = (r - s) / o : r === a ? l = 2 + (s - t) / o : s === a && (l = 4 + (t - r) / o), l = Math.min(l * 60,
    360), l < 0 && (l += 360), c = (n + a) / 2, a === n ? u = 0 : c <= 0.5 ? u = o / (a + n) : u = o / (2 - a - n), [l, u * 100, c * 100];
  };
  Ce.rgb.hsv = function(e) {
    var t, r, s, n, a, o = e[0] / 255, l = e[1] / 255, u = e[2] / 255, c = Math.max(o, l, u), f = c - Math.min(o, l, u), p = /* @__PURE__ */ i(
    function(d) {
      return (c - d) / 6 / f + 1 / 2;
    }, "diffc");
    return f === 0 ? n = a = 0 : (a = f / c, t = p(o), r = p(l), s = p(u), o === c ? n = s - r : l === c ? n = 1 / 3 + t - s : u === c && (n =
    2 / 3 + r - t), n < 0 ? n += 1 : n > 1 && (n -= 1)), [
      n * 360,
      a * 100,
      c * 100
    ];
  };
  Ce.rgb.hwb = function(e) {
    var t = e[0], r = e[1], s = e[2], n = Ce.rgb.hsl(e)[0], a = 1 / 255 * Math.min(t, Math.min(r, s));
    return s = 1 - 1 / 255 * Math.max(t, Math.max(r, s)), [n, a * 100, s * 100];
  };
  Ce.rgb.cmyk = function(e) {
    var t = e[0] / 255, r = e[1] / 255, s = e[2] / 255, n, a, o, l;
    return l = Math.min(1 - t, 1 - r, 1 - s), n = (1 - t - l) / (1 - l) || 0, a = (1 - r - l) / (1 - l) || 0, o = (1 - s - l) / (1 - l) || 0,
    [n * 100, a * 100, o * 100, l * 100];
  };
  function YPe(e, t) {
    return Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2) + Math.pow(e[2] - t[2], 2);
  }
  i(YPe, "comparativeDistance");
  Ce.rgb.keyword = function(e) {
    var t = r3[e];
    if (t)
      return t;
    var r = 1 / 0, s;
    for (var n in Qa)
      if (Qa.hasOwnProperty(n)) {
        var a = Qa[n], o = YPe(e, a);
        o < r && (r = o, s = n);
      }
    return s;
  };
  Ce.keyword.rgb = function(e) {
    return Qa[e];
  };
  Ce.rgb.xyz = function(e) {
    var t = e[0] / 255, r = e[1] / 255, s = e[2] / 255;
    t = t > 0.04045 ? Math.pow((t + 0.055) / 1.055, 2.4) : t / 12.92, r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92, s = s >
    0.04045 ? Math.pow((s + 0.055) / 1.055, 2.4) : s / 12.92;
    var n = t * 0.4124 + r * 0.3576 + s * 0.1805, a = t * 0.2126 + r * 0.7152 + s * 0.0722, o = t * 0.0193 + r * 0.1192 + s * 0.9505;
    return [n * 100, a * 100, o * 100];
  };
  Ce.rgb.lab = function(e) {
    var t = Ce.rgb.xyz(e), r = t[0], s = t[1], n = t[2], a, o, l;
    return r /= 95.047, s /= 100, n /= 108.883, r = r > 8856e-6 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116, s = s > 8856e-6 ? Math.pow(s, 1 /
    3) : 7.787 * s + 16 / 116, n = n > 8856e-6 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116, a = 116 * s - 16, o = 500 * (r - s), l = 200 * (s -
    n), [a, o, l];
  };
  Ce.hsl.rgb = function(e) {
    var t = e[0] / 360, r = e[1] / 100, s = e[2] / 100, n, a, o, l, u;
    if (r === 0)
      return u = s * 255, [u, u, u];
    s < 0.5 ? a = s * (1 + r) : a = s + r - s * r, n = 2 * s - a, l = [0, 0, 0];
    for (var c = 0; c < 3; c++)
      o = t + 1 / 3 * -(c - 1), o < 0 && o++, o > 1 && o--, 6 * o < 1 ? u = n + (a - n) * 6 * o : 2 * o < 1 ? u = a : 3 * o < 2 ? u = n + (a -
      n) * (2 / 3 - o) * 6 : u = n, l[c] = u * 255;
    return l;
  };
  Ce.hsl.hsv = function(e) {
    var t = e[0], r = e[1] / 100, s = e[2] / 100, n = r, a = Math.max(s, 0.01), o, l;
    return s *= 2, r *= s <= 1 ? s : 2 - s, n *= a <= 1 ? a : 2 - a, l = (s + r) / 2, o = s === 0 ? 2 * n / (a + n) : 2 * r / (s + r), [t, o *
    100, l * 100];
  };
  Ce.hsv.rgb = function(e) {
    var t = e[0] / 60, r = e[1] / 100, s = e[2] / 100, n = Math.floor(t) % 6, a = t - Math.floor(t), o = 255 * s * (1 - r), l = 255 * s * (1 -
    r * a), u = 255 * s * (1 - r * (1 - a));
    switch (s *= 255, n) {
      case 0:
        return [s, u, o];
      case 1:
        return [l, s, o];
      case 2:
        return [o, s, u];
      case 3:
        return [o, l, s];
      case 4:
        return [u, o, s];
      case 5:
        return [s, o, l];
    }
  };
  Ce.hsv.hsl = function(e) {
    var t = e[0], r = e[1] / 100, s = e[2] / 100, n = Math.max(s, 0.01), a, o, l;
    return l = (2 - r) * s, a = (2 - r) * n, o = r * n, o /= a <= 1 ? a : 2 - a, o = o || 0, l /= 2, [t, o * 100, l * 100];
  };
  Ce.hwb.rgb = function(e) {
    var t = e[0] / 360, r = e[1] / 100, s = e[2] / 100, n = r + s, a, o, l, u;
    n > 1 && (r /= n, s /= n), a = Math.floor(6 * t), o = 1 - s, l = 6 * t - a, a & 1 && (l = 1 - l), u = r + l * (o - r);
    var c, f, p;
    switch (a) {
      default:
      case 6:
      case 0:
        c = o, f = u, p = r;
        break;
      case 1:
        c = u, f = o, p = r;
        break;
      case 2:
        c = r, f = o, p = u;
        break;
      case 3:
        c = r, f = u, p = o;
        break;
      case 4:
        c = u, f = r, p = o;
        break;
      case 5:
        c = o, f = r, p = u;
        break;
    }
    return [c * 255, f * 255, p * 255];
  };
  Ce.cmyk.rgb = function(e) {
    var t = e[0] / 100, r = e[1] / 100, s = e[2] / 100, n = e[3] / 100, a, o, l;
    return a = 1 - Math.min(1, t * (1 - n) + n), o = 1 - Math.min(1, r * (1 - n) + n), l = 1 - Math.min(1, s * (1 - n) + n), [a * 255, o * 255,
    l * 255];
  };
  Ce.xyz.rgb = function(e) {
    var t = e[0] / 100, r = e[1] / 100, s = e[2] / 100, n, a, o;
    return n = t * 3.2406 + r * -1.5372 + s * -0.4986, a = t * -0.9689 + r * 1.8758 + s * 0.0415, o = t * 0.0557 + r * -0.204 + s * 1.057, n =
    n > 31308e-7 ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055 : n * 12.92, a = a > 31308e-7 ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055 : a * 12.92, o =
    o > 31308e-7 ? 1.055 * Math.pow(o, 1 / 2.4) - 0.055 : o * 12.92, n = Math.min(Math.max(0, n), 1), a = Math.min(Math.max(0, a), 1), o = Math.
    min(Math.max(0, o), 1), [n * 255, a * 255, o * 255];
  };
  Ce.xyz.lab = function(e) {
    var t = e[0], r = e[1], s = e[2], n, a, o;
    return t /= 95.047, r /= 100, s /= 108.883, t = t > 8856e-6 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116, r = r > 8856e-6 ? Math.pow(r, 1 /
    3) : 7.787 * r + 16 / 116, s = s > 8856e-6 ? Math.pow(s, 1 / 3) : 7.787 * s + 16 / 116, n = 116 * r - 16, a = 500 * (t - r), o = 200 * (r -
    s), [n, a, o];
  };
  Ce.lab.xyz = function(e) {
    var t = e[0], r = e[1], s = e[2], n, a, o;
    a = (t + 16) / 116, n = r / 500 + a, o = a - s / 200;
    var l = Math.pow(a, 3), u = Math.pow(n, 3), c = Math.pow(o, 3);
    return a = l > 8856e-6 ? l : (a - 16 / 116) / 7.787, n = u > 8856e-6 ? u : (n - 16 / 116) / 7.787, o = c > 8856e-6 ? c : (o - 16 / 116) /
    7.787, n *= 95.047, a *= 100, o *= 108.883, [n, a, o];
  };
  Ce.lab.lch = function(e) {
    var t = e[0], r = e[1], s = e[2], n, a, o;
    return n = Math.atan2(s, r), a = n * 360 / 2 / Math.PI, a < 0 && (a += 360), o = Math.sqrt(r * r + s * s), [t, o, a];
  };
  Ce.lch.lab = function(e) {
    var t = e[0], r = e[1], s = e[2], n, a, o;
    return o = s / 360 * 2 * Math.PI, n = r * Math.cos(o), a = r * Math.sin(o), [t, n, a];
  };
  Ce.rgb.ansi16 = function(e) {
    var t = e[0], r = e[1], s = e[2], n = 1 in arguments ? arguments[1] : Ce.rgb.hsv(e)[2];
    if (n = Math.round(n / 50), n === 0)
      return 30;
    var a = 30 + (Math.round(s / 255) << 2 | Math.round(r / 255) << 1 | Math.round(t / 255));
    return n === 2 && (a += 60), a;
  };
  Ce.hsv.ansi16 = function(e) {
    return Ce.rgb.ansi16(Ce.hsv.rgb(e), e[2]);
  };
  Ce.rgb.ansi256 = function(e) {
    var t = e[0], r = e[1], s = e[2];
    if (t === r && r === s)
      return t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232;
    var n = 16 + 36 * Math.round(t / 255 * 5) + 6 * Math.round(r / 255 * 5) + Math.round(s / 255 * 5);
    return n;
  };
  Ce.ansi16.rgb = function(e) {
    var t = e % 10;
    if (t === 0 || t === 7)
      return e > 50 && (t += 3.5), t = t / 10.5 * 255, [t, t, t];
    var r = (~~(e > 50) + 1) * 0.5, s = (t & 1) * r * 255, n = (t >> 1 & 1) * r * 255, a = (t >> 2 & 1) * r * 255;
    return [s, n, a];
  };
  Ce.ansi256.rgb = function(e) {
    if (e >= 232) {
      var t = (e - 232) * 10 + 8;
      return [t, t, t];
    }
    e -= 16;
    var r, s = Math.floor(e / 36) / 5 * 255, n = Math.floor((r = e % 36) / 6) / 5 * 255, a = r % 6 / 5 * 255;
    return [s, n, a];
  };
  Ce.rgb.hex = function(e) {
    var t = ((Math.round(e[0]) & 255) << 16) + ((Math.round(e[1]) & 255) << 8) + (Math.round(e[2]) & 255), r = t.toString(16).toUpperCase();
    return "000000".substring(r.length) + r;
  };
  Ce.hex.rgb = function(e) {
    var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!t)
      return [0, 0, 0];
    var r = t[0];
    t[0].length === 3 && (r = r.split("").map(function(l) {
      return l + l;
    }).join(""));
    var s = parseInt(r, 16), n = s >> 16 & 255, a = s >> 8 & 255, o = s & 255;
    return [n, a, o];
  };
  Ce.rgb.hcg = function(e) {
    var t = e[0] / 255, r = e[1] / 255, s = e[2] / 255, n = Math.max(Math.max(t, r), s), a = Math.min(Math.min(t, r), s), o = n - a, l, u;
    return o < 1 ? l = a / (1 - o) : l = 0, o <= 0 ? u = 0 : n === t ? u = (r - s) / o % 6 : n === r ? u = 2 + (s - t) / o : u = 4 + (t - r) /
    o + 4, u /= 6, u %= 1, [u * 360, o * 100, l * 100];
  };
  Ce.hsl.hcg = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = 1, n = 0;
    return r < 0.5 ? s = 2 * t * r : s = 2 * t * (1 - r), s < 1 && (n = (r - 0.5 * s) / (1 - s)), [e[0], s * 100, n * 100];
  };
  Ce.hsv.hcg = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = t * r, n = 0;
    return s < 1 && (n = (r - s) / (1 - s)), [e[0], s * 100, n * 100];
  };
  Ce.hcg.rgb = function(e) {
    var t = e[0] / 360, r = e[1] / 100, s = e[2] / 100;
    if (r === 0)
      return [s * 255, s * 255, s * 255];
    var n = [0, 0, 0], a = t % 1 * 6, o = a % 1, l = 1 - o, u = 0;
    switch (Math.floor(a)) {
      case 0:
        n[0] = 1, n[1] = o, n[2] = 0;
        break;
      case 1:
        n[0] = l, n[1] = 1, n[2] = 0;
        break;
      case 2:
        n[0] = 0, n[1] = 1, n[2] = o;
        break;
      case 3:
        n[0] = 0, n[1] = l, n[2] = 1;
        break;
      case 4:
        n[0] = o, n[1] = 0, n[2] = 1;
        break;
      default:
        n[0] = 1, n[1] = 0, n[2] = l;
    }
    return u = (1 - r) * s, [
      (r * n[0] + u) * 255,
      (r * n[1] + u) * 255,
      (r * n[2] + u) * 255
    ];
  };
  Ce.hcg.hsv = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = t + r * (1 - t), n = 0;
    return s > 0 && (n = t / s), [e[0], n * 100, s * 100];
  };
  Ce.hcg.hsl = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = r * (1 - t) + 0.5 * t, n = 0;
    return s > 0 && s < 0.5 ? n = t / (2 * s) : s >= 0.5 && s < 1 && (n = t / (2 * (1 - s))), [e[0], n * 100, s * 100];
  };
  Ce.hcg.hwb = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = t + r * (1 - t);
    return [e[0], (s - t) * 100, (1 - s) * 100];
  };
  Ce.hwb.hcg = function(e) {
    var t = e[1] / 100, r = e[2] / 100, s = 1 - r, n = s - t, a = 0;
    return n < 1 && (a = (s - n) / (1 - n)), [e[0], n * 100, a * 100];
  };
  Ce.apple.rgb = function(e) {
    return [e[0] / 65535 * 255, e[1] / 65535 * 255, e[2] / 65535 * 255];
  };
  Ce.rgb.apple = function(e) {
    return [e[0] / 255 * 65535, e[1] / 255 * 65535, e[2] / 255 * 65535];
  };
  Ce.gray.rgb = function(e) {
    return [e[0] / 100 * 255, e[0] / 100 * 255, e[0] / 100 * 255];
  };
  Ce.gray.hsl = Ce.gray.hsv = function(e) {
    return [0, 0, e[0]];
  };
  Ce.gray.hwb = function(e) {
    return [0, 100, e[0]];
  };
  Ce.gray.cmyk = function(e) {
    return [0, 0, 0, e[0]];
  };
  Ce.gray.lab = function(e) {
    return [e[0], 0, 0];
  };
  Ce.gray.hex = function(e) {
    var t = Math.round(e[0] / 100 * 255) & 255, r = (t << 16) + (t << 8) + t, s = r.toString(16).toUpperCase();
    return "000000".substring(s.length) + s;
  };
  Ce.rgb.gray = function(e) {
    var t = (e[0] + e[1] + e[2]) / 3;
    return [t / 255 * 100];
  };
});

// ../node_modules/@babel/highlight/node_modules/color-convert/route.js
var i3 = y((ptt, n3) => {
  var Td = Mv();
  function XPe() {
    for (var e = {}, t = Object.keys(Td), r = t.length, s = 0; s < r; s++)
      e[t[s]] = {
        // http://jsperf.com/1-vs-infinity
        // micro-opt, but this is simple.
        distance: -1,
        parent: null
      };
    return e;
  }
  i(XPe, "buildGraph");
  function zPe(e) {
    var t = XPe(), r = [e];
    for (t[e].distance = 0; r.length; )
      for (var s = r.pop(), n = Object.keys(Td[s]), a = n.length, o = 0; o < a; o++) {
        var l = n[o], u = t[l];
        u.distance === -1 && (u.distance = t[s].distance + 1, u.parent = s, r.unshift(l));
      }
    return t;
  }
  i(zPe, "deriveBFS");
  function JPe(e, t) {
    return function(r) {
      return t(e(r));
    };
  }
  i(JPe, "link");
  function QPe(e, t) {
    for (var r = [t[e].parent, e], s = Td[t[e].parent][e], n = t[e].parent; t[n].parent; )
      r.unshift(t[n].parent), s = JPe(Td[t[n].parent][n], s), n = t[n].parent;
    return s.conversion = r, s;
  }
  i(QPe, "wrapConversion");
  n3.exports = function(e) {
    for (var t = zPe(e), r = {}, s = Object.keys(t), n = s.length, a = 0; a < n; a++) {
      var o = s[a], l = t[o];
      l.parent !== null && (r[o] = QPe(o, t));
    }
    return r;
  };
});

// ../node_modules/@babel/highlight/node_modules/color-convert/index.js
var o3 = y((htt, a3) => {
  var jv = Mv(), ZPe = i3(), al = {}, eAe = Object.keys(jv);
  function tAe(e) {
    var t = /* @__PURE__ */ i(function(r) {
      return r == null ? r : (arguments.length > 1 && (r = Array.prototype.slice.call(arguments)), e(r));
    }, "wrappedFn");
    return "conversion" in e && (t.conversion = e.conversion), t;
  }
  i(tAe, "wrapRaw");
  function rAe(e) {
    var t = /* @__PURE__ */ i(function(r) {
      if (r == null)
        return r;
      arguments.length > 1 && (r = Array.prototype.slice.call(arguments));
      var s = e(r);
      if (typeof s == "object")
        for (var n = s.length, a = 0; a < n; a++)
          s[a] = Math.round(s[a]);
      return s;
    }, "wrappedFn");
    return "conversion" in e && (t.conversion = e.conversion), t;
  }
  i(rAe, "wrapRounded");
  eAe.forEach(function(e) {
    al[e] = {}, Object.defineProperty(al[e], "channels", { value: jv[e].channels }), Object.defineProperty(al[e], "labels", { value: jv[e].labels });
    var t = ZPe(e), r = Object.keys(t);
    r.forEach(function(s) {
      var n = t[s];
      al[e][s] = rAe(n), al[e][s].raw = tAe(n);
    });
  });
  a3.exports = al;
});

// ../node_modules/@babel/highlight/node_modules/ansi-styles/index.js
var u3 = y((ytt, l3) => {
  "use strict";
  var ol = o3(), xd = /* @__PURE__ */ i((e, t) => function() {
    return `\x1B[${e.apply(ol, arguments) + t}m`;
  }, "wrapAnsi16"), Pd = /* @__PURE__ */ i((e, t) => function() {
    let r = e.apply(ol, arguments);
    return `\x1B[${38 + t};5;${r}m`;
  }, "wrapAnsi256"), Ad = /* @__PURE__ */ i((e, t) => function() {
    let r = e.apply(ol, arguments);
    return `\x1B[${38 + t};2;${r[0]};${r[1]};${r[2]}m`;
  }, "wrapAnsi16m");
  function sAe() {
    let e = /* @__PURE__ */ new Map(), t = {
      modifier: {
        reset: [0, 0],
        // 21 isn't widely supported and 22 does the same thing
        bold: [1, 22],
        dim: [2, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        hidden: [8, 28],
        strikethrough: [9, 29]
      },
      color: {
        black: [30, 39],
        red: [31, 39],
        green: [32, 39],
        yellow: [33, 39],
        blue: [34, 39],
        magenta: [35, 39],
        cyan: [36, 39],
        white: [37, 39],
        gray: [90, 39],
        // Bright color
        redBright: [91, 39],
        greenBright: [92, 39],
        yellowBright: [93, 39],
        blueBright: [94, 39],
        magentaBright: [95, 39],
        cyanBright: [96, 39],
        whiteBright: [97, 39]
      },
      bgColor: {
        bgBlack: [40, 49],
        bgRed: [41, 49],
        bgGreen: [42, 49],
        bgYellow: [43, 49],
        bgBlue: [44, 49],
        bgMagenta: [45, 49],
        bgCyan: [46, 49],
        bgWhite: [47, 49],
        // Bright color
        bgBlackBright: [100, 49],
        bgRedBright: [101, 49],
        bgGreenBright: [102, 49],
        bgYellowBright: [103, 49],
        bgBlueBright: [104, 49],
        bgMagentaBright: [105, 49],
        bgCyanBright: [106, 49],
        bgWhiteBright: [107, 49]
      }
    };
    t.color.grey = t.color.gray;
    for (let n of Object.keys(t)) {
      let a = t[n];
      for (let o of Object.keys(a)) {
        let l = a[o];
        t[o] = {
          open: `\x1B[${l[0]}m`,
          close: `\x1B[${l[1]}m`
        }, a[o] = t[o], e.set(l[0], l[1]);
      }
      Object.defineProperty(t, n, {
        value: a,
        enumerable: !1
      }), Object.defineProperty(t, "codes", {
        value: e,
        enumerable: !1
      });
    }
    let r = /* @__PURE__ */ i((n) => n, "ansi2ansi"), s = /* @__PURE__ */ i((n, a, o) => [n, a, o], "rgb2rgb");
    t.color.close = "\x1B[39m", t.bgColor.close = "\x1B[49m", t.color.ansi = {
      ansi: xd(r, 0)
    }, t.color.ansi256 = {
      ansi256: Pd(r, 0)
    }, t.color.ansi16m = {
      rgb: Ad(s, 0)
    }, t.bgColor.ansi = {
      ansi: xd(r, 10)
    }, t.bgColor.ansi256 = {
      ansi256: Pd(r, 10)
    }, t.bgColor.ansi16m = {
      rgb: Ad(s, 10)
    };
    for (let n of Object.keys(ol)) {
      if (typeof ol[n] != "object")
        continue;
      let a = ol[n];
      n === "ansi16" && (n = "ansi"), "ansi16" in a && (t.color.ansi[n] = xd(a.ansi16, 0), t.bgColor.ansi[n] = xd(a.ansi16, 10)), "ansi256" in
      a && (t.color.ansi256[n] = Pd(a.ansi256, 0), t.bgColor.ansi256[n] = Pd(a.ansi256, 10)), "rgb" in a && (t.color.ansi16m[n] = Ad(a.rgb, 0),
      t.bgColor.ansi16m[n] = Ad(a.rgb, 10));
    }
    return t;
  }
  i(sAe, "assembleStyles");
  Object.defineProperty(l3, "exports", {
    enumerable: !0,
    get: sAe
  });
});

// ../node_modules/@babel/highlight/node_modules/has-flag/index.js
var f3 = y((btt, c3) => {
  "use strict";
  c3.exports = (e, t) => {
    t = t || process.argv;
    let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", s = t.indexOf(r + e), n = t.indexOf("--");
    return s !== -1 && (n === -1 ? !0 : s < n);
  };
});

// ../node_modules/@babel/highlight/node_modules/supports-color/index.js
var d3 = y((Ett, p3) => {
  "use strict";
  var nAe = Q("os"), fn = f3(), jr = process.env, ll;
  fn("no-color") || fn("no-colors") || fn("color=false") ? ll = !1 : (fn("color") || fn("colors") || fn("color=true") || fn("color=always")) &&
  (ll = !0);
  "FORCE_COLOR" in jr && (ll = jr.FORCE_COLOR.length === 0 || parseInt(jr.FORCE_COLOR, 10) !== 0);
  function iAe(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  i(iAe, "translateLevel");
  function aAe(e) {
    if (ll === !1)
      return 0;
    if (fn("color=16m") || fn("color=full") || fn("color=truecolor"))
      return 3;
    if (fn("color=256"))
      return 2;
    if (e && !e.isTTY && ll !== !0)
      return 0;
    let t = ll ? 1 : 0;
    if (process.platform === "win32") {
      let r = nAe.release().split(".");
      return Number(process.versions.node.split(".")[0]) >= 8 && Number(r[0]) >= 10 && Number(r[2]) >= 10586 ? Number(r[2]) >= 14931 ? 3 : 2 :
      1;
    }
    if ("CI" in jr)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((r) => r in jr) || jr.CI_NAME === "codeship" ? 1 : t;
    if ("TEAMCITY_VERSION" in jr)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(jr.TEAMCITY_VERSION) ? 1 : 0;
    if (jr.COLORTERM === "truecolor")
      return 3;
    if ("TERM_PROGRAM" in jr) {
      let r = parseInt((jr.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (jr.TERM_PROGRAM) {
        case "iTerm.app":
          return r >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(jr.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(jr.TERM) || "COLORTERM" in
    jr ? 1 : (jr.TERM === "dumb", t);
  }
  i(aAe, "supportsColor");
  function qv(e) {
    let t = aAe(e);
    return iAe(t);
  }
  i(qv, "getSupportLevel");
  p3.exports = {
    supportsColor: qv,
    stdout: qv(process.stdout),
    stderr: qv(process.stderr)
  };
});

// ../node_modules/@babel/highlight/node_modules/chalk/templates.js
var b3 = y((Stt, g3) => {
  "use strict";
  var oAe = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
  h3 = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g, lAe = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/, uAe = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi, cAe = /* @__PURE__ */ new Map(
  [
    ["n", `
`],
    ["r", "\r"],
    ["t", "	"],
    ["b", "\b"],
    ["f", "\f"],
    ["v", "\v"],
    ["0", "\0"],
    ["\\", "\\"],
    ["e", "\x1B"],
    ["a", "\x07"]
  ]);
  function y3(e) {
    return e[0] === "u" && e.length === 5 || e[0] === "x" && e.length === 3 ? String.fromCharCode(parseInt(e.slice(1), 16)) : cAe.get(e) || e;
  }
  i(y3, "unescape");
  function fAe(e, t) {
    let r = [], s = t.trim().split(/\s*,\s*/g), n;
    for (let a of s)
      if (!isNaN(a))
        r.push(Number(a));
      else if (n = a.match(lAe))
        r.push(n[2].replace(uAe, (o, l, u) => l ? y3(l) : u));
      else
        throw new Error(`Invalid Chalk template style argument: ${a} (in style '${e}')`);
    return r;
  }
  i(fAe, "parseArguments");
  function pAe(e) {
    h3.lastIndex = 0;
    let t = [], r;
    for (; (r = h3.exec(e)) !== null; ) {
      let s = r[1];
      if (r[2]) {
        let n = fAe(s, r[2]);
        t.push([s].concat(n));
      } else
        t.push([s]);
    }
    return t;
  }
  i(pAe, "parseStyle");
  function m3(e, t) {
    let r = {};
    for (let n of t)
      for (let a of n.styles)
        r[a[0]] = n.inverse ? null : a.slice(1);
    let s = e;
    for (let n of Object.keys(r))
      if (Array.isArray(r[n])) {
        if (!(n in s))
          throw new Error(`Unknown Chalk style: ${n}`);
        r[n].length > 0 ? s = s[n].apply(s, r[n]) : s = s[n];
      }
    return s;
  }
  i(m3, "buildStyle");
  g3.exports = (e, t) => {
    let r = [], s = [], n = [];
    if (t.replace(oAe, (a, o, l, u, c, f) => {
      if (o)
        n.push(y3(o));
      else if (u) {
        let p = n.join("");
        n = [], s.push(r.length === 0 ? p : m3(e, r)(p)), r.push({ inverse: l, styles: pAe(u) });
      } else if (c) {
        if (r.length === 0)
          throw new Error("Found extraneous } in Chalk template literal");
        s.push(m3(e, r)(n.join(""))), n = [], r.pop();
      } else
        n.push(f);
    }), s.push(n.join("")), r.length > 0) {
      let a = `Chalk template literal is missing ${r.length} closing bracket${r.length === 1 ? "" : "s"} (\`}\`)`;
      throw new Error(a);
    }
    return s.join("");
  };
});

// ../node_modules/@babel/highlight/node_modules/chalk/index.js
var x3 = y((xtt, cc) => {
  "use strict";
  var Uv = JL(), Er = u3(), $v = d3().stdout, dAe = b3(), v3 = process.platform === "win32" && !(process.env.TERM || "").toLowerCase().startsWith(
  "xterm"), S3 = ["ansi", "ansi", "ansi256", "ansi16m"], T3 = /* @__PURE__ */ new Set(["gray"]), ul = /* @__PURE__ */ Object.create(null);
  function E3(e, t) {
    t = t || {};
    let r = $v ? $v.level : 0;
    e.level = t.level === void 0 ? r : t.level, e.enabled = "enabled" in t ? t.enabled : e.level > 0;
  }
  i(E3, "applyOptions");
  function uc(e) {
    if (!this || !(this instanceof uc) || this.template) {
      let t = {};
      return E3(t, e), t.template = function() {
        let r = [].slice.call(arguments);
        return yAe.apply(null, [t.template].concat(r));
      }, Object.setPrototypeOf(t, uc.prototype), Object.setPrototypeOf(t.template, t), t.template.constructor = uc, t.template;
    }
    E3(this, e);
  }
  i(uc, "Chalk");
  v3 && (Er.blue.open = "\x1B[94m");
  for (let e of Object.keys(Er))
    Er[e].closeRe = new RegExp(Uv(Er[e].close), "g"), ul[e] = {
      get() {
        let t = Er[e];
        return Cd.call(this, this._styles ? this._styles.concat(t) : [t], this._empty, e);
      }
    };
  ul.visible = {
    get() {
      return Cd.call(this, this._styles || [], !0, "visible");
    }
  };
  Er.color.closeRe = new RegExp(Uv(Er.color.close), "g");
  for (let e of Object.keys(Er.color.ansi))
    T3.has(e) || (ul[e] = {
      get() {
        let t = this.level;
        return function() {
          let s = {
            open: Er.color[S3[t]][e].apply(null, arguments),
            close: Er.color.close,
            closeRe: Er.color.closeRe
          };
          return Cd.call(this, this._styles ? this._styles.concat(s) : [s], this._empty, e);
        };
      }
    });
  Er.bgColor.closeRe = new RegExp(Uv(Er.bgColor.close), "g");
  for (let e of Object.keys(Er.bgColor.ansi)) {
    if (T3.has(e))
      continue;
    let t = "bg" + e[0].toUpperCase() + e.slice(1);
    ul[t] = {
      get() {
        let r = this.level;
        return function() {
          let n = {
            open: Er.bgColor[S3[r]][e].apply(null, arguments),
            close: Er.bgColor.close,
            closeRe: Er.bgColor.closeRe
          };
          return Cd.call(this, this._styles ? this._styles.concat(n) : [n], this._empty, e);
        };
      }
    };
  }
  var hAe = Object.defineProperties(() => {
  }, ul);
  function Cd(e, t, r) {
    let s = /* @__PURE__ */ i(function() {
      return mAe.apply(s, arguments);
    }, "builder");
    s._styles = e, s._empty = t;
    let n = this;
    return Object.defineProperty(s, "level", {
      enumerable: !0,
      get() {
        return n.level;
      },
      set(a) {
        n.level = a;
      }
    }), Object.defineProperty(s, "enabled", {
      enumerable: !0,
      get() {
        return n.enabled;
      },
      set(a) {
        n.enabled = a;
      }
    }), s.hasGrey = this.hasGrey || r === "gray" || r === "grey", s.__proto__ = hAe, s;
  }
  i(Cd, "build");
  function mAe() {
    let e = arguments, t = e.length, r = String(arguments[0]);
    if (t === 0)
      return "";
    if (t > 1)
      for (let n = 1; n < t; n++)
        r += " " + e[n];
    if (!this.enabled || this.level <= 0 || !r)
      return this._empty ? "" : r;
    let s = Er.dim.open;
    v3 && this.hasGrey && (Er.dim.open = "");
    for (let n of this._styles.slice().reverse())
      r = n.open + r.replace(n.closeRe, n.open) + n.close, r = r.replace(/\r?\n/g, `${n.close}$&${n.open}`);
    return Er.dim.open = s, r;
  }
  i(mAe, "applyStyle");
  function yAe(e, t) {
    if (!Array.isArray(t))
      return [].slice.call(arguments, 1).join(" ");
    let r = [].slice.call(arguments, 2), s = [t.raw[0]];
    for (let n = 1; n < t.length; n++)
      s.push(String(r[n - 1]).replace(/[{}\\]/g, "\\$&")), s.push(String(t.raw[n]));
    return dAe(e, s.join(""));
  }
  i(yAe, "chalkTag");
  Object.defineProperties(uc.prototype, ul);
  cc.exports = uc();
  cc.exports.supportsColor = $v;
  cc.exports.default = cc.exports;
});

// ../node_modules/@babel/highlight/lib/index.js
var O3 = y((fc) => {
  "use strict";
  Object.defineProperty(fc, "__esModule", {
    value: !0
  });
  fc.default = PAe;
  fc.shouldHighlight = _3;
  var P3 = KL(), A3 = Ko(), Wv = gAe(Bv(), !0);
  function w3(e) {
    if (typeof WeakMap != "function") return null;
    var t = /* @__PURE__ */ new WeakMap(), r = /* @__PURE__ */ new WeakMap();
    return (w3 = /* @__PURE__ */ i(function(s) {
      return s ? r : t;
    }, "_getRequireWildcardCache"))(e);
  }
  i(w3, "_getRequireWildcardCache");
  function gAe(e, t) {
    if (!t && e && e.__esModule) return e;
    if (e === null || typeof e != "object" && typeof e != "function") return { default: e };
    var r = w3(t);
    if (r && r.has(e)) return r.get(e);
    var s = { __proto__: null }, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var a in e) if (a !== "default" && Object.prototype.hasOwnProperty.call(e, a)) {
      var o = n ? Object.getOwnPropertyDescriptor(e, a) : null;
      o && (o.get || o.set) ? Object.defineProperty(s, a, o) : s[a] = e[a];
    }
    return s.default = e, r && r.set(e, s), s;
  }
  i(gAe, "_interopRequireWildcard");
  var D3 = typeof process == "object" && (process.env.FORCE_COLOR === "0" || process.env.FORCE_COLOR === "false") ? (0, Wv.createColors)(!1) :
  Wv.default, C3 = /* @__PURE__ */ i((e, t) => (r) => e(t(r)), "compose"), bAe = /* @__PURE__ */ new Set(["as", "async", "from", "get", "of",
  "set"]);
  function EAe(e) {
    return {
      keyword: e.cyan,
      capitalized: e.yellow,
      jsxIdentifier: e.yellow,
      punctuator: e.yellow,
      number: e.magenta,
      string: e.green,
      regex: e.magenta,
      comment: e.gray,
      invalid: C3(C3(e.white, e.bgRed), e.bold)
    };
  }
  i(EAe, "getDefs");
  var vAe = /\r\n|[\n\r\u2028\u2029]/, SAe = /^[()[\]{}]$/, I3;
  {
    let e = /^[a-z][\w-]*$/i, t = /* @__PURE__ */ i(function(r, s, n) {
      if (r.type === "name") {
        if ((0, A3.isKeyword)(r.value) || (0, A3.isStrictReservedWord)(r.value, !0) || bAe.has(r.value))
          return "keyword";
        if (e.test(r.value) && (n[s - 1] === "<" || n.slice(s - 2, s) == "</"))
          return "jsxIdentifier";
        if (r.value[0] !== r.value[0].toLowerCase())
          return "capitalized";
      }
      return r.type === "punctuator" && SAe.test(r.value) ? "bracket" : r.type === "invalid" && (r.value === "@" || r.value === "#") ? "punc\
tuator" : r.type;
    }, "getTokenType");
    I3 = /* @__PURE__ */ i(function* (r) {
      let s;
      for (; s = P3.default.exec(r); ) {
        let n = P3.matchToToken(s);
        yield {
          type: t(n, s.index, r),
          value: n.value
        };
      }
    }, "tokenize");
  }
  function TAe(e, t) {
    let r = "";
    for (let {
      type: s,
      value: n
    } of I3(t)) {
      let a = e[s];
      a ? r += n.split(vAe).map((o) => a(o)).join(`
`) : r += n;
    }
    return r;
  }
  i(TAe, "highlightTokens");
  function _3(e) {
    return D3.isColorSupported || e.forceColor;
  }
  i(_3, "shouldHighlight");
  var Vv;
  function xAe(e) {
    if (e) {
      var t;
      return (t = Vv) != null || (Vv = (0, Wv.createColors)(!0)), Vv;
    }
    return D3;
  }
  i(xAe, "getColors");
  function PAe(e, t = {}) {
    if (e !== "" && _3(t)) {
      let r = EAe(xAe(t.forceColor));
      return TAe(r, e);
    } else
      return e;
  }
  i(PAe, "highlight");
  {
    let e, t;
    fc.getChalk = ({
      forceColor: r
    }) => {
      var s;
      if ((s = e) != null || (e = x3()), r) {
        var n;
        return (n = t) != null || (t = new e.constructor({
          enabled: !0,
          level: 1
        })), t;
      }
      return e;
    };
  }
});

// ../node_modules/@babel/code-frame/lib/index.js
var pc = y((wd) => {
  "use strict";
  Object.defineProperty(wd, "__esModule", {
    value: !0
  });
  wd.codeFrameColumns = B3;
  wd.default = _Ae;
  var N3 = O3(), Gv = AAe(Bv(), !0);
  function L3(e) {
    if (typeof WeakMap != "function") return null;
    var t = /* @__PURE__ */ new WeakMap(), r = /* @__PURE__ */ new WeakMap();
    return (L3 = /* @__PURE__ */ i(function(s) {
      return s ? r : t;
    }, "_getRequireWildcardCache"))(e);
  }
  i(L3, "_getRequireWildcardCache");
  function AAe(e, t) {
    if (!t && e && e.__esModule) return e;
    if (e === null || typeof e != "object" && typeof e != "function") return { default: e };
    var r = L3(t);
    if (r && r.has(e)) return r.get(e);
    var s = { __proto__: null }, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var a in e) if (a !== "default" && Object.prototype.hasOwnProperty.call(e, a)) {
      var o = n ? Object.getOwnPropertyDescriptor(e, a) : null;
      o && (o.get || o.set) ? Object.defineProperty(s, a, o) : s[a] = e[a];
    }
    return s.default = e, r && r.set(e, s), s;
  }
  i(AAe, "_interopRequireWildcard");
  var CAe = typeof process == "object" && (process.env.FORCE_COLOR === "0" || process.env.FORCE_COLOR === "false") ? (0, Gv.createColors)(!1) :
  Gv.default, R3 = /* @__PURE__ */ i((e, t) => (r) => e(t(r)), "compose"), Hv;
  function wAe(e) {
    if (e) {
      var t;
      return (t = Hv) != null || (Hv = (0, Gv.createColors)(!0)), Hv;
    }
    return CAe;
  }
  i(wAe, "getColors");
  var k3 = !1;
  function DAe(e) {
    return {
      gutter: e.gray,
      marker: R3(e.red, e.bold),
      message: R3(e.red, e.bold)
    };
  }
  i(DAe, "getDefs");
  var F3 = /\r\n|[\n\r\u2028\u2029]/;
  function IAe(e, t, r) {
    let s = Object.assign({
      column: 0,
      line: -1
    }, e.start), n = Object.assign({}, s, e.end), {
      linesAbove: a = 2,
      linesBelow: o = 3
    } = r || {}, l = s.line, u = s.column, c = n.line, f = n.column, p = Math.max(l - (a + 1), 0), d = Math.min(t.length, c + o);
    l === -1 && (p = 0), c === -1 && (d = t.length);
    let m = c - l, b = {};
    if (m)
      for (let h = 0; h <= m; h++) {
        let g = h + l;
        if (!u)
          b[g] = !0;
        else if (h === 0) {
          let E = t[g - 1].length;
          b[g] = [u, E - u + 1];
        } else if (h === m)
          b[g] = [0, f];
        else {
          let E = t[g - h].length;
          b[g] = [0, E];
        }
      }
    else
      u === f ? u ? b[l] = [u, 0] : b[l] = !0 : b[l] = [u, f - u];
    return {
      start: p,
      end: d,
      markerLines: b
    };
  }
  i(IAe, "getMarkerLines");
  function B3(e, t, r = {}) {
    let s = (r.highlightCode || r.forceColor) && (0, N3.shouldHighlight)(r), n = wAe(r.forceColor), a = DAe(n), o = /* @__PURE__ */ i((h, g) => s ?
    h(g) : g, "maybeHighlight"), l = e.split(F3), {
      start: u,
      end: c,
      markerLines: f
    } = IAe(t, l, r), p = t.start && typeof t.start.column == "number", d = String(c).length, b = (s ? (0, N3.default)(e, r) : e).split(F3, c).
    slice(u, c).map((h, g) => {
      let E = u + 1 + g, C = ` ${` ${E}`.slice(-d)} |`, N = f[E], I = !f[E + 1];
      if (N) {
        let M = "";
        if (Array.isArray(N)) {
          let q = h.slice(0, Math.max(N[0] - 1, 0)).replace(/[^\t]/g, " "), V = N[1] || 1;
          M = [`
 `, o(a.gutter, C.replace(/\d/g, " ")), " ", q, o(a.marker, "^").repeat(V)].join(""), I && r.message && (M += " " + o(a.message, r.message));
        }
        return [o(a.marker, ">"), o(a.gutter, C), h.length > 0 ? ` ${h}` : "", M].join("");
      } else
        return ` ${o(a.gutter, C)}${h.length > 0 ? ` ${h}` : ""}`;
    }).join(`
`);
    return r.message && !p && (b = `${" ".repeat(d + 1)}${r.message}
${b}`), s ? n.reset(b) : b;
  }
  i(B3, "codeFrameColumns");
  function _Ae(e, t, r, s = {}) {
    if (!k3) {
      k3 = !0;
      let a = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
      if (process.emitWarning)
        process.emitWarning(a, "DeprecationWarning");
      else {
        let o = new Error(a);
        o.name = "DeprecationWarning", console.warn(new Error(a));
      }
    }
    return r = Math.max(r, 0), B3(e, {
      start: {
        column: r,
        line: t
      }
    }, s);
  }
  i(_Ae, "_default");
});

// ../node_modules/@babel/parser/lib/index.js
var to = y((xc) => {
  "use strict";
  Object.defineProperty(xc, "__esModule", {
    value: !0
  });
  function eB(e, t) {
    if (e == null) return {};
    var r = {}, s = Object.keys(e), n, a;
    for (a = 0; a < s.length; a++)
      n = s[a], !(t.indexOf(n) >= 0) && (r[n] = e[n]);
    return r;
  }
  i(eB, "_objectWithoutPropertiesLoose");
  var Ln = class {
    static {
      i(this, "Position");
    }
    constructor(t, r, s) {
      this.line = void 0, this.column = void 0, this.index = void 0, this.line = t, this.column = r, this.index = s;
    }
  }, dl = class {
    static {
      i(this, "SourceLocation");
    }
    constructor(t, r) {
      this.start = void 0, this.end = void 0, this.filename = void 0, this.identifierName = void 0, this.start = t, this.end = r;
    }
  };
  function us(e, t) {
    let {
      line: r,
      column: s,
      index: n
    } = e;
    return new Ln(r, s + t, n + t);
  }
  i(us, "createPositionWithColumnOffset");
  var M3 = "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED", OAe = {
    ImportMetaOutsideModule: {
      message: `import.meta may appear only with 'sourceType: "module"'`,
      code: M3
    },
    ImportOutsideModule: {
      message: `'import' and 'export' may appear only with 'sourceType: "module"'`,
      code: M3
    }
  }, j3 = {
    ArrayPattern: "array destructuring pattern",
    AssignmentExpression: "assignment expression",
    AssignmentPattern: "assignment expression",
    ArrowFunctionExpression: "arrow function expression",
    ConditionalExpression: "conditional expression",
    CatchClause: "catch clause",
    ForOfStatement: "for-of statement",
    ForInStatement: "for-in statement",
    ForStatement: "for-loop",
    FormalParameters: "function parameter list",
    Identifier: "identifier",
    ImportSpecifier: "import specifier",
    ImportDefaultSpecifier: "import default specifier",
    ImportNamespaceSpecifier: "import namespace specifier",
    ObjectPattern: "object destructuring pattern",
    ParenthesizedExpression: "parenthesized expression",
    RestElement: "rest element",
    UpdateExpression: {
      true: "prefix operation",
      false: "postfix operation"
    },
    VariableDeclarator: "variable declaration",
    YieldExpression: "yield expression"
  }, _d = /* @__PURE__ */ i(({
    type: e,
    prefix: t
  }) => e === "UpdateExpression" ? j3.UpdateExpression[String(t)] : j3[e], "toNodeDescription"), NAe = {
    AccessorIsGenerator: /* @__PURE__ */ i(({
      kind: e
    }) => `A ${e}ter cannot be a generator.`, "AccessorIsGenerator"),
    ArgumentsInClass: "'arguments' is only allowed in functions and class methods.",
    AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block.",
    AwaitBindingIdentifier: "Can not use 'await' as identifier inside an async function.",
    AwaitBindingIdentifierInStaticBlock: "Can not use 'await' as identifier inside a static block.",
    AwaitExpressionFormalParameter: "'await' is not allowed in async function parameters.",
    AwaitUsingNotInAsyncContext: "'await using' is only allowed within async functions and at the top levels of modules.",
    AwaitNotInAsyncContext: "'await' is only allowed within async functions and at the top levels of modules.",
    AwaitNotInAsyncFunction: "'await' is only allowed within async functions.",
    BadGetterArity: "A 'get' accessor must not have any formal parameters.",
    BadSetterArity: "A 'set' accessor must have exactly one formal parameter.",
    BadSetterRestParameter: "A 'set' accessor function argument must not be a rest parameter.",
    ConstructorClassField: "Classes may not have a field named 'constructor'.",
    ConstructorClassPrivateField: "Classes may not have a private field named '#constructor'.",
    ConstructorIsAccessor: "Class constructor may not be an accessor.",
    ConstructorIsAsync: "Constructor can't be an async function.",
    ConstructorIsGenerator: "Constructor can't be a generator.",
    DeclarationMissingInitializer: /* @__PURE__ */ i(({
      kind: e
    }) => `Missing initializer in ${e} declaration.`, "DeclarationMissingInitializer"),
    DecoratorArgumentsOutsideParentheses: "Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(deco\
rator)(args)'.",
    DecoratorBeforeExport: "Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use\
 the 'export @decorator class {}' syntax.",
    DecoratorsBeforeAfterExport: "Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the s\
ame time.",
    DecoratorConstructor: "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",
    DecoratorExportClass: "Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use \
the '@decorator export class {}' syntax.",
    DecoratorSemicolon: "Decorators must not be followed by a semicolon.",
    DecoratorStaticBlock: "Decorators can't be used with a static block.",
    DeferImportRequiresNamespace: 'Only `import defer * as x from "./module"` is valid.',
    DeletePrivateField: "Deleting a private field is not allowed.",
    DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",
    DuplicateConstructor: "Duplicate constructor in the same class.",
    DuplicateDefaultExport: "Only one default export allowed per module.",
    DuplicateExport: /* @__PURE__ */ i(({
      exportName: e
    }) => `\`${e}\` has already been exported. Exported identifiers must be unique.`, "DuplicateExport"),
    DuplicateProto: "Redefinition of __proto__ property.",
    DuplicateRegExpFlags: "Duplicate regular expression flag.",
    DynamicImportPhaseRequiresImportExpressions: /* @__PURE__ */ i(({
      phase: e
    }) => `'import.${e}(...)' can only be parsed when using the 'createImportExpressions' option.`, "DynamicImportPhaseRequiresImportExpress\
ions"),
    ElementAfterRest: "Rest element must be last element.",
    EscapedCharNotAnIdentifier: "Invalid Unicode escape.",
    ExportBindingIsString: /* @__PURE__ */ i(({
      localName: e,
      exportName: t
    }) => `A string literal cannot be used as an exported binding without \`from\`.
- Did you mean \`export { '${e}' as '${t}' } from 'some-module'\`?`, "ExportBindingIsString"),
    ExportDefaultFromAsIdentifier: "'from' is not allowed as an identifier after 'export default'.",
    ForInOfLoopInitializer: /* @__PURE__ */ i(({
      type: e
    }) => `'${e === "ForInStatement" ? "for-in" : "for-of"}' loop variable declaration may not have an initializer.`, "ForInOfLoopInitialize\
r"),
    ForInUsing: "For-in loop may not start with 'using' declaration.",
    ForOfAsync: "The left-hand side of a for-of loop may not be 'async'.",
    ForOfLet: "The left-hand side of a for-of loop may not start with 'let'.",
    GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block.",
    IllegalBreakContinue: /* @__PURE__ */ i(({
      type: e
    }) => `Unsyntactic ${e === "BreakStatement" ? "break" : "continue"}.`, "IllegalBreakContinue"),
    IllegalLanguageModeDirective: "Illegal 'use strict' directive in function with non-simple parameter list.",
    IllegalReturn: "'return' outside of function.",
    ImportAttributesUseAssert: "The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You \
can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.",
    ImportBindingIsString: /* @__PURE__ */ i(({
      importName: e
    }) => `A string literal cannot be used as an imported binding.
- Did you mean \`import { "${e}" as foo }\`?`, "ImportBindingIsString"),
    ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments.",
    ImportCallArity: /* @__PURE__ */ i(({
      maxArgumentCount: e
    }) => `\`import()\` requires exactly ${e === 1 ? "one argument" : "one or two arguments"}.`, "ImportCallArity"),
    ImportCallNotNewExpression: "Cannot use new with import(...).",
    ImportCallSpreadArgument: "`...` is not allowed in `import()`.",
    ImportJSONBindingNotDefault: "A JSON module can only be imported with `default`.",
    ImportReflectionHasAssertion: "`import module x` cannot have assertions.",
    ImportReflectionNotBinding: 'Only `import module x from "./module"` is valid.',
    IncompatibleRegExpUVFlags: "The 'u' and 'v' regular expression flags cannot be enabled at the same time.",
    InvalidBigIntLiteral: "Invalid BigIntLiteral.",
    InvalidCodePoint: "Code point out of bounds.",
    InvalidCoverInitializedName: "Invalid shorthand property initializer.",
    InvalidDecimal: "Invalid decimal.",
    InvalidDigit: /* @__PURE__ */ i(({
      radix: e
    }) => `Expected number in radix ${e}.`, "InvalidDigit"),
    InvalidEscapeSequence: "Bad character escape sequence.",
    InvalidEscapeSequenceTemplate: "Invalid escape sequence in template.",
    InvalidEscapedReservedWord: /* @__PURE__ */ i(({
      reservedWord: e
    }) => `Escape sequence in keyword ${e}.`, "InvalidEscapedReservedWord"),
    InvalidIdentifier: /* @__PURE__ */ i(({
      identifierName: e
    }) => `Invalid identifier ${e}.`, "InvalidIdentifier"),
    InvalidLhs: /* @__PURE__ */ i(({
      ancestor: e
    }) => `Invalid left-hand side in ${_d(e)}.`, "InvalidLhs"),
    InvalidLhsBinding: /* @__PURE__ */ i(({
      ancestor: e
    }) => `Binding invalid left-hand side in ${_d(e)}.`, "InvalidLhsBinding"),
    InvalidLhsOptionalChaining: /* @__PURE__ */ i(({
      ancestor: e
    }) => `Invalid optional chaining in the left-hand side of ${_d(e)}.`, "InvalidLhsOptionalChaining"),
    InvalidNumber: "Invalid number.",
    InvalidOrMissingExponent: "Floating-point numbers require a valid exponent after the 'e'.",
    InvalidOrUnexpectedToken: /* @__PURE__ */ i(({
      unexpected: e
    }) => `Unexpected character '${e}'.`, "InvalidOrUnexpectedToken"),
    InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern.",
    InvalidPrivateFieldResolution: /* @__PURE__ */ i(({
      identifierName: e
    }) => `Private name #${e} is not defined.`, "InvalidPrivateFieldResolution"),
    InvalidPropertyBindingPattern: "Binding member expression.",
    InvalidRecordProperty: "Only properties and spread elements are allowed in record definitions.",
    InvalidRestAssignmentPattern: "Invalid rest operator's argument.",
    LabelRedeclaration: /* @__PURE__ */ i(({
      labelName: e
    }) => `Label '${e}' is already declared.`, "LabelRedeclaration"),
    LetInLexicalBinding: "'let' is disallowed as a lexically bound name.",
    LineTerminatorBeforeArrow: "No line break is allowed before '=>'.",
    MalformedRegExpFlags: "Invalid regular expression flag.",
    MissingClassName: "A class name is required.",
    MissingEqInAssignment: "Only '=' operator can be used for specifying default value.",
    MissingSemicolon: "Missing semicolon.",
    MissingPlugin: /* @__PURE__ */ i(({
      missingPlugin: e
    }) => `This experimental syntax requires enabling the parser plugin: ${e.map((t) => JSON.stringify(t)).join(", ")}.`, "MissingPlugin"),
    MissingOneOfPlugins: /* @__PURE__ */ i(({
      missingPlugin: e
    }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${e.map((t) => JSON.stringify(t)).join(", ")}.`,
    "MissingOneOfPlugins"),
    MissingUnicodeEscape: "Expecting Unicode escape sequence \\uXXXX.",
    MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators.",
    ModuleAttributeDifferentFromType: "The only accepted module attribute is `type`.",
    ModuleAttributeInvalidValue: "Only string literals are allowed as module attribute values.",
    ModuleAttributesWithDuplicateKeys: /* @__PURE__ */ i(({
      key: e
    }) => `Duplicate key "${e}" is not allowed in module attributes.`, "ModuleAttributesWithDuplicateKeys"),
    ModuleExportNameHasLoneSurrogate: /* @__PURE__ */ i(({
      surrogateCharCode: e
    }) => `An export name cannot include a lone surrogate, found '\\u${e.toString(16)}'.`, "ModuleExportNameHasLoneSurrogate"),
    ModuleExportUndefined: /* @__PURE__ */ i(({
      localName: e
    }) => `Export '${e}' is not defined.`, "ModuleExportUndefined"),
    MultipleDefaultsInSwitch: "Multiple default clauses.",
    NewlineAfterThrow: "Illegal newline after throw.",
    NoCatchOrFinally: "Missing catch or finally clause.",
    NumberIdentifier: "Identifier directly after number.",
    NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",
    ObsoleteAwaitStar: "'await*' has been removed from the async functions proposal. Use Promise.all() instead.",
    OptionalChainingNoNew: "Constructors in/after an Optional Chain are not allowed.",
    OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain.",
    OverrideOnConstructor: "'override' modifier cannot appear on a constructor declaration.",
    ParamDupe: "Argument name clash.",
    PatternHasAccessor: "Object pattern can't contain getter or setter.",
    PatternHasMethod: "Object pattern can't contain methods.",
    PrivateInExpectedIn: /* @__PURE__ */ i(({
      identifierName: e
    }) => `Private names are only allowed in property accesses (\`obj.#${e}\`) or in \`in\` expressions (\`#${e} in obj\`).`, "PrivateInExpe\
ctedIn"),
    PrivateNameRedeclaration: /* @__PURE__ */ i(({
      identifierName: e
    }) => `Duplicate private name #${e}.`, "PrivateNameRedeclaration"),
    RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 're\
cordAndTuple' plugin is set to 'bar'.",
    RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the\
 'recordAndTuple' plugin is set to 'bar'.",
    RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with '#{' are only allowed when the 'syntaxType' option of th\
e 'recordAndTuple' plugin is set to 'hash'.",
    RecordNoProto: "'__proto__' is not allowed in Record expressions.",
    RestTrailingComma: "Unexpected trailing comma after rest element.",
    SloppyFunction: "In non-strict mode code, functions can only be declared at top level or inside a block.",
    SloppyFunctionAnnexB: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if sta\
tement.",
    SourcePhaseImportRequiresDefault: 'Only `import source x from "./module"` is valid.',
    StaticPrototype: "Classes may not have static property named prototype.",
    SuperNotAllowed: "`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or n\
ot extending another class?",
    SuperPrivateField: "Private fields can't be accessed on super.",
    TrailingDecorator: "Decorators must be attached to a class element.",
    TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'reco\
rdAndTuple' plugin is set to 'bar'.",
    TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the '\
recordAndTuple' plugin is set to 'bar'.",
    TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the \
'recordAndTuple' plugin is set to 'hash'.",
    UnexpectedArgumentPlaceholder: "Unexpected argument placeholder.",
    UnexpectedAwaitAfterPipelineBody: 'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.',
    UnexpectedDigitAfterHash: "Unexpected digit after hash token.",
    UnexpectedImportExport: "'import' and 'export' may only appear at the top level.",
    UnexpectedKeyword: /* @__PURE__ */ i(({
      keyword: e
    }) => `Unexpected keyword '${e}'.`, "UnexpectedKeyword"),
    UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration.",
    UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context.",
    UnexpectedNewTarget: "`new.target` can only be used in functions or class properties.",
    UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits.",
    UnexpectedPrivateField: "Unexpected private name.",
    UnexpectedReservedWord: /* @__PURE__ */ i(({
      reservedWord: e
    }) => `Unexpected reserved word '${e}'.`, "UnexpectedReservedWord"),
    UnexpectedSuper: "'super' is only allowed in object methods and classes.",
    UnexpectedToken: /* @__PURE__ */ i(({
      expected: e,
      unexpected: t
    }) => `Unexpected token${t ? ` '${t}'.` : ""}${e ? `, expected "${e}"` : ""}`, "UnexpectedToken"),
    UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",
    UnexpectedUsingDeclaration: "Using declaration cannot appear in the top level when source type is `script`.",
    UnsupportedBind: "Binding should be performed on object property.",
    UnsupportedDecoratorExport: "A decorated export must export a class declaration.",
    UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",
    UnsupportedImport: "`import` can only be used in `import()` or `import.meta`.",
    UnsupportedMetaProperty: /* @__PURE__ */ i(({
      target: e,
      onlyValidPropertyName: t
    }) => `The only valid meta property for ${e} is ${e}.${t}.`, "UnsupportedMetaProperty"),
    UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters.",
    UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties.",
    UnsupportedSuper: "'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",
    UnterminatedComment: "Unterminated comment.",
    UnterminatedRegExp: "Unterminated regular expression.",
    UnterminatedString: "Unterminated string constant.",
    UnterminatedTemplate: "Unterminated template.",
    UsingDeclarationHasBindingPattern: "Using declaration cannot have destructuring patterns.",
    VarRedeclaration: /* @__PURE__ */ i(({
      identifierName: e
    }) => `Identifier '${e}' has already been declared.`, "VarRedeclaration"),
    YieldBindingIdentifier: "Can not use 'yield' as identifier inside a generator.",
    YieldInParameter: "Yield expression is not allowed in formal parameters.",
    ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0."
  }, RAe = {
    StrictDelete: "Deleting local variable in strict mode.",
    StrictEvalArguments: /* @__PURE__ */ i(({
      referenceName: e
    }) => `Assigning to '${e}' in strict mode.`, "StrictEvalArguments"),
    StrictEvalArgumentsBinding: /* @__PURE__ */ i(({
      bindingName: e
    }) => `Binding '${e}' in strict mode.`, "StrictEvalArgumentsBinding"),
    StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block.",
    StrictNumericEscape: "The only valid numeric escape in strict mode is '\\0'.",
    StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode.",
    StrictWith: "'with' in strict mode."
  }, kAe = /* @__PURE__ */ new Set(["ArrowFunctionExpression", "AssignmentExpression", "ConditionalExpression", "YieldExpression"]), FAe = {
    PipeBodyIsTighter: "Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due \
to its loose operator precedence.",
    PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "smart" opt\
ion.',
    PipeTopicUnbound: "Topic reference is unbound; it must be inside a pipe body.",
    PipeTopicUnconfiguredToken: /* @__PURE__ */ i(({
      token: e
    }) => `Invalid topic token ${e}. In order to use ${e} as a topic reference, the pipelineOperator plugin must be configured with { "propo\
sal": "hack", "topicToken": "${e}" }.`, "PipeTopicUnconfiguredToken"),
    PipeTopicUnused: "Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.",
    PipeUnparenthesizedBody: /* @__PURE__ */ i(({
      type: e
    }) => `Hack-style pipe body cannot be an unparenthesized ${_d({
      type: e
    })}; please wrap it in parentheses.`, "PipeUnparenthesizedBody"),
    PipelineBodyNoArrow: 'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.',
    PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression.",
    PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression.",
    PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference.",
    PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding.",
    PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a "proposal": "hack" or "sma\
rt" option.'
  }, LAe = ["toMessage"], BAe = ["message"];
  function q3(e, t, r) {
    Object.defineProperty(e, t, {
      enumerable: !1,
      configurable: !0,
      value: r
    });
  }
  i(q3, "defineHidden");
  function MAe(e) {
    let {
      toMessage: t
    } = e, r = eB(e, LAe);
    return /* @__PURE__ */ i(function s(n, a) {
      let o = new SyntaxError();
      return Object.assign(o, r, {
        loc: n,
        pos: n.index
      }), "missingPlugin" in a && Object.assign(o, {
        missingPlugin: a.missingPlugin
      }), q3(o, "clone", /* @__PURE__ */ i(function(u = {}) {
        var c;
        let {
          line: f,
          column: p,
          index: d
        } = (c = u.loc) != null ? c : n;
        return s(new Ln(f, p, d), Object.assign({}, a, u.details));
      }, "clone")), q3(o, "details", a), Object.defineProperty(o, "message", {
        configurable: !0,
        get() {
          let l = `${t(a)} (${n.line}:${n.column})`;
          return this.message = l, l;
        },
        set(l) {
          Object.defineProperty(this, "message", {
            value: l,
            writable: !0
          });
        }
      }), o;
    }, "constructor");
  }
  i(MAe, "toParseErrorConstructor");
  function yi(e, t) {
    if (Array.isArray(e))
      return (s) => yi(s, e[0]);
    let r = {};
    for (let s of Object.keys(e)) {
      let n = e[s], a = typeof n == "string" ? {
        message: /* @__PURE__ */ i(() => n, "message")
      } : typeof n == "function" ? {
        message: n
      } : n, {
        message: o
      } = a, l = eB(a, BAe), u = typeof o == "string" ? () => o : o;
      r[s] = MAe(Object.assign({
        code: "BABEL_PARSER_SYNTAX_ERROR",
        reasonCode: s,
        toMessage: u
      }, t ? {
        syntaxPlugin: t
      } : {}, l));
    }
    return r;
  }
  i(yi, "ParseErrorEnum");
  var k = Object.assign({}, yi(OAe), yi(NAe), yi(RAe), yi`pipelineOperator`(FAe)), {
    defineProperty: jAe
  } = Object, $3 = /* @__PURE__ */ i((e, t) => jAe(e, t, {
    enumerable: !1,
    value: e[t]
  }), "toUnenumerable");
  function dc(e) {
    return e.loc.start && $3(e.loc.start, "index"), e.loc.end && $3(e.loc.end, "index"), e;
  }
  i(dc, "toESTreeLocation");
  var qAe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "ESTreeParserMixin");
    }
    parse() {
      let r = dc(super.parse());
      return this.options.tokens && (r.tokens = r.tokens.map(dc)), r;
    }
    parseRegExpLiteral({
      pattern: r,
      flags: s
    }) {
      let n = null;
      try {
        n = new RegExp(r, s);
      } catch {
      }
      let a = this.estreeParseLiteral(n);
      return a.regex = {
        pattern: r,
        flags: s
      }, a;
    }
    parseBigIntLiteral(r) {
      let s;
      try {
        s = BigInt(r);
      } catch {
        s = null;
      }
      let n = this.estreeParseLiteral(s);
      return n.bigint = String(n.value || r), n;
    }
    parseDecimalLiteral(r) {
      let n = this.estreeParseLiteral(null);
      return n.decimal = String(n.value || r), n;
    }
    estreeParseLiteral(r) {
      return this.parseLiteral(r, "Literal");
    }
    parseStringLiteral(r) {
      return this.estreeParseLiteral(r);
    }
    parseNumericLiteral(r) {
      return this.estreeParseLiteral(r);
    }
    parseNullLiteral() {
      return this.estreeParseLiteral(null);
    }
    parseBooleanLiteral(r) {
      return this.estreeParseLiteral(r);
    }
    directiveToStmt(r) {
      let s = r.value;
      delete r.value, s.type = "Literal", s.raw = s.extra.raw, s.value = s.extra.expressionValue;
      let n = r;
      return n.type = "ExpressionStatement", n.expression = s, n.directive = s.extra.rawValue, delete s.extra, n;
    }
    initFunction(r, s) {
      super.initFunction(r, s), r.expression = !1;
    }
    checkDeclaration(r) {
      r != null && this.isObjectProperty(r) ? this.checkDeclaration(r.value) : super.checkDeclaration(r);
    }
    getObjectOrClassMethodParams(r) {
      return r.value.params;
    }
    isValidDirective(r) {
      var s;
      return r.type === "ExpressionStatement" && r.expression.type === "Literal" && typeof r.expression.value == "string" && !((s = r.expression.
      extra) != null && s.parenthesized);
    }
    parseBlockBody(r, s, n, a, o) {
      super.parseBlockBody(r, s, n, a, o);
      let l = r.directives.map((u) => this.directiveToStmt(u));
      r.body = l.concat(r.body), delete r.directives;
    }
    pushClassMethod(r, s, n, a, o, l) {
      this.parseMethod(s, n, a, o, l, "ClassMethod", !0), s.typeParameters && (s.value.typeParameters = s.typeParameters, delete s.typeParameters),
      r.body.push(s);
    }
    parsePrivateName() {
      let r = super.parsePrivateName();
      return this.getPluginOption("estree", "classFeatures") ? this.convertPrivateNameToPrivateIdentifier(r) : r;
    }
    convertPrivateNameToPrivateIdentifier(r) {
      let s = super.getPrivateNameSV(r);
      return r = r, delete r.id, r.name = s, r.type = "PrivateIdentifier", r;
    }
    isPrivateName(r) {
      return this.getPluginOption("estree", "classFeatures") ? r.type === "PrivateIdentifier" : super.isPrivateName(r);
    }
    getPrivateNameSV(r) {
      return this.getPluginOption("estree", "classFeatures") ? r.name : super.getPrivateNameSV(r);
    }
    parseLiteral(r, s) {
      let n = super.parseLiteral(r, s);
      return n.raw = n.extra.raw, delete n.extra, n;
    }
    parseFunctionBody(r, s, n = !1) {
      super.parseFunctionBody(r, s, n), r.expression = r.body.type !== "BlockStatement";
    }
    parseMethod(r, s, n, a, o, l, u = !1) {
      let c = this.startNode();
      return c.kind = r.kind, c = super.parseMethod(c, s, n, a, o, l, u), c.type = "FunctionExpression", delete c.kind, r.value = c, l === "\
ClassPrivateMethod" && (r.computed = !1), this.finishNode(r, "MethodDefinition");
    }
    parseClassProperty(...r) {
      let s = super.parseClassProperty(...r);
      return this.getPluginOption("estree", "classFeatures") && (s.type = "PropertyDefinition"), s;
    }
    parseClassPrivateProperty(...r) {
      let s = super.parseClassPrivateProperty(...r);
      return this.getPluginOption("estree", "classFeatures") && (s.type = "PropertyDefinition", s.computed = !1), s;
    }
    parseObjectMethod(r, s, n, a, o) {
      let l = super.parseObjectMethod(r, s, n, a, o);
      return l && (l.type = "Property", l.kind === "method" && (l.kind = "init"), l.shorthand = !1), l;
    }
    parseObjectProperty(r, s, n, a) {
      let o = super.parseObjectProperty(r, s, n, a);
      return o && (o.kind = "init", o.type = "Property"), o;
    }
    isValidLVal(r, s, n) {
      return r === "Property" ? "value" : super.isValidLVal(r, s, n);
    }
    isAssignable(r, s) {
      return r != null && this.isObjectProperty(r) ? this.isAssignable(r.value, s) : super.isAssignable(r, s);
    }
    toAssignable(r, s = !1) {
      if (r != null && this.isObjectProperty(r)) {
        let {
          key: n,
          value: a
        } = r;
        this.isPrivateName(n) && this.classScope.usePrivateName(this.getPrivateNameSV(n), n.loc.start), this.toAssignable(a, s);
      } else
        super.toAssignable(r, s);
    }
    toAssignableObjectExpressionProp(r, s, n) {
      r.kind === "get" || r.kind === "set" ? this.raise(k.PatternHasAccessor, r.key) : r.method ? this.raise(k.PatternHasMethod, r.key) : super.
      toAssignableObjectExpressionProp(r, s, n);
    }
    finishCallExpression(r, s) {
      let n = super.finishCallExpression(r, s);
      if (n.callee.type === "Import") {
        if (n.type = "ImportExpression", n.source = n.arguments[0], this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) {
          var a, o;
          n.options = (a = n.arguments[1]) != null ? a : null, n.attributes = (o = n.arguments[1]) != null ? o : null;
        }
        delete n.arguments, delete n.callee;
      }
      return n;
    }
    toReferencedArguments(r) {
      r.type !== "ImportExpression" && super.toReferencedArguments(r);
    }
    parseExport(r, s) {
      let n = this.state.lastTokStartLoc, a = super.parseExport(r, s);
      switch (a.type) {
        case "ExportAllDeclaration":
          a.exported = null;
          break;
        case "ExportNamedDeclaration":
          a.specifiers.length === 1 && a.specifiers[0].type === "ExportNamespaceSpecifier" && (a.type = "ExportAllDeclaration", a.exported =
          a.specifiers[0].exported, delete a.specifiers);
        case "ExportDefaultDeclaration":
          {
            var o;
            let {
              declaration: l
            } = a;
            l?.type === "ClassDeclaration" && ((o = l.decorators) == null ? void 0 : o.length) > 0 && l.start === a.start && this.resetStartLocation(
            a, n);
          }
          break;
      }
      return a;
    }
    parseSubscript(r, s, n, a) {
      let o = super.parseSubscript(r, s, n, a);
      if (a.optionalChainMember) {
        if ((o.type === "OptionalMemberExpression" || o.type === "OptionalCallExpression") && (o.type = o.type.substring(8)), a.stop) {
          let l = this.startNodeAtNode(o);
          return l.expression = o, this.finishNode(l, "ChainExpression");
        }
      } else (o.type === "MemberExpression" || o.type === "CallExpression") && (o.optional = !1);
      return o;
    }
    isOptionalMemberExpression(r) {
      return r.type === "ChainExpression" ? r.expression.type === "MemberExpression" : super.isOptionalMemberExpression(r);
    }
    hasPropertyAsPrivateName(r) {
      return r.type === "ChainExpression" && (r = r.expression), super.hasPropertyAsPrivateName(r);
    }
    isObjectProperty(r) {
      return r.type === "Property" && r.kind === "init" && !r.method;
    }
    isObjectMethod(r) {
      return r.method || r.kind === "get" || r.kind === "set";
    }
    finishNodeAt(r, s, n) {
      return dc(super.finishNodeAt(r, s, n));
    }
    resetStartLocation(r, s) {
      super.resetStartLocation(r, s), dc(r);
    }
    resetEndLocation(r, s = this.state.lastTokEndLoc) {
      super.resetEndLocation(r, s), dc(r);
    }
  }, "estree"), eo = class {
    static {
      i(this, "TokContext");
    }
    constructor(t, r) {
      this.token = void 0, this.preserveSpace = void 0, this.token = t, this.preserveSpace = !!r;
    }
  }, Lt = {
    brace: new eo("{"),
    j_oTag: new eo("<tag"),
    j_cTag: new eo("</tag"),
    j_expr: new eo("<tag>...</tag>", !0)
  };
  Lt.template = new eo("`", !0);
  var tt = !0, me = !0, Kv = !0, hc = !0, ia = !0, $Ae = !0, kd = class {
    static {
      i(this, "ExportedTokenType");
    }
    constructor(t, r = {}) {
      this.label = void 0, this.keyword = void 0, this.beforeExpr = void 0, this.startsExpr = void 0, this.rightAssociative = void 0, this.isLoop =
      void 0, this.isAssign = void 0, this.prefix = void 0, this.postfix = void 0, this.binop = void 0, this.label = t, this.keyword = r.keyword,
      this.beforeExpr = !!r.beforeExpr, this.startsExpr = !!r.startsExpr, this.rightAssociative = !!r.rightAssociative, this.isLoop = !!r.isLoop,
      this.isAssign = !!r.isAssign, this.prefix = !!r.prefix, this.postfix = !!r.postfix, this.binop = r.binop != null ? r.binop : null, this.
      updateContext = null;
    }
  }, bS = /* @__PURE__ */ new Map();
  function dt(e, t = {}) {
    t.keyword = e;
    let r = Ne(e, t);
    return bS.set(e, r), r;
  }
  i(dt, "createKeyword");
  function ls(e, t) {
    return Ne(e, {
      beforeExpr: tt,
      binop: t
    });
  }
  i(ls, "createBinop");
  var bc = -1, hi = [], ES = [], vS = [], SS = [], TS = [], xS = [];
  function Ne(e, t = {}) {
    var r, s, n, a;
    return ++bc, ES.push(e), vS.push((r = t.binop) != null ? r : -1), SS.push((s = t.beforeExpr) != null ? s : !1), TS.push((n = t.startsExpr) !=
    null ? n : !1), xS.push((a = t.prefix) != null ? a : !1), hi.push(new kd(e, t)), bc;
  }
  i(Ne, "createToken");
  function et(e, t = {}) {
    var r, s, n, a;
    return ++bc, bS.set(e, bc), ES.push(e), vS.push((r = t.binop) != null ? r : -1), SS.push((s = t.beforeExpr) != null ? s : !1), TS.push((n =
    t.startsExpr) != null ? n : !1), xS.push((a = t.prefix) != null ? a : !1), hi.push(new kd("name", t)), bc;
  }
  i(et, "createKeywordLike");
  var UAe = {
    bracketL: Ne("[", {
      beforeExpr: tt,
      startsExpr: me
    }),
    bracketHashL: Ne("#[", {
      beforeExpr: tt,
      startsExpr: me
    }),
    bracketBarL: Ne("[|", {
      beforeExpr: tt,
      startsExpr: me
    }),
    bracketR: Ne("]"),
    bracketBarR: Ne("|]"),
    braceL: Ne("{", {
      beforeExpr: tt,
      startsExpr: me
    }),
    braceBarL: Ne("{|", {
      beforeExpr: tt,
      startsExpr: me
    }),
    braceHashL: Ne("#{", {
      beforeExpr: tt,
      startsExpr: me
    }),
    braceR: Ne("}"),
    braceBarR: Ne("|}"),
    parenL: Ne("(", {
      beforeExpr: tt,
      startsExpr: me
    }),
    parenR: Ne(")"),
    comma: Ne(",", {
      beforeExpr: tt
    }),
    semi: Ne(";", {
      beforeExpr: tt
    }),
    colon: Ne(":", {
      beforeExpr: tt
    }),
    doubleColon: Ne("::", {
      beforeExpr: tt
    }),
    dot: Ne("."),
    question: Ne("?", {
      beforeExpr: tt
    }),
    questionDot: Ne("?."),
    arrow: Ne("=>", {
      beforeExpr: tt
    }),
    template: Ne("template"),
    ellipsis: Ne("...", {
      beforeExpr: tt
    }),
    backQuote: Ne("`", {
      startsExpr: me
    }),
    dollarBraceL: Ne("${", {
      beforeExpr: tt,
      startsExpr: me
    }),
    templateTail: Ne("...`", {
      startsExpr: me
    }),
    templateNonTail: Ne("...${", {
      beforeExpr: tt,
      startsExpr: me
    }),
    at: Ne("@"),
    hash: Ne("#", {
      startsExpr: me
    }),
    interpreterDirective: Ne("#!..."),
    eq: Ne("=", {
      beforeExpr: tt,
      isAssign: hc
    }),
    assign: Ne("_=", {
      beforeExpr: tt,
      isAssign: hc
    }),
    slashAssign: Ne("_=", {
      beforeExpr: tt,
      isAssign: hc
    }),
    xorAssign: Ne("_=", {
      beforeExpr: tt,
      isAssign: hc
    }),
    moduloAssign: Ne("_=", {
      beforeExpr: tt,
      isAssign: hc
    }),
    incDec: Ne("++/--", {
      prefix: ia,
      postfix: $Ae,
      startsExpr: me
    }),
    bang: Ne("!", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    tilde: Ne("~", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    doubleCaret: Ne("^^", {
      startsExpr: me
    }),
    doubleAt: Ne("@@", {
      startsExpr: me
    }),
    pipeline: ls("|>", 0),
    nullishCoalescing: ls("??", 1),
    logicalOR: ls("||", 1),
    logicalAND: ls("&&", 2),
    bitwiseOR: ls("|", 3),
    bitwiseXOR: ls("^", 4),
    bitwiseAND: ls("&", 5),
    equality: ls("==/!=/===/!==", 6),
    lt: ls("</>/<=/>=", 7),
    gt: ls("</>/<=/>=", 7),
    relational: ls("</>/<=/>=", 7),
    bitShift: ls("<</>>/>>>", 8),
    bitShiftL: ls("<</>>/>>>", 8),
    bitShiftR: ls("<</>>/>>>", 8),
    plusMin: Ne("+/-", {
      beforeExpr: tt,
      binop: 9,
      prefix: ia,
      startsExpr: me
    }),
    modulo: Ne("%", {
      binop: 10,
      startsExpr: me
    }),
    star: Ne("*", {
      binop: 10
    }),
    slash: ls("/", 10),
    exponent: Ne("**", {
      beforeExpr: tt,
      binop: 11,
      rightAssociative: !0
    }),
    _in: dt("in", {
      beforeExpr: tt,
      binop: 7
    }),
    _instanceof: dt("instanceof", {
      beforeExpr: tt,
      binop: 7
    }),
    _break: dt("break"),
    _case: dt("case", {
      beforeExpr: tt
    }),
    _catch: dt("catch"),
    _continue: dt("continue"),
    _debugger: dt("debugger"),
    _default: dt("default", {
      beforeExpr: tt
    }),
    _else: dt("else", {
      beforeExpr: tt
    }),
    _finally: dt("finally"),
    _function: dt("function", {
      startsExpr: me
    }),
    _if: dt("if"),
    _return: dt("return", {
      beforeExpr: tt
    }),
    _switch: dt("switch"),
    _throw: dt("throw", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    _try: dt("try"),
    _var: dt("var"),
    _const: dt("const"),
    _with: dt("with"),
    _new: dt("new", {
      beforeExpr: tt,
      startsExpr: me
    }),
    _this: dt("this", {
      startsExpr: me
    }),
    _super: dt("super", {
      startsExpr: me
    }),
    _class: dt("class", {
      startsExpr: me
    }),
    _extends: dt("extends", {
      beforeExpr: tt
    }),
    _export: dt("export"),
    _import: dt("import", {
      startsExpr: me
    }),
    _null: dt("null", {
      startsExpr: me
    }),
    _true: dt("true", {
      startsExpr: me
    }),
    _false: dt("false", {
      startsExpr: me
    }),
    _typeof: dt("typeof", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    _void: dt("void", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    _delete: dt("delete", {
      beforeExpr: tt,
      prefix: ia,
      startsExpr: me
    }),
    _do: dt("do", {
      isLoop: Kv,
      beforeExpr: tt
    }),
    _for: dt("for", {
      isLoop: Kv
    }),
    _while: dt("while", {
      isLoop: Kv
    }),
    _as: et("as", {
      startsExpr: me
    }),
    _assert: et("assert", {
      startsExpr: me
    }),
    _async: et("async", {
      startsExpr: me
    }),
    _await: et("await", {
      startsExpr: me
    }),
    _defer: et("defer", {
      startsExpr: me
    }),
    _from: et("from", {
      startsExpr: me
    }),
    _get: et("get", {
      startsExpr: me
    }),
    _let: et("let", {
      startsExpr: me
    }),
    _meta: et("meta", {
      startsExpr: me
    }),
    _of: et("of", {
      startsExpr: me
    }),
    _sent: et("sent", {
      startsExpr: me
    }),
    _set: et("set", {
      startsExpr: me
    }),
    _source: et("source", {
      startsExpr: me
    }),
    _static: et("static", {
      startsExpr: me
    }),
    _using: et("using", {
      startsExpr: me
    }),
    _yield: et("yield", {
      startsExpr: me
    }),
    _asserts: et("asserts", {
      startsExpr: me
    }),
    _checks: et("checks", {
      startsExpr: me
    }),
    _exports: et("exports", {
      startsExpr: me
    }),
    _global: et("global", {
      startsExpr: me
    }),
    _implements: et("implements", {
      startsExpr: me
    }),
    _intrinsic: et("intrinsic", {
      startsExpr: me
    }),
    _infer: et("infer", {
      startsExpr: me
    }),
    _is: et("is", {
      startsExpr: me
    }),
    _mixins: et("mixins", {
      startsExpr: me
    }),
    _proto: et("proto", {
      startsExpr: me
    }),
    _require: et("require", {
      startsExpr: me
    }),
    _satisfies: et("satisfies", {
      startsExpr: me
    }),
    _keyof: et("keyof", {
      startsExpr: me
    }),
    _readonly: et("readonly", {
      startsExpr: me
    }),
    _unique: et("unique", {
      startsExpr: me
    }),
    _abstract: et("abstract", {
      startsExpr: me
    }),
    _declare: et("declare", {
      startsExpr: me
    }),
    _enum: et("enum", {
      startsExpr: me
    }),
    _module: et("module", {
      startsExpr: me
    }),
    _namespace: et("namespace", {
      startsExpr: me
    }),
    _interface: et("interface", {
      startsExpr: me
    }),
    _type: et("type", {
      startsExpr: me
    }),
    _opaque: et("opaque", {
      startsExpr: me
    }),
    name: Ne("name", {
      startsExpr: me
    }),
    string: Ne("string", {
      startsExpr: me
    }),
    num: Ne("num", {
      startsExpr: me
    }),
    bigint: Ne("bigint", {
      startsExpr: me
    }),
    decimal: Ne("decimal", {
      startsExpr: me
    }),
    regexp: Ne("regexp", {
      startsExpr: me
    }),
    privateName: Ne("#name", {
      startsExpr: me
    }),
    eof: Ne("eof"),
    jsxName: Ne("jsxName"),
    jsxText: Ne("jsxText", {
      beforeExpr: !0
    }),
    jsxTagStart: Ne("jsxTagStart", {
      startsExpr: !0
    }),
    jsxTagEnd: Ne("jsxTagEnd"),
    placeholder: Ne("%%", {
      startsExpr: !0
    })
  };
  function Tt(e) {
    return e >= 93 && e <= 132;
  }
  i(Tt, "tokenIsIdentifier");
  function VAe(e) {
    return e <= 92;
  }
  i(VAe, "tokenKeywordOrIdentifierIsKeyword");
  function pn(e) {
    return e >= 58 && e <= 132;
  }
  i(pn, "tokenIsKeywordOrIdentifier");
  function tB(e) {
    return e >= 58 && e <= 136;
  }
  i(tB, "tokenIsLiteralPropertyName");
  function WAe(e) {
    return SS[e];
  }
  i(WAe, "tokenComesBeforeExpression");
  function Qv(e) {
    return TS[e];
  }
  i(Qv, "tokenCanStartExpression");
  function HAe(e) {
    return e >= 29 && e <= 33;
  }
  i(HAe, "tokenIsAssignment");
  function U3(e) {
    return e >= 129 && e <= 131;
  }
  i(U3, "tokenIsFlowInterfaceOrTypeOrOpaque");
  function GAe(e) {
    return e >= 90 && e <= 92;
  }
  i(GAe, "tokenIsLoop");
  function PS(e) {
    return e >= 58 && e <= 92;
  }
  i(PS, "tokenIsKeyword");
  function KAe(e) {
    return e >= 39 && e <= 59;
  }
  i(KAe, "tokenIsOperator");
  function YAe(e) {
    return e === 34;
  }
  i(YAe, "tokenIsPostfix");
  function XAe(e) {
    return xS[e];
  }
  i(XAe, "tokenIsPrefix");
  function zAe(e) {
    return e >= 121 && e <= 123;
  }
  i(zAe, "tokenIsTSTypeOperator");
  function JAe(e) {
    return e >= 124 && e <= 130;
  }
  i(JAe, "tokenIsTSDeclarationStart");
  function la(e) {
    return ES[e];
  }
  i(la, "tokenLabelName");
  function Od(e) {
    return vS[e];
  }
  i(Od, "tokenOperatorPrecedence");
  function QAe(e) {
    return e === 57;
  }
  i(QAe, "tokenIsRightAssociative");
  function Fd(e) {
    return e >= 24 && e <= 25;
  }
  i(Fd, "tokenIsTemplate");
  function di(e) {
    return hi[e];
  }
  i(di, "getExportedToken");
  hi[8].updateContext = (e) => {
    e.pop();
  }, hi[5].updateContext = hi[7].updateContext = hi[23].updateContext = (e) => {
    e.push(Lt.brace);
  }, hi[22].updateContext = (e) => {
    e[e.length - 1] === Lt.template ? e.pop() : e.push(Lt.template);
  }, hi[142].updateContext = (e) => {
    e.push(Lt.j_expr, Lt.j_oTag);
  };
  var AS = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993\
-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\
\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\
\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\
\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\
\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01\
-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
  rB = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\
\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4\
-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\
\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\
\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65", ZAe = new RegExp("[" + AS + "]"), eCe = new RegExp("[" + AS + rB + "\
]");
  AS = rB = null;
  var sB = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157,
  19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0,
  2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27,
  28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1,
  3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8,
  46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60,
  42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22,
  0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33,
  125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689,
  63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106,
  6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339,
  3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43,
  485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0,
  2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33,
  4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], tCe = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41,
  2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9,
  6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17,
  10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1,
  13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9,
  9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54,
  8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14,
  1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
  function Zv(e, t) {
    let r = 65536;
    for (let s = 0, n = t.length; s < n; s += 2) {
      if (r += t[s], r > e) return !1;
      if (r += t[s + 1], r >= e) return !0;
    }
    return !1;
  }
  i(Zv, "isInAstralSet");
  function mi(e) {
    return e < 65 ? e === 36 : e <= 90 ? !0 : e < 97 ? e === 95 : e <= 122 ? !0 : e <= 65535 ? e >= 170 && ZAe.test(String.fromCharCode(e)) :
    Zv(e, sB);
  }
  i(mi, "isIdentifierStart");
  function fl(e) {
    return e < 48 ? e === 36 : e < 58 ? !0 : e < 65 ? !1 : e <= 90 ? !0 : e < 97 ? e === 95 : e <= 122 ? !0 : e <= 65535 ? e >= 170 && eCe.test(
    String.fromCharCode(e)) : Zv(e, sB) || Zv(e, tCe);
  }
  i(fl, "isIdentifierChar");
  var CS = {
    keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "swit\
ch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false",
    "in", "instanceof", "typeof", "void", "delete"],
    strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
    strictBind: ["eval", "arguments"]
  }, rCe = new Set(CS.keyword), sCe = new Set(CS.strict), nCe = new Set(CS.strictBind);
  function nB(e, t) {
    return t && e === "await" || e === "enum";
  }
  i(nB, "isReservedWord");
  function iB(e, t) {
    return nB(e, t) || sCe.has(e);
  }
  i(iB, "isStrictReservedWord");
  function aB(e) {
    return nCe.has(e);
  }
  i(aB, "isStrictBindOnlyReservedWord");
  function oB(e, t) {
    return iB(e, t) || aB(e);
  }
  i(oB, "isStrictBindReservedWord");
  function iCe(e) {
    return rCe.has(e);
  }
  i(iCe, "isKeyword");
  function aCe(e, t, r) {
    return e === 64 && t === 64 && mi(r);
  }
  i(aCe, "isIteratorStart");
  var oCe = /* @__PURE__ */ new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function",
  "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import",
  "null", "true", "false", "in", "instanceof", "typeof", "void", "delete", "implements", "interface", "let", "package", "private", "protecte\
d", "public", "static", "yield", "eval", "arguments", "enum", "await"]);
  function lCe(e) {
    return oCe.has(e);
  }
  i(lCe, "canBeReservedWord");
  var vc = class {
    static {
      i(this, "Scope");
    }
    constructor(t) {
      this.flags = 0, this.names = /* @__PURE__ */ new Map(), this.firstLexicalName = "", this.flags = t;
    }
  }, Sc = class {
    static {
      i(this, "ScopeHandler");
    }
    constructor(t, r) {
      this.parser = void 0, this.scopeStack = [], this.inModule = void 0, this.undefinedExports = /* @__PURE__ */ new Map(), this.parser = t,
      this.inModule = r;
    }
    get inTopLevel() {
      return (this.currentScope().flags & 1) > 0;
    }
    get inFunction() {
      return (this.currentVarScopeFlags() & 2) > 0;
    }
    get allowSuper() {
      return (this.currentThisScopeFlags() & 16) > 0;
    }
    get allowDirectSuper() {
      return (this.currentThisScopeFlags() & 32) > 0;
    }
    get inClass() {
      return (this.currentThisScopeFlags() & 64) > 0;
    }
    get inClassAndNotInNonArrowFunction() {
      let t = this.currentThisScopeFlags();
      return (t & 64) > 0 && (t & 2) === 0;
    }
    get inStaticBlock() {
      for (let t = this.scopeStack.length - 1; ; t--) {
        let {
          flags: r
        } = this.scopeStack[t];
        if (r & 128)
          return !0;
        if (r & 451)
          return !1;
      }
    }
    get inNonArrowFunction() {
      return (this.currentThisScopeFlags() & 2) > 0;
    }
    get treatFunctionsAsVar() {
      return this.treatFunctionsAsVarInScope(this.currentScope());
    }
    createScope(t) {
      return new vc(t);
    }
    enter(t) {
      this.scopeStack.push(this.createScope(t));
    }
    exit() {
      return this.scopeStack.pop().flags;
    }
    treatFunctionsAsVarInScope(t) {
      return !!(t.flags & 130 || !this.parser.inModule && t.flags & 1);
    }
    declareName(t, r, s) {
      let n = this.currentScope();
      if (r & 8 || r & 16) {
        this.checkRedeclarationInScope(n, t, r, s);
        let a = n.names.get(t) || 0;
        r & 16 ? a = a | 4 : (n.firstLexicalName || (n.firstLexicalName = t), a = a | 2), n.names.set(t, a), r & 8 && this.maybeExportDefined(
        n, t);
      } else if (r & 4)
        for (let a = this.scopeStack.length - 1; a >= 0 && (n = this.scopeStack[a], this.checkRedeclarationInScope(n, t, r, s), n.names.set(
        t, (n.names.get(t) || 0) | 1), this.maybeExportDefined(n, t), !(n.flags & 387)); --a)
          ;
      this.parser.inModule && n.flags & 1 && this.undefinedExports.delete(t);
    }
    maybeExportDefined(t, r) {
      this.parser.inModule && t.flags & 1 && this.undefinedExports.delete(r);
    }
    checkRedeclarationInScope(t, r, s, n) {
      this.isRedeclaredInScope(t, r, s) && this.parser.raise(k.VarRedeclaration, n, {
        identifierName: r
      });
    }
    isRedeclaredInScope(t, r, s) {
      if (!(s & 1)) return !1;
      if (s & 8)
        return t.names.has(r);
      let n = t.names.get(r);
      return s & 16 ? (n & 2) > 0 || !this.treatFunctionsAsVarInScope(t) && (n & 1) > 0 : (n & 2) > 0 && !(t.flags & 8 && t.firstLexicalName ===
      r) || !this.treatFunctionsAsVarInScope(t) && (n & 4) > 0;
    }
    checkLocalExport(t) {
      let {
        name: r
      } = t;
      this.scopeStack[0].names.has(r) || this.undefinedExports.set(r, t.loc.start);
    }
    currentScope() {
      return this.scopeStack[this.scopeStack.length - 1];
    }
    currentVarScopeFlags() {
      for (let t = this.scopeStack.length - 1; ; t--) {
        let {
          flags: r
        } = this.scopeStack[t];
        if (r & 387)
          return r;
      }
    }
    currentThisScopeFlags() {
      for (let t = this.scopeStack.length - 1; ; t--) {
        let {
          flags: r
        } = this.scopeStack[t];
        if (r & 451 && !(r & 4))
          return r;
      }
    }
  }, eS = class extends vc {
    static {
      i(this, "FlowScope");
    }
    constructor(...t) {
      super(...t), this.declareFunctions = /* @__PURE__ */ new Set();
    }
  }, tS = class extends Sc {
    static {
      i(this, "FlowScopeHandler");
    }
    createScope(t) {
      return new eS(t);
    }
    declareName(t, r, s) {
      let n = this.currentScope();
      if (r & 2048) {
        this.checkRedeclarationInScope(n, t, r, s), this.maybeExportDefined(n, t), n.declareFunctions.add(t);
        return;
      }
      super.declareName(t, r, s);
    }
    isRedeclaredInScope(t, r, s) {
      if (super.isRedeclaredInScope(t, r, s)) return !0;
      if (s & 2048 && !t.declareFunctions.has(r)) {
        let n = t.names.get(r);
        return (n & 4) > 0 || (n & 2) > 0;
      }
      return !1;
    }
    checkLocalExport(t) {
      this.scopeStack[0].declareFunctions.has(t.name) || super.checkLocalExport(t);
    }
  }, rS = class {
    static {
      i(this, "BaseParser");
    }
    constructor() {
      this.sawUnambiguousESM = !1, this.ambiguousScriptDifferentAst = !1;
    }
    hasPlugin(t) {
      if (typeof t == "string")
        return this.plugins.has(t);
      {
        let [r, s] = t;
        if (!this.hasPlugin(r))
          return !1;
        let n = this.plugins.get(r);
        for (let a of Object.keys(s))
          if (n?.[a] !== s[a])
            return !1;
        return !0;
      }
    }
    getPluginOption(t, r) {
      var s;
      return (s = this.plugins.get(t)) == null ? void 0 : s[r];
    }
  };
  function lB(e, t) {
    e.trailingComments === void 0 ? e.trailingComments = t : e.trailingComments.unshift(...t);
  }
  i(lB, "setTrailingComments");
  function uCe(e, t) {
    e.leadingComments === void 0 ? e.leadingComments = t : e.leadingComments.unshift(...t);
  }
  i(uCe, "setLeadingComments");
  function Tc(e, t) {
    e.innerComments === void 0 ? e.innerComments = t : e.innerComments.unshift(...t);
  }
  i(Tc, "setInnerComments");
  function mc(e, t, r) {
    let s = null, n = t.length;
    for (; s === null && n > 0; )
      s = t[--n];
    s === null || s.start > r.start ? Tc(e, r.comments) : lB(s, r.comments);
  }
  i(mc, "adjustInnerComments");
  var sS = class extends rS {
    static {
      i(this, "CommentsParser");
    }
    addComment(t) {
      this.filename && (t.loc.filename = this.filename);
      let {
        commentsLen: r
      } = this.state;
      this.comments.length != r && (this.comments.length = r), this.comments.push(t), this.state.commentsLen++;
    }
    processComment(t) {
      let {
        commentStack: r
      } = this.state, s = r.length;
      if (s === 0) return;
      let n = s - 1, a = r[n];
      a.start === t.end && (a.leadingNode = t, n--);
      let {
        start: o
      } = t;
      for (; n >= 0; n--) {
        let l = r[n], u = l.end;
        if (u > o)
          l.containingNode = t, this.finalizeComment(l), r.splice(n, 1);
        else {
          u === o && (l.trailingNode = t);
          break;
        }
      }
    }
    finalizeComment(t) {
      let {
        comments: r
      } = t;
      if (t.leadingNode !== null || t.trailingNode !== null)
        t.leadingNode !== null && lB(t.leadingNode, r), t.trailingNode !== null && uCe(t.trailingNode, r);
      else {
        let {
          containingNode: s,
          start: n
        } = t;
        if (this.input.charCodeAt(n - 1) === 44)
          switch (s.type) {
            case "ObjectExpression":
            case "ObjectPattern":
            case "RecordExpression":
              mc(s, s.properties, t);
              break;
            case "CallExpression":
            case "OptionalCallExpression":
              mc(s, s.arguments, t);
              break;
            case "FunctionDeclaration":
            case "FunctionExpression":
            case "ArrowFunctionExpression":
            case "ObjectMethod":
            case "ClassMethod":
            case "ClassPrivateMethod":
              mc(s, s.params, t);
              break;
            case "ArrayExpression":
            case "ArrayPattern":
            case "TupleExpression":
              mc(s, s.elements, t);
              break;
            case "ExportNamedDeclaration":
            case "ImportDeclaration":
              mc(s, s.specifiers, t);
              break;
            default:
              Tc(s, r);
          }
        else
          Tc(s, r);
      }
    }
    finalizeRemainingComments() {
      let {
        commentStack: t
      } = this.state;
      for (let r = t.length - 1; r >= 0; r--)
        this.finalizeComment(t[r]);
      this.state.commentStack = [];
    }
    resetPreviousNodeTrailingComments(t) {
      let {
        commentStack: r
      } = this.state, {
        length: s
      } = r;
      if (s === 0) return;
      let n = r[s - 1];
      n.leadingNode === t && (n.leadingNode = null);
    }
    resetPreviousIdentifierLeadingComments(t) {
      let {
        commentStack: r
      } = this.state, {
        length: s
      } = r;
      s !== 0 && (r[s - 1].trailingNode === t ? r[s - 1].trailingNode = null : s >= 2 && r[s - 2].trailingNode === t && (r[s - 2].trailingNode =
      null));
    }
    takeSurroundingComments(t, r, s) {
      let {
        commentStack: n
      } = this.state, a = n.length;
      if (a === 0) return;
      let o = a - 1;
      for (; o >= 0; o--) {
        let l = n[o], u = l.end;
        if (l.start === s)
          l.leadingNode = t;
        else if (u === r)
          l.trailingNode = t;
        else if (u < r)
          break;
      }
    }
  }, uB = /\r\n?|[\n\u2028\u2029]/, Dd = new RegExp(uB.source, "g");
  function Ec(e) {
    switch (e) {
      case 10:
      case 13:
      case 8232:
      case 8233:
        return !0;
      default:
        return !1;
    }
  }
  i(Ec, "isNewLine");
  var Yv = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, Nd = /(?:[^\S\n\r\u2028\u2029]|\/\/.*|\/\*.*?\*\/)*/g, V3 = new RegExp("(?=(" + Nd.source + "))\\\
1" + /(?=[\n\r\u2028\u2029]|\/\*(?!.*?\*\/)|$)/.source, "y");
  function cCe(e) {
    switch (e) {
      case 9:
      case 11:
      case 12:
      case 32:
      case 160:
      case 5760:
      case 8192:
      case 8193:
      case 8194:
      case 8195:
      case 8196:
      case 8197:
      case 8198:
      case 8199:
      case 8200:
      case 8201:
      case 8202:
      case 8239:
      case 8287:
      case 12288:
      case 65279:
        return !0;
      default:
        return !1;
    }
  }
  i(cCe, "isWhitespace");
  var nS = class e {
    static {
      i(this, "State");
    }
    constructor() {
      this.flags = 1024, this.curLine = void 0, this.lineStart = void 0, this.startLoc = void 0, this.endLoc = void 0, this.errors = [], this.
      potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.topicContext = {
        maxNumOfResolvableTopics: 0,
        maxTopicIndex: null
      }, this.labels = [], this.commentsLen = 0, this.commentStack = [], this.pos = 0, this.type = 139, this.value = null, this.start = 0, this.
      end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.context = [Lt.brace], this.firstInvalidTemplateEscapePos = null,
      this.strictErrors = /* @__PURE__ */ new Map(), this.tokensLength = 0;
    }
    get strict() {
      return (this.flags & 1) > 0;
    }
    set strict(t) {
      t ? this.flags |= 1 : this.flags &= -2;
    }
    init({
      strictMode: t,
      sourceType: r,
      startLine: s,
      startColumn: n
    }) {
      this.strict = t === !1 ? !1 : t === !0 ? !0 : r === "module", this.curLine = s, this.lineStart = -n, this.startLoc = this.endLoc = new Ln(
      s, n, 0);
    }
    get maybeInArrowParameters() {
      return (this.flags & 2) > 0;
    }
    set maybeInArrowParameters(t) {
      t ? this.flags |= 2 : this.flags &= -3;
    }
    get inType() {
      return (this.flags & 4) > 0;
    }
    set inType(t) {
      t ? this.flags |= 4 : this.flags &= -5;
    }
    get noAnonFunctionType() {
      return (this.flags & 8) > 0;
    }
    set noAnonFunctionType(t) {
      t ? this.flags |= 8 : this.flags &= -9;
    }
    get hasFlowComment() {
      return (this.flags & 16) > 0;
    }
    set hasFlowComment(t) {
      t ? this.flags |= 16 : this.flags &= -17;
    }
    get isAmbientContext() {
      return (this.flags & 32) > 0;
    }
    set isAmbientContext(t) {
      t ? this.flags |= 32 : this.flags &= -33;
    }
    get inAbstractClass() {
      return (this.flags & 64) > 0;
    }
    set inAbstractClass(t) {
      t ? this.flags |= 64 : this.flags &= -65;
    }
    get inDisallowConditionalTypesContext() {
      return (this.flags & 128) > 0;
    }
    set inDisallowConditionalTypesContext(t) {
      t ? this.flags |= 128 : this.flags &= -129;
    }
    get soloAwait() {
      return (this.flags & 256) > 0;
    }
    set soloAwait(t) {
      t ? this.flags |= 256 : this.flags &= -257;
    }
    get inFSharpPipelineDirectBody() {
      return (this.flags & 512) > 0;
    }
    set inFSharpPipelineDirectBody(t) {
      t ? this.flags |= 512 : this.flags &= -513;
    }
    get canStartJSXElement() {
      return (this.flags & 1024) > 0;
    }
    set canStartJSXElement(t) {
      t ? this.flags |= 1024 : this.flags &= -1025;
    }
    get containsEsc() {
      return (this.flags & 2048) > 0;
    }
    set containsEsc(t) {
      t ? this.flags |= 2048 : this.flags &= -2049;
    }
    curPosition() {
      return new Ln(this.curLine, this.pos - this.lineStart, this.pos);
    }
    clone() {
      let t = new e();
      return t.flags = this.flags, t.curLine = this.curLine, t.lineStart = this.lineStart, t.startLoc = this.startLoc, t.endLoc = this.endLoc,
      t.errors = this.errors.slice(), t.potentialArrowAt = this.potentialArrowAt, t.noArrowAt = this.noArrowAt.slice(), t.noArrowParamsConversionAt =
      this.noArrowParamsConversionAt.slice(), t.topicContext = this.topicContext, t.labels = this.labels.slice(), t.commentsLen = this.commentsLen,
      t.commentStack = this.commentStack.slice(), t.pos = this.pos, t.type = this.type, t.value = this.value, t.start = this.start, t.end = this.
      end, t.lastTokEndLoc = this.lastTokEndLoc, t.lastTokStartLoc = this.lastTokStartLoc, t.context = this.context.slice(), t.firstInvalidTemplateEscapePos =
      this.firstInvalidTemplateEscapePos, t.strictErrors = this.strictErrors, t.tokensLength = this.tokensLength, t;
    }
  }, fCe = /* @__PURE__ */ i(function(t) {
    return t >= 48 && t <= 57;
  }, "isDigit"), W3 = {
    decBinOct: /* @__PURE__ */ new Set([46, 66, 69, 79, 95, 98, 101, 111]),
    hex: /* @__PURE__ */ new Set([46, 88, 95, 120])
  }, Id = {
    bin: /* @__PURE__ */ i((e) => e === 48 || e === 49, "bin"),
    oct: /* @__PURE__ */ i((e) => e >= 48 && e <= 55, "oct"),
    dec: /* @__PURE__ */ i((e) => e >= 48 && e <= 57, "dec"),
    hex: /* @__PURE__ */ i((e) => e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102, "hex")
  };
  function H3(e, t, r, s, n, a) {
    let o = r, l = s, u = n, c = "", f = null, p = r, {
      length: d
    } = t;
    for (; ; ) {
      if (r >= d) {
        a.unterminated(o, l, u), c += t.slice(p, r);
        break;
      }
      let m = t.charCodeAt(r);
      if (pCe(e, m, t, r)) {
        c += t.slice(p, r);
        break;
      }
      if (m === 92) {
        c += t.slice(p, r);
        let b = dCe(t, r, s, n, e === "template", a);
        b.ch === null && !f ? f = {
          pos: r,
          lineStart: s,
          curLine: n
        } : c += b.ch, {
          pos: r,
          lineStart: s,
          curLine: n
        } = b, p = r;
      } else m === 8232 || m === 8233 ? (++r, ++n, s = r) : m === 10 || m === 13 ? e === "template" ? (c += t.slice(p, r) + `
`, ++r, m === 13 && t.charCodeAt(r) === 10 && ++r, ++n, p = s = r) : a.unterminated(o, l, u) : ++r;
    }
    return {
      pos: r,
      str: c,
      firstInvalidLoc: f,
      lineStart: s,
      curLine: n,
      containsInvalid: !!f
    };
  }
  i(H3, "readStringContents");
  function pCe(e, t, r, s) {
    return e === "template" ? t === 96 || t === 36 && r.charCodeAt(s + 1) === 123 : t === (e === "double" ? 34 : 39);
  }
  i(pCe, "isStringEnd");
  function dCe(e, t, r, s, n, a) {
    let o = !n;
    t++;
    let l = /* @__PURE__ */ i((c) => ({
      pos: t,
      ch: c,
      lineStart: r,
      curLine: s
    }), "res"), u = e.charCodeAt(t++);
    switch (u) {
      case 110:
        return l(`
`);
      case 114:
        return l("\r");
      case 120: {
        let c;
        return {
          code: c,
          pos: t
        } = iS(e, t, r, s, 2, !1, o, a), l(c === null ? null : String.fromCharCode(c));
      }
      case 117: {
        let c;
        return {
          code: c,
          pos: t
        } = fB(e, t, r, s, o, a), l(c === null ? null : String.fromCodePoint(c));
      }
      case 116:
        return l("	");
      case 98:
        return l("\b");
      case 118:
        return l("\v");
      case 102:
        return l("\f");
      case 13:
        e.charCodeAt(t) === 10 && ++t;
      case 10:
        r = t, ++s;
      case 8232:
      case 8233:
        return l("");
      case 56:
      case 57:
        if (n)
          return l(null);
        a.strictNumericEscape(t - 1, r, s);
      default:
        if (u >= 48 && u <= 55) {
          let c = t - 1, p = e.slice(c, t + 2).match(/^[0-7]+/)[0], d = parseInt(p, 8);
          d > 255 && (p = p.slice(0, -1), d = parseInt(p, 8)), t += p.length - 1;
          let m = e.charCodeAt(t);
          if (p !== "0" || m === 56 || m === 57) {
            if (n)
              return l(null);
            a.strictNumericEscape(c, r, s);
          }
          return l(String.fromCharCode(d));
        }
        return l(String.fromCharCode(u));
    }
  }
  i(dCe, "readEscapedChar");
  function iS(e, t, r, s, n, a, o, l) {
    let u = t, c;
    return {
      n: c,
      pos: t
    } = cB(e, t, r, s, 16, n, a, !1, l, !o), c === null && (o ? l.invalidEscapeSequence(u, r, s) : t = u - 1), {
      code: c,
      pos: t
    };
  }
  i(iS, "readHexChar");
  function cB(e, t, r, s, n, a, o, l, u, c) {
    let f = t, p = n === 16 ? W3.hex : W3.decBinOct, d = n === 16 ? Id.hex : n === 10 ? Id.dec : n === 8 ? Id.oct : Id.bin, m = !1, b = 0;
    for (let h = 0, g = a ?? 1 / 0; h < g; ++h) {
      let E = e.charCodeAt(t), D;
      if (E === 95 && l !== "bail") {
        let C = e.charCodeAt(t - 1), N = e.charCodeAt(t + 1);
        if (l) {
          if (Number.isNaN(N) || !d(N) || p.has(C) || p.has(N)) {
            if (c) return {
              n: null,
              pos: t
            };
            u.unexpectedNumericSeparator(t, r, s);
          }
        } else {
          if (c) return {
            n: null,
            pos: t
          };
          u.numericSeparatorInEscapeSequence(t, r, s);
        }
        ++t;
        continue;
      }
      if (E >= 97 ? D = E - 97 + 10 : E >= 65 ? D = E - 65 + 10 : fCe(E) ? D = E - 48 : D = 1 / 0, D >= n) {
        if (D <= 9 && c)
          return {
            n: null,
            pos: t
          };
        if (D <= 9 && u.invalidDigit(t, r, s, n))
          D = 0;
        else if (o)
          D = 0, m = !0;
        else
          break;
      }
      ++t, b = b * n + D;
    }
    return t === f || a != null && t - f !== a || m ? {
      n: null,
      pos: t
    } : {
      n: b,
      pos: t
    };
  }
  i(cB, "readInt");
  function fB(e, t, r, s, n, a) {
    let o = e.charCodeAt(t), l;
    if (o === 123) {
      if (++t, {
        code: l,
        pos: t
      } = iS(e, t, r, s, e.indexOf("}", t) - t, !0, n, a), ++t, l !== null && l > 1114111)
        if (n)
          a.invalidCodePoint(t, r, s);
        else
          return {
            code: null,
            pos: t
          };
    } else
      ({
        code: l,
        pos: t
      } = iS(e, t, r, s, 4, !1, n, a));
    return {
      code: l,
      pos: t
    };
  }
  i(fB, "readCodePoint");
  function yc(e, t, r) {
    return new Ln(r, e - t, e);
  }
  i(yc, "buildPosition");
  var hCe = /* @__PURE__ */ new Set([103, 109, 115, 105, 121, 117, 100, 118]), Fn = class {
    static {
      i(this, "Token");
    }
    constructor(t) {
      this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, this.loc = new dl(t.startLoc, t.endLoc);
    }
  }, aS = class extends sS {
    static {
      i(this, "Tokenizer");
    }
    constructor(t, r) {
      super(), this.isLookahead = void 0, this.tokens = [], this.errorHandlers_readInt = {
        invalidDigit: /* @__PURE__ */ i((s, n, a, o) => this.options.errorRecovery ? (this.raise(k.InvalidDigit, yc(s, n, a), {
          radix: o
        }), !0) : !1, "invalidDigit"),
        numericSeparatorInEscapeSequence: this.errorBuilder(k.NumericSeparatorInEscapeSequence),
        unexpectedNumericSeparator: this.errorBuilder(k.UnexpectedNumericSeparator)
      }, this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {
        invalidEscapeSequence: this.errorBuilder(k.InvalidEscapeSequence),
        invalidCodePoint: this.errorBuilder(k.InvalidCodePoint)
      }), this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {
        strictNumericEscape: /* @__PURE__ */ i((s, n, a) => {
          this.recordStrictModeErrors(k.StrictNumericEscape, yc(s, n, a));
        }, "strictNumericEscape"),
        unterminated: /* @__PURE__ */ i((s, n, a) => {
          throw this.raise(k.UnterminatedString, yc(s - 1, n, a));
        }, "unterminated")
      }), this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {
        strictNumericEscape: this.errorBuilder(k.StrictNumericEscape),
        unterminated: /* @__PURE__ */ i((s, n, a) => {
          throw this.raise(k.UnterminatedTemplate, yc(s, n, a));
        }, "unterminated")
      }), this.state = new nS(), this.state.init(t), this.input = r, this.length = r.length, this.comments = [], this.isLookahead = !1;
    }
    pushToken(t) {
      this.tokens.length = this.state.tokensLength, this.tokens.push(t), ++this.state.tokensLength;
    }
    next() {
      this.checkKeywordEscapes(), this.options.tokens && this.pushToken(new Fn(this.state)), this.state.lastTokEndLoc = this.state.endLoc, this.
      state.lastTokStartLoc = this.state.startLoc, this.nextToken();
    }
    eat(t) {
      return this.match(t) ? (this.next(), !0) : !1;
    }
    match(t) {
      return this.state.type === t;
    }
    createLookaheadState(t) {
      return {
        pos: t.pos,
        value: null,
        type: t.type,
        start: t.start,
        end: t.end,
        context: [this.curContext()],
        inType: t.inType,
        startLoc: t.startLoc,
        lastTokEndLoc: t.lastTokEndLoc,
        curLine: t.curLine,
        lineStart: t.lineStart,
        curPosition: t.curPosition
      };
    }
    lookahead() {
      let t = this.state;
      this.state = this.createLookaheadState(t), this.isLookahead = !0, this.nextToken(), this.isLookahead = !1;
      let r = this.state;
      return this.state = t, r;
    }
    nextTokenStart() {
      return this.nextTokenStartSince(this.state.pos);
    }
    nextTokenStartSince(t) {
      return Yv.lastIndex = t, Yv.test(this.input) ? Yv.lastIndex : t;
    }
    lookaheadCharCode() {
      return this.input.charCodeAt(this.nextTokenStart());
    }
    nextTokenInLineStart() {
      return this.nextTokenInLineStartSince(this.state.pos);
    }
    nextTokenInLineStartSince(t) {
      return Nd.lastIndex = t, Nd.test(this.input) ? Nd.lastIndex : t;
    }
    lookaheadInLineCharCode() {
      return this.input.charCodeAt(this.nextTokenInLineStart());
    }
    codePointAtPos(t) {
      let r = this.input.charCodeAt(t);
      if ((r & 64512) === 55296 && ++t < this.input.length) {
        let s = this.input.charCodeAt(t);
        (s & 64512) === 56320 && (r = 65536 + ((r & 1023) << 10) + (s & 1023));
      }
      return r;
    }
    setStrict(t) {
      this.state.strict = t, t && (this.state.strictErrors.forEach(([r, s]) => this.raise(r, s)), this.state.strictErrors.clear());
    }
    curContext() {
      return this.state.context[this.state.context.length - 1];
    }
    nextToken() {
      if (this.skipSpace(), this.state.start = this.state.pos, this.isLookahead || (this.state.startLoc = this.state.curPosition()), this.state.
      pos >= this.length) {
        this.finishToken(139);
        return;
      }
      this.getTokenFromCode(this.codePointAtPos(this.state.pos));
    }
    skipBlockComment(t) {
      let r;
      this.isLookahead || (r = this.state.curPosition());
      let s = this.state.pos, n = this.input.indexOf(t, s + 2);
      if (n === -1)
        throw this.raise(k.UnterminatedComment, this.state.curPosition());
      for (this.state.pos = n + t.length, Dd.lastIndex = s + 2; Dd.test(this.input) && Dd.lastIndex <= n; )
        ++this.state.curLine, this.state.lineStart = Dd.lastIndex;
      if (this.isLookahead) return;
      let a = {
        type: "CommentBlock",
        value: this.input.slice(s + 2, n),
        start: s,
        end: n + t.length,
        loc: new dl(r, this.state.curPosition())
      };
      return this.options.tokens && this.pushToken(a), a;
    }
    skipLineComment(t) {
      let r = this.state.pos, s;
      this.isLookahead || (s = this.state.curPosition());
      let n = this.input.charCodeAt(this.state.pos += t);
      if (this.state.pos < this.length)
        for (; !Ec(n) && ++this.state.pos < this.length; )
          n = this.input.charCodeAt(this.state.pos);
      if (this.isLookahead) return;
      let a = this.state.pos, l = {
        type: "CommentLine",
        value: this.input.slice(r + t, a),
        start: r,
        end: a,
        loc: new dl(s, this.state.curPosition())
      };
      return this.options.tokens && this.pushToken(l), l;
    }
    skipSpace() {
      let t = this.state.pos, r = [];
      e: for (; this.state.pos < this.length; ) {
        let s = this.input.charCodeAt(this.state.pos);
        switch (s) {
          case 32:
          case 160:
          case 9:
            ++this.state.pos;
            break;
          case 13:
            this.input.charCodeAt(this.state.pos + 1) === 10 && ++this.state.pos;
          case 10:
          case 8232:
          case 8233:
            ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;
            break;
          case 47:
            switch (this.input.charCodeAt(this.state.pos + 1)) {
              case 42: {
                let n = this.skipBlockComment("*/");
                n !== void 0 && (this.addComment(n), this.options.attachComment && r.push(n));
                break;
              }
              case 47: {
                let n = this.skipLineComment(2);
                n !== void 0 && (this.addComment(n), this.options.attachComment && r.push(n));
                break;
              }
              default:
                break e;
            }
            break;
          default:
            if (cCe(s))
              ++this.state.pos;
            else if (s === 45 && !this.inModule && this.options.annexB) {
              let n = this.state.pos;
              if (this.input.charCodeAt(n + 1) === 45 && this.input.charCodeAt(n + 2) === 62 && (t === 0 || this.state.lineStart > t)) {
                let a = this.skipLineComment(3);
                a !== void 0 && (this.addComment(a), this.options.attachComment && r.push(a));
              } else
                break e;
            } else if (s === 60 && !this.inModule && this.options.annexB) {
              let n = this.state.pos;
              if (this.input.charCodeAt(n + 1) === 33 && this.input.charCodeAt(n + 2) === 45 && this.input.charCodeAt(n + 3) === 45) {
                let a = this.skipLineComment(4);
                a !== void 0 && (this.addComment(a), this.options.attachComment && r.push(a));
              } else
                break e;
            } else
              break e;
        }
      }
      if (r.length > 0) {
        let s = this.state.pos, n = {
          start: t,
          end: s,
          comments: r,
          leadingNode: null,
          trailingNode: null,
          containingNode: null
        };
        this.state.commentStack.push(n);
      }
    }
    finishToken(t, r) {
      this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();
      let s = this.state.type;
      this.state.type = t, this.state.value = r, this.isLookahead || this.updateContext(s);
    }
    replaceToken(t) {
      this.state.type = t, this.updateContext();
    }
    readToken_numberSign() {
      if (this.state.pos === 0 && this.readToken_interpreter())
        return;
      let t = this.state.pos + 1, r = this.codePointAtPos(t);
      if (r >= 48 && r <= 57)
        throw this.raise(k.UnexpectedDigitAfterHash, this.state.curPosition());
      if (r === 123 || r === 91 && this.hasPlugin("recordAndTuple")) {
        if (this.expectPlugin("recordAndTuple"), this.getPluginOption("recordAndTuple", "syntaxType") === "bar")
          throw this.raise(r === 123 ? k.RecordExpressionHashIncorrectStartSyntaxType : k.TupleExpressionHashIncorrectStartSyntaxType, this.
          state.curPosition());
        this.state.pos += 2, r === 123 ? this.finishToken(7) : this.finishToken(1);
      } else mi(r) ? (++this.state.pos, this.finishToken(138, this.readWord1(r))) : r === 92 ? (++this.state.pos, this.finishToken(138, this.
      readWord1())) : this.finishOp(27, 1);
    }
    readToken_dot() {
      let t = this.input.charCodeAt(this.state.pos + 1);
      if (t >= 48 && t <= 57) {
        this.readNumber(!0);
        return;
      }
      t === 46 && this.input.charCodeAt(this.state.pos + 2) === 46 ? (this.state.pos += 3, this.finishToken(21)) : (++this.state.pos, this.finishToken(
      16));
    }
    readToken_slash() {
      this.input.charCodeAt(this.state.pos + 1) === 61 ? this.finishOp(31, 2) : this.finishOp(56, 1);
    }
    readToken_interpreter() {
      if (this.state.pos !== 0 || this.length < 2) return !1;
      let t = this.input.charCodeAt(this.state.pos + 1);
      if (t !== 33) return !1;
      let r = this.state.pos;
      for (this.state.pos += 1; !Ec(t) && ++this.state.pos < this.length; )
        t = this.input.charCodeAt(this.state.pos);
      let s = this.input.slice(r + 2, this.state.pos);
      return this.finishToken(28, s), !0;
    }
    readToken_mult_modulo(t) {
      let r = t === 42 ? 55 : 54, s = 1, n = this.input.charCodeAt(this.state.pos + 1);
      t === 42 && n === 42 && (s++, n = this.input.charCodeAt(this.state.pos + 2), r = 57), n === 61 && !this.state.inType && (s++, r = t ===
      37 ? 33 : 30), this.finishOp(r, s);
    }
    readToken_pipe_amp(t) {
      let r = this.input.charCodeAt(this.state.pos + 1);
      if (r === t) {
        this.input.charCodeAt(this.state.pos + 2) === 61 ? this.finishOp(30, 3) : this.finishOp(t === 124 ? 41 : 42, 2);
        return;
      }
      if (t === 124) {
        if (r === 62) {
          this.finishOp(39, 2);
          return;
        }
        if (this.hasPlugin("recordAndTuple") && r === 125) {
          if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
            throw this.raise(k.RecordExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
          this.state.pos += 2, this.finishToken(9);
          return;
        }
        if (this.hasPlugin("recordAndTuple") && r === 93) {
          if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
            throw this.raise(k.TupleExpressionBarIncorrectEndSyntaxType, this.state.curPosition());
          this.state.pos += 2, this.finishToken(4);
          return;
        }
      }
      if (r === 61) {
        this.finishOp(30, 2);
        return;
      }
      this.finishOp(t === 124 ? 43 : 45, 1);
    }
    readToken_caret() {
      let t = this.input.charCodeAt(this.state.pos + 1);
      t === 61 && !this.state.inType ? this.finishOp(32, 2) : t === 94 && this.hasPlugin(["pipelineOperator", {
        proposal: "hack",
        topicToken: "^^"
      }]) ? (this.finishOp(37, 2), this.input.codePointAt(this.state.pos) === 94 && this.unexpected()) : this.finishOp(44, 1);
    }
    readToken_atSign() {
      this.input.charCodeAt(this.state.pos + 1) === 64 && this.hasPlugin(["pipelineOperator", {
        proposal: "hack",
        topicToken: "@@"
      }]) ? this.finishOp(38, 2) : this.finishOp(26, 1);
    }
    readToken_plus_min(t) {
      let r = this.input.charCodeAt(this.state.pos + 1);
      if (r === t) {
        this.finishOp(34, 2);
        return;
      }
      r === 61 ? this.finishOp(30, 2) : this.finishOp(53, 1);
    }
    readToken_lt() {
      let {
        pos: t
      } = this.state, r = this.input.charCodeAt(t + 1);
      if (r === 60) {
        if (this.input.charCodeAt(t + 2) === 61) {
          this.finishOp(30, 3);
          return;
        }
        this.finishOp(51, 2);
        return;
      }
      if (r === 61) {
        this.finishOp(49, 2);
        return;
      }
      this.finishOp(47, 1);
    }
    readToken_gt() {
      let {
        pos: t
      } = this.state, r = this.input.charCodeAt(t + 1);
      if (r === 62) {
        let s = this.input.charCodeAt(t + 2) === 62 ? 3 : 2;
        if (this.input.charCodeAt(t + s) === 61) {
          this.finishOp(30, s + 1);
          return;
        }
        this.finishOp(52, s);
        return;
      }
      if (r === 61) {
        this.finishOp(49, 2);
        return;
      }
      this.finishOp(48, 1);
    }
    readToken_eq_excl(t) {
      let r = this.input.charCodeAt(this.state.pos + 1);
      if (r === 61) {
        this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
        return;
      }
      if (t === 61 && r === 62) {
        this.state.pos += 2, this.finishToken(19);
        return;
      }
      this.finishOp(t === 61 ? 29 : 35, 1);
    }
    readToken_question() {
      let t = this.input.charCodeAt(this.state.pos + 1), r = this.input.charCodeAt(this.state.pos + 2);
      t === 63 ? r === 61 ? this.finishOp(30, 3) : this.finishOp(40, 2) : t === 46 && !(r >= 48 && r <= 57) ? (this.state.pos += 2, this.finishToken(
      18)) : (++this.state.pos, this.finishToken(17));
    }
    getTokenFromCode(t) {
      switch (t) {
        case 46:
          this.readToken_dot();
          return;
        case 40:
          ++this.state.pos, this.finishToken(10);
          return;
        case 41:
          ++this.state.pos, this.finishToken(11);
          return;
        case 59:
          ++this.state.pos, this.finishToken(13);
          return;
        case 44:
          ++this.state.pos, this.finishToken(12);
          return;
        case 91:
          if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
            if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
              throw this.raise(k.TupleExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
            this.state.pos += 2, this.finishToken(2);
          } else
            ++this.state.pos, this.finishToken(0);
          return;
        case 93:
          ++this.state.pos, this.finishToken(3);
          return;
        case 123:
          if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
            if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar")
              throw this.raise(k.RecordExpressionBarIncorrectStartSyntaxType, this.state.curPosition());
            this.state.pos += 2, this.finishToken(6);
          } else
            ++this.state.pos, this.finishToken(5);
          return;
        case 125:
          ++this.state.pos, this.finishToken(8);
          return;
        case 58:
          this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58 ? this.finishOp(15, 2) : (++this.state.pos, this.
          finishToken(14));
          return;
        case 63:
          this.readToken_question();
          return;
        case 96:
          this.readTemplateToken();
          return;
        case 48: {
          let r = this.input.charCodeAt(this.state.pos + 1);
          if (r === 120 || r === 88) {
            this.readRadixNumber(16);
            return;
          }
          if (r === 111 || r === 79) {
            this.readRadixNumber(8);
            return;
          }
          if (r === 98 || r === 66) {
            this.readRadixNumber(2);
            return;
          }
        }
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
          this.readNumber(!1);
          return;
        case 34:
        case 39:
          this.readString(t);
          return;
        case 47:
          this.readToken_slash();
          return;
        case 37:
        case 42:
          this.readToken_mult_modulo(t);
          return;
        case 124:
        case 38:
          this.readToken_pipe_amp(t);
          return;
        case 94:
          this.readToken_caret();
          return;
        case 43:
        case 45:
          this.readToken_plus_min(t);
          return;
        case 60:
          this.readToken_lt();
          return;
        case 62:
          this.readToken_gt();
          return;
        case 61:
        case 33:
          this.readToken_eq_excl(t);
          return;
        case 126:
          this.finishOp(36, 1);
          return;
        case 64:
          this.readToken_atSign();
          return;
        case 35:
          this.readToken_numberSign();
          return;
        case 92:
          this.readWord();
          return;
        default:
          if (mi(t)) {
            this.readWord(t);
            return;
          }
      }
      throw this.raise(k.InvalidOrUnexpectedToken, this.state.curPosition(), {
        unexpected: String.fromCodePoint(t)
      });
    }
    finishOp(t, r) {
      let s = this.input.slice(this.state.pos, this.state.pos + r);
      this.state.pos += r, this.finishToken(t, s);
    }
    readRegexp() {
      let t = this.state.startLoc, r = this.state.start + 1, s, n, {
        pos: a
      } = this.state;
      for (; ; ++a) {
        if (a >= this.length)
          throw this.raise(k.UnterminatedRegExp, us(t, 1));
        let c = this.input.charCodeAt(a);
        if (Ec(c))
          throw this.raise(k.UnterminatedRegExp, us(t, 1));
        if (s)
          s = !1;
        else {
          if (c === 91)
            n = !0;
          else if (c === 93 && n)
            n = !1;
          else if (c === 47 && !n)
            break;
          s = c === 92;
        }
      }
      let o = this.input.slice(r, a);
      ++a;
      let l = "", u = /* @__PURE__ */ i(() => us(t, a + 2 - r), "nextPos");
      for (; a < this.length; ) {
        let c = this.codePointAtPos(a), f = String.fromCharCode(c);
        if (hCe.has(c))
          c === 118 ? l.includes("u") && this.raise(k.IncompatibleRegExpUVFlags, u()) : c === 117 && l.includes("v") && this.raise(k.IncompatibleRegExpUVFlags,
          u()), l.includes(f) && this.raise(k.DuplicateRegExpFlags, u());
        else if (fl(c) || c === 92)
          this.raise(k.MalformedRegExpFlags, u());
        else
          break;
        ++a, l += f;
      }
      this.state.pos = a, this.finishToken(137, {
        pattern: o,
        flags: l
      });
    }
    readInt(t, r, s = !1, n = !0) {
      let {
        n: a,
        pos: o
      } = cB(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t, r, s, n, this.errorHandlers_readInt, !1);
      return this.state.pos = o, a;
    }
    readRadixNumber(t) {
      let r = this.state.curPosition(), s = !1;
      this.state.pos += 2;
      let n = this.readInt(t);
      n == null && this.raise(k.InvalidDigit, us(r, 2), {
        radix: t
      });
      let a = this.input.charCodeAt(this.state.pos);
      if (a === 110)
        ++this.state.pos, s = !0;
      else if (a === 109)
        throw this.raise(k.InvalidDecimal, r);
      if (mi(this.codePointAtPos(this.state.pos)))
        throw this.raise(k.NumberIdentifier, this.state.curPosition());
      if (s) {
        let o = this.input.slice(r.index, this.state.pos).replace(/[_n]/g, "");
        this.finishToken(135, o);
        return;
      }
      this.finishToken(134, n);
    }
    readNumber(t) {
      let r = this.state.pos, s = this.state.curPosition(), n = !1, a = !1, o = !1, l = !1, u = !1;
      !t && this.readInt(10) === null && this.raise(k.InvalidNumber, this.state.curPosition());
      let c = this.state.pos - r >= 2 && this.input.charCodeAt(r) === 48;
      if (c) {
        let m = this.input.slice(r, this.state.pos);
        if (this.recordStrictModeErrors(k.StrictOctalLiteral, s), !this.state.strict) {
          let b = m.indexOf("_");
          b > 0 && this.raise(k.ZeroDigitNumericSeparator, us(s, b));
        }
        u = c && !/[89]/.test(m);
      }
      let f = this.input.charCodeAt(this.state.pos);
      if (f === 46 && !u && (++this.state.pos, this.readInt(10), n = !0, f = this.input.charCodeAt(this.state.pos)), (f === 69 || f === 101) &&
      !u && (f = this.input.charCodeAt(++this.state.pos), (f === 43 || f === 45) && ++this.state.pos, this.readInt(10) === null && this.raise(
      k.InvalidOrMissingExponent, s), n = !0, l = !0, f = this.input.charCodeAt(this.state.pos)), f === 110 && ((n || c) && this.raise(k.InvalidBigIntLiteral,
      s), ++this.state.pos, a = !0), f === 109 && (this.expectPlugin("decimal", this.state.curPosition()), (l || c) && this.raise(k.InvalidDecimal,
      s), ++this.state.pos, o = !0), mi(this.codePointAtPos(this.state.pos)))
        throw this.raise(k.NumberIdentifier, this.state.curPosition());
      let p = this.input.slice(r, this.state.pos).replace(/[_mn]/g, "");
      if (a) {
        this.finishToken(135, p);
        return;
      }
      if (o) {
        this.finishToken(136, p);
        return;
      }
      let d = u ? parseInt(p, 8) : parseFloat(p);
      this.finishToken(134, d);
    }
    readCodePoint(t) {
      let {
        code: r,
        pos: s
      } = fB(this.input, this.state.pos, this.state.lineStart, this.state.curLine, t, this.errorHandlers_readCodePoint);
      return this.state.pos = s, r;
    }
    readString(t) {
      let {
        str: r,
        pos: s,
        curLine: n,
        lineStart: a
      } = H3(t === 34 ? "double" : "single", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);
      this.state.pos = s + 1, this.state.lineStart = a, this.state.curLine = n, this.finishToken(133, r);
    }
    readTemplateContinuation() {
      this.match(8) || this.unexpected(null, 8), this.state.pos--, this.readTemplateToken();
    }
    readTemplateToken() {
      let t = this.input[this.state.pos], {
        str: r,
        firstInvalidLoc: s,
        pos: n,
        curLine: a,
        lineStart: o
      } = H3("template", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);
      this.state.pos = n + 1, this.state.lineStart = o, this.state.curLine = a, s && (this.state.firstInvalidTemplateEscapePos = new Ln(s.curLine,
      s.pos - s.lineStart, s.pos)), this.input.codePointAt(n) === 96 ? this.finishToken(24, s ? null : t + r + "`") : (this.state.pos++, this.
      finishToken(25, s ? null : t + r + "${"));
    }
    recordStrictModeErrors(t, r) {
      let s = r.index;
      this.state.strict && !this.state.strictErrors.has(s) ? this.raise(t, r) : this.state.strictErrors.set(s, [t, r]);
    }
    readWord1(t) {
      this.state.containsEsc = !1;
      let r = "", s = this.state.pos, n = this.state.pos;
      for (t !== void 0 && (this.state.pos += t <= 65535 ? 1 : 2); this.state.pos < this.length; ) {
        let a = this.codePointAtPos(this.state.pos);
        if (fl(a))
          this.state.pos += a <= 65535 ? 1 : 2;
        else if (a === 92) {
          this.state.containsEsc = !0, r += this.input.slice(n, this.state.pos);
          let o = this.state.curPosition(), l = this.state.pos === s ? mi : fl;
          if (this.input.charCodeAt(++this.state.pos) !== 117) {
            this.raise(k.MissingUnicodeEscape, this.state.curPosition()), n = this.state.pos - 1;
            continue;
          }
          ++this.state.pos;
          let u = this.readCodePoint(!0);
          u !== null && (l(u) || this.raise(k.EscapedCharNotAnIdentifier, o), r += String.fromCodePoint(u)), n = this.state.pos;
        } else
          break;
      }
      return r + this.input.slice(n, this.state.pos);
    }
    readWord(t) {
      let r = this.readWord1(t), s = bS.get(r);
      s !== void 0 ? this.finishToken(s, la(s)) : this.finishToken(132, r);
    }
    checkKeywordEscapes() {
      let {
        type: t
      } = this.state;
      PS(t) && this.state.containsEsc && this.raise(k.InvalidEscapedReservedWord, this.state.startLoc, {
        reservedWord: la(t)
      });
    }
    raise(t, r, s = {}) {
      let n = r instanceof Ln ? r : r.loc.start, a = t(n, s);
      if (!this.options.errorRecovery) throw a;
      return this.isLookahead || this.state.errors.push(a), a;
    }
    raiseOverwrite(t, r, s = {}) {
      let n = r instanceof Ln ? r : r.loc.start, a = n.index, o = this.state.errors;
      for (let l = o.length - 1; l >= 0; l--) {
        let u = o[l];
        if (u.loc.index === a)
          return o[l] = t(n, s);
        if (u.loc.index < a) break;
      }
      return this.raise(t, r, s);
    }
    updateContext(t) {
    }
    unexpected(t, r) {
      throw this.raise(k.UnexpectedToken, t ?? this.state.startLoc, {
        expected: r ? la(r) : null
      });
    }
    expectPlugin(t, r) {
      if (this.hasPlugin(t))
        return !0;
      throw this.raise(k.MissingPlugin, r ?? this.state.startLoc, {
        missingPlugin: [t]
      });
    }
    expectOnePlugin(t) {
      if (!t.some((r) => this.hasPlugin(r)))
        throw this.raise(k.MissingOneOfPlugins, this.state.startLoc, {
          missingPlugin: t
        });
    }
    errorBuilder(t) {
      return (r, s, n) => {
        this.raise(t, yc(r, s, n));
      };
    }
  }, oS = class {
    static {
      i(this, "ClassScope");
    }
    constructor() {
      this.privateNames = /* @__PURE__ */ new Set(), this.loneAccessors = /* @__PURE__ */ new Map(), this.undefinedPrivateNames = /* @__PURE__ */ new Map();
    }
  }, lS = class {
    static {
      i(this, "ClassScopeHandler");
    }
    constructor(t) {
      this.parser = void 0, this.stack = [], this.undefinedPrivateNames = /* @__PURE__ */ new Map(), this.parser = t;
    }
    current() {
      return this.stack[this.stack.length - 1];
    }
    enter() {
      this.stack.push(new oS());
    }
    exit() {
      let t = this.stack.pop(), r = this.current();
      for (let [s, n] of Array.from(t.undefinedPrivateNames))
        r ? r.undefinedPrivateNames.has(s) || r.undefinedPrivateNames.set(s, n) : this.parser.raise(k.InvalidPrivateFieldResolution, n, {
          identifierName: s
        });
    }
    declarePrivateName(t, r, s) {
      let {
        privateNames: n,
        loneAccessors: a,
        undefinedPrivateNames: o
      } = this.current(), l = n.has(t);
      if (r & 3) {
        let u = l && a.get(t);
        if (u) {
          let c = u & 4, f = r & 4, p = u & 3, d = r & 3;
          l = p === d || c !== f, l || a.delete(t);
        } else l || a.set(t, r);
      }
      l && this.parser.raise(k.PrivateNameRedeclaration, s, {
        identifierName: t
      }), n.add(t), o.delete(t);
    }
    usePrivateName(t, r) {
      let s;
      for (s of this.stack)
        if (s.privateNames.has(t)) return;
      s ? s.undefinedPrivateNames.set(t, r) : this.parser.raise(k.InvalidPrivateFieldResolution, r, {
        identifierName: t
      });
    }
  }, hl = class {
    static {
      i(this, "ExpressionScope");
    }
    constructor(t = 0) {
      this.type = t;
    }
    canBeArrowParameterDeclaration() {
      return this.type === 2 || this.type === 1;
    }
    isCertainlyParameterDeclaration() {
      return this.type === 3;
    }
  }, Ld = class extends hl {
    static {
      i(this, "ArrowHeadParsingScope");
    }
    constructor(t) {
      super(t), this.declarationErrors = /* @__PURE__ */ new Map();
    }
    recordDeclarationError(t, r) {
      let s = r.index;
      this.declarationErrors.set(s, [t, r]);
    }
    clearDeclarationError(t) {
      this.declarationErrors.delete(t);
    }
    iterateErrors(t) {
      this.declarationErrors.forEach(t);
    }
  }, uS = class {
    static {
      i(this, "ExpressionScopeHandler");
    }
    constructor(t) {
      this.parser = void 0, this.stack = [new hl()], this.parser = t;
    }
    enter(t) {
      this.stack.push(t);
    }
    exit() {
      this.stack.pop();
    }
    recordParameterInitializerError(t, r) {
      let s = r.loc.start, {
        stack: n
      } = this, a = n.length - 1, o = n[a];
      for (; !o.isCertainlyParameterDeclaration(); ) {
        if (o.canBeArrowParameterDeclaration())
          o.recordDeclarationError(t, s);
        else
          return;
        o = n[--a];
      }
      this.parser.raise(t, s);
    }
    recordArrowParameterBindingError(t, r) {
      let {
        stack: s
      } = this, n = s[s.length - 1], a = r.loc.start;
      if (n.isCertainlyParameterDeclaration())
        this.parser.raise(t, a);
      else if (n.canBeArrowParameterDeclaration())
        n.recordDeclarationError(t, a);
      else
        return;
    }
    recordAsyncArrowParametersError(t) {
      let {
        stack: r
      } = this, s = r.length - 1, n = r[s];
      for (; n.canBeArrowParameterDeclaration(); )
        n.type === 2 && n.recordDeclarationError(k.AwaitBindingIdentifier, t), n = r[--s];
    }
    validateAsPattern() {
      let {
        stack: t
      } = this, r = t[t.length - 1];
      r.canBeArrowParameterDeclaration() && r.iterateErrors(([s, n]) => {
        this.parser.raise(s, n);
        let a = t.length - 2, o = t[a];
        for (; o.canBeArrowParameterDeclaration(); )
          o.clearDeclarationError(n.index), o = t[--a];
      });
    }
  };
  function mCe() {
    return new hl(3);
  }
  i(mCe, "newParameterDeclarationScope");
  function yCe() {
    return new Ld(1);
  }
  i(yCe, "newArrowHeadScope");
  function gCe() {
    return new Ld(2);
  }
  i(gCe, "newAsyncArrowScope");
  function pB() {
    return new hl();
  }
  i(pB, "newExpressionScope");
  var cS = class {
    static {
      i(this, "ProductionParameterHandler");
    }
    constructor() {
      this.stacks = [];
    }
    enter(t) {
      this.stacks.push(t);
    }
    exit() {
      this.stacks.pop();
    }
    currentFlags() {
      return this.stacks[this.stacks.length - 1];
    }
    get hasAwait() {
      return (this.currentFlags() & 2) > 0;
    }
    get hasYield() {
      return (this.currentFlags() & 1) > 0;
    }
    get hasReturn() {
      return (this.currentFlags() & 4) > 0;
    }
    get hasIn() {
      return (this.currentFlags() & 8) > 0;
    }
  };
  function Rd(e, t) {
    return (e ? 2 : 0) | (t ? 1 : 0);
  }
  i(Rd, "functionFlags");
  var fS = class extends aS {
    static {
      i(this, "UtilParser");
    }
    addExtra(t, r, s, n = !0) {
      if (!t) return;
      let a = t.extra = t.extra || {};
      n ? a[r] = s : Object.defineProperty(a, r, {
        enumerable: n,
        value: s
      });
    }
    isContextual(t) {
      return this.state.type === t && !this.state.containsEsc;
    }
    isUnparsedContextual(t, r) {
      let s = t + r.length;
      if (this.input.slice(t, s) === r) {
        let n = this.input.charCodeAt(s);
        return !(fl(n) || (n & 64512) === 55296);
      }
      return !1;
    }
    isLookaheadContextual(t) {
      let r = this.nextTokenStart();
      return this.isUnparsedContextual(r, t);
    }
    eatContextual(t) {
      return this.isContextual(t) ? (this.next(), !0) : !1;
    }
    expectContextual(t, r) {
      if (!this.eatContextual(t)) {
        if (r != null)
          throw this.raise(r, this.state.startLoc);
        this.unexpected(null, t);
      }
    }
    canInsertSemicolon() {
      return this.match(139) || this.match(8) || this.hasPrecedingLineBreak();
    }
    hasPrecedingLineBreak() {
      return uB.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));
    }
    hasFollowingLineBreak() {
      return V3.lastIndex = this.state.end, V3.test(this.input);
    }
    isLineTerminator() {
      return this.eat(13) || this.canInsertSemicolon();
    }
    semicolon(t = !0) {
      (t ? this.isLineTerminator() : this.eat(13)) || this.raise(k.MissingSemicolon, this.state.lastTokEndLoc);
    }
    expect(t, r) {
      this.eat(t) || this.unexpected(r, t);
    }
    tryParse(t, r = this.state.clone()) {
      let s = {
        node: null
      };
      try {
        let n = t((a = null) => {
          throw s.node = a, s;
        });
        if (this.state.errors.length > r.errors.length) {
          let a = this.state;
          return this.state = r, this.state.tokensLength = a.tokensLength, {
            node: n,
            error: a.errors[r.errors.length],
            thrown: !1,
            aborted: !1,
            failState: a
          };
        }
        return {
          node: n,
          error: null,
          thrown: !1,
          aborted: !1,
          failState: null
        };
      } catch (n) {
        let a = this.state;
        if (this.state = r, n instanceof SyntaxError)
          return {
            node: null,
            error: n,
            thrown: !0,
            aborted: !1,
            failState: a
          };
        if (n === s)
          return {
            node: s.node,
            error: null,
            thrown: !1,
            aborted: !0,
            failState: a
          };
        throw n;
      }
    }
    checkExpressionErrors(t, r) {
      if (!t) return !1;
      let {
        shorthandAssignLoc: s,
        doubleProtoLoc: n,
        privateKeyLoc: a,
        optionalParametersLoc: o
      } = t, l = !!s || !!n || !!o || !!a;
      if (!r)
        return l;
      s != null && this.raise(k.InvalidCoverInitializedName, s), n != null && this.raise(k.DuplicateProto, n), a != null && this.raise(k.UnexpectedPrivateField,
      a), o != null && this.unexpected(o);
    }
    isLiteralPropertyName() {
      return tB(this.state.type);
    }
    isPrivateName(t) {
      return t.type === "PrivateName";
    }
    getPrivateNameSV(t) {
      return t.id.name;
    }
    hasPropertyAsPrivateName(t) {
      return (t.type === "MemberExpression" || t.type === "OptionalMemberExpression") && this.isPrivateName(t.property);
    }
    isObjectProperty(t) {
      return t.type === "ObjectProperty";
    }
    isObjectMethod(t) {
      return t.type === "ObjectMethod";
    }
    initializeScopes(t = this.options.sourceType === "module") {
      let r = this.state.labels;
      this.state.labels = [];
      let s = this.exportedIdentifiers;
      this.exportedIdentifiers = /* @__PURE__ */ new Set();
      let n = this.inModule;
      this.inModule = t;
      let a = this.scope, o = this.getScopeHandler();
      this.scope = new o(this, t);
      let l = this.prodParam;
      this.prodParam = new cS();
      let u = this.classScope;
      this.classScope = new lS(this);
      let c = this.expressionScope;
      return this.expressionScope = new uS(this), () => {
        this.state.labels = r, this.exportedIdentifiers = s, this.inModule = n, this.scope = a, this.prodParam = l, this.classScope = u, this.
        expressionScope = c;
      };
    }
    enterInitialScopes() {
      let t = 0;
      this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t);
    }
    checkDestructuringPrivate(t) {
      let {
        privateKeyLoc: r
      } = t;
      r !== null && this.expectPlugin("destructuringPrivate", r);
    }
  }, pl = class {
    static {
      i(this, "ExpressionErrors");
    }
    constructor() {
      this.shorthandAssignLoc = null, this.doubleProtoLoc = null, this.privateKeyLoc = null, this.optionalParametersLoc = null;
    }
  }, ml = class {
    static {
      i(this, "Node");
    }
    constructor(t, r, s) {
      this.type = "", this.start = r, this.end = 0, this.loc = new dl(s), t != null && t.options.ranges && (this.range = [r, 0]), t != null &&
      t.filename && (this.loc.filename = t.filename);
    }
  }, wS = ml.prototype;
  wS.__clone = function() {
    let e = new ml(void 0, this.start, this.loc.start), t = Object.keys(this);
    for (let r = 0, s = t.length; r < s; r++) {
      let n = t[r];
      n !== "leadingComments" && n !== "trailingComments" && n !== "innerComments" && (e[n] = this[n]);
    }
    return e;
  };
  function bCe(e) {
    return gi(e);
  }
  i(bCe, "clonePlaceholder");
  function gi(e) {
    let {
      type: t,
      start: r,
      end: s,
      loc: n,
      range: a,
      extra: o,
      name: l
    } = e, u = Object.create(wS);
    return u.type = t, u.start = r, u.end = s, u.loc = n, u.range = a, u.extra = o, u.name = l, t === "Placeholder" && (u.expectedNode = e.expectedNode),
    u;
  }
  i(gi, "cloneIdentifier");
  function ECe(e) {
    let {
      type: t,
      start: r,
      end: s,
      loc: n,
      range: a,
      extra: o
    } = e;
    if (t === "Placeholder")
      return bCe(e);
    let l = Object.create(wS);
    return l.type = t, l.start = r, l.end = s, l.loc = n, l.range = a, e.raw !== void 0 ? l.raw = e.raw : l.extra = o, l.value = e.value, l;
  }
  i(ECe, "cloneStringLiteral");
  var pS = class extends fS {
    static {
      i(this, "NodeUtils");
    }
    startNode() {
      let t = this.state.startLoc;
      return new ml(this, t.index, t);
    }
    startNodeAt(t) {
      return new ml(this, t.index, t);
    }
    startNodeAtNode(t) {
      return this.startNodeAt(t.loc.start);
    }
    finishNode(t, r) {
      return this.finishNodeAt(t, r, this.state.lastTokEndLoc);
    }
    finishNodeAt(t, r, s) {
      return t.type = r, t.end = s.index, t.loc.end = s, this.options.ranges && (t.range[1] = s.index), this.options.attachComment && this.processComment(
      t), t;
    }
    resetStartLocation(t, r) {
      t.start = r.index, t.loc.start = r, this.options.ranges && (t.range[0] = r.index);
    }
    resetEndLocation(t, r = this.state.lastTokEndLoc) {
      t.end = r.index, t.loc.end = r, this.options.ranges && (t.range[1] = r.index);
    }
    resetStartLocationFromNode(t, r) {
      this.resetStartLocation(t, r.loc.start);
    }
  }, vCe = /* @__PURE__ */ new Set(["_", "any", "bool", "boolean", "empty", "extends", "false", "interface", "mixed", "null", "number", "sta\
tic", "string", "true", "typeof", "void"]), Fe = yi`flow`({
    AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",
    AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since \
they are either an ES module or they are a CommonJS module.",
    AssignReservedType: /* @__PURE__ */ i(({
      reservedType: e
    }) => `Cannot overwrite reserved type ${e}.`, "AssignReservedType"),
    DeclareClassElement: "The `declare` modifier can only appear on class fields.",
    DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",
    DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement.",
    EnumBooleanMemberNotInitialized: /* @__PURE__ */ i(({
      memberName: e,
      enumName: t
    }) => `Boolean enum members need to be initialized. Use either \`${e} = true,\` or \`${e} = false,\` in enum \`${t}\`.`, "EnumBooleanMem\
berNotInitialized"),
    EnumDuplicateMemberName: /* @__PURE__ */ i(({
      memberName: e,
      enumName: t
    }) => `Enum member names need to be unique, but the name \`${e}\` has already been used before in enum \`${t}\`.`, "EnumDuplicateMemberN\
ame"),
    EnumInconsistentMemberValues: /* @__PURE__ */ i(({
      enumName: e
    }) => `Enum \`${e}\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, num\
bers, or strings) for all member initializers.`, "EnumInconsistentMemberValues"),
    EnumInvalidExplicitType: /* @__PURE__ */ i(({
      invalidEnumType: e,
      enumName: t
    }) => `Enum type \`${e}\` is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${t}\`.`, "EnumInvalidEx\
plicitType"),
    EnumInvalidExplicitTypeUnknownSupplied: /* @__PURE__ */ i(({
      enumName: e
    }) => `Supplied enum type is not valid. Use one of \`boolean\`, \`number\`, \`string\`, or \`symbol\` in enum \`${e}\`.`, "EnumInvalidEx\
plicitTypeUnknownSupplied"),
    EnumInvalidMemberInitializerPrimaryType: /* @__PURE__ */ i(({
      enumName: e,
      memberName: t,
      explicitType: r
    }) => `Enum \`${e}\` has type \`${r}\`, so the initializer of \`${t}\` needs to be a ${r} literal.`, "EnumInvalidMemberInitializerPrimar\
yType"),
    EnumInvalidMemberInitializerSymbolType: /* @__PURE__ */ i(({
      enumName: e,
      memberName: t
    }) => `Symbol enum members cannot be initialized. Use \`${t},\` in enum \`${e}\`.`, "EnumInvalidMemberInitializerSymbolType"),
    EnumInvalidMemberInitializerUnknownType: /* @__PURE__ */ i(({
      enumName: e,
      memberName: t
    }) => `The enum member initializer for \`${t}\` needs to be a literal (either a boolean, number, or string) in enum \`${e}\`.`, "EnumInv\
alidMemberInitializerUnknownType"),
    EnumInvalidMemberName: /* @__PURE__ */ i(({
      enumName: e,
      memberName: t,
      suggestion: r
    }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \`${t}\`, consider using \`${r}\`, in enum \`${e}\
\`.`, "EnumInvalidMemberName"),
    EnumNumberMemberNotInitialized: /* @__PURE__ */ i(({
      enumName: e,
      memberName: t
    }) => `Number enum members need to be initialized, e.g. \`${t} = 1\` in enum \`${e}\`.`, "EnumNumberMemberNotInitialized"),
    EnumStringMemberInconsistentlyInitialized: /* @__PURE__ */ i(({
      enumName: e
    }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \`${e}\`.`, "EnumStringMemb\
erInconsistentlyInitialized"),
    GetterMayNotHaveThisParam: "A getter cannot have a `this` parameter.",
    ImportReflectionHasImportType: "An `import module` declaration can not use `type` or `typeof` keyword.",
    ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements.\
 It cannot be used with `import type` or `import typeof` statements.",
    InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type.",
    InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions.",
    InexactVariance: "Explicit inexact syntax cannot have variance.",
    InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`.",
    MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",
    NestedDeclareModule: "`declare module` cannot be used inside another `declare module`.",
    NestedFlowComment: "Cannot have a flow comment inside another flow comment.",
    PatternIsOptional: Object.assign({
      message: "A binding pattern parameter cannot be optional in an implementation signature."
    }, {
      reasonCode: "OptionalBindingPattern"
    }),
    SetterMayNotHaveThisParam: "A setter cannot have a `this` parameter.",
    SpreadVariance: "Spread properties cannot have variance.",
    ThisParamAnnotationRequired: "A type annotation is required for the `this` parameter.",
    ThisParamBannedInConstructor: "Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",
    ThisParamMayNotBeOptional: "The `this` parameter cannot be optional.",
    ThisParamMustBeFirst: "The `this` parameter must be the first function parameter.",
    ThisParamNoDefault: "The `this` parameter may not have a default value.",
    TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\
.",
    TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis.",
    UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object.",
    UnexpectedReservedType: /* @__PURE__ */ i(({
      reservedType: e
    }) => `Unexpected reserved type ${e}.`, "UnexpectedReservedType"),
    UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new.",
    UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",
    UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions.",
    UnexpectedSubtractionOperand: 'Unexpected token, expected "number" or "bigint".',
    UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration.",
    UnexpectedTypeParameterBeforeAsyncArrowFunction: "Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}\
`, use `async <T>() => {}`.",
    UnsupportedDeclareExportKind: /* @__PURE__ */ i(({
      unsupportedExportKind: e,
      suggestion: t
    }) => `\`declare export ${e}\` is not supported. Use \`${t}\` instead.`, "UnsupportedDeclareExportKind"),
    UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module.",
    UnterminatedFlowComment: "Unterminated flow-comment."
  });
  function SCe(e) {
    return e.type === "DeclareExportAllDeclaration" || e.type === "DeclareExportDeclaration" && (!e.declaration || e.declaration.type !== "T\
ypeAlias" && e.declaration.type !== "InterfaceDeclaration");
  }
  i(SCe, "isEsModuleType");
  function G3(e) {
    return e.importKind === "type" || e.importKind === "typeof";
  }
  i(G3, "hasTypeImportKind");
  var TCe = {
    const: "declare export var",
    let: "declare export var",
    type: "export type",
    interface: "export interface"
  };
  function xCe(e, t) {
    let r = [], s = [];
    for (let n = 0; n < e.length; n++)
      (t(e[n], n, e) ? r : s).push(e[n]);
    return [r, s];
  }
  i(xCe, "partition");
  var PCe = /\*?\s*@((?:no)?flow)\b/, ACe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "FlowParserMixin");
    }
    constructor(...r) {
      super(...r), this.flowPragma = void 0;
    }
    getScopeHandler() {
      return tS;
    }
    shouldParseTypes() {
      return this.getPluginOption("flow", "all") || this.flowPragma === "flow";
    }
    shouldParseEnums() {
      return !!this.getPluginOption("flow", "enums");
    }
    finishToken(r, s) {
      r !== 133 && r !== 13 && r !== 28 && this.flowPragma === void 0 && (this.flowPragma = null), super.finishToken(r, s);
    }
    addComment(r) {
      if (this.flowPragma === void 0) {
        let s = PCe.exec(r.value);
        if (s) if (s[1] === "flow")
          this.flowPragma = "flow";
        else if (s[1] === "noflow")
          this.flowPragma = "noflow";
        else
          throw new Error("Unexpected flow pragma");
      }
      super.addComment(r);
    }
    flowParseTypeInitialiser(r) {
      let s = this.state.inType;
      this.state.inType = !0, this.expect(r || 14);
      let n = this.flowParseType();
      return this.state.inType = s, n;
    }
    flowParsePredicate() {
      let r = this.startNode(), s = this.state.startLoc;
      return this.next(), this.expectContextual(110), this.state.lastTokStartLoc.index > s.index + 1 && this.raise(Fe.UnexpectedSpaceBetweenModuloChecks,
      s), this.eat(10) ? (r.value = super.parseExpression(), this.expect(11), this.finishNode(r, "DeclaredPredicate")) : this.finishNode(r, "\
InferredPredicate");
    }
    flowParseTypeAndPredicateInitialiser() {
      let r = this.state.inType;
      this.state.inType = !0, this.expect(14);
      let s = null, n = null;
      return this.match(54) ? (this.state.inType = r, n = this.flowParsePredicate()) : (s = this.flowParseType(), this.state.inType = r, this.
      match(54) && (n = this.flowParsePredicate())), [s, n];
    }
    flowParseDeclareClass(r) {
      return this.next(), this.flowParseInterfaceish(r, !0), this.finishNode(r, "DeclareClass");
    }
    flowParseDeclareFunction(r) {
      this.next();
      let s = r.id = this.parseIdentifier(), n = this.startNode(), a = this.startNode();
      this.match(47) ? n.typeParameters = this.flowParseTypeParameterDeclaration() : n.typeParameters = null, this.expect(10);
      let o = this.flowParseFunctionTypeParams();
      return n.params = o.params, n.rest = o.rest, n.this = o._this, this.expect(11), [n.returnType, r.predicate] = this.flowParseTypeAndPredicateInitialiser(),
      a.typeAnnotation = this.finishNode(n, "FunctionTypeAnnotation"), s.typeAnnotation = this.finishNode(a, "TypeAnnotation"), this.resetEndLocation(
      s), this.semicolon(), this.scope.declareName(r.id.name, 2048, r.id.loc.start), this.finishNode(r, "DeclareFunction");
    }
    flowParseDeclare(r, s) {
      if (this.match(80))
        return this.flowParseDeclareClass(r);
      if (this.match(68))
        return this.flowParseDeclareFunction(r);
      if (this.match(74))
        return this.flowParseDeclareVariable(r);
      if (this.eatContextual(127))
        return this.match(16) ? this.flowParseDeclareModuleExports(r) : (s && this.raise(Fe.NestedDeclareModule, this.state.lastTokStartLoc),
        this.flowParseDeclareModule(r));
      if (this.isContextual(130))
        return this.flowParseDeclareTypeAlias(r);
      if (this.isContextual(131))
        return this.flowParseDeclareOpaqueType(r);
      if (this.isContextual(129))
        return this.flowParseDeclareInterface(r);
      if (this.match(82))
        return this.flowParseDeclareExportDeclaration(r, s);
      this.unexpected();
    }
    flowParseDeclareVariable(r) {
      return this.next(), r.id = this.flowParseTypeAnnotatableIdentifier(!0), this.scope.declareName(r.id.name, 5, r.id.loc.start), this.semicolon(),
      this.finishNode(r, "DeclareVariable");
    }
    flowParseDeclareModule(r) {
      this.scope.enter(0), this.match(133) ? r.id = super.parseExprAtom() : r.id = this.parseIdentifier();
      let s = r.body = this.startNode(), n = s.body = [];
      for (this.expect(5); !this.match(8); ) {
        let l = this.startNode();
        this.match(83) ? (this.next(), !this.isContextual(130) && !this.match(87) && this.raise(Fe.InvalidNonTypeImportInDeclareModule, this.
        state.lastTokStartLoc), super.parseImport(l)) : (this.expectContextual(125, Fe.UnsupportedStatementInDeclareModule), l = this.flowParseDeclare(
        l, !0)), n.push(l);
      }
      this.scope.exit(), this.expect(8), this.finishNode(s, "BlockStatement");
      let a = null, o = !1;
      return n.forEach((l) => {
        SCe(l) ? (a === "CommonJS" && this.raise(Fe.AmbiguousDeclareModuleKind, l), a = "ES") : l.type === "DeclareModuleExports" && (o && this.
        raise(Fe.DuplicateDeclareModuleExports, l), a === "ES" && this.raise(Fe.AmbiguousDeclareModuleKind, l), a = "CommonJS", o = !0);
      }), r.kind = a || "CommonJS", this.finishNode(r, "DeclareModule");
    }
    flowParseDeclareExportDeclaration(r, s) {
      if (this.expect(82), this.eat(65))
        return this.match(68) || this.match(80) ? r.declaration = this.flowParseDeclare(this.startNode()) : (r.declaration = this.flowParseType(),
        this.semicolon()), r.default = !0, this.finishNode(r, "DeclareExportDeclaration");
      if (this.match(75) || this.isLet() || (this.isContextual(130) || this.isContextual(129)) && !s) {
        let n = this.state.value;
        throw this.raise(Fe.UnsupportedDeclareExportKind, this.state.startLoc, {
          unsupportedExportKind: n,
          suggestion: TCe[n]
        });
      }
      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(131))
        return r.declaration = this.flowParseDeclare(this.startNode()), r.default = !1, this.finishNode(r, "DeclareExportDeclaration");
      if (this.match(55) || this.match(5) || this.isContextual(129) || this.isContextual(130) || this.isContextual(131))
        return r = this.parseExport(r, null), r.type === "ExportNamedDeclaration" && (r.type = "ExportDeclaration", r.default = !1, delete r.
        exportKind), r.type = "Declare" + r.type, r;
      this.unexpected();
    }
    flowParseDeclareModuleExports(r) {
      return this.next(), this.expectContextual(111), r.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(r,
      "DeclareModuleExports");
    }
    flowParseDeclareTypeAlias(r) {
      this.next();
      let s = this.flowParseTypeAlias(r);
      return s.type = "DeclareTypeAlias", s;
    }
    flowParseDeclareOpaqueType(r) {
      this.next();
      let s = this.flowParseOpaqueType(r, !0);
      return s.type = "DeclareOpaqueType", s;
    }
    flowParseDeclareInterface(r) {
      return this.next(), this.flowParseInterfaceish(r, !1), this.finishNode(r, "DeclareInterface");
    }
    flowParseInterfaceish(r, s) {
      if (r.id = this.flowParseRestrictedIdentifier(!s, !0), this.scope.declareName(r.id.name, s ? 17 : 8201, r.id.loc.start), this.match(47) ?
      r.typeParameters = this.flowParseTypeParameterDeclaration() : r.typeParameters = null, r.extends = [], this.eat(81))
        do
          r.extends.push(this.flowParseInterfaceExtends());
        while (!s && this.eat(12));
      if (s) {
        if (r.implements = [], r.mixins = [], this.eatContextual(117))
          do
            r.mixins.push(this.flowParseInterfaceExtends());
          while (this.eat(12));
        if (this.eatContextual(113))
          do
            r.implements.push(this.flowParseInterfaceExtends());
          while (this.eat(12));
      }
      r.body = this.flowParseObjectType({
        allowStatic: s,
        allowExact: !1,
        allowSpread: !1,
        allowProto: s,
        allowInexact: !1
      });
    }
    flowParseInterfaceExtends() {
      let r = this.startNode();
      return r.id = this.flowParseQualifiedTypeIdentifier(), this.match(47) ? r.typeParameters = this.flowParseTypeParameterInstantiation() :
      r.typeParameters = null, this.finishNode(r, "InterfaceExtends");
    }
    flowParseInterface(r) {
      return this.flowParseInterfaceish(r, !1), this.finishNode(r, "InterfaceDeclaration");
    }
    checkNotUnderscore(r) {
      r === "_" && this.raise(Fe.UnexpectedReservedUnderscore, this.state.startLoc);
    }
    checkReservedType(r, s, n) {
      vCe.has(r) && this.raise(n ? Fe.AssignReservedType : Fe.UnexpectedReservedType, s, {
        reservedType: r
      });
    }
    flowParseRestrictedIdentifier(r, s) {
      return this.checkReservedType(this.state.value, this.state.startLoc, s), this.parseIdentifier(r);
    }
    flowParseTypeAlias(r) {
      return r.id = this.flowParseRestrictedIdentifier(!1, !0), this.scope.declareName(r.id.name, 8201, r.id.loc.start), this.match(47) ? r.
      typeParameters = this.flowParseTypeParameterDeclaration() : r.typeParameters = null, r.right = this.flowParseTypeInitialiser(29), this.
      semicolon(), this.finishNode(r, "TypeAlias");
    }
    flowParseOpaqueType(r, s) {
      return this.expectContextual(130), r.id = this.flowParseRestrictedIdentifier(!0, !0), this.scope.declareName(r.id.name, 8201, r.id.loc.
      start), this.match(47) ? r.typeParameters = this.flowParseTypeParameterDeclaration() : r.typeParameters = null, r.supertype = null, this.
      match(14) && (r.supertype = this.flowParseTypeInitialiser(14)), r.impltype = null, s || (r.impltype = this.flowParseTypeInitialiser(29)),
      this.semicolon(), this.finishNode(r, "OpaqueType");
    }
    flowParseTypeParameter(r = !1) {
      let s = this.state.startLoc, n = this.startNode(), a = this.flowParseVariance(), o = this.flowParseTypeAnnotatableIdentifier();
      return n.name = o.name, n.variance = a, n.bound = o.typeAnnotation, this.match(29) ? (this.eat(29), n.default = this.flowParseType()) :
      r && this.raise(Fe.MissingTypeParamDefault, s), this.finishNode(n, "TypeParameter");
    }
    flowParseTypeParameterDeclaration() {
      let r = this.state.inType, s = this.startNode();
      s.params = [], this.state.inType = !0, this.match(47) || this.match(142) ? this.next() : this.unexpected();
      let n = !1;
      do {
        let a = this.flowParseTypeParameter(n);
        s.params.push(a), a.default && (n = !0), this.match(48) || this.expect(12);
      } while (!this.match(48));
      return this.expect(48), this.state.inType = r, this.finishNode(s, "TypeParameterDeclaration");
    }
    flowParseTypeParameterInstantiation() {
      let r = this.startNode(), s = this.state.inType;
      r.params = [], this.state.inType = !0, this.expect(47);
      let n = this.state.noAnonFunctionType;
      for (this.state.noAnonFunctionType = !1; !this.match(48); )
        r.params.push(this.flowParseType()), this.match(48) || this.expect(12);
      return this.state.noAnonFunctionType = n, this.expect(48), this.state.inType = s, this.finishNode(r, "TypeParameterInstantiation");
    }
    flowParseTypeParameterInstantiationCallOrNew() {
      let r = this.startNode(), s = this.state.inType;
      for (r.params = [], this.state.inType = !0, this.expect(47); !this.match(48); )
        r.params.push(this.flowParseTypeOrImplicitInstantiation()), this.match(48) || this.expect(12);
      return this.expect(48), this.state.inType = s, this.finishNode(r, "TypeParameterInstantiation");
    }
    flowParseInterfaceType() {
      let r = this.startNode();
      if (this.expectContextual(129), r.extends = [], this.eat(81))
        do
          r.extends.push(this.flowParseInterfaceExtends());
        while (this.eat(12));
      return r.body = this.flowParseObjectType({
        allowStatic: !1,
        allowExact: !1,
        allowSpread: !1,
        allowProto: !1,
        allowInexact: !1
      }), this.finishNode(r, "InterfaceTypeAnnotation");
    }
    flowParseObjectPropertyKey() {
      return this.match(134) || this.match(133) ? super.parseExprAtom() : this.parseIdentifier(!0);
    }
    flowParseObjectTypeIndexer(r, s, n) {
      return r.static = s, this.lookahead().type === 14 ? (r.id = this.flowParseObjectPropertyKey(), r.key = this.flowParseTypeInitialiser()) :
      (r.id = null, r.key = this.flowParseType()), this.expect(3), r.value = this.flowParseTypeInitialiser(), r.variance = n, this.finishNode(
      r, "ObjectTypeIndexer");
    }
    flowParseObjectTypeInternalSlot(r, s) {
      return r.static = s, r.id = this.flowParseObjectPropertyKey(), this.expect(3), this.expect(3), this.match(47) || this.match(10) ? (r.method =
      !0, r.optional = !1, r.value = this.flowParseObjectTypeMethodish(this.startNodeAt(r.loc.start))) : (r.method = !1, this.eat(17) && (r.
      optional = !0), r.value = this.flowParseTypeInitialiser()), this.finishNode(r, "ObjectTypeInternalSlot");
    }
    flowParseObjectTypeMethodish(r) {
      for (r.params = [], r.rest = null, r.typeParameters = null, r.this = null, this.match(47) && (r.typeParameters = this.flowParseTypeParameterDeclaration()),
      this.expect(10), this.match(78) && (r.this = this.flowParseFunctionTypeParam(!0), r.this.name = null, this.match(11) || this.expect(12)); !this.
      match(11) && !this.match(21); )
        r.params.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
      return this.eat(21) && (r.rest = this.flowParseFunctionTypeParam(!1)), this.expect(11), r.returnType = this.flowParseTypeInitialiser(),
      this.finishNode(r, "FunctionTypeAnnotation");
    }
    flowParseObjectTypeCallProperty(r, s) {
      let n = this.startNode();
      return r.static = s, r.value = this.flowParseObjectTypeMethodish(n), this.finishNode(r, "ObjectTypeCallProperty");
    }
    flowParseObjectType({
      allowStatic: r,
      allowExact: s,
      allowSpread: n,
      allowProto: a,
      allowInexact: o
    }) {
      let l = this.state.inType;
      this.state.inType = !0;
      let u = this.startNode();
      u.callProperties = [], u.properties = [], u.indexers = [], u.internalSlots = [];
      let c, f, p = !1;
      for (s && this.match(6) ? (this.expect(6), c = 9, f = !0) : (this.expect(5), c = 8, f = !1), u.exact = f; !this.match(c); ) {
        let m = !1, b = null, h = null, g = this.startNode();
        if (a && this.isContextual(118)) {
          let D = this.lookahead();
          D.type !== 14 && D.type !== 17 && (this.next(), b = this.state.startLoc, r = !1);
        }
        if (r && this.isContextual(106)) {
          let D = this.lookahead();
          D.type !== 14 && D.type !== 17 && (this.next(), m = !0);
        }
        let E = this.flowParseVariance();
        if (this.eat(0))
          b != null && this.unexpected(b), this.eat(0) ? (E && this.unexpected(E.loc.start), u.internalSlots.push(this.flowParseObjectTypeInternalSlot(
          g, m))) : u.indexers.push(this.flowParseObjectTypeIndexer(g, m, E));
        else if (this.match(10) || this.match(47))
          b != null && this.unexpected(b), E && this.unexpected(E.loc.start), u.callProperties.push(this.flowParseObjectTypeCallProperty(g, m));
        else {
          let D = "init";
          if (this.isContextual(99) || this.isContextual(104)) {
            let N = this.lookahead();
            tB(N.type) && (D = this.state.value, this.next());
          }
          let C = this.flowParseObjectTypeProperty(g, m, b, E, D, n, o ?? !f);
          C === null ? (p = !0, h = this.state.lastTokStartLoc) : u.properties.push(C);
        }
        this.flowObjectTypeSemicolon(), h && !this.match(8) && !this.match(9) && this.raise(Fe.UnexpectedExplicitInexactInObject, h);
      }
      this.expect(c), n && (u.inexact = p);
      let d = this.finishNode(u, "ObjectTypeAnnotation");
      return this.state.inType = l, d;
    }
    flowParseObjectTypeProperty(r, s, n, a, o, l, u) {
      if (this.eat(21))
        return this.match(12) || this.match(13) || this.match(8) || this.match(9) ? (l ? u || this.raise(Fe.InexactInsideExact, this.state.lastTokStartLoc) :
        this.raise(Fe.InexactInsideNonObject, this.state.lastTokStartLoc), a && this.raise(Fe.InexactVariance, a), null) : (l || this.raise(
        Fe.UnexpectedSpreadType, this.state.lastTokStartLoc), n != null && this.unexpected(n), a && this.raise(Fe.SpreadVariance, a), r.argument =
        this.flowParseType(), this.finishNode(r, "ObjectTypeSpreadProperty"));
      {
        r.key = this.flowParseObjectPropertyKey(), r.static = s, r.proto = n != null, r.kind = o;
        let c = !1;
        return this.match(47) || this.match(10) ? (r.method = !0, n != null && this.unexpected(n), a && this.unexpected(a.loc.start), r.value =
        this.flowParseObjectTypeMethodish(this.startNodeAt(r.loc.start)), (o === "get" || o === "set") && this.flowCheckGetterSetterParams(r),
        !l && r.key.name === "constructor" && r.value.this && this.raise(Fe.ThisParamBannedInConstructor, r.value.this)) : (o !== "init" && this.
        unexpected(), r.method = !1, this.eat(17) && (c = !0), r.value = this.flowParseTypeInitialiser(), r.variance = a), r.optional = c, this.
        finishNode(r, "ObjectTypeProperty");
      }
    }
    flowCheckGetterSetterParams(r) {
      let s = r.kind === "get" ? 0 : 1, n = r.value.params.length + (r.value.rest ? 1 : 0);
      r.value.this && this.raise(r.kind === "get" ? Fe.GetterMayNotHaveThisParam : Fe.SetterMayNotHaveThisParam, r.value.this), n !== s && this.
      raise(r.kind === "get" ? k.BadGetterArity : k.BadSetterArity, r), r.kind === "set" && r.value.rest && this.raise(k.BadSetterRestParameter,
      r);
    }
    flowObjectTypeSemicolon() {
      !this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9) && this.unexpected();
    }
    flowParseQualifiedTypeIdentifier(r, s) {
      var n;
      (n = r) != null || (r = this.state.startLoc);
      let a = s || this.flowParseRestrictedIdentifier(!0);
      for (; this.eat(16); ) {
        let o = this.startNodeAt(r);
        o.qualification = a, o.id = this.flowParseRestrictedIdentifier(!0), a = this.finishNode(o, "QualifiedTypeIdentifier");
      }
      return a;
    }
    flowParseGenericType(r, s) {
      let n = this.startNodeAt(r);
      return n.typeParameters = null, n.id = this.flowParseQualifiedTypeIdentifier(r, s), this.match(47) && (n.typeParameters = this.flowParseTypeParameterInstantiation()),
      this.finishNode(n, "GenericTypeAnnotation");
    }
    flowParseTypeofType() {
      let r = this.startNode();
      return this.expect(87), r.argument = this.flowParsePrimaryType(), this.finishNode(r, "TypeofTypeAnnotation");
    }
    flowParseTupleType() {
      let r = this.startNode();
      for (r.types = [], this.expect(0); this.state.pos < this.length && !this.match(3) && (r.types.push(this.flowParseType()), !this.match(
      3)); )
        this.expect(12);
      return this.expect(3), this.finishNode(r, "TupleTypeAnnotation");
    }
    flowParseFunctionTypeParam(r) {
      let s = null, n = !1, a = null, o = this.startNode(), l = this.lookahead(), u = this.state.type === 78;
      return l.type === 14 || l.type === 17 ? (u && !r && this.raise(Fe.ThisParamMustBeFirst, o), s = this.parseIdentifier(u), this.eat(17) &&
      (n = !0, u && this.raise(Fe.ThisParamMayNotBeOptional, o)), a = this.flowParseTypeInitialiser()) : a = this.flowParseType(), o.name = s,
      o.optional = n, o.typeAnnotation = a, this.finishNode(o, "FunctionTypeParam");
    }
    reinterpretTypeAsFunctionTypeParam(r) {
      let s = this.startNodeAt(r.loc.start);
      return s.name = null, s.optional = !1, s.typeAnnotation = r, this.finishNode(s, "FunctionTypeParam");
    }
    flowParseFunctionTypeParams(r = []) {
      let s = null, n = null;
      for (this.match(78) && (n = this.flowParseFunctionTypeParam(!0), n.name = null, this.match(11) || this.expect(12)); !this.match(11) &&
      !this.match(21); )
        r.push(this.flowParseFunctionTypeParam(!1)), this.match(11) || this.expect(12);
      return this.eat(21) && (s = this.flowParseFunctionTypeParam(!1)), {
        params: r,
        rest: s,
        _this: n
      };
    }
    flowIdentToTypeAnnotation(r, s, n) {
      switch (n.name) {
        case "any":
          return this.finishNode(s, "AnyTypeAnnotation");
        case "bool":
        case "boolean":
          return this.finishNode(s, "BooleanTypeAnnotation");
        case "mixed":
          return this.finishNode(s, "MixedTypeAnnotation");
        case "empty":
          return this.finishNode(s, "EmptyTypeAnnotation");
        case "number":
          return this.finishNode(s, "NumberTypeAnnotation");
        case "string":
          return this.finishNode(s, "StringTypeAnnotation");
        case "symbol":
          return this.finishNode(s, "SymbolTypeAnnotation");
        default:
          return this.checkNotUnderscore(n.name), this.flowParseGenericType(r, n);
      }
    }
    flowParsePrimaryType() {
      let r = this.state.startLoc, s = this.startNode(), n, a, o = !1, l = this.state.noAnonFunctionType;
      switch (this.state.type) {
        case 5:
          return this.flowParseObjectType({
            allowStatic: !1,
            allowExact: !1,
            allowSpread: !0,
            allowProto: !1,
            allowInexact: !0
          });
        case 6:
          return this.flowParseObjectType({
            allowStatic: !1,
            allowExact: !0,
            allowSpread: !0,
            allowProto: !1,
            allowInexact: !1
          });
        case 0:
          return this.state.noAnonFunctionType = !1, a = this.flowParseTupleType(), this.state.noAnonFunctionType = l, a;
        case 47:
          return s.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(10), n = this.flowParseFunctionTypeParams(), s.params =
          n.params, s.rest = n.rest, s.this = n._this, this.expect(11), this.expect(19), s.returnType = this.flowParseType(), this.finishNode(
          s, "FunctionTypeAnnotation");
        case 10:
          if (this.next(), !this.match(11) && !this.match(21))
            if (Tt(this.state.type) || this.match(78)) {
              let u = this.lookahead().type;
              o = u !== 17 && u !== 14;
            } else
              o = !0;
          if (o) {
            if (this.state.noAnonFunctionType = !1, a = this.flowParseType(), this.state.noAnonFunctionType = l, this.state.noAnonFunctionType ||
            !(this.match(12) || this.match(11) && this.lookahead().type === 19))
              return this.expect(11), a;
            this.eat(12);
          }
          return a ? n = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(a)]) : n = this.flowParseFunctionTypeParams(),
          s.params = n.params, s.rest = n.rest, s.this = n._this, this.expect(11), this.expect(19), s.returnType = this.flowParseType(), s.typeParameters =
          null, this.finishNode(s, "FunctionTypeAnnotation");
        case 133:
          return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");
        case 85:
        case 86:
          return s.value = this.match(85), this.next(), this.finishNode(s, "BooleanLiteralTypeAnnotation");
        case 53:
          if (this.state.value === "-") {
            if (this.next(), this.match(134))
              return this.parseLiteralAtNode(-this.state.value, "NumberLiteralTypeAnnotation", s);
            if (this.match(135))
              return this.parseLiteralAtNode(-this.state.value, "BigIntLiteralTypeAnnotation", s);
            throw this.raise(Fe.UnexpectedSubtractionOperand, this.state.startLoc);
          }
          this.unexpected();
          return;
        case 134:
          return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");
        case 135:
          return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");
        case 88:
          return this.next(), this.finishNode(s, "VoidTypeAnnotation");
        case 84:
          return this.next(), this.finishNode(s, "NullLiteralTypeAnnotation");
        case 78:
          return this.next(), this.finishNode(s, "ThisTypeAnnotation");
        case 55:
          return this.next(), this.finishNode(s, "ExistsTypeAnnotation");
        case 87:
          return this.flowParseTypeofType();
        default:
          if (PS(this.state.type)) {
            let u = la(this.state.type);
            return this.next(), super.createIdentifier(s, u);
          } else if (Tt(this.state.type))
            return this.isContextual(129) ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(r, s, this.parseIdentifier());
      }
      this.unexpected();
    }
    flowParsePostfixType() {
      let r = this.state.startLoc, s = this.flowParsePrimaryType(), n = !1;
      for (; (this.match(0) || this.match(18)) && !this.canInsertSemicolon(); ) {
        let a = this.startNodeAt(r), o = this.eat(18);
        n = n || o, this.expect(0), !o && this.match(3) ? (a.elementType = s, this.next(), s = this.finishNode(a, "ArrayTypeAnnotation")) : (a.
        objectType = s, a.indexType = this.flowParseType(), this.expect(3), n ? (a.optional = o, s = this.finishNode(a, "OptionalIndexedAcce\
ssType")) : s = this.finishNode(a, "IndexedAccessType"));
      }
      return s;
    }
    flowParsePrefixType() {
      let r = this.startNode();
      return this.eat(17) ? (r.typeAnnotation = this.flowParsePrefixType(), this.finishNode(r, "NullableTypeAnnotation")) : this.flowParsePostfixType();
    }
    flowParseAnonFunctionWithoutParens() {
      let r = this.flowParsePrefixType();
      if (!this.state.noAnonFunctionType && this.eat(19)) {
        let s = this.startNodeAt(r.loc.start);
        return s.params = [this.reinterpretTypeAsFunctionTypeParam(r)], s.rest = null, s.this = null, s.returnType = this.flowParseType(), s.
        typeParameters = null, this.finishNode(s, "FunctionTypeAnnotation");
      }
      return r;
    }
    flowParseIntersectionType() {
      let r = this.startNode();
      this.eat(45);
      let s = this.flowParseAnonFunctionWithoutParens();
      for (r.types = [s]; this.eat(45); )
        r.types.push(this.flowParseAnonFunctionWithoutParens());
      return r.types.length === 1 ? s : this.finishNode(r, "IntersectionTypeAnnotation");
    }
    flowParseUnionType() {
      let r = this.startNode();
      this.eat(43);
      let s = this.flowParseIntersectionType();
      for (r.types = [s]; this.eat(43); )
        r.types.push(this.flowParseIntersectionType());
      return r.types.length === 1 ? s : this.finishNode(r, "UnionTypeAnnotation");
    }
    flowParseType() {
      let r = this.state.inType;
      this.state.inType = !0;
      let s = this.flowParseUnionType();
      return this.state.inType = r, s;
    }
    flowParseTypeOrImplicitInstantiation() {
      if (this.state.type === 132 && this.state.value === "_") {
        let r = this.state.startLoc, s = this.parseIdentifier();
        return this.flowParseGenericType(r, s);
      } else
        return this.flowParseType();
    }
    flowParseTypeAnnotation() {
      let r = this.startNode();
      return r.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(r, "TypeAnnotation");
    }
    flowParseTypeAnnotatableIdentifier(r) {
      let s = r ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();
      return this.match(14) && (s.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(s)), s;
    }
    typeCastToParameter(r) {
      return r.expression.typeAnnotation = r.typeAnnotation, this.resetEndLocation(r.expression, r.typeAnnotation.loc.end), r.expression;
    }
    flowParseVariance() {
      let r = null;
      return this.match(53) ? (r = this.startNode(), this.state.value === "+" ? r.kind = "plus" : r.kind = "minus", this.next(), this.finishNode(
      r, "Variance")) : r;
    }
    parseFunctionBody(r, s, n = !1) {
      if (s) {
        this.forwardNoArrowParamsConversionAt(r, () => super.parseFunctionBody(r, !0, n));
        return;
      }
      super.parseFunctionBody(r, !1, n);
    }
    parseFunctionBodyAndFinish(r, s, n = !1) {
      if (this.match(14)) {
        let a = this.startNode();
        [a.typeAnnotation, r.predicate] = this.flowParseTypeAndPredicateInitialiser(), r.returnType = a.typeAnnotation ? this.finishNode(a, "\
TypeAnnotation") : null;
      }
      return super.parseFunctionBodyAndFinish(r, s, n);
    }
    parseStatementLike(r) {
      if (this.state.strict && this.isContextual(129)) {
        let n = this.lookahead();
        if (pn(n.type)) {
          let a = this.startNode();
          return this.next(), this.flowParseInterface(a);
        }
      } else if (this.shouldParseEnums() && this.isContextual(126)) {
        let n = this.startNode();
        return this.next(), this.flowParseEnumDeclaration(n);
      }
      let s = super.parseStatementLike(r);
      return this.flowPragma === void 0 && !this.isValidDirective(s) && (this.flowPragma = null), s;
    }
    parseExpressionStatement(r, s, n) {
      if (s.type === "Identifier") {
        if (s.name === "declare") {
          if (this.match(80) || Tt(this.state.type) || this.match(68) || this.match(74) || this.match(82))
            return this.flowParseDeclare(r);
        } else if (Tt(this.state.type)) {
          if (s.name === "interface")
            return this.flowParseInterface(r);
          if (s.name === "type")
            return this.flowParseTypeAlias(r);
          if (s.name === "opaque")
            return this.flowParseOpaqueType(r, !1);
        }
      }
      return super.parseExpressionStatement(r, s, n);
    }
    shouldParseExportDeclaration() {
      let {
        type: r
      } = this.state;
      return U3(r) || this.shouldParseEnums() && r === 126 ? !this.state.containsEsc : super.shouldParseExportDeclaration();
    }
    isExportDefaultSpecifier() {
      let {
        type: r
      } = this.state;
      return U3(r) || this.shouldParseEnums() && r === 126 ? this.state.containsEsc : super.isExportDefaultSpecifier();
    }
    parseExportDefaultExpression() {
      if (this.shouldParseEnums() && this.isContextual(126)) {
        let r = this.startNode();
        return this.next(), this.flowParseEnumDeclaration(r);
      }
      return super.parseExportDefaultExpression();
    }
    parseConditional(r, s, n) {
      if (!this.match(17)) return r;
      if (this.state.maybeInArrowParameters) {
        let d = this.lookaheadCharCode();
        if (d === 44 || d === 61 || d === 58 || d === 41)
          return this.setOptionalParametersError(n), r;
      }
      this.expect(17);
      let a = this.state.clone(), o = this.state.noArrowAt, l = this.startNodeAt(s), {
        consequent: u,
        failed: c
      } = this.tryParseConditionalConsequent(), [f, p] = this.getArrowLikeExpressions(u);
      if (c || p.length > 0) {
        let d = [...o];
        if (p.length > 0) {
          this.state = a, this.state.noArrowAt = d;
          for (let m = 0; m < p.length; m++)
            d.push(p[m].start);
          ({
            consequent: u,
            failed: c
          } = this.tryParseConditionalConsequent()), [f, p] = this.getArrowLikeExpressions(u);
        }
        c && f.length > 1 && this.raise(Fe.AmbiguousConditionalArrow, a.startLoc), c && f.length === 1 && (this.state = a, d.push(f[0].start),
        this.state.noArrowAt = d, {
          consequent: u,
          failed: c
        } = this.tryParseConditionalConsequent());
      }
      return this.getArrowLikeExpressions(u, !0), this.state.noArrowAt = o, this.expect(14), l.test = r, l.consequent = u, l.alternate = this.
      forwardNoArrowParamsConversionAt(l, () => this.parseMaybeAssign(void 0, void 0)), this.finishNode(l, "ConditionalExpression");
    }
    tryParseConditionalConsequent() {
      this.state.noArrowParamsConversionAt.push(this.state.start);
      let r = this.parseMaybeAssignAllowIn(), s = !this.match(14);
      return this.state.noArrowParamsConversionAt.pop(), {
        consequent: r,
        failed: s
      };
    }
    getArrowLikeExpressions(r, s) {
      let n = [r], a = [];
      for (; n.length !== 0; ) {
        let o = n.pop();
        o.type === "ArrowFunctionExpression" ? (o.typeParameters || !o.returnType ? this.finishArrowValidation(o) : a.push(o), n.push(o.body)) :
        o.type === "ConditionalExpression" && (n.push(o.consequent), n.push(o.alternate));
      }
      return s ? (a.forEach((o) => this.finishArrowValidation(o)), [a, []]) : xCe(a, (o) => o.params.every((l) => this.isAssignable(l, !0)));
    }
    finishArrowValidation(r) {
      var s;
      this.toAssignableList(r.params, (s = r.extra) == null ? void 0 : s.trailingCommaLoc, !1), this.scope.enter(6), super.checkParams(r, !1,
      !0), this.scope.exit();
    }
    forwardNoArrowParamsConversionAt(r, s) {
      let n;
      return this.state.noArrowParamsConversionAt.indexOf(r.start) !== -1 ? (this.state.noArrowParamsConversionAt.push(this.state.start), n =
      s(), this.state.noArrowParamsConversionAt.pop()) : n = s(), n;
    }
    parseParenItem(r, s) {
      if (r = super.parseParenItem(r, s), this.eat(17) && (r.optional = !0, this.resetEndLocation(r)), this.match(14)) {
        let n = this.startNodeAt(s);
        return n.expression = r, n.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(n, "TypeCastExpression");
      }
      return r;
    }
    assertModuleNodeAllowed(r) {
      r.type === "ImportDeclaration" && (r.importKind === "type" || r.importKind === "typeof") || r.type === "ExportNamedDeclaration" && r.exportKind ===
      "type" || r.type === "ExportAllDeclaration" && r.exportKind === "type" || super.assertModuleNodeAllowed(r);
    }
    parseExportDeclaration(r) {
      if (this.isContextual(130)) {
        r.exportKind = "type";
        let s = this.startNode();
        return this.next(), this.match(5) ? (r.specifiers = this.parseExportSpecifiers(!0), super.parseExportFrom(r), null) : this.flowParseTypeAlias(
        s);
      } else if (this.isContextual(131)) {
        r.exportKind = "type";
        let s = this.startNode();
        return this.next(), this.flowParseOpaqueType(s, !1);
      } else if (this.isContextual(129)) {
        r.exportKind = "type";
        let s = this.startNode();
        return this.next(), this.flowParseInterface(s);
      } else if (this.shouldParseEnums() && this.isContextual(126)) {
        r.exportKind = "value";
        let s = this.startNode();
        return this.next(), this.flowParseEnumDeclaration(s);
      } else
        return super.parseExportDeclaration(r);
    }
    eatExportStar(r) {
      return super.eatExportStar(r) ? !0 : this.isContextual(130) && this.lookahead().type === 55 ? (r.exportKind = "type", this.next(), this.
      next(), !0) : !1;
    }
    maybeParseExportNamespaceSpecifier(r) {
      let {
        startLoc: s
      } = this.state, n = super.maybeParseExportNamespaceSpecifier(r);
      return n && r.exportKind === "type" && this.unexpected(s), n;
    }
    parseClassId(r, s, n) {
      super.parseClassId(r, s, n), this.match(47) && (r.typeParameters = this.flowParseTypeParameterDeclaration());
    }
    parseClassMember(r, s, n) {
      let {
        startLoc: a
      } = this.state;
      if (this.isContextual(125)) {
        if (super.parseClassMemberFromModifier(r, s))
          return;
        s.declare = !0;
      }
      super.parseClassMember(r, s, n), s.declare && (s.type !== "ClassProperty" && s.type !== "ClassPrivateProperty" && s.type !== "Property\
Definition" ? this.raise(Fe.DeclareClassElement, a) : s.value && this.raise(Fe.DeclareClassFieldInitializer, s.value));
    }
    isIterator(r) {
      return r === "iterator" || r === "asyncIterator";
    }
    readIterator() {
      let r = super.readWord1(), s = "@@" + r;
      (!this.isIterator(r) || !this.state.inType) && this.raise(k.InvalidIdentifier, this.state.curPosition(), {
        identifierName: s
      }), this.finishToken(132, s);
    }
    getTokenFromCode(r) {
      let s = this.input.charCodeAt(this.state.pos + 1);
      r === 123 && s === 124 ? this.finishOp(6, 2) : this.state.inType && (r === 62 || r === 60) ? this.finishOp(r === 62 ? 48 : 47, 1) : this.
      state.inType && r === 63 ? s === 46 ? this.finishOp(18, 2) : this.finishOp(17, 1) : aCe(r, s, this.input.charCodeAt(this.state.pos + 2)) ?
      (this.state.pos += 2, this.readIterator()) : super.getTokenFromCode(r);
    }
    isAssignable(r, s) {
      return r.type === "TypeCastExpression" ? this.isAssignable(r.expression, s) : super.isAssignable(r, s);
    }
    toAssignable(r, s = !1) {
      !s && r.type === "AssignmentExpression" && r.left.type === "TypeCastExpression" && (r.left = this.typeCastToParameter(r.left)), super.
      toAssignable(r, s);
    }
    toAssignableList(r, s, n) {
      for (let a = 0; a < r.length; a++) {
        let o = r[a];
        o?.type === "TypeCastExpression" && (r[a] = this.typeCastToParameter(o));
      }
      super.toAssignableList(r, s, n);
    }
    toReferencedList(r, s) {
      for (let a = 0; a < r.length; a++) {
        var n;
        let o = r[a];
        o && o.type === "TypeCastExpression" && !((n = o.extra) != null && n.parenthesized) && (r.length > 1 || !s) && this.raise(Fe.TypeCastInPattern,
        o.typeAnnotation);
      }
      return r;
    }
    parseArrayLike(r, s, n, a) {
      let o = super.parseArrayLike(r, s, n, a);
      return s && !this.state.maybeInArrowParameters && this.toReferencedList(o.elements), o;
    }
    isValidLVal(r, s, n) {
      return r === "TypeCastExpression" || super.isValidLVal(r, s, n);
    }
    parseClassProperty(r) {
      return this.match(14) && (r.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassProperty(r);
    }
    parseClassPrivateProperty(r) {
      return this.match(14) && (r.typeAnnotation = this.flowParseTypeAnnotation()), super.parseClassPrivateProperty(r);
    }
    isClassMethod() {
      return this.match(47) || super.isClassMethod();
    }
    isClassProperty() {
      return this.match(14) || super.isClassProperty();
    }
    isNonstaticConstructor(r) {
      return !this.match(14) && super.isNonstaticConstructor(r);
    }
    pushClassMethod(r, s, n, a, o, l) {
      if (s.variance && this.unexpected(s.variance.loc.start), delete s.variance, this.match(47) && (s.typeParameters = this.flowParseTypeParameterDeclaration()),
      super.pushClassMethod(r, s, n, a, o, l), s.params && o) {
        let u = s.params;
        u.length > 0 && this.isThisParam(u[0]) && this.raise(Fe.ThisParamBannedInConstructor, s);
      } else if (s.type === "MethodDefinition" && o && s.value.params) {
        let u = s.value.params;
        u.length > 0 && this.isThisParam(u[0]) && this.raise(Fe.ThisParamBannedInConstructor, s);
      }
    }
    pushClassPrivateMethod(r, s, n, a) {
      s.variance && this.unexpected(s.variance.loc.start), delete s.variance, this.match(47) && (s.typeParameters = this.flowParseTypeParameterDeclaration()),
      super.pushClassPrivateMethod(r, s, n, a);
    }
    parseClassSuper(r) {
      if (super.parseClassSuper(r), r.superClass && this.match(47) && (r.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.
      isContextual(113)) {
        this.next();
        let s = r.implements = [];
        do {
          let n = this.startNode();
          n.id = this.flowParseRestrictedIdentifier(!0), this.match(47) ? n.typeParameters = this.flowParseTypeParameterInstantiation() : n.
          typeParameters = null, s.push(this.finishNode(n, "ClassImplements"));
        } while (this.eat(12));
      }
    }
    checkGetterSetterParams(r) {
      super.checkGetterSetterParams(r);
      let s = this.getObjectOrClassMethodParams(r);
      if (s.length > 0) {
        let n = s[0];
        this.isThisParam(n) && r.kind === "get" ? this.raise(Fe.GetterMayNotHaveThisParam, n) : this.isThisParam(n) && this.raise(Fe.SetterMayNotHaveThisParam,
        n);
      }
    }
    parsePropertyNamePrefixOperator(r) {
      r.variance = this.flowParseVariance();
    }
    parseObjPropValue(r, s, n, a, o, l, u) {
      r.variance && this.unexpected(r.variance.loc.start), delete r.variance;
      let c;
      this.match(47) && !l && (c = this.flowParseTypeParameterDeclaration(), this.match(10) || this.unexpected());
      let f = super.parseObjPropValue(r, s, n, a, o, l, u);
      return c && ((f.value || f).typeParameters = c), f;
    }
    parseAssignableListItemTypes(r) {
      return this.eat(17) && (r.type !== "Identifier" && this.raise(Fe.PatternIsOptional, r), this.isThisParam(r) && this.raise(Fe.ThisParamMayNotBeOptional,
      r), r.optional = !0), this.match(14) ? r.typeAnnotation = this.flowParseTypeAnnotation() : this.isThisParam(r) && this.raise(Fe.ThisParamAnnotationRequired,
      r), this.match(29) && this.isThisParam(r) && this.raise(Fe.ThisParamNoDefault, r), this.resetEndLocation(r), r;
    }
    parseMaybeDefault(r, s) {
      let n = super.parseMaybeDefault(r, s);
      return n.type === "AssignmentPattern" && n.typeAnnotation && n.right.start < n.typeAnnotation.start && this.raise(Fe.TypeBeforeInitializer,
      n.typeAnnotation), n;
    }
    checkImportReflection(r) {
      super.checkImportReflection(r), r.module && r.importKind !== "value" && this.raise(Fe.ImportReflectionHasImportType, r.specifiers[0].loc.
      start);
    }
    parseImportSpecifierLocal(r, s, n) {
      s.local = G3(r) ? this.flowParseRestrictedIdentifier(!0, !0) : this.parseIdentifier(), r.specifiers.push(this.finishImportSpecifier(s,
      n));
    }
    isPotentialImportPhase(r) {
      if (super.isPotentialImportPhase(r)) return !0;
      if (this.isContextual(130)) {
        if (!r) return !0;
        let s = this.lookaheadCharCode();
        return s === 123 || s === 42;
      }
      return !r && this.isContextual(87);
    }
    applyImportPhase(r, s, n, a) {
      if (super.applyImportPhase(r, s, n, a), s) {
        if (!n && this.match(65))
          return;
        r.exportKind = n === "type" ? n : "value";
      } else
        n === "type" && this.match(55) && this.unexpected(), r.importKind = n === "type" || n === "typeof" ? n : "value";
    }
    parseImportSpecifier(r, s, n, a, o) {
      let l = r.imported, u = null;
      l.type === "Identifier" && (l.name === "type" ? u = "type" : l.name === "typeof" && (u = "typeof"));
      let c = !1;
      if (this.isContextual(93) && !this.isLookaheadContextual("as")) {
        let p = this.parseIdentifier(!0);
        u !== null && !pn(this.state.type) ? (r.imported = p, r.importKind = u, r.local = gi(p)) : (r.imported = l, r.importKind = null, r.local =
        this.parseIdentifier());
      } else {
        if (u !== null && pn(this.state.type))
          r.imported = this.parseIdentifier(!0), r.importKind = u;
        else {
          if (s)
            throw this.raise(k.ImportBindingIsString, r, {
              importName: l.value
            });
          r.imported = l, r.importKind = null;
        }
        this.eatContextual(93) ? r.local = this.parseIdentifier() : (c = !0, r.local = gi(r.imported));
      }
      let f = G3(r);
      return n && f && this.raise(Fe.ImportTypeShorthandOnlyInPureImport, r), (n || f) && this.checkReservedType(r.local.name, r.local.loc.start,
      !0), c && !n && !f && this.checkReservedWord(r.local.name, r.loc.start, !0, !0), this.finishImportSpecifier(r, "ImportSpecifier");
    }
    parseBindingAtom() {
      switch (this.state.type) {
        case 78:
          return this.parseIdentifier(!0);
        default:
          return super.parseBindingAtom();
      }
    }
    parseFunctionParams(r, s) {
      let n = r.kind;
      n !== "get" && n !== "set" && this.match(47) && (r.typeParameters = this.flowParseTypeParameterDeclaration()), super.parseFunctionParams(
      r, s);
    }
    parseVarId(r, s) {
      super.parseVarId(r, s), this.match(14) && (r.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(r.id));
    }
    parseAsyncArrowFromCallExpression(r, s) {
      if (this.match(14)) {
        let n = this.state.noAnonFunctionType;
        this.state.noAnonFunctionType = !0, r.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = n;
      }
      return super.parseAsyncArrowFromCallExpression(r, s);
    }
    shouldParseAsyncArrow() {
      return this.match(14) || super.shouldParseAsyncArrow();
    }
    parseMaybeAssign(r, s) {
      var n;
      let a = null, o;
      if (this.hasPlugin("jsx") && (this.match(142) || this.match(47))) {
        if (a = this.state.clone(), o = this.tryParse(() => super.parseMaybeAssign(r, s), a), !o.error) return o.node;
        let {
          context: c
        } = this.state, f = c[c.length - 1];
        (f === Lt.j_oTag || f === Lt.j_expr) && c.pop();
      }
      if ((n = o) != null && n.error || this.match(47)) {
        var l, u;
        a = a || this.state.clone();
        let c, f = this.tryParse((d) => {
          var m;
          c = this.flowParseTypeParameterDeclaration();
          let b = this.forwardNoArrowParamsConversionAt(c, () => {
            let g = super.parseMaybeAssign(r, s);
            return this.resetStartLocationFromNode(g, c), g;
          });
          (m = b.extra) != null && m.parenthesized && d();
          let h = this.maybeUnwrapTypeCastExpression(b);
          return h.type !== "ArrowFunctionExpression" && d(), h.typeParameters = c, this.resetStartLocationFromNode(h, c), b;
        }, a), p = null;
        if (f.node && this.maybeUnwrapTypeCastExpression(f.node).type === "ArrowFunctionExpression") {
          if (!f.error && !f.aborted)
            return f.node.async && this.raise(Fe.UnexpectedTypeParameterBeforeAsyncArrowFunction, c), f.node;
          p = f.node;
        }
        if ((l = o) != null && l.node)
          return this.state = o.failState, o.node;
        if (p)
          return this.state = f.failState, p;
        throw (u = o) != null && u.thrown ? o.error : f.thrown ? f.error : this.raise(Fe.UnexpectedTokenAfterTypeParameter, c);
      }
      return super.parseMaybeAssign(r, s);
    }
    parseArrow(r) {
      if (this.match(14)) {
        let s = this.tryParse(() => {
          let n = this.state.noAnonFunctionType;
          this.state.noAnonFunctionType = !0;
          let a = this.startNode();
          return [a.typeAnnotation, r.predicate] = this.flowParseTypeAndPredicateInitialiser(), this.state.noAnonFunctionType = n, this.canInsertSemicolon() &&
          this.unexpected(), this.match(19) || this.unexpected(), a;
        });
        if (s.thrown) return null;
        s.error && (this.state = s.failState), r.returnType = s.node.typeAnnotation ? this.finishNode(s.node, "TypeAnnotation") : null;
      }
      return super.parseArrow(r);
    }
    shouldParseArrow(r) {
      return this.match(14) || super.shouldParseArrow(r);
    }
    setArrowFunctionParameters(r, s) {
      this.state.noArrowParamsConversionAt.indexOf(r.start) !== -1 ? r.params = s : super.setArrowFunctionParameters(r, s);
    }
    checkParams(r, s, n, a = !0) {
      if (!(n && this.state.noArrowParamsConversionAt.indexOf(r.start) !== -1)) {
        for (let o = 0; o < r.params.length; o++)
          this.isThisParam(r.params[o]) && o > 0 && this.raise(Fe.ThisParamMustBeFirst, r.params[o]);
        super.checkParams(r, s, n, a);
      }
    }
    parseParenAndDistinguishExpression(r) {
      return super.parseParenAndDistinguishExpression(r && this.state.noArrowAt.indexOf(this.state.start) === -1);
    }
    parseSubscripts(r, s, n) {
      if (r.type === "Identifier" && r.name === "async" && this.state.noArrowAt.indexOf(s.index) !== -1) {
        this.next();
        let a = this.startNodeAt(s);
        a.callee = r, a.arguments = super.parseCallExpressionArguments(11, !1), r = this.finishNode(a, "CallExpression");
      } else if (r.type === "Identifier" && r.name === "async" && this.match(47)) {
        let a = this.state.clone(), o = this.tryParse((u) => this.parseAsyncArrowWithTypeParameters(s) || u(), a);
        if (!o.error && !o.aborted) return o.node;
        let l = this.tryParse(() => super.parseSubscripts(r, s, n), a);
        if (l.node && !l.error) return l.node;
        if (o.node)
          return this.state = o.failState, o.node;
        if (l.node)
          return this.state = l.failState, l.node;
        throw o.error || l.error;
      }
      return super.parseSubscripts(r, s, n);
    }
    parseSubscript(r, s, n, a) {
      if (this.match(18) && this.isLookaheadToken_lt()) {
        if (a.optionalChainMember = !0, n)
          return a.stop = !0, r;
        this.next();
        let o = this.startNodeAt(s);
        return o.callee = r, o.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(10), o.arguments = this.parseCallExpressionArguments(
        11, !1), o.optional = !0, this.finishCallExpression(o, !0);
      } else if (!n && this.shouldParseTypes() && this.match(47)) {
        let o = this.startNodeAt(s);
        o.callee = r;
        let l = this.tryParse(() => (o.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew(), this.expect(10), o.arguments = super.
        parseCallExpressionArguments(11, !1), a.optionalChainMember && (o.optional = !1), this.finishCallExpression(o, a.optionalChainMember)));
        if (l.node)
          return l.error && (this.state = l.failState), l.node;
      }
      return super.parseSubscript(r, s, n, a);
    }
    parseNewCallee(r) {
      super.parseNewCallee(r);
      let s = null;
      this.shouldParseTypes() && this.match(47) && (s = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node), r.typeArguments =
      s;
    }
    parseAsyncArrowWithTypeParameters(r) {
      let s = this.startNodeAt(r);
      if (this.parseFunctionParams(s, !1), !!this.parseArrow(s))
        return super.parseArrowExpression(s, void 0, !0);
    }
    readToken_mult_modulo(r) {
      let s = this.input.charCodeAt(this.state.pos + 1);
      if (r === 42 && s === 47 && this.state.hasFlowComment) {
        this.state.hasFlowComment = !1, this.state.pos += 2, this.nextToken();
        return;
      }
      super.readToken_mult_modulo(r);
    }
    readToken_pipe_amp(r) {
      let s = this.input.charCodeAt(this.state.pos + 1);
      if (r === 124 && s === 125) {
        this.finishOp(9, 2);
        return;
      }
      super.readToken_pipe_amp(r);
    }
    parseTopLevel(r, s) {
      let n = super.parseTopLevel(r, s);
      return this.state.hasFlowComment && this.raise(Fe.UnterminatedFlowComment, this.state.curPosition()), n;
    }
    skipBlockComment() {
      if (this.hasPlugin("flowComments") && this.skipFlowComment()) {
        if (this.state.hasFlowComment)
          throw this.raise(Fe.NestedFlowComment, this.state.startLoc);
        this.hasFlowCommentCompletion();
        let r = this.skipFlowComment();
        r && (this.state.pos += r, this.state.hasFlowComment = !0);
        return;
      }
      return super.skipBlockComment(this.state.hasFlowComment ? "*-/" : "*/");
    }
    skipFlowComment() {
      let {
        pos: r
      } = this.state, s = 2;
      for (; [32, 9].includes(this.input.charCodeAt(r + s)); )
        s++;
      let n = this.input.charCodeAt(s + r), a = this.input.charCodeAt(s + r + 1);
      return n === 58 && a === 58 ? s + 2 : this.input.slice(s + r, s + r + 12) === "flow-include" ? s + 12 : n === 58 && a !== 58 ? s : !1;
    }
    hasFlowCommentCompletion() {
      if (this.input.indexOf("*/", this.state.pos) === -1)
        throw this.raise(k.UnterminatedComment, this.state.curPosition());
    }
    flowEnumErrorBooleanMemberNotInitialized(r, {
      enumName: s,
      memberName: n
    }) {
      this.raise(Fe.EnumBooleanMemberNotInitialized, r, {
        memberName: n,
        enumName: s
      });
    }
    flowEnumErrorInvalidMemberInitializer(r, s) {
      return this.raise(s.explicitType ? s.explicitType === "symbol" ? Fe.EnumInvalidMemberInitializerSymbolType : Fe.EnumInvalidMemberInitializerPrimaryType :
      Fe.EnumInvalidMemberInitializerUnknownType, r, s);
    }
    flowEnumErrorNumberMemberNotInitialized(r, s) {
      this.raise(Fe.EnumNumberMemberNotInitialized, r, s);
    }
    flowEnumErrorStringMemberInconsistentlyInitialized(r, s) {
      this.raise(Fe.EnumStringMemberInconsistentlyInitialized, r, s);
    }
    flowEnumMemberInit() {
      let r = this.state.startLoc, s = /* @__PURE__ */ i(() => this.match(12) || this.match(8), "endOfInit");
      switch (this.state.type) {
        case 134: {
          let n = this.parseNumericLiteral(this.state.value);
          return s() ? {
            type: "number",
            loc: n.loc.start,
            value: n
          } : {
            type: "invalid",
            loc: r
          };
        }
        case 133: {
          let n = this.parseStringLiteral(this.state.value);
          return s() ? {
            type: "string",
            loc: n.loc.start,
            value: n
          } : {
            type: "invalid",
            loc: r
          };
        }
        case 85:
        case 86: {
          let n = this.parseBooleanLiteral(this.match(85));
          return s() ? {
            type: "boolean",
            loc: n.loc.start,
            value: n
          } : {
            type: "invalid",
            loc: r
          };
        }
        default:
          return {
            type: "invalid",
            loc: r
          };
      }
    }
    flowEnumMemberRaw() {
      let r = this.state.startLoc, s = this.parseIdentifier(!0), n = this.eat(29) ? this.flowEnumMemberInit() : {
        type: "none",
        loc: r
      };
      return {
        id: s,
        init: n
      };
    }
    flowEnumCheckExplicitTypeMismatch(r, s, n) {
      let {
        explicitType: a
      } = s;
      a !== null && a !== n && this.flowEnumErrorInvalidMemberInitializer(r, s);
    }
    flowEnumMembers({
      enumName: r,
      explicitType: s
    }) {
      let n = /* @__PURE__ */ new Set(), a = {
        booleanMembers: [],
        numberMembers: [],
        stringMembers: [],
        defaultedMembers: []
      }, o = !1;
      for (; !this.match(8); ) {
        if (this.eat(21)) {
          o = !0;
          break;
        }
        let l = this.startNode(), {
          id: u,
          init: c
        } = this.flowEnumMemberRaw(), f = u.name;
        if (f === "")
          continue;
        /^[a-z]/.test(f) && this.raise(Fe.EnumInvalidMemberName, u, {
          memberName: f,
          suggestion: f[0].toUpperCase() + f.slice(1),
          enumName: r
        }), n.has(f) && this.raise(Fe.EnumDuplicateMemberName, u, {
          memberName: f,
          enumName: r
        }), n.add(f);
        let p = {
          enumName: r,
          explicitType: s,
          memberName: f
        };
        switch (l.id = u, c.type) {
          case "boolean": {
            this.flowEnumCheckExplicitTypeMismatch(c.loc, p, "boolean"), l.init = c.value, a.booleanMembers.push(this.finishNode(l, "EnumBoo\
leanMember"));
            break;
          }
          case "number": {
            this.flowEnumCheckExplicitTypeMismatch(c.loc, p, "number"), l.init = c.value, a.numberMembers.push(this.finishNode(l, "EnumNumbe\
rMember"));
            break;
          }
          case "string": {
            this.flowEnumCheckExplicitTypeMismatch(c.loc, p, "string"), l.init = c.value, a.stringMembers.push(this.finishNode(l, "EnumStrin\
gMember"));
            break;
          }
          case "invalid":
            throw this.flowEnumErrorInvalidMemberInitializer(c.loc, p);
          case "none":
            switch (s) {
              case "boolean":
                this.flowEnumErrorBooleanMemberNotInitialized(c.loc, p);
                break;
              case "number":
                this.flowEnumErrorNumberMemberNotInitialized(c.loc, p);
                break;
              default:
                a.defaultedMembers.push(this.finishNode(l, "EnumDefaultedMember"));
            }
        }
        this.match(8) || this.expect(12);
      }
      return {
        members: a,
        hasUnknownMembers: o
      };
    }
    flowEnumStringMembers(r, s, {
      enumName: n
    }) {
      if (r.length === 0)
        return s;
      if (s.length === 0)
        return r;
      if (s.length > r.length) {
        for (let a of r)
          this.flowEnumErrorStringMemberInconsistentlyInitialized(a, {
            enumName: n
          });
        return s;
      } else {
        for (let a of s)
          this.flowEnumErrorStringMemberInconsistentlyInitialized(a, {
            enumName: n
          });
        return r;
      }
    }
    flowEnumParseExplicitType({
      enumName: r
    }) {
      if (!this.eatContextual(102)) return null;
      if (!Tt(this.state.type))
        throw this.raise(Fe.EnumInvalidExplicitTypeUnknownSupplied, this.state.startLoc, {
          enumName: r
        });
      let {
        value: s
      } = this.state;
      return this.next(), s !== "boolean" && s !== "number" && s !== "string" && s !== "symbol" && this.raise(Fe.EnumInvalidExplicitType, this.
      state.startLoc, {
        enumName: r,
        invalidEnumType: s
      }), s;
    }
    flowEnumBody(r, s) {
      let n = s.name, a = s.loc.start, o = this.flowEnumParseExplicitType({
        enumName: n
      });
      this.expect(5);
      let {
        members: l,
        hasUnknownMembers: u
      } = this.flowEnumMembers({
        enumName: n,
        explicitType: o
      });
      switch (r.hasUnknownMembers = u, o) {
        case "boolean":
          return r.explicitType = !0, r.members = l.booleanMembers, this.expect(8), this.finishNode(r, "EnumBooleanBody");
        case "number":
          return r.explicitType = !0, r.members = l.numberMembers, this.expect(8), this.finishNode(r, "EnumNumberBody");
        case "string":
          return r.explicitType = !0, r.members = this.flowEnumStringMembers(l.stringMembers, l.defaultedMembers, {
            enumName: n
          }), this.expect(8), this.finishNode(r, "EnumStringBody");
        case "symbol":
          return r.members = l.defaultedMembers, this.expect(8), this.finishNode(r, "EnumSymbolBody");
        default: {
          let c = /* @__PURE__ */ i(() => (r.members = [], this.expect(8), this.finishNode(r, "EnumStringBody")), "empty");
          r.explicitType = !1;
          let f = l.booleanMembers.length, p = l.numberMembers.length, d = l.stringMembers.length, m = l.defaultedMembers.length;
          if (!f && !p && !d && !m)
            return c();
          if (!f && !p)
            return r.members = this.flowEnumStringMembers(l.stringMembers, l.defaultedMembers, {
              enumName: n
            }), this.expect(8), this.finishNode(r, "EnumStringBody");
          if (!p && !d && f >= m) {
            for (let b of l.defaultedMembers)
              this.flowEnumErrorBooleanMemberNotInitialized(b.loc.start, {
                enumName: n,
                memberName: b.id.name
              });
            return r.members = l.booleanMembers, this.expect(8), this.finishNode(r, "EnumBooleanBody");
          } else if (!f && !d && p >= m) {
            for (let b of l.defaultedMembers)
              this.flowEnumErrorNumberMemberNotInitialized(b.loc.start, {
                enumName: n,
                memberName: b.id.name
              });
            return r.members = l.numberMembers, this.expect(8), this.finishNode(r, "EnumNumberBody");
          } else
            return this.raise(Fe.EnumInconsistentMemberValues, a, {
              enumName: n
            }), c();
        }
      }
    }
    flowParseEnumDeclaration(r) {
      let s = this.parseIdentifier();
      return r.id = s, r.body = this.flowEnumBody(this.startNode(), s), this.finishNode(r, "EnumDeclaration");
    }
    isLookaheadToken_lt() {
      let r = this.nextTokenStart();
      if (this.input.charCodeAt(r) === 60) {
        let s = this.input.charCodeAt(r + 1);
        return s !== 60 && s !== 61;
      }
      return !1;
    }
    maybeUnwrapTypeCastExpression(r) {
      return r.type === "TypeCastExpression" ? r.expression : r;
    }
  }, "flow"), CCe = {
    __proto__: null,
    quot: '"',
    amp: "&",
    apos: "'",
    lt: "<",
    gt: ">",
    nbsp: "\xA0",
    iexcl: "\xA1",
    cent: "\xA2",
    pound: "\xA3",
    curren: "\xA4",
    yen: "\xA5",
    brvbar: "\xA6",
    sect: "\xA7",
    uml: "\xA8",
    copy: "\xA9",
    ordf: "\xAA",
    laquo: "\xAB",
    not: "\xAC",
    shy: "\xAD",
    reg: "\xAE",
    macr: "\xAF",
    deg: "\xB0",
    plusmn: "\xB1",
    sup2: "\xB2",
    sup3: "\xB3",
    acute: "\xB4",
    micro: "\xB5",
    para: "\xB6",
    middot: "\xB7",
    cedil: "\xB8",
    sup1: "\xB9",
    ordm: "\xBA",
    raquo: "\xBB",
    frac14: "\xBC",
    frac12: "\xBD",
    frac34: "\xBE",
    iquest: "\xBF",
    Agrave: "\xC0",
    Aacute: "\xC1",
    Acirc: "\xC2",
    Atilde: "\xC3",
    Auml: "\xC4",
    Aring: "\xC5",
    AElig: "\xC6",
    Ccedil: "\xC7",
    Egrave: "\xC8",
    Eacute: "\xC9",
    Ecirc: "\xCA",
    Euml: "\xCB",
    Igrave: "\xCC",
    Iacute: "\xCD",
    Icirc: "\xCE",
    Iuml: "\xCF",
    ETH: "\xD0",
    Ntilde: "\xD1",
    Ograve: "\xD2",
    Oacute: "\xD3",
    Ocirc: "\xD4",
    Otilde: "\xD5",
    Ouml: "\xD6",
    times: "\xD7",
    Oslash: "\xD8",
    Ugrave: "\xD9",
    Uacute: "\xDA",
    Ucirc: "\xDB",
    Uuml: "\xDC",
    Yacute: "\xDD",
    THORN: "\xDE",
    szlig: "\xDF",
    agrave: "\xE0",
    aacute: "\xE1",
    acirc: "\xE2",
    atilde: "\xE3",
    auml: "\xE4",
    aring: "\xE5",
    aelig: "\xE6",
    ccedil: "\xE7",
    egrave: "\xE8",
    eacute: "\xE9",
    ecirc: "\xEA",
    euml: "\xEB",
    igrave: "\xEC",
    iacute: "\xED",
    icirc: "\xEE",
    iuml: "\xEF",
    eth: "\xF0",
    ntilde: "\xF1",
    ograve: "\xF2",
    oacute: "\xF3",
    ocirc: "\xF4",
    otilde: "\xF5",
    ouml: "\xF6",
    divide: "\xF7",
    oslash: "\xF8",
    ugrave: "\xF9",
    uacute: "\xFA",
    ucirc: "\xFB",
    uuml: "\xFC",
    yacute: "\xFD",
    thorn: "\xFE",
    yuml: "\xFF",
    OElig: "\u0152",
    oelig: "\u0153",
    Scaron: "\u0160",
    scaron: "\u0161",
    Yuml: "\u0178",
    fnof: "\u0192",
    circ: "\u02C6",
    tilde: "\u02DC",
    Alpha: "\u0391",
    Beta: "\u0392",
    Gamma: "\u0393",
    Delta: "\u0394",
    Epsilon: "\u0395",
    Zeta: "\u0396",
    Eta: "\u0397",
    Theta: "\u0398",
    Iota: "\u0399",
    Kappa: "\u039A",
    Lambda: "\u039B",
    Mu: "\u039C",
    Nu: "\u039D",
    Xi: "\u039E",
    Omicron: "\u039F",
    Pi: "\u03A0",
    Rho: "\u03A1",
    Sigma: "\u03A3",
    Tau: "\u03A4",
    Upsilon: "\u03A5",
    Phi: "\u03A6",
    Chi: "\u03A7",
    Psi: "\u03A8",
    Omega: "\u03A9",
    alpha: "\u03B1",
    beta: "\u03B2",
    gamma: "\u03B3",
    delta: "\u03B4",
    epsilon: "\u03B5",
    zeta: "\u03B6",
    eta: "\u03B7",
    theta: "\u03B8",
    iota: "\u03B9",
    kappa: "\u03BA",
    lambda: "\u03BB",
    mu: "\u03BC",
    nu: "\u03BD",
    xi: "\u03BE",
    omicron: "\u03BF",
    pi: "\u03C0",
    rho: "\u03C1",
    sigmaf: "\u03C2",
    sigma: "\u03C3",
    tau: "\u03C4",
    upsilon: "\u03C5",
    phi: "\u03C6",
    chi: "\u03C7",
    psi: "\u03C8",
    omega: "\u03C9",
    thetasym: "\u03D1",
    upsih: "\u03D2",
    piv: "\u03D6",
    ensp: "\u2002",
    emsp: "\u2003",
    thinsp: "\u2009",
    zwnj: "\u200C",
    zwj: "\u200D",
    lrm: "\u200E",
    rlm: "\u200F",
    ndash: "\u2013",
    mdash: "\u2014",
    lsquo: "\u2018",
    rsquo: "\u2019",
    sbquo: "\u201A",
    ldquo: "\u201C",
    rdquo: "\u201D",
    bdquo: "\u201E",
    dagger: "\u2020",
    Dagger: "\u2021",
    bull: "\u2022",
    hellip: "\u2026",
    permil: "\u2030",
    prime: "\u2032",
    Prime: "\u2033",
    lsaquo: "\u2039",
    rsaquo: "\u203A",
    oline: "\u203E",
    frasl: "\u2044",
    euro: "\u20AC",
    image: "\u2111",
    weierp: "\u2118",
    real: "\u211C",
    trade: "\u2122",
    alefsym: "\u2135",
    larr: "\u2190",
    uarr: "\u2191",
    rarr: "\u2192",
    darr: "\u2193",
    harr: "\u2194",
    crarr: "\u21B5",
    lArr: "\u21D0",
    uArr: "\u21D1",
    rArr: "\u21D2",
    dArr: "\u21D3",
    hArr: "\u21D4",
    forall: "\u2200",
    part: "\u2202",
    exist: "\u2203",
    empty: "\u2205",
    nabla: "\u2207",
    isin: "\u2208",
    notin: "\u2209",
    ni: "\u220B",
    prod: "\u220F",
    sum: "\u2211",
    minus: "\u2212",
    lowast: "\u2217",
    radic: "\u221A",
    prop: "\u221D",
    infin: "\u221E",
    ang: "\u2220",
    and: "\u2227",
    or: "\u2228",
    cap: "\u2229",
    cup: "\u222A",
    int: "\u222B",
    there4: "\u2234",
    sim: "\u223C",
    cong: "\u2245",
    asymp: "\u2248",
    ne: "\u2260",
    equiv: "\u2261",
    le: "\u2264",
    ge: "\u2265",
    sub: "\u2282",
    sup: "\u2283",
    nsub: "\u2284",
    sube: "\u2286",
    supe: "\u2287",
    oplus: "\u2295",
    otimes: "\u2297",
    perp: "\u22A5",
    sdot: "\u22C5",
    lceil: "\u2308",
    rceil: "\u2309",
    lfloor: "\u230A",
    rfloor: "\u230B",
    lang: "\u2329",
    rang: "\u232A",
    loz: "\u25CA",
    spades: "\u2660",
    clubs: "\u2663",
    hearts: "\u2665",
    diams: "\u2666"
  }, Za = yi`jsx`({
    AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression.",
    MissingClosingTagElement: /* @__PURE__ */ i(({
      openingTagName: e
    }) => `Expected corresponding JSX closing tag for <${e}>.`, "MissingClosingTagElement"),
    MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>.",
    UnexpectedSequenceExpression: "Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",
    UnexpectedToken: /* @__PURE__ */ i(({
      unexpected: e,
      HTMLEntity: t
    }) => `Unexpected token \`${e}\`. Did you mean \`${t}\` or \`{'${e}'}\`?`, "UnexpectedToken"),
    UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text.",
    UnterminatedJsxContent: "Unterminated JSX contents.",
    UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"
  });
  function aa(e) {
    return e ? e.type === "JSXOpeningFragment" || e.type === "JSXClosingFragment" : !1;
  }
  i(aa, "isFragment");
  function cl(e) {
    if (e.type === "JSXIdentifier")
      return e.name;
    if (e.type === "JSXNamespacedName")
      return e.namespace.name + ":" + e.name.name;
    if (e.type === "JSXMemberExpression")
      return cl(e.object) + "." + cl(e.property);
    throw new Error("Node had unexpected type: " + e.type);
  }
  i(cl, "getQualifiedJSXName");
  var wCe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "JSXParserMixin");
    }
    jsxReadToken() {
      let r = "", s = this.state.pos;
      for (; ; ) {
        if (this.state.pos >= this.length)
          throw this.raise(Za.UnterminatedJsxContent, this.state.startLoc);
        let n = this.input.charCodeAt(this.state.pos);
        switch (n) {
          case 60:
          case 123:
            if (this.state.pos === this.state.start) {
              n === 60 && this.state.canStartJSXElement ? (++this.state.pos, this.finishToken(142)) : super.getTokenFromCode(n);
              return;
            }
            r += this.input.slice(s, this.state.pos), this.finishToken(141, r);
            return;
          case 38:
            r += this.input.slice(s, this.state.pos), r += this.jsxReadEntity(), s = this.state.pos;
            break;
          case 62:
          case 125:
          default:
            Ec(n) ? (r += this.input.slice(s, this.state.pos), r += this.jsxReadNewLine(!0), s = this.state.pos) : ++this.state.pos;
        }
      }
    }
    jsxReadNewLine(r) {
      let s = this.input.charCodeAt(this.state.pos), n;
      return ++this.state.pos, s === 13 && this.input.charCodeAt(this.state.pos) === 10 ? (++this.state.pos, n = r ? `
` : `\r
`) : n = String.fromCharCode(s), ++this.state.curLine, this.state.lineStart = this.state.pos, n;
    }
    jsxReadString(r) {
      let s = "", n = ++this.state.pos;
      for (; ; ) {
        if (this.state.pos >= this.length)
          throw this.raise(k.UnterminatedString, this.state.startLoc);
        let a = this.input.charCodeAt(this.state.pos);
        if (a === r) break;
        a === 38 ? (s += this.input.slice(n, this.state.pos), s += this.jsxReadEntity(), n = this.state.pos) : Ec(a) ? (s += this.input.slice(
        n, this.state.pos), s += this.jsxReadNewLine(!1), n = this.state.pos) : ++this.state.pos;
      }
      s += this.input.slice(n, this.state.pos++), this.finishToken(133, s);
    }
    jsxReadEntity() {
      let r = ++this.state.pos;
      if (this.codePointAtPos(this.state.pos) === 35) {
        ++this.state.pos;
        let s = 10;
        this.codePointAtPos(this.state.pos) === 120 && (s = 16, ++this.state.pos);
        let n = this.readInt(s, void 0, !1, "bail");
        if (n !== null && this.codePointAtPos(this.state.pos) === 59)
          return ++this.state.pos, String.fromCodePoint(n);
      } else {
        let s = 0, n = !1;
        for (; s++ < 10 && this.state.pos < this.length && !(n = this.codePointAtPos(this.state.pos) == 59); )
          ++this.state.pos;
        if (n) {
          let a = this.input.slice(r, this.state.pos), o = CCe[a];
          if (++this.state.pos, o)
            return o;
        }
      }
      return this.state.pos = r, "&";
    }
    jsxReadWord() {
      let r, s = this.state.pos;
      do
        r = this.input.charCodeAt(++this.state.pos);
      while (fl(r) || r === 45);
      this.finishToken(140, this.input.slice(s, this.state.pos));
    }
    jsxParseIdentifier() {
      let r = this.startNode();
      return this.match(140) ? r.name = this.state.value : PS(this.state.type) ? r.name = la(this.state.type) : this.unexpected(), this.next(),
      this.finishNode(r, "JSXIdentifier");
    }
    jsxParseNamespacedName() {
      let r = this.state.startLoc, s = this.jsxParseIdentifier();
      if (!this.eat(14)) return s;
      let n = this.startNodeAt(r);
      return n.namespace = s, n.name = this.jsxParseIdentifier(), this.finishNode(n, "JSXNamespacedName");
    }
    jsxParseElementName() {
      let r = this.state.startLoc, s = this.jsxParseNamespacedName();
      if (s.type === "JSXNamespacedName")
        return s;
      for (; this.eat(16); ) {
        let n = this.startNodeAt(r);
        n.object = s, n.property = this.jsxParseIdentifier(), s = this.finishNode(n, "JSXMemberExpression");
      }
      return s;
    }
    jsxParseAttributeValue() {
      let r;
      switch (this.state.type) {
        case 5:
          return r = this.startNode(), this.setContext(Lt.brace), this.next(), r = this.jsxParseExpressionContainer(r, Lt.j_oTag), r.expression.
          type === "JSXEmptyExpression" && this.raise(Za.AttributeIsEmpty, r), r;
        case 142:
        case 133:
          return this.parseExprAtom();
        default:
          throw this.raise(Za.UnsupportedJsxValue, this.state.startLoc);
      }
    }
    jsxParseEmptyExpression() {
      let r = this.startNodeAt(this.state.lastTokEndLoc);
      return this.finishNodeAt(r, "JSXEmptyExpression", this.state.startLoc);
    }
    jsxParseSpreadChild(r) {
      return this.next(), r.expression = this.parseExpression(), this.setContext(Lt.j_expr), this.state.canStartJSXElement = !0, this.expect(
      8), this.finishNode(r, "JSXSpreadChild");
    }
    jsxParseExpressionContainer(r, s) {
      if (this.match(8))
        r.expression = this.jsxParseEmptyExpression();
      else {
        let n = this.parseExpression();
        r.expression = n;
      }
      return this.setContext(s), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(r, "JSXExpressionContainer");
    }
    jsxParseAttribute() {
      let r = this.startNode();
      return this.match(5) ? (this.setContext(Lt.brace), this.next(), this.expect(21), r.argument = this.parseMaybeAssignAllowIn(), this.setContext(
      Lt.j_oTag), this.state.canStartJSXElement = !0, this.expect(8), this.finishNode(r, "JSXSpreadAttribute")) : (r.name = this.jsxParseNamespacedName(),
      r.value = this.eat(29) ? this.jsxParseAttributeValue() : null, this.finishNode(r, "JSXAttribute"));
    }
    jsxParseOpeningElementAt(r) {
      let s = this.startNodeAt(r);
      return this.eat(143) ? this.finishNode(s, "JSXOpeningFragment") : (s.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(
      s));
    }
    jsxParseOpeningElementAfterName(r) {
      let s = [];
      for (; !this.match(56) && !this.match(143); )
        s.push(this.jsxParseAttribute());
      return r.attributes = s, r.selfClosing = this.eat(56), this.expect(143), this.finishNode(r, "JSXOpeningElement");
    }
    jsxParseClosingElementAt(r) {
      let s = this.startNodeAt(r);
      return this.eat(143) ? this.finishNode(s, "JSXClosingFragment") : (s.name = this.jsxParseElementName(), this.expect(143), this.finishNode(
      s, "JSXClosingElement"));
    }
    jsxParseElementAt(r) {
      let s = this.startNodeAt(r), n = [], a = this.jsxParseOpeningElementAt(r), o = null;
      if (!a.selfClosing) {
        e: for (; ; )
          switch (this.state.type) {
            case 142:
              if (r = this.state.startLoc, this.next(), this.eat(56)) {
                o = this.jsxParseClosingElementAt(r);
                break e;
              }
              n.push(this.jsxParseElementAt(r));
              break;
            case 141:
              n.push(this.parseExprAtom());
              break;
            case 5: {
              let l = this.startNode();
              this.setContext(Lt.brace), this.next(), this.match(21) ? n.push(this.jsxParseSpreadChild(l)) : n.push(this.jsxParseExpressionContainer(
              l, Lt.j_expr));
              break;
            }
            default:
              this.unexpected();
          }
        aa(a) && !aa(o) && o !== null ? this.raise(Za.MissingClosingTagFragment, o) : !aa(a) && aa(o) ? this.raise(Za.MissingClosingTagElement,
        o, {
          openingTagName: cl(a.name)
        }) : !aa(a) && !aa(o) && cl(o.name) !== cl(a.name) && this.raise(Za.MissingClosingTagElement, o, {
          openingTagName: cl(a.name)
        });
      }
      if (aa(a) ? (s.openingFragment = a, s.closingFragment = o) : (s.openingElement = a, s.closingElement = o), s.children = n, this.match(
      47))
        throw this.raise(Za.UnwrappedAdjacentJSXElements, this.state.startLoc);
      return aa(a) ? this.finishNode(s, "JSXFragment") : this.finishNode(s, "JSXElement");
    }
    jsxParseElement() {
      let r = this.state.startLoc;
      return this.next(), this.jsxParseElementAt(r);
    }
    setContext(r) {
      let {
        context: s
      } = this.state;
      s[s.length - 1] = r;
    }
    parseExprAtom(r) {
      return this.match(141) ? this.parseLiteral(this.state.value, "JSXText") : this.match(142) ? this.jsxParseElement() : this.match(47) &&
      this.input.charCodeAt(this.state.pos) !== 33 ? (this.replaceToken(142), this.jsxParseElement()) : super.parseExprAtom(r);
    }
    skipSpace() {
      this.curContext().preserveSpace || super.skipSpace();
    }
    getTokenFromCode(r) {
      let s = this.curContext();
      if (s === Lt.j_expr) {
        this.jsxReadToken();
        return;
      }
      if (s === Lt.j_oTag || s === Lt.j_cTag) {
        if (mi(r)) {
          this.jsxReadWord();
          return;
        }
        if (r === 62) {
          ++this.state.pos, this.finishToken(143);
          return;
        }
        if ((r === 34 || r === 39) && s === Lt.j_oTag) {
          this.jsxReadString(r);
          return;
        }
      }
      if (r === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {
        ++this.state.pos, this.finishToken(142);
        return;
      }
      super.getTokenFromCode(r);
    }
    updateContext(r) {
      let {
        context: s,
        type: n
      } = this.state;
      if (n === 56 && r === 142)
        s.splice(-2, 2, Lt.j_cTag), this.state.canStartJSXElement = !1;
      else if (n === 142)
        s.push(Lt.j_oTag);
      else if (n === 143) {
        let a = s[s.length - 1];
        a === Lt.j_oTag && r === 56 || a === Lt.j_cTag ? (s.pop(), this.state.canStartJSXElement = s[s.length - 1] === Lt.j_expr) : (this.setContext(
        Lt.j_expr), this.state.canStartJSXElement = !0);
      } else
        this.state.canStartJSXElement = WAe(n);
    }
  }, "jsx"), dS = class extends vc {
    static {
      i(this, "TypeScriptScope");
    }
    constructor(...t) {
      super(...t), this.tsNames = /* @__PURE__ */ new Map();
    }
  }, hS = class extends Sc {
    static {
      i(this, "TypeScriptScopeHandler");
    }
    constructor(...t) {
      super(...t), this.importsStack = [];
    }
    createScope(t) {
      return this.importsStack.push(/* @__PURE__ */ new Set()), new dS(t);
    }
    enter(t) {
      t == 256 && this.importsStack.push(/* @__PURE__ */ new Set()), super.enter(t);
    }
    exit() {
      let t = super.exit();
      return t == 256 && this.importsStack.pop(), t;
    }
    hasImport(t, r) {
      let s = this.importsStack.length;
      if (this.importsStack[s - 1].has(t))
        return !0;
      if (!r && s > 1) {
        for (let n = 0; n < s - 1; n++)
          if (this.importsStack[n].has(t)) return !0;
      }
      return !1;
    }
    declareName(t, r, s) {
      if (r & 4096) {
        this.hasImport(t, !0) && this.parser.raise(k.VarRedeclaration, s, {
          identifierName: t
        }), this.importsStack[this.importsStack.length - 1].add(t);
        return;
      }
      let n = this.currentScope(), a = n.tsNames.get(t) || 0;
      if (r & 1024) {
        this.maybeExportDefined(n, t), n.tsNames.set(t, a | 16);
        return;
      }
      super.declareName(t, r, s), r & 2 && (r & 1 || (this.checkRedeclarationInScope(n, t, r, s), this.maybeExportDefined(n, t)), a = a | 1),
      r & 256 && (a = a | 2), r & 512 && (a = a | 4), r & 128 && (a = a | 8), a && n.tsNames.set(t, a);
    }
    isRedeclaredInScope(t, r, s) {
      let n = t.tsNames.get(r);
      if ((n & 2) > 0) {
        if (s & 256) {
          let a = !!(s & 512), o = (n & 4) > 0;
          return a !== o;
        }
        return !0;
      }
      return s & 128 && (n & 8) > 0 ? t.names.get(r) & 2 ? !!(s & 1) : !1 : s & 2 && (n & 1) > 0 ? !0 : super.isRedeclaredInScope(t, r, s);
    }
    checkLocalExport(t) {
      let {
        name: r
      } = t;
      if (this.hasImport(r)) return;
      let s = this.scopeStack.length;
      for (let n = s - 1; n >= 0; n--) {
        let o = this.scopeStack[n].tsNames.get(r);
        if ((o & 1) > 0 || (o & 16) > 0)
          return;
      }
      super.checkLocalExport(t);
    }
  }, DCe = /* @__PURE__ */ i((e, t) => hasOwnProperty.call(e, t) && e[t], "getOwn$1"), dB = /* @__PURE__ */ i((e) => e.type === "Parenthesiz\
edExpression" ? dB(e.expression) : e, "unwrapParenthesizedExpression"), mS = class extends pS {
    static {
      i(this, "LValParser");
    }
    toAssignable(t, r = !1) {
      var s, n;
      let a;
      switch ((t.type === "ParenthesizedExpression" || (s = t.extra) != null && s.parenthesized) && (a = dB(t), r ? a.type === "Identifier" ?
      this.expressionScope.recordArrowParameterBindingError(k.InvalidParenthesizedAssignment, t) : a.type !== "MemberExpression" && !this.isOptionalMemberExpression(
      a) && this.raise(k.InvalidParenthesizedAssignment, t) : this.raise(k.InvalidParenthesizedAssignment, t)), t.type) {
        case "Identifier":
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
        case "RestElement":
          break;
        case "ObjectExpression":
          t.type = "ObjectPattern";
          for (let l = 0, u = t.properties.length, c = u - 1; l < u; l++) {
            var o;
            let f = t.properties[l], p = l === c;
            this.toAssignableObjectExpressionProp(f, p, r), p && f.type === "RestElement" && (o = t.extra) != null && o.trailingCommaLoc && this.
            raise(k.RestTrailingComma, t.extra.trailingCommaLoc);
          }
          break;
        case "ObjectProperty": {
          let {
            key: l,
            value: u
          } = t;
          this.isPrivateName(l) && this.classScope.usePrivateName(this.getPrivateNameSV(l), l.loc.start), this.toAssignable(u, r);
          break;
        }
        case "SpreadElement":
          throw new Error("Internal @babel/parser error (this is a bug, please report it). SpreadElement should be converted by .toAssignabl\
e's caller.");
        case "ArrayExpression":
          t.type = "ArrayPattern", this.toAssignableList(t.elements, (n = t.extra) == null ? void 0 : n.trailingCommaLoc, r);
          break;
        case "AssignmentExpression":
          t.operator !== "=" && this.raise(k.MissingEqInAssignment, t.left.loc.end), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(
          t.left, r);
          break;
        case "ParenthesizedExpression":
          this.toAssignable(a, r);
          break;
      }
    }
    toAssignableObjectExpressionProp(t, r, s) {
      if (t.type === "ObjectMethod")
        this.raise(t.kind === "get" || t.kind === "set" ? k.PatternHasAccessor : k.PatternHasMethod, t.key);
      else if (t.type === "SpreadElement") {
        t.type = "RestElement";
        let n = t.argument;
        this.checkToRestConversion(n, !1), this.toAssignable(n, s), r || this.raise(k.RestTrailingComma, t);
      } else
        this.toAssignable(t, s);
    }
    toAssignableList(t, r, s) {
      let n = t.length - 1;
      for (let a = 0; a <= n; a++) {
        let o = t[a];
        if (o) {
          if (o.type === "SpreadElement") {
            o.type = "RestElement";
            let l = o.argument;
            this.checkToRestConversion(l, !0), this.toAssignable(l, s);
          } else
            this.toAssignable(o, s);
          o.type === "RestElement" && (a < n ? this.raise(k.RestTrailingComma, o) : r && this.raise(k.RestTrailingComma, r));
        }
      }
    }
    isAssignable(t, r) {
      switch (t.type) {
        case "Identifier":
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
        case "RestElement":
          return !0;
        case "ObjectExpression": {
          let s = t.properties.length - 1;
          return t.properties.every((n, a) => n.type !== "ObjectMethod" && (a === s || n.type !== "SpreadElement") && this.isAssignable(n));
        }
        case "ObjectProperty":
          return this.isAssignable(t.value);
        case "SpreadElement":
          return this.isAssignable(t.argument);
        case "ArrayExpression":
          return t.elements.every((s) => s === null || this.isAssignable(s));
        case "AssignmentExpression":
          return t.operator === "=";
        case "ParenthesizedExpression":
          return this.isAssignable(t.expression);
        case "MemberExpression":
        case "OptionalMemberExpression":
          return !r;
        default:
          return !1;
      }
    }
    toReferencedList(t, r) {
      return t;
    }
    toReferencedListDeep(t, r) {
      this.toReferencedList(t, r);
      for (let s of t)
        s?.type === "ArrayExpression" && this.toReferencedListDeep(s.elements);
    }
    parseSpread(t) {
      let r = this.startNode();
      return this.next(), r.argument = this.parseMaybeAssignAllowIn(t, void 0), this.finishNode(r, "SpreadElement");
    }
    parseRestBinding() {
      let t = this.startNode();
      return this.next(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");
    }
    parseBindingAtom() {
      switch (this.state.type) {
        case 0: {
          let t = this.startNode();
          return this.next(), t.elements = this.parseBindingList(3, 93, 1), this.finishNode(t, "ArrayPattern");
        }
        case 5:
          return this.parseObjectLike(8, !0);
      }
      return this.parseIdentifier();
    }
    parseBindingList(t, r, s) {
      let n = s & 1, a = [], o = !0;
      for (; !this.eat(t); )
        if (o ? o = !1 : this.expect(12), n && this.match(12))
          a.push(null);
        else {
          if (this.eat(t))
            break;
          if (this.match(21)) {
            if (a.push(this.parseAssignableListItemTypes(this.parseRestBinding(), s)), !this.checkCommaAfterRest(r)) {
              this.expect(t);
              break;
            }
          } else {
            let l = [];
            for (this.match(26) && this.hasPlugin("decorators") && this.raise(k.UnsupportedParameterDecorator, this.state.startLoc); this.match(
            26); )
              l.push(this.parseDecorator());
            a.push(this.parseAssignableListItem(s, l));
          }
        }
      return a;
    }
    parseBindingRestProperty(t) {
      return this.next(), t.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(t, "RestElement");
    }
    parseBindingProperty() {
      let t = this.startNode(), {
        type: r,
        startLoc: s
      } = this.state;
      return r === 21 ? this.parseBindingRestProperty(t) : (r === 138 ? (this.expectPlugin("destructuringPrivate", s), this.classScope.usePrivateName(
      this.state.value, s), t.key = this.parsePrivateName()) : this.parsePropertyName(t), t.method = !1, this.parseObjPropValue(t, s, !1, !1,
      !0, !1));
    }
    parseAssignableListItem(t, r) {
      let s = this.parseMaybeDefault();
      this.parseAssignableListItemTypes(s, t);
      let n = this.parseMaybeDefault(s.loc.start, s);
      return r.length && (s.decorators = r), n;
    }
    parseAssignableListItemTypes(t, r) {
      return t;
    }
    parseMaybeDefault(t, r) {
      var s, n;
      if ((s = t) != null || (t = this.state.startLoc), r = (n = r) != null ? n : this.parseBindingAtom(), !this.eat(29)) return r;
      let a = this.startNodeAt(t);
      return a.left = r, a.right = this.parseMaybeAssignAllowIn(), this.finishNode(a, "AssignmentPattern");
    }
    isValidLVal(t, r, s) {
      return DCe({
        AssignmentPattern: "left",
        RestElement: "argument",
        ObjectProperty: "value",
        ParenthesizedExpression: "expression",
        ArrayPattern: "elements",
        ObjectPattern: "properties"
      }, t);
    }
    isOptionalMemberExpression(t) {
      return t.type === "OptionalMemberExpression";
    }
    checkLVal(t, {
      in: r,
      binding: s = 64,
      checkClashes: n = !1,
      strictModeChanged: a = !1,
      hasParenthesizedAncestor: o = !1
    }) {
      var l;
      let u = t.type;
      if (this.isObjectMethod(t)) return;
      let c = this.isOptionalMemberExpression(t);
      if (c || u === "MemberExpression") {
        c && (this.expectPlugin("optionalChainingAssign", t.loc.start), r.type !== "AssignmentExpression" && this.raise(k.InvalidLhsOptionalChaining,
        t, {
          ancestor: r
        })), s !== 64 && this.raise(k.InvalidPropertyBindingPattern, t);
        return;
      }
      if (u === "Identifier") {
        this.checkIdentifier(t, s, a);
        let {
          name: b
        } = t;
        n && (n.has(b) ? this.raise(k.ParamDupe, t) : n.add(b));
        return;
      }
      let f = this.isValidLVal(u, !(o || (l = t.extra) != null && l.parenthesized) && r.type === "AssignmentExpression", s);
      if (f === !0) return;
      if (f === !1) {
        let b = s === 64 ? k.InvalidLhs : k.InvalidLhsBinding;
        this.raise(b, t, {
          ancestor: r
        });
        return;
      }
      let [p, d] = Array.isArray(f) ? f : [f, u === "ParenthesizedExpression"], m = u === "ArrayPattern" || u === "ObjectPattern" ? {
        type: u
      } : r;
      for (let b of [].concat(t[p]))
        b && this.checkLVal(b, {
          in: m,
          binding: s,
          checkClashes: n,
          strictModeChanged: a,
          hasParenthesizedAncestor: d
        });
    }
    checkIdentifier(t, r, s = !1) {
      this.state.strict && (s ? oB(t.name, this.inModule) : aB(t.name)) && (r === 64 ? this.raise(k.StrictEvalArguments, t, {
        referenceName: t.name
      }) : this.raise(k.StrictEvalArgumentsBinding, t, {
        bindingName: t.name
      })), r & 8192 && t.name === "let" && this.raise(k.LetInLexicalBinding, t), r & 64 || this.declareNameFromIdentifier(t, r);
    }
    declareNameFromIdentifier(t, r) {
      this.scope.declareName(t.name, r, t.loc.start);
    }
    checkToRestConversion(t, r) {
      switch (t.type) {
        case "ParenthesizedExpression":
          this.checkToRestConversion(t.expression, r);
          break;
        case "Identifier":
        case "MemberExpression":
          break;
        case "ArrayExpression":
        case "ObjectExpression":
          if (r) break;
        default:
          this.raise(k.InvalidRestAssignmentPattern, t);
      }
    }
    checkCommaAfterRest(t) {
      return this.match(12) ? (this.raise(this.lookaheadCharCode() === t ? k.RestTrailingComma : k.ElementAfterRest, this.state.startLoc), !0) :
      !1;
    }
  }, ICe = /* @__PURE__ */ i((e, t) => hasOwnProperty.call(e, t) && e[t], "getOwn");
  function _Ce(e) {
    if (e == null)
      throw new Error(`Unexpected ${e} value.`);
    return e;
  }
  i(_Ce, "nonNull");
  function K3(e) {
    if (!e)
      throw new Error("Assert fail");
  }
  i(K3, "assert");
  var Te = yi`typescript`({
    AbstractMethodHasImplementation: /* @__PURE__ */ i(({
      methodName: e
    }) => `Method '${e}' cannot have an implementation because it is marked abstract.`, "AbstractMethodHasImplementation"),
    AbstractPropertyHasInitializer: /* @__PURE__ */ i(({
      propertyName: e
    }) => `Property '${e}' cannot have an initializer because it is marked abstract.`, "AbstractPropertyHasInitializer"),
    AccesorCannotDeclareThisParameter: "'get' and 'set' accessors cannot declare 'this' parameters.",
    AccesorCannotHaveTypeParameters: "An accessor cannot have type parameters.",
    AccessorCannotBeOptional: "An 'accessor' property cannot be declared optional.",
    ClassMethodHasDeclare: "Class methods cannot have the 'declare' modifier.",
    ClassMethodHasReadonly: "Class methods cannot have the 'readonly' modifier.",
    ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: "A 'const' initializer in an ambient context must be a string or nu\
meric literal or literal enum reference.",
    ConstructorHasTypeParameters: "Type parameters cannot appear on a constructor declaration.",
    DeclareAccessor: /* @__PURE__ */ i(({
      kind: e
    }) => `'declare' is not allowed in ${e}ters.`, "DeclareAccessor"),
    DeclareClassFieldHasInitializer: "Initializers are not allowed in ambient contexts.",
    DeclareFunctionHasImplementation: "An implementation cannot be declared in ambient contexts.",
    DuplicateAccessibilityModifier: /* @__PURE__ */ i(({
      modifier: e
    }) => "Accessibility modifier already seen.", "DuplicateAccessibilityModifier"),
    DuplicateModifier: /* @__PURE__ */ i(({
      modifier: e
    }) => `Duplicate modifier: '${e}'.`, "DuplicateModifier"),
    EmptyHeritageClauseType: /* @__PURE__ */ i(({
      token: e
    }) => `'${e}' list cannot be empty.`, "EmptyHeritageClauseType"),
    EmptyTypeArguments: "Type argument list cannot be empty.",
    EmptyTypeParameters: "Type parameter list cannot be empty.",
    ExpectedAmbientAfterExportDeclare: "'export declare' must be followed by an ambient declaration.",
    ImportAliasHasImportType: "An import alias can not use 'import type'.",
    ImportReflectionHasImportType: "An `import module` declaration can not use `type` modifier",
    IncompatibleModifiers: /* @__PURE__ */ i(({
      modifiers: e
    }) => `'${e[0]}' modifier cannot be used with '${e[1]}' modifier.`, "IncompatibleModifiers"),
    IndexSignatureHasAbstract: "Index signatures cannot have the 'abstract' modifier.",
    IndexSignatureHasAccessibility: /* @__PURE__ */ i(({
      modifier: e
    }) => `Index signatures cannot have an accessibility modifier ('${e}').`, "IndexSignatureHasAccessibility"),
    IndexSignatureHasDeclare: "Index signatures cannot have the 'declare' modifier.",
    IndexSignatureHasOverride: "'override' modifier cannot appear on an index signature.",
    IndexSignatureHasStatic: "Index signatures cannot have the 'static' modifier.",
    InitializerNotAllowedInAmbientContext: "Initializers are not allowed in ambient contexts.",
    InvalidModifierOnTypeMember: /* @__PURE__ */ i(({
      modifier: e
    }) => `'${e}' modifier cannot appear on a type member.`, "InvalidModifierOnTypeMember"),
    InvalidModifierOnTypeParameter: /* @__PURE__ */ i(({
      modifier: e
    }) => `'${e}' modifier cannot appear on a type parameter.`, "InvalidModifierOnTypeParameter"),
    InvalidModifierOnTypeParameterPositions: /* @__PURE__ */ i(({
      modifier: e
    }) => `'${e}' modifier can only appear on a type parameter of a class, interface or type alias.`, "InvalidModifierOnTypeParameterPositio\
ns"),
    InvalidModifiersOrder: /* @__PURE__ */ i(({
      orderedModifiers: e
    }) => `'${e[0]}' modifier must precede '${e[1]}' modifier.`, "InvalidModifiersOrder"),
    InvalidPropertyAccessAfterInstantiationExpression: "Invalid property access after an instantiation expression. You can either wrap the i\
nstantiation expression in parentheses, or delete the type arguments.",
    InvalidTupleMemberLabel: "Tuple members must be labeled with a simple identifier.",
    MissingInterfaceName: "'interface' declarations must be followed by an identifier.",
    NonAbstractClassHasAbstractMethod: "Abstract methods can only appear within an abstract class.",
    NonClassMethodPropertyHasAbstractModifer: "'abstract' modifier can only appear on a class, method, or property declaration.",
    OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",
    OverrideNotInSubClass: "This member cannot have an 'override' modifier because its containing class does not extend another class.",
    PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",
    PrivateElementHasAbstract: "Private elements cannot have the 'abstract' modifier.",
    PrivateElementHasAccessibility: /* @__PURE__ */ i(({
      modifier: e
    }) => `Private elements cannot have an accessibility modifier ('${e}').`, "PrivateElementHasAccessibility"),
    ReadonlyForMethodSignature: "'readonly' modifier can only appear on a property declaration or index signature.",
    ReservedArrowTypeParam: "This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.",
    ReservedTypeAssertion: "This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.",
    SetAccesorCannotHaveOptionalParameter: "A 'set' accessor cannot have an optional parameter.",
    SetAccesorCannotHaveRestParameter: "A 'set' accessor cannot have rest parameter.",
    SetAccesorCannotHaveReturnType: "A 'set' accessor cannot have a return type annotation.",
    SingleTypeParameterWithoutTrailingComma: /* @__PURE__ */ i(({
      typeParameterName: e
    }) => `Single type parameter ${e} should have a trailing comma. Example usage: <${e},>.`, "SingleTypeParameterWithoutTrailingComma"),
    StaticBlockCannotHaveModifier: "Static class blocks cannot have any modifier.",
    TupleOptionalAfterType: "A labeled tuple optional element must be declared using a question mark after the name and before the colon (`n\
ame?: type`), rather than after the type (`name: type?`).",
    TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number =\
 25`.",
    TypeImportCannotSpecifyDefaultAndNamed: "A type-only import can specify a default import or named bindings, but not both.",
    TypeModifierIsUsedInTypeExports: "The 'type' modifier cannot be used on a named export when 'export type' is used on its export statemen\
t.",
    TypeModifierIsUsedInTypeImports: "The 'type' modifier cannot be used on a named import when 'import type' is used on its import statemen\
t.",
    UnexpectedParameterModifier: "A parameter property is only allowed in a constructor implementation.",
    UnexpectedReadonly: "'readonly' type modifier is only permitted on array and tuple literal types.",
    UnexpectedTypeAnnotation: "Did not expect a type annotation here.",
    UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",
    UnsupportedImportTypeArgument: "Argument in a type import must be a string literal.",
    UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",
    UnsupportedSignatureParameterKind: /* @__PURE__ */ i(({
      type: e
    }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${e}.`, "UnsupportedSignatureParameterKind")
  });
  function OCe(e) {
    switch (e) {
      case "any":
        return "TSAnyKeyword";
      case "boolean":
        return "TSBooleanKeyword";
      case "bigint":
        return "TSBigIntKeyword";
      case "never":
        return "TSNeverKeyword";
      case "number":
        return "TSNumberKeyword";
      case "object":
        return "TSObjectKeyword";
      case "string":
        return "TSStringKeyword";
      case "symbol":
        return "TSSymbolKeyword";
      case "undefined":
        return "TSUndefinedKeyword";
      case "unknown":
        return "TSUnknownKeyword";
      default:
        return;
    }
  }
  i(OCe, "keywordTypeFromName");
  function Y3(e) {
    return e === "private" || e === "public" || e === "protected";
  }
  i(Y3, "tsIsAccessModifier");
  function NCe(e) {
    return e === "in" || e === "out";
  }
  i(NCe, "tsIsVarianceAnnotations");
  var RCe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "TypeScriptParserMixin");
    }
    constructor(...r) {
      super(...r), this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {
        allowedModifiers: ["in", "out"],
        disallowedModifiers: ["const", "public", "private", "protected", "readonly", "declare", "abstract", "override"],
        errorTemplate: Te.InvalidModifierOnTypeParameter
      }), this.tsParseConstModifier = this.tsParseModifiers.bind(this, {
        allowedModifiers: ["const"],
        disallowedModifiers: ["in", "out"],
        errorTemplate: Te.InvalidModifierOnTypeParameterPositions
      }), this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {
        allowedModifiers: ["in", "out", "const"],
        disallowedModifiers: ["public", "private", "protected", "readonly", "declare", "abstract", "override"],
        errorTemplate: Te.InvalidModifierOnTypeParameter
      });
    }
    getScopeHandler() {
      return hS;
    }
    tsIsIdentifier() {
      return Tt(this.state.type);
    }
    tsTokenCanFollowModifier() {
      return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(138) || this.isLiteralPropertyName()) && !this.
      hasPrecedingLineBreak();
    }
    tsNextTokenCanFollowModifier() {
      return this.next(), this.tsTokenCanFollowModifier();
    }
    tsParseModifier(r, s) {
      if (!Tt(this.state.type) && this.state.type !== 58 && this.state.type !== 75)
        return;
      let n = this.state.value;
      if (r.indexOf(n) !== -1) {
        if (s && this.tsIsStartOfStaticBlocks())
          return;
        if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)))
          return n;
      }
    }
    tsParseModifiers({
      allowedModifiers: r,
      disallowedModifiers: s,
      stopOnStartOfClassStaticBlock: n,
      errorTemplate: a = Te.InvalidModifierOnTypeMember
    }, o) {
      let l = /* @__PURE__ */ i((c, f, p, d) => {
        f === p && o[d] && this.raise(Te.InvalidModifiersOrder, c, {
          orderedModifiers: [p, d]
        });
      }, "enforceOrder"), u = /* @__PURE__ */ i((c, f, p, d) => {
        (o[p] && f === d || o[d] && f === p) && this.raise(Te.IncompatibleModifiers, c, {
          modifiers: [p, d]
        });
      }, "incompatible");
      for (; ; ) {
        let {
          startLoc: c
        } = this.state, f = this.tsParseModifier(r.concat(s ?? []), n);
        if (!f) break;
        Y3(f) ? o.accessibility ? this.raise(Te.DuplicateAccessibilityModifier, c, {
          modifier: f
        }) : (l(c, f, f, "override"), l(c, f, f, "static"), l(c, f, f, "readonly"), o.accessibility = f) : NCe(f) ? (o[f] && this.raise(Te.DuplicateModifier,
        c, {
          modifier: f
        }), o[f] = !0, l(c, f, "in", "out")) : (hasOwnProperty.call(o, f) ? this.raise(Te.DuplicateModifier, c, {
          modifier: f
        }) : (l(c, f, "static", "readonly"), l(c, f, "static", "override"), l(c, f, "override", "readonly"), l(c, f, "abstract", "override"),
        u(c, f, "declare", "override"), u(c, f, "static", "abstract")), o[f] = !0), s != null && s.includes(f) && this.raise(a, c, {
          modifier: f
        });
      }
    }
    tsIsListTerminator(r) {
      switch (r) {
        case "EnumMembers":
        case "TypeMembers":
          return this.match(8);
        case "HeritageClauseElement":
          return this.match(5);
        case "TupleElementTypes":
          return this.match(3);
        case "TypeParametersOrArguments":
          return this.match(48);
      }
    }
    tsParseList(r, s) {
      let n = [];
      for (; !this.tsIsListTerminator(r); )
        n.push(s());
      return n;
    }
    tsParseDelimitedList(r, s, n) {
      return _Ce(this.tsParseDelimitedListWorker(r, s, !0, n));
    }
    tsParseDelimitedListWorker(r, s, n, a) {
      let o = [], l = -1;
      for (; !this.tsIsListTerminator(r); ) {
        l = -1;
        let u = s();
        if (u == null)
          return;
        if (o.push(u), this.eat(12)) {
          l = this.state.lastTokStartLoc.index;
          continue;
        }
        if (this.tsIsListTerminator(r))
          break;
        n && this.expect(12);
        return;
      }
      return a && (a.value = l), o;
    }
    tsParseBracketedList(r, s, n, a, o) {
      a || (n ? this.expect(0) : this.expect(47));
      let l = this.tsParseDelimitedList(r, s, o);
      return n ? this.expect(3) : this.expect(48), l;
    }
    tsParseImportType() {
      let r = this.startNode();
      return this.expect(83), this.expect(10), this.match(133) || this.raise(Te.UnsupportedImportTypeArgument, this.state.startLoc), r.argument =
      super.parseExprAtom(), (this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) && (r.options = null), this.eat(12) &&
      (this.expectImportAttributesPlugin(), this.match(11) || (r.options = super.parseMaybeAssignAllowIn(), this.eat(12))), this.expect(11),
      this.eat(16) && (r.qualifier = this.tsParseEntityName()), this.match(47) && (r.typeParameters = this.tsParseTypeArguments()), this.finishNode(
      r, "TSImportType");
    }
    tsParseEntityName(r = !0) {
      let s = this.parseIdentifier(r);
      for (; this.eat(16); ) {
        let n = this.startNodeAtNode(s);
        n.left = s, n.right = this.parseIdentifier(r), s = this.finishNode(n, "TSQualifiedName");
      }
      return s;
    }
    tsParseTypeReference() {
      let r = this.startNode();
      return r.typeName = this.tsParseEntityName(), !this.hasPrecedingLineBreak() && this.match(47) && (r.typeParameters = this.tsParseTypeArguments()),
      this.finishNode(r, "TSTypeReference");
    }
    tsParseThisTypePredicate(r) {
      this.next();
      let s = this.startNodeAtNode(r);
      return s.parameterName = r, s.typeAnnotation = this.tsParseTypeAnnotation(!1), s.asserts = !1, this.finishNode(s, "TSTypePredicate");
    }
    tsParseThisTypeNode() {
      let r = this.startNode();
      return this.next(), this.finishNode(r, "TSThisType");
    }
    tsParseTypeQuery() {
      let r = this.startNode();
      return this.expect(87), this.match(83) ? r.exprName = this.tsParseImportType() : r.exprName = this.tsParseEntityName(), !this.hasPrecedingLineBreak() &&
      this.match(47) && (r.typeParameters = this.tsParseTypeArguments()), this.finishNode(r, "TSTypeQuery");
    }
    tsParseTypeParameter(r) {
      let s = this.startNode();
      return r(s), s.name = this.tsParseTypeParameterName(), s.constraint = this.tsEatThenParseType(81), s.default = this.tsEatThenParseType(
      29), this.finishNode(s, "TSTypeParameter");
    }
    tsTryParseTypeParameters(r) {
      if (this.match(47))
        return this.tsParseTypeParameters(r);
    }
    tsParseTypeParameters(r) {
      let s = this.startNode();
      this.match(47) || this.match(142) ? this.next() : this.unexpected();
      let n = {
        value: -1
      };
      return s.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this, r), !1, !0, n), s.params.
      length === 0 && this.raise(Te.EmptyTypeParameters, s), n.value !== -1 && this.addExtra(s, "trailingComma", n.value), this.finishNode(s,
      "TSTypeParameterDeclaration");
    }
    tsFillSignature(r, s) {
      let n = r === 19, a = "parameters", o = "typeAnnotation";
      s.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier), this.expect(10), s[a] = this.tsParseBindingListForSignature(),
      n ? s[o] = this.tsParseTypeOrTypePredicateAnnotation(r) : this.match(r) && (s[o] = this.tsParseTypeOrTypePredicateAnnotation(r));
    }
    tsParseBindingListForSignature() {
      let r = super.parseBindingList(11, 41, 2);
      for (let s of r) {
        let {
          type: n
        } = s;
        (n === "AssignmentPattern" || n === "TSParameterProperty") && this.raise(Te.UnsupportedSignatureParameterKind, s, {
          type: n
        });
      }
      return r;
    }
    tsParseTypeMemberSemicolon() {
      !this.eat(12) && !this.isLineTerminator() && this.expect(13);
    }
    tsParseSignatureMember(r, s) {
      return this.tsFillSignature(14, s), this.tsParseTypeMemberSemicolon(), this.finishNode(s, r);
    }
    tsIsUnambiguouslyIndexSignature() {
      return this.next(), Tt(this.state.type) ? (this.next(), this.match(14)) : !1;
    }
    tsTryParseIndexSignature(r) {
      if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))))
        return;
      this.expect(0);
      let s = this.parseIdentifier();
      s.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(s), this.expect(3), r.parameters = [s];
      let n = this.tsTryParseTypeAnnotation();
      return n && (r.typeAnnotation = n), this.tsParseTypeMemberSemicolon(), this.finishNode(r, "TSIndexSignature");
    }
    tsParsePropertyOrMethodSignature(r, s) {
      this.eat(17) && (r.optional = !0);
      let n = r;
      if (this.match(10) || this.match(47)) {
        s && this.raise(Te.ReadonlyForMethodSignature, r);
        let a = n;
        a.kind && this.match(47) && this.raise(Te.AccesorCannotHaveTypeParameters, this.state.curPosition()), this.tsFillSignature(14, a), this.
        tsParseTypeMemberSemicolon();
        let o = "parameters", l = "typeAnnotation";
        if (a.kind === "get")
          a[o].length > 0 && (this.raise(k.BadGetterArity, this.state.curPosition()), this.isThisParam(a[o][0]) && this.raise(Te.AccesorCannotDeclareThisParameter,
          this.state.curPosition()));
        else if (a.kind === "set") {
          if (a[o].length !== 1)
            this.raise(k.BadSetterArity, this.state.curPosition());
          else {
            let u = a[o][0];
            this.isThisParam(u) && this.raise(Te.AccesorCannotDeclareThisParameter, this.state.curPosition()), u.type === "Identifier" && u.
            optional && this.raise(Te.SetAccesorCannotHaveOptionalParameter, this.state.curPosition()), u.type === "RestElement" && this.raise(
            Te.SetAccesorCannotHaveRestParameter, this.state.curPosition());
          }
          a[l] && this.raise(Te.SetAccesorCannotHaveReturnType, a[l]);
        } else
          a.kind = "method";
        return this.finishNode(a, "TSMethodSignature");
      } else {
        let a = n;
        s && (a.readonly = !0);
        let o = this.tsTryParseTypeAnnotation();
        return o && (a.typeAnnotation = o), this.tsParseTypeMemberSemicolon(), this.finishNode(a, "TSPropertySignature");
      }
    }
    tsParseTypeMember() {
      let r = this.startNode();
      if (this.match(10) || this.match(47))
        return this.tsParseSignatureMember("TSCallSignatureDeclaration", r);
      if (this.match(77)) {
        let n = this.startNode();
        return this.next(), this.match(10) || this.match(47) ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", r) : (r.key = this.
        createIdentifier(n, "new"), this.tsParsePropertyOrMethodSignature(r, !1));
      }
      this.tsParseModifiers({
        allowedModifiers: ["readonly"],
        disallowedModifiers: ["declare", "abstract", "private", "protected", "public", "static", "override"]
      }, r);
      let s = this.tsTryParseIndexSignature(r);
      return s || (super.parsePropertyName(r), !r.computed && r.key.type === "Identifier" && (r.key.name === "get" || r.key.name === "set") &&
      this.tsTokenCanFollowModifier() && (r.kind = r.key.name, super.parsePropertyName(r)), this.tsParsePropertyOrMethodSignature(r, !!r.readonly));
    }
    tsParseTypeLiteral() {
      let r = this.startNode();
      return r.members = this.tsParseObjectTypeMembers(), this.finishNode(r, "TSTypeLiteral");
    }
    tsParseObjectTypeMembers() {
      this.expect(5);
      let r = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
      return this.expect(8), r;
    }
    tsIsStartOfMappedType() {
      return this.next(), this.eat(53) ? this.isContextual(122) : (this.isContextual(122) && this.next(), !this.match(0) || (this.next(), !this.
      tsIsIdentifier()) ? !1 : (this.next(), this.match(58)));
    }
    tsParseMappedTypeParameter() {
      let r = this.startNode();
      return r.name = this.tsParseTypeParameterName(), r.constraint = this.tsExpectThenParseType(58), this.finishNode(r, "TSTypeParameter");
    }
    tsParseMappedType() {
      let r = this.startNode();
      return this.expect(5), this.match(53) ? (r.readonly = this.state.value, this.next(), this.expectContextual(122)) : this.eatContextual(
      122) && (r.readonly = !0), this.expect(0), r.typeParameter = this.tsParseMappedTypeParameter(), r.nameType = this.eatContextual(93) ? this.
      tsParseType() : null, this.expect(3), this.match(53) ? (r.optional = this.state.value, this.next(), this.expect(17)) : this.eat(17) &&
      (r.optional = !0), r.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(8), this.finishNode(r, "TSMappedType");
    }
    tsParseTupleType() {
      let r = this.startNode();
      r.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), !0, !1);
      let s = !1;
      return r.elementTypes.forEach((n) => {
        let {
          type: a
        } = n;
        s && a !== "TSRestType" && a !== "TSOptionalType" && !(a === "TSNamedTupleMember" && n.optional) && this.raise(Te.OptionalTypeBeforeRequired,
        n), s || (s = a === "TSNamedTupleMember" && n.optional || a === "TSOptionalType");
      }), this.finishNode(r, "TSTupleType");
    }
    tsParseTupleElementType() {
      let {
        startLoc: r
      } = this.state, s = this.eat(21), n, a, o, l, c = pn(this.state.type) ? this.lookaheadCharCode() : null;
      if (c === 58)
        n = !0, o = !1, a = this.parseIdentifier(!0), this.expect(14), l = this.tsParseType();
      else if (c === 63) {
        o = !0;
        let f = this.state.startLoc, p = this.state.value, d = this.tsParseNonArrayType();
        this.lookaheadCharCode() === 58 ? (n = !0, a = this.createIdentifier(this.startNodeAt(f), p), this.expect(17), this.expect(14), l = this.
        tsParseType()) : (n = !1, l = d, this.expect(17));
      } else
        l = this.tsParseType(), o = this.eat(17), n = this.eat(14);
      if (n) {
        let f;
        a ? (f = this.startNodeAtNode(a), f.optional = o, f.label = a, f.elementType = l, this.eat(17) && (f.optional = !0, this.raise(Te.TupleOptionalAfterType,
        this.state.lastTokStartLoc))) : (f = this.startNodeAtNode(l), f.optional = o, this.raise(Te.InvalidTupleMemberLabel, l), f.label = l,
        f.elementType = this.tsParseType()), l = this.finishNode(f, "TSNamedTupleMember");
      } else if (o) {
        let f = this.startNodeAtNode(l);
        f.typeAnnotation = l, l = this.finishNode(f, "TSOptionalType");
      }
      if (s) {
        let f = this.startNodeAt(r);
        f.typeAnnotation = l, l = this.finishNode(f, "TSRestType");
      }
      return l;
    }
    tsParseParenthesizedType() {
      let r = this.startNode();
      return this.expect(10), r.typeAnnotation = this.tsParseType(), this.expect(11), this.finishNode(r, "TSParenthesizedType");
    }
    tsParseFunctionOrConstructorType(r, s) {
      let n = this.startNode();
      return r === "TSConstructorType" && (n.abstract = !!s, s && this.next(), this.next()), this.tsInAllowConditionalTypesContext(() => this.
      tsFillSignature(19, n)), this.finishNode(n, r);
    }
    tsParseLiteralTypeNode() {
      let r = this.startNode();
      switch (this.state.type) {
        case 134:
        case 135:
        case 133:
        case 85:
        case 86:
          r.literal = super.parseExprAtom();
          break;
        default:
          this.unexpected();
      }
      return this.finishNode(r, "TSLiteralType");
    }
    tsParseTemplateLiteralType() {
      let r = this.startNode();
      return r.literal = super.parseTemplate(!1), this.finishNode(r, "TSLiteralType");
    }
    parseTemplateSubstitution() {
      return this.state.inType ? this.tsParseType() : super.parseTemplateSubstitution();
    }
    tsParseThisTypeOrThisTypePredicate() {
      let r = this.tsParseThisTypeNode();
      return this.isContextual(116) && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(r) : r;
    }
    tsParseNonArrayType() {
      switch (this.state.type) {
        case 133:
        case 134:
        case 135:
        case 85:
        case 86:
          return this.tsParseLiteralTypeNode();
        case 53:
          if (this.state.value === "-") {
            let r = this.startNode(), s = this.lookahead();
            return s.type !== 134 && s.type !== 135 && this.unexpected(), r.literal = this.parseMaybeUnary(), this.finishNode(r, "TSLiteralT\
ype");
          }
          break;
        case 78:
          return this.tsParseThisTypeOrThisTypePredicate();
        case 87:
          return this.tsParseTypeQuery();
        case 83:
          return this.tsParseImportType();
        case 5:
          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();
        case 0:
          return this.tsParseTupleType();
        case 10:
          return this.tsParseParenthesizedType();
        case 25:
        case 24:
          return this.tsParseTemplateLiteralType();
        default: {
          let {
            type: r
          } = this.state;
          if (Tt(r) || r === 88 || r === 84) {
            let s = r === 88 ? "TSVoidKeyword" : r === 84 ? "TSNullKeyword" : OCe(this.state.value);
            if (s !== void 0 && this.lookaheadCharCode() !== 46) {
              let n = this.startNode();
              return this.next(), this.finishNode(n, s);
            }
            return this.tsParseTypeReference();
          }
        }
      }
      this.unexpected();
    }
    tsParseArrayTypeOrHigher() {
      let r = this.tsParseNonArrayType();
      for (; !this.hasPrecedingLineBreak() && this.eat(0); )
        if (this.match(3)) {
          let s = this.startNodeAtNode(r);
          s.elementType = r, this.expect(3), r = this.finishNode(s, "TSArrayType");
        } else {
          let s = this.startNodeAtNode(r);
          s.objectType = r, s.indexType = this.tsParseType(), this.expect(3), r = this.finishNode(s, "TSIndexedAccessType");
        }
      return r;
    }
    tsParseTypeOperator() {
      let r = this.startNode(), s = this.state.value;
      return this.next(), r.operator = s, r.typeAnnotation = this.tsParseTypeOperatorOrHigher(), s === "readonly" && this.tsCheckTypeAnnotationForReadOnly(
      r), this.finishNode(r, "TSTypeOperator");
    }
    tsCheckTypeAnnotationForReadOnly(r) {
      switch (r.typeAnnotation.type) {
        case "TSTupleType":
        case "TSArrayType":
          return;
        default:
          this.raise(Te.UnexpectedReadonly, r);
      }
    }
    tsParseInferType() {
      let r = this.startNode();
      this.expectContextual(115);
      let s = this.startNode();
      return s.name = this.tsParseTypeParameterName(), s.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType()), r.typeParameter =
      this.finishNode(s, "TSTypeParameter"), this.finishNode(r, "TSInferType");
    }
    tsParseConstraintForInferType() {
      if (this.eat(81)) {
        let r = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());
        if (this.state.inDisallowConditionalTypesContext || !this.match(17))
          return r;
      }
    }
    tsParseTypeOperatorOrHigher() {
      return zAe(this.state.type) && !this.state.containsEsc ? this.tsParseTypeOperator() : this.isContextual(115) ? this.tsParseInferType() :
      this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());
    }
    tsParseUnionOrIntersectionType(r, s, n) {
      let a = this.startNode(), o = this.eat(n), l = [];
      do
        l.push(s());
      while (this.eat(n));
      return l.length === 1 && !o ? l[0] : (a.types = l, this.finishNode(a, r));
    }
    tsParseIntersectionTypeOrHigher() {
      return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), 45);
    }
    tsParseUnionTypeOrHigher() {
      return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), 43);
    }
    tsIsStartOfFunctionType() {
      return this.match(47) ? !0 : this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
    }
    tsSkipParameterStart() {
      if (Tt(this.state.type) || this.match(78))
        return this.next(), !0;
      if (this.match(5)) {
        let {
          errors: r
        } = this.state, s = r.length;
        try {
          return this.parseObjectLike(8, !0), r.length === s;
        } catch {
          return !1;
        }
      }
      if (this.match(0)) {
        this.next();
        let {
          errors: r
        } = this.state, s = r.length;
        try {
          return super.parseBindingList(3, 93, 1), r.length === s;
        } catch {
          return !1;
        }
      }
      return !1;
    }
    tsIsUnambiguouslyStartOfFunctionType() {
      return this.next(), !!(this.match(11) || this.match(21) || this.tsSkipParameterStart() && (this.match(14) || this.match(12) || this.match(
      17) || this.match(29) || this.match(11) && (this.next(), this.match(19))));
    }
    tsParseTypeOrTypePredicateAnnotation(r) {
      return this.tsInType(() => {
        let s = this.startNode();
        this.expect(r);
        let n = this.startNode(), a = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));
        if (a && this.match(78)) {
          let u = this.tsParseThisTypeOrThisTypePredicate();
          return u.type === "TSThisType" ? (n.parameterName = u, n.asserts = !0, n.typeAnnotation = null, u = this.finishNode(n, "TSTypePred\
icate")) : (this.resetStartLocationFromNode(u, n), u.asserts = !0), s.typeAnnotation = u, this.finishNode(s, "TSTypeAnnotation");
        }
        let o = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));
        if (!o)
          return a ? (n.parameterName = this.parseIdentifier(), n.asserts = a, n.typeAnnotation = null, s.typeAnnotation = this.finishNode(n,
          "TSTypePredicate"), this.finishNode(s, "TSTypeAnnotation")) : this.tsParseTypeAnnotation(!1, s);
        let l = this.tsParseTypeAnnotation(!1);
        return n.parameterName = o, n.typeAnnotation = l, n.asserts = a, s.typeAnnotation = this.finishNode(n, "TSTypePredicate"), this.finishNode(
        s, "TSTypeAnnotation");
      });
    }
    tsTryParseTypeOrTypePredicateAnnotation() {
      if (this.match(14))
        return this.tsParseTypeOrTypePredicateAnnotation(14);
    }
    tsTryParseTypeAnnotation() {
      if (this.match(14))
        return this.tsParseTypeAnnotation();
    }
    tsTryParseType() {
      return this.tsEatThenParseType(14);
    }
    tsParseTypePredicatePrefix() {
      let r = this.parseIdentifier();
      if (this.isContextual(116) && !this.hasPrecedingLineBreak())
        return this.next(), r;
    }
    tsParseTypePredicateAsserts() {
      if (this.state.type !== 109)
        return !1;
      let r = this.state.containsEsc;
      return this.next(), !Tt(this.state.type) && !this.match(78) ? !1 : (r && this.raise(k.InvalidEscapedReservedWord, this.state.lastTokStartLoc,
      {
        reservedWord: "asserts"
      }), !0);
    }
    tsParseTypeAnnotation(r = !0, s = this.startNode()) {
      return this.tsInType(() => {
        r && this.expect(14), s.typeAnnotation = this.tsParseType();
      }), this.finishNode(s, "TSTypeAnnotation");
    }
    tsParseType() {
      K3(this.state.inType);
      let r = this.tsParseNonConditionalType();
      if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81))
        return r;
      let s = this.startNodeAtNode(r);
      return s.checkType = r, s.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType()), this.expect(
      17), s.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType()), this.expect(14), s.falseType = this.tsInAllowConditionalTypesContext(
      () => this.tsParseType()), this.finishNode(s, "TSConditionalType");
    }
    isAbstractConstructorSignature() {
      return this.isContextual(124) && this.lookahead().type === 77;
    }
    tsParseNonConditionalType() {
      return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(77) ? this.tsParseFunctionOrConstructorType(
      "TSConstructorType") : this.isAbstractConstructorSignature() ? this.tsParseFunctionOrConstructorType("TSConstructorType", !0) : this.tsParseUnionTypeOrHigher();
    }
    tsParseTypeAssertion() {
      this.getPluginOption("typescript", "disallowAmbiguousJSXLike") && this.raise(Te.ReservedTypeAssertion, this.state.startLoc);
      let r = this.startNode();
      return r.typeAnnotation = this.tsInType(() => (this.next(), this.match(75) ? this.tsParseTypeReference() : this.tsParseType())), this.
      expect(48), r.expression = this.parseMaybeUnary(), this.finishNode(r, "TSTypeAssertion");
    }
    tsParseHeritageClause(r) {
      let s = this.state.startLoc, n = this.tsParseDelimitedList("HeritageClauseElement", () => {
        let a = this.startNode();
        return a.expression = this.tsParseEntityName(), this.match(47) && (a.typeParameters = this.tsParseTypeArguments()), this.finishNode(
        a, "TSExpressionWithTypeArguments");
      });
      return n.length || this.raise(Te.EmptyHeritageClauseType, s, {
        token: r
      }), n;
    }
    tsParseInterfaceDeclaration(r, s = {}) {
      if (this.hasFollowingLineBreak()) return null;
      this.expectContextual(129), s.declare && (r.declare = !0), Tt(this.state.type) ? (r.id = this.parseIdentifier(), this.checkIdentifier(
      r.id, 130)) : (r.id = null, this.raise(Te.MissingInterfaceName, this.state.startLoc)), r.typeParameters = this.tsTryParseTypeParameters(
      this.tsParseInOutConstModifiers), this.eat(81) && (r.extends = this.tsParseHeritageClause("extends"));
      let n = this.startNode();
      return n.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), r.body = this.finishNode(n, "TSInterfaceBody"), this.finishNode(
      r, "TSInterfaceDeclaration");
    }
    tsParseTypeAliasDeclaration(r) {
      return r.id = this.parseIdentifier(), this.checkIdentifier(r.id, 2), r.typeAnnotation = this.tsInType(() => {
        if (r.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers), this.expect(29), this.isContextual(114) && this.lookahead().
        type !== 16) {
          let s = this.startNode();
          return this.next(), this.finishNode(s, "TSIntrinsicKeyword");
        }
        return this.tsParseType();
      }), this.semicolon(), this.finishNode(r, "TSTypeAliasDeclaration");
    }
    tsInNoContext(r) {
      let s = this.state.context;
      this.state.context = [s[0]];
      try {
        return r();
      } finally {
        this.state.context = s;
      }
    }
    tsInType(r) {
      let s = this.state.inType;
      this.state.inType = !0;
      try {
        return r();
      } finally {
        this.state.inType = s;
      }
    }
    tsInDisallowConditionalTypesContext(r) {
      let s = this.state.inDisallowConditionalTypesContext;
      this.state.inDisallowConditionalTypesContext = !0;
      try {
        return r();
      } finally {
        this.state.inDisallowConditionalTypesContext = s;
      }
    }
    tsInAllowConditionalTypesContext(r) {
      let s = this.state.inDisallowConditionalTypesContext;
      this.state.inDisallowConditionalTypesContext = !1;
      try {
        return r();
      } finally {
        this.state.inDisallowConditionalTypesContext = s;
      }
    }
    tsEatThenParseType(r) {
      if (this.match(r))
        return this.tsNextThenParseType();
    }
    tsExpectThenParseType(r) {
      return this.tsInType(() => (this.expect(r), this.tsParseType()));
    }
    tsNextThenParseType() {
      return this.tsInType(() => (this.next(), this.tsParseType()));
    }
    tsParseEnumMember() {
      let r = this.startNode();
      return r.id = this.match(133) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(!0), this.eat(29) && (r.initializer =
      super.parseMaybeAssignAllowIn()), this.finishNode(r, "TSEnumMember");
    }
    tsParseEnumDeclaration(r, s = {}) {
      return s.const && (r.const = !0), s.declare && (r.declare = !0), this.expectContextual(126), r.id = this.parseIdentifier(), this.checkIdentifier(
      r.id, r.const ? 8971 : 8459), this.expect(5), r.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)),
      this.expect(8), this.finishNode(r, "TSEnumDeclaration");
    }
    tsParseModuleBlock() {
      let r = this.startNode();
      return this.scope.enter(0), this.expect(5), super.parseBlockOrModuleBlockBody(r.body = [], void 0, !0, 8), this.scope.exit(), this.finishNode(
      r, "TSModuleBlock");
    }
    tsParseModuleOrNamespaceDeclaration(r, s = !1) {
      if (r.id = this.parseIdentifier(), s || this.checkIdentifier(r.id, 1024), this.eat(16)) {
        let n = this.startNode();
        this.tsParseModuleOrNamespaceDeclaration(n, !0), r.body = n;
      } else
        this.scope.enter(256), this.prodParam.enter(0), r.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();
      return this.finishNode(r, "TSModuleDeclaration");
    }
    tsParseAmbientExternalModuleDeclaration(r) {
      return this.isContextual(112) ? (r.global = !0, r.id = this.parseIdentifier()) : this.match(133) ? r.id = super.parseStringLiteral(this.
      state.value) : this.unexpected(), this.match(5) ? (this.scope.enter(256), this.prodParam.enter(0), r.body = this.tsParseModuleBlock(),
      this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(r, "TSModuleDeclaration");
    }
    tsParseImportEqualsDeclaration(r, s, n) {
      r.isExport = n || !1, r.id = s || this.parseIdentifier(), this.checkIdentifier(r.id, 4096), this.expect(29);
      let a = this.tsParseModuleReference();
      return r.importKind === "type" && a.type !== "TSExternalModuleReference" && this.raise(Te.ImportAliasHasImportType, a), r.moduleReference =
      a, this.semicolon(), this.finishNode(r, "TSImportEqualsDeclaration");
    }
    tsIsExternalModuleReference() {
      return this.isContextual(119) && this.lookaheadCharCode() === 40;
    }
    tsParseModuleReference() {
      return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(!1);
    }
    tsParseExternalModuleReference() {
      let r = this.startNode();
      return this.expectContextual(119), this.expect(10), this.match(133) || this.unexpected(), r.expression = super.parseExprAtom(), this.expect(
      11), this.sawUnambiguousESM = !0, this.finishNode(r, "TSExternalModuleReference");
    }
    tsLookAhead(r) {
      let s = this.state.clone(), n = r();
      return this.state = s, n;
    }
    tsTryParseAndCatch(r) {
      let s = this.tryParse((n) => r() || n());
      if (!(s.aborted || !s.node))
        return s.error && (this.state = s.failState), s.node;
    }
    tsTryParse(r) {
      let s = this.state.clone(), n = r();
      if (n !== void 0 && n !== !1)
        return n;
      this.state = s;
    }
    tsTryParseDeclare(r) {
      if (this.isLineTerminator())
        return;
      let s = this.state.type, n;
      return this.isContextual(100) && (s = 74, n = "let"), this.tsInAmbientContext(() => {
        switch (s) {
          case 68:
            return r.declare = !0, super.parseFunctionStatement(r, !1, !1);
          case 80:
            return r.declare = !0, this.parseClass(r, !0, !1);
          case 126:
            return this.tsParseEnumDeclaration(r, {
              declare: !0
            });
          case 112:
            return this.tsParseAmbientExternalModuleDeclaration(r);
          case 75:
          case 74:
            return !this.match(75) || !this.isLookaheadContextual("enum") ? (r.declare = !0, this.parseVarStatement(r, n || this.state.value,
            !0)) : (this.expect(75), this.tsParseEnumDeclaration(r, {
              const: !0,
              declare: !0
            }));
          case 129: {
            let a = this.tsParseInterfaceDeclaration(r, {
              declare: !0
            });
            if (a) return a;
          }
          default:
            if (Tt(s))
              return this.tsParseDeclaration(r, this.state.value, !0, null);
        }
      });
    }
    tsTryParseExportDeclaration() {
      return this.tsParseDeclaration(this.startNode(), this.state.value, !0, null);
    }
    tsParseExpressionStatement(r, s, n) {
      switch (s.name) {
        case "declare": {
          let a = this.tsTryParseDeclare(r);
          return a && (a.declare = !0), a;
        }
        case "global":
          if (this.match(5)) {
            this.scope.enter(256), this.prodParam.enter(0);
            let a = r;
            return a.global = !0, a.id = s, a.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(a,
            "TSModuleDeclaration");
          }
          break;
        default:
          return this.tsParseDeclaration(r, s.name, !1, n);
      }
    }
    tsParseDeclaration(r, s, n, a) {
      switch (s) {
        case "abstract":
          if (this.tsCheckLineTerminator(n) && (this.match(80) || Tt(this.state.type)))
            return this.tsParseAbstractDeclaration(r, a);
          break;
        case "module":
          if (this.tsCheckLineTerminator(n)) {
            if (this.match(133))
              return this.tsParseAmbientExternalModuleDeclaration(r);
            if (Tt(this.state.type))
              return this.tsParseModuleOrNamespaceDeclaration(r);
          }
          break;
        case "namespace":
          if (this.tsCheckLineTerminator(n) && Tt(this.state.type))
            return this.tsParseModuleOrNamespaceDeclaration(r);
          break;
        case "type":
          if (this.tsCheckLineTerminator(n) && Tt(this.state.type))
            return this.tsParseTypeAliasDeclaration(r);
          break;
      }
    }
    tsCheckLineTerminator(r) {
      return r ? this.hasFollowingLineBreak() ? !1 : (this.next(), !0) : !this.isLineTerminator();
    }
    tsTryParseGenericAsyncArrowFunction(r) {
      if (!this.match(47)) return;
      let s = this.state.maybeInArrowParameters;
      this.state.maybeInArrowParameters = !0;
      let n = this.tsTryParseAndCatch(() => {
        let a = this.startNodeAt(r);
        return a.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier), super.parseFunctionParams(a), a.returnType = this.tsTryParseTypeOrTypePredicateAnnotation(),
        this.expect(19), a;
      });
      if (this.state.maybeInArrowParameters = s, !!n)
        return super.parseArrowExpression(n, null, !0);
    }
    tsParseTypeArgumentsInExpression() {
      if (this.reScan_lt() === 47)
        return this.tsParseTypeArguments();
    }
    tsParseTypeArguments() {
      let r = this.startNode();
      return r.params = this.tsInType(() => this.tsInNoContext(() => (this.expect(47), this.tsParseDelimitedList("TypeParametersOrArguments",
      this.tsParseType.bind(this))))), r.params.length === 0 ? this.raise(Te.EmptyTypeArguments, r) : !this.state.inType && this.curContext() ===
      Lt.brace && this.reScan_lt_gt(), this.expect(48), this.finishNode(r, "TSTypeParameterInstantiation");
    }
    tsIsDeclarationStart() {
      return JAe(this.state.type);
    }
    isExportDefaultSpecifier() {
      return this.tsIsDeclarationStart() ? !1 : super.isExportDefaultSpecifier();
    }
    parseAssignableListItem(r, s) {
      let n = this.state.startLoc, a = {};
      this.tsParseModifiers({
        allowedModifiers: ["public", "private", "protected", "override", "readonly"]
      }, a);
      let o = a.accessibility, l = a.override, u = a.readonly;
      !(r & 4) && (o || u || l) && this.raise(Te.UnexpectedParameterModifier, n);
      let c = this.parseMaybeDefault();
      this.parseAssignableListItemTypes(c, r);
      let f = this.parseMaybeDefault(c.loc.start, c);
      if (o || u || l) {
        let p = this.startNodeAt(n);
        return s.length && (p.decorators = s), o && (p.accessibility = o), u && (p.readonly = u), l && (p.override = l), f.type !== "Identif\
ier" && f.type !== "AssignmentPattern" && this.raise(Te.UnsupportedParameterPropertyKind, p), p.parameter = f, this.finishNode(p, "TSParamet\
erProperty");
      }
      return s.length && (c.decorators = s), f;
    }
    isSimpleParameter(r) {
      return r.type === "TSParameterProperty" && super.isSimpleParameter(r.parameter) || super.isSimpleParameter(r);
    }
    tsDisallowOptionalPattern(r) {
      for (let s of r.params)
        s.type !== "Identifier" && s.optional && !this.state.isAmbientContext && this.raise(Te.PatternIsOptional, s);
    }
    setArrowFunctionParameters(r, s, n) {
      super.setArrowFunctionParameters(r, s, n), this.tsDisallowOptionalPattern(r);
    }
    parseFunctionBodyAndFinish(r, s, n = !1) {
      this.match(14) && (r.returnType = this.tsParseTypeOrTypePredicateAnnotation(14));
      let a = s === "FunctionDeclaration" ? "TSDeclareFunction" : s === "ClassMethod" || s === "ClassPrivateMethod" ? "TSDeclareMethod" : void 0;
      return a && !this.match(5) && this.isLineTerminator() ? this.finishNode(r, a) : a === "TSDeclareFunction" && this.state.isAmbientContext &&
      (this.raise(Te.DeclareFunctionHasImplementation, r), r.declare) ? super.parseFunctionBodyAndFinish(r, a, n) : (this.tsDisallowOptionalPattern(
      r), super.parseFunctionBodyAndFinish(r, s, n));
    }
    registerFunctionStatementId(r) {
      !r.body && r.id ? this.checkIdentifier(r.id, 1024) : super.registerFunctionStatementId(r);
    }
    tsCheckForInvalidTypeCasts(r) {
      r.forEach((s) => {
        s?.type === "TSTypeCastExpression" && this.raise(Te.UnexpectedTypeAnnotation, s.typeAnnotation);
      });
    }
    toReferencedList(r, s) {
      return this.tsCheckForInvalidTypeCasts(r), r;
    }
    parseArrayLike(r, s, n, a) {
      let o = super.parseArrayLike(r, s, n, a);
      return o.type === "ArrayExpression" && this.tsCheckForInvalidTypeCasts(o.elements), o;
    }
    parseSubscript(r, s, n, a) {
      if (!this.hasPrecedingLineBreak() && this.match(35)) {
        this.state.canStartJSXElement = !1, this.next();
        let l = this.startNodeAt(s);
        return l.expression = r, this.finishNode(l, "TSNonNullExpression");
      }
      let o = !1;
      if (this.match(18) && this.lookaheadCharCode() === 60) {
        if (n)
          return a.stop = !0, r;
        a.optionalChainMember = o = !0, this.next();
      }
      if (this.match(47) || this.match(51)) {
        let l, u = this.tsTryParseAndCatch(() => {
          if (!n && this.atPossibleAsyncArrow(r)) {
            let d = this.tsTryParseGenericAsyncArrowFunction(s);
            if (d)
              return d;
          }
          let c = this.tsParseTypeArgumentsInExpression();
          if (!c) return;
          if (o && !this.match(10)) {
            l = this.state.curPosition();
            return;
          }
          if (Fd(this.state.type)) {
            let d = super.parseTaggedTemplateExpression(r, s, a);
            return d.typeParameters = c, d;
          }
          if (!n && this.eat(10)) {
            let d = this.startNodeAt(s);
            return d.callee = r, d.arguments = this.parseCallExpressionArguments(11, !1), this.tsCheckForInvalidTypeCasts(d.arguments), d.typeParameters =
            c, a.optionalChainMember && (d.optional = o), this.finishCallExpression(d, a.optionalChainMember);
          }
          let f = this.state.type;
          if (f === 48 || f === 52 || f !== 10 && Qv(f) && !this.hasPrecedingLineBreak())
            return;
          let p = this.startNodeAt(s);
          return p.expression = r, p.typeParameters = c, this.finishNode(p, "TSInstantiationExpression");
        });
        if (l && this.unexpected(l, 10), u)
          return u.type === "TSInstantiationExpression" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40) && this.raise(
          Te.InvalidPropertyAccessAfterInstantiationExpression, this.state.startLoc), u;
      }
      return super.parseSubscript(r, s, n, a);
    }
    parseNewCallee(r) {
      var s;
      super.parseNewCallee(r);
      let {
        callee: n
      } = r;
      n.type === "TSInstantiationExpression" && !((s = n.extra) != null && s.parenthesized) && (r.typeParameters = n.typeParameters, r.callee =
      n.expression);
    }
    parseExprOp(r, s, n) {
      let a;
      if (Od(58) > n && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (a = this.isContextual(120)))) {
        let o = this.startNodeAt(s);
        return o.expression = r, o.typeAnnotation = this.tsInType(() => (this.next(), this.match(75) ? (a && this.raise(k.UnexpectedKeyword,
        this.state.startLoc, {
          keyword: "const"
        }), this.tsParseTypeReference()) : this.tsParseType())), this.finishNode(o, a ? "TSSatisfiesExpression" : "TSAsExpression"), this.reScan_lt_gt(),
        this.parseExprOp(o, s, n);
      }
      return super.parseExprOp(r, s, n);
    }
    checkReservedWord(r, s, n, a) {
      this.state.isAmbientContext || super.checkReservedWord(r, s, n, a);
    }
    checkImportReflection(r) {
      super.checkImportReflection(r), r.module && r.importKind !== "value" && this.raise(Te.ImportReflectionHasImportType, r.specifiers[0].loc.
      start);
    }
    checkDuplicateExports() {
    }
    isPotentialImportPhase(r) {
      if (super.isPotentialImportPhase(r)) return !0;
      if (this.isContextual(130)) {
        let s = this.lookaheadCharCode();
        return r ? s === 123 || s === 42 : s !== 61;
      }
      return !r && this.isContextual(87);
    }
    applyImportPhase(r, s, n, a) {
      super.applyImportPhase(r, s, n, a), s ? r.exportKind = n === "type" ? "type" : "value" : r.importKind = n === "type" || n === "typeof" ?
      n : "value";
    }
    parseImport(r) {
      if (this.match(133))
        return r.importKind = "value", super.parseImport(r);
      let s;
      if (Tt(this.state.type) && this.lookaheadCharCode() === 61)
        return r.importKind = "value", this.tsParseImportEqualsDeclaration(r);
      if (this.isContextual(130)) {
        let n = this.parseMaybeImportPhase(r, !1);
        if (this.lookaheadCharCode() === 61)
          return this.tsParseImportEqualsDeclaration(r, n);
        s = super.parseImportSpecifiersAndAfter(r, n);
      } else
        s = super.parseImport(r);
      return s.importKind === "type" && s.specifiers.length > 1 && s.specifiers[0].type === "ImportDefaultSpecifier" && this.raise(Te.TypeImportCannotSpecifyDefaultAndNamed,
      s), s;
    }
    parseExport(r, s) {
      if (this.match(83)) {
        this.next();
        let n = null;
        return this.isContextual(130) && this.isPotentialImportPhase(!1) ? n = this.parseMaybeImportPhase(r, !1) : r.importKind = "value", this.
        tsParseImportEqualsDeclaration(r, n, !0);
      } else if (this.eat(29)) {
        let n = r;
        return n.expression = super.parseExpression(), this.semicolon(), this.sawUnambiguousESM = !0, this.finishNode(n, "TSExportAssignment");
      } else if (this.eatContextual(93)) {
        let n = r;
        return this.expectContextual(128), n.id = this.parseIdentifier(), this.semicolon(), this.finishNode(n, "TSNamespaceExportDeclaration");
      } else
        return super.parseExport(r, s);
    }
    isAbstractClass() {
      return this.isContextual(124) && this.lookahead().type === 80;
    }
    parseExportDefaultExpression() {
      if (this.isAbstractClass()) {
        let r = this.startNode();
        return this.next(), r.abstract = !0, this.parseClass(r, !0, !0);
      }
      if (this.match(129)) {
        let r = this.tsParseInterfaceDeclaration(this.startNode());
        if (r) return r;
      }
      return super.parseExportDefaultExpression();
    }
    parseVarStatement(r, s, n = !1) {
      let {
        isAmbientContext: a
      } = this.state, o = super.parseVarStatement(r, s, n || a);
      if (!a) return o;
      for (let {
        id: l,
        init: u
      } of o.declarations)
        u && (s !== "const" || l.typeAnnotation ? this.raise(Te.InitializerNotAllowedInAmbientContext, u) : FCe(u, this.hasPlugin("estree")) ||
        this.raise(Te.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, u));
      return o;
    }
    parseStatementContent(r, s) {
      if (this.match(75) && this.isLookaheadContextual("enum")) {
        let n = this.startNode();
        return this.expect(75), this.tsParseEnumDeclaration(n, {
          const: !0
        });
      }
      if (this.isContextual(126))
        return this.tsParseEnumDeclaration(this.startNode());
      if (this.isContextual(129)) {
        let n = this.tsParseInterfaceDeclaration(this.startNode());
        if (n) return n;
      }
      return super.parseStatementContent(r, s);
    }
    parseAccessModifier() {
      return this.tsParseModifier(["public", "protected", "private"]);
    }
    tsHasSomeModifiers(r, s) {
      return s.some((n) => Y3(n) ? r.accessibility === n : !!r[n]);
    }
    tsIsStartOfStaticBlocks() {
      return this.isContextual(106) && this.lookaheadCharCode() === 123;
    }
    parseClassMember(r, s, n) {
      let a = ["declare", "private", "public", "protected", "override", "abstract", "readonly", "static"];
      this.tsParseModifiers({
        allowedModifiers: a,
        disallowedModifiers: ["in", "out"],
        stopOnStartOfClassStaticBlock: !0,
        errorTemplate: Te.InvalidModifierOnTypeParameterPositions
      }, s);
      let o = /* @__PURE__ */ i(() => {
        this.tsIsStartOfStaticBlocks() ? (this.next(), this.next(), this.tsHasSomeModifiers(s, a) && this.raise(Te.StaticBlockCannotHaveModifier,
        this.state.curPosition()), super.parseClassStaticBlock(r, s)) : this.parseClassMemberWithIsStatic(r, s, n, !!s.static);
      }, "callParseClassMemberWithIsStatic");
      s.declare ? this.tsInAmbientContext(o) : o();
    }
    parseClassMemberWithIsStatic(r, s, n, a) {
      let o = this.tsTryParseIndexSignature(s);
      if (o) {
        r.body.push(o), s.abstract && this.raise(Te.IndexSignatureHasAbstract, s), s.accessibility && this.raise(Te.IndexSignatureHasAccessibility,
        s, {
          modifier: s.accessibility
        }), s.declare && this.raise(Te.IndexSignatureHasDeclare, s), s.override && this.raise(Te.IndexSignatureHasOverride, s);
        return;
      }
      !this.state.inAbstractClass && s.abstract && this.raise(Te.NonAbstractClassHasAbstractMethod, s), s.override && (n.hadSuperClass || this.
      raise(Te.OverrideNotInSubClass, s)), super.parseClassMemberWithIsStatic(r, s, n, a);
    }
    parsePostMemberNameModifiers(r) {
      this.eat(17) && (r.optional = !0), r.readonly && this.match(10) && this.raise(Te.ClassMethodHasReadonly, r), r.declare && this.match(10) &&
      this.raise(Te.ClassMethodHasDeclare, r);
    }
    parseExpressionStatement(r, s, n) {
      return (s.type === "Identifier" ? this.tsParseExpressionStatement(r, s, n) : void 0) || super.parseExpressionStatement(r, s, n);
    }
    shouldParseExportDeclaration() {
      return this.tsIsDeclarationStart() ? !0 : super.shouldParseExportDeclaration();
    }
    parseConditional(r, s, n) {
      if (!this.state.maybeInArrowParameters || !this.match(17))
        return super.parseConditional(r, s, n);
      let a = this.tryParse(() => super.parseConditional(r, s));
      return a.node ? (a.error && (this.state = a.failState), a.node) : (a.error && super.setOptionalParametersError(n, a.error), r);
    }
    parseParenItem(r, s) {
      if (r = super.parseParenItem(r, s), this.eat(17) && (r.optional = !0, this.resetEndLocation(r)), this.match(14)) {
        let n = this.startNodeAt(s);
        return n.expression = r, n.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(n, "TSTypeCastExpression");
      }
      return r;
    }
    parseExportDeclaration(r) {
      if (!this.state.isAmbientContext && this.isContextual(125))
        return this.tsInAmbientContext(() => this.parseExportDeclaration(r));
      let s = this.state.startLoc, n = this.eatContextual(125);
      if (n && (this.isContextual(125) || !this.shouldParseExportDeclaration()))
        throw this.raise(Te.ExpectedAmbientAfterExportDeclare, this.state.startLoc);
      let o = Tt(this.state.type) && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(r);
      return o ? ((o.type === "TSInterfaceDeclaration" || o.type === "TSTypeAliasDeclaration" || n) && (r.exportKind = "type"), n && (this.resetStartLocation(
      o, s), o.declare = !0), o) : null;
    }
    parseClassId(r, s, n, a) {
      if ((!s || n) && this.isContextual(113))
        return;
      super.parseClassId(r, s, n, r.declare ? 1024 : 8331);
      let o = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);
      o && (r.typeParameters = o);
    }
    parseClassPropertyAnnotation(r) {
      r.optional || (this.eat(35) ? r.definite = !0 : this.eat(17) && (r.optional = !0));
      let s = this.tsTryParseTypeAnnotation();
      s && (r.typeAnnotation = s);
    }
    parseClassProperty(r) {
      if (this.parseClassPropertyAnnotation(r), this.state.isAmbientContext && !(r.readonly && !r.typeAnnotation) && this.match(29) && this.
      raise(Te.DeclareClassFieldHasInitializer, this.state.startLoc), r.abstract && this.match(29)) {
        let {
          key: s
        } = r;
        this.raise(Te.AbstractPropertyHasInitializer, this.state.startLoc, {
          propertyName: s.type === "Identifier" && !r.computed ? s.name : `[${this.input.slice(s.start, s.end)}]`
        });
      }
      return super.parseClassProperty(r);
    }
    parseClassPrivateProperty(r) {
      return r.abstract && this.raise(Te.PrivateElementHasAbstract, r), r.accessibility && this.raise(Te.PrivateElementHasAccessibility, r, {
        modifier: r.accessibility
      }), this.parseClassPropertyAnnotation(r), super.parseClassPrivateProperty(r);
    }
    parseClassAccessorProperty(r) {
      return this.parseClassPropertyAnnotation(r), r.optional && this.raise(Te.AccessorCannotBeOptional, r), super.parseClassAccessorProperty(
      r);
    }
    pushClassMethod(r, s, n, a, o, l) {
      let u = this.tsTryParseTypeParameters(this.tsParseConstModifier);
      u && o && this.raise(Te.ConstructorHasTypeParameters, u);
      let {
        declare: c = !1,
        kind: f
      } = s;
      c && (f === "get" || f === "set") && this.raise(Te.DeclareAccessor, s, {
        kind: f
      }), u && (s.typeParameters = u), super.pushClassMethod(r, s, n, a, o, l);
    }
    pushClassPrivateMethod(r, s, n, a) {
      let o = this.tsTryParseTypeParameters(this.tsParseConstModifier);
      o && (s.typeParameters = o), super.pushClassPrivateMethod(r, s, n, a);
    }
    declareClassPrivateMethodInScope(r, s) {
      r.type !== "TSDeclareMethod" && (r.type === "MethodDefinition" && !r.value.body || super.declareClassPrivateMethodInScope(r, s));
    }
    parseClassSuper(r) {
      super.parseClassSuper(r), r.superClass && (this.match(47) || this.match(51)) && (r.superTypeParameters = this.tsParseTypeArgumentsInExpression()),
      this.eatContextual(113) && (r.implements = this.tsParseHeritageClause("implements"));
    }
    parseObjPropValue(r, s, n, a, o, l, u) {
      let c = this.tsTryParseTypeParameters(this.tsParseConstModifier);
      return c && (r.typeParameters = c), super.parseObjPropValue(r, s, n, a, o, l, u);
    }
    parseFunctionParams(r, s) {
      let n = this.tsTryParseTypeParameters(this.tsParseConstModifier);
      n && (r.typeParameters = n), super.parseFunctionParams(r, s);
    }
    parseVarId(r, s) {
      super.parseVarId(r, s), r.id.type === "Identifier" && !this.hasPrecedingLineBreak() && this.eat(35) && (r.definite = !0);
      let n = this.tsTryParseTypeAnnotation();
      n && (r.id.typeAnnotation = n, this.resetEndLocation(r.id));
    }
    parseAsyncArrowFromCallExpression(r, s) {
      return this.match(14) && (r.returnType = this.tsParseTypeAnnotation()), super.parseAsyncArrowFromCallExpression(r, s);
    }
    parseMaybeAssign(r, s) {
      var n, a, o, l, u;
      let c, f, p;
      if (this.hasPlugin("jsx") && (this.match(142) || this.match(47))) {
        if (c = this.state.clone(), f = this.tryParse(() => super.parseMaybeAssign(r, s), c), !f.error) return f.node;
        let {
          context: b
        } = this.state, h = b[b.length - 1];
        (h === Lt.j_oTag || h === Lt.j_expr) && b.pop();
      }
      if (!((n = f) != null && n.error) && !this.match(47))
        return super.parseMaybeAssign(r, s);
      (!c || c === this.state) && (c = this.state.clone());
      let d, m = this.tryParse((b) => {
        var h, g;
        d = this.tsParseTypeParameters(this.tsParseConstModifier);
        let E = super.parseMaybeAssign(r, s);
        return (E.type !== "ArrowFunctionExpression" || (h = E.extra) != null && h.parenthesized) && b(), ((g = d) == null ? void 0 : g.params.
        length) !== 0 && this.resetStartLocationFromNode(E, d), E.typeParameters = d, E;
      }, c);
      if (!m.error && !m.aborted)
        return d && this.reportReservedArrowTypeParam(d), m.node;
      if (!f && (K3(!this.hasPlugin("jsx")), p = this.tryParse(() => super.parseMaybeAssign(r, s), c), !p.error))
        return p.node;
      if ((a = f) != null && a.node)
        return this.state = f.failState, f.node;
      if (m.node)
        return this.state = m.failState, d && this.reportReservedArrowTypeParam(d), m.node;
      if ((o = p) != null && o.node)
        return this.state = p.failState, p.node;
      throw ((l = f) == null ? void 0 : l.error) || m.error || ((u = p) == null ? void 0 : u.error);
    }
    reportReservedArrowTypeParam(r) {
      var s;
      r.params.length === 1 && !r.params[0].constraint && !((s = r.extra) != null && s.trailingComma) && this.getPluginOption("typescript", "\
disallowAmbiguousJSXLike") && this.raise(Te.ReservedArrowTypeParam, r);
    }
    parseMaybeUnary(r, s) {
      return !this.hasPlugin("jsx") && this.match(47) ? this.tsParseTypeAssertion() : super.parseMaybeUnary(r, s);
    }
    parseArrow(r) {
      if (this.match(14)) {
        let s = this.tryParse((n) => {
          let a = this.tsParseTypeOrTypePredicateAnnotation(14);
          return (this.canInsertSemicolon() || !this.match(19)) && n(), a;
        });
        if (s.aborted) return;
        s.thrown || (s.error && (this.state = s.failState), r.returnType = s.node);
      }
      return super.parseArrow(r);
    }
    parseAssignableListItemTypes(r, s) {
      if (!(s & 2)) return r;
      this.eat(17) && (r.optional = !0);
      let n = this.tsTryParseTypeAnnotation();
      return n && (r.typeAnnotation = n), this.resetEndLocation(r), r;
    }
    isAssignable(r, s) {
      switch (r.type) {
        case "TSTypeCastExpression":
          return this.isAssignable(r.expression, s);
        case "TSParameterProperty":
          return !0;
        default:
          return super.isAssignable(r, s);
      }
    }
    toAssignable(r, s = !1) {
      switch (r.type) {
        case "ParenthesizedExpression":
          this.toAssignableParenthesizedExpression(r, s);
          break;
        case "TSAsExpression":
        case "TSSatisfiesExpression":
        case "TSNonNullExpression":
        case "TSTypeAssertion":
          s ? this.expressionScope.recordArrowParameterBindingError(Te.UnexpectedTypeCastInParameter, r) : this.raise(Te.UnexpectedTypeCastInParameter,
          r), this.toAssignable(r.expression, s);
          break;
        case "AssignmentExpression":
          !s && r.left.type === "TSTypeCastExpression" && (r.left = this.typeCastToParameter(r.left));
        default:
          super.toAssignable(r, s);
      }
    }
    toAssignableParenthesizedExpression(r, s) {
      switch (r.expression.type) {
        case "TSAsExpression":
        case "TSSatisfiesExpression":
        case "TSNonNullExpression":
        case "TSTypeAssertion":
        case "ParenthesizedExpression":
          this.toAssignable(r.expression, s);
          break;
        default:
          super.toAssignable(r, s);
      }
    }
    checkToRestConversion(r, s) {
      switch (r.type) {
        case "TSAsExpression":
        case "TSSatisfiesExpression":
        case "TSTypeAssertion":
        case "TSNonNullExpression":
          this.checkToRestConversion(r.expression, !1);
          break;
        default:
          super.checkToRestConversion(r, s);
      }
    }
    isValidLVal(r, s, n) {
      return ICe({
        TSTypeCastExpression: !0,
        TSParameterProperty: "parameter",
        TSNonNullExpression: "expression",
        TSAsExpression: (n !== 64 || !s) && ["expression", !0],
        TSSatisfiesExpression: (n !== 64 || !s) && ["expression", !0],
        TSTypeAssertion: (n !== 64 || !s) && ["expression", !0]
      }, r) || super.isValidLVal(r, s, n);
    }
    parseBindingAtom() {
      return this.state.type === 78 ? this.parseIdentifier(!0) : super.parseBindingAtom();
    }
    parseMaybeDecoratorArguments(r) {
      if (this.match(47) || this.match(51)) {
        let s = this.tsParseTypeArgumentsInExpression();
        if (this.match(10)) {
          let n = super.parseMaybeDecoratorArguments(r);
          return n.typeParameters = s, n;
        }
        this.unexpected(null, 10);
      }
      return super.parseMaybeDecoratorArguments(r);
    }
    checkCommaAfterRest(r) {
      return this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === r ? (this.next(), !1) : super.checkCommaAfterRest(
      r);
    }
    isClassMethod() {
      return this.match(47) || super.isClassMethod();
    }
    isClassProperty() {
      return this.match(35) || this.match(14) || super.isClassProperty();
    }
    parseMaybeDefault(r, s) {
      let n = super.parseMaybeDefault(r, s);
      return n.type === "AssignmentPattern" && n.typeAnnotation && n.right.start < n.typeAnnotation.start && this.raise(Te.TypeAnnotationAfterAssign,
      n.typeAnnotation), n;
    }
    getTokenFromCode(r) {
      if (this.state.inType) {
        if (r === 62) {
          this.finishOp(48, 1);
          return;
        }
        if (r === 60) {
          this.finishOp(47, 1);
          return;
        }
      }
      super.getTokenFromCode(r);
    }
    reScan_lt_gt() {
      let {
        type: r
      } = this.state;
      r === 47 ? (this.state.pos -= 1, this.readToken_lt()) : r === 48 && (this.state.pos -= 1, this.readToken_gt());
    }
    reScan_lt() {
      let {
        type: r
      } = this.state;
      return r === 51 ? (this.state.pos -= 2, this.finishOp(47, 1), 47) : r;
    }
    toAssignableList(r, s, n) {
      for (let a = 0; a < r.length; a++) {
        let o = r[a];
        o?.type === "TSTypeCastExpression" && (r[a] = this.typeCastToParameter(o));
      }
      super.toAssignableList(r, s, n);
    }
    typeCastToParameter(r) {
      return r.expression.typeAnnotation = r.typeAnnotation, this.resetEndLocation(r.expression, r.typeAnnotation.loc.end), r.expression;
    }
    shouldParseArrow(r) {
      return this.match(14) ? r.every((s) => this.isAssignable(s, !0)) : super.shouldParseArrow(r);
    }
    shouldParseAsyncArrow() {
      return this.match(14) || super.shouldParseAsyncArrow();
    }
    canHaveLeadingDecorator() {
      return super.canHaveLeadingDecorator() || this.isAbstractClass();
    }
    jsxParseOpeningElementAfterName(r) {
      if (this.match(47) || this.match(51)) {
        let s = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());
        s && (r.typeParameters = s);
      }
      return super.jsxParseOpeningElementAfterName(r);
    }
    getGetterSetterExpectedParamCount(r) {
      let s = super.getGetterSetterExpectedParamCount(r), a = this.getObjectOrClassMethodParams(r)[0];
      return a && this.isThisParam(a) ? s + 1 : s;
    }
    parseCatchClauseParam() {
      let r = super.parseCatchClauseParam(), s = this.tsTryParseTypeAnnotation();
      return s && (r.typeAnnotation = s, this.resetEndLocation(r)), r;
    }
    tsInAmbientContext(r) {
      let s = this.state.isAmbientContext;
      this.state.isAmbientContext = !0;
      try {
        return r();
      } finally {
        this.state.isAmbientContext = s;
      }
    }
    parseClass(r, s, n) {
      let a = this.state.inAbstractClass;
      this.state.inAbstractClass = !!r.abstract;
      try {
        return super.parseClass(r, s, n);
      } finally {
        this.state.inAbstractClass = a;
      }
    }
    tsParseAbstractDeclaration(r, s) {
      if (this.match(80))
        return r.abstract = !0, this.maybeTakeDecorators(s, this.parseClass(r, !0, !1));
      if (this.isContextual(129)) {
        if (!this.hasFollowingLineBreak())
          return r.abstract = !0, this.raise(Te.NonClassMethodPropertyHasAbstractModifer, r), this.tsParseInterfaceDeclaration(r);
      } else
        this.unexpected(null, 80);
    }
    parseMethod(r, s, n, a, o, l, u) {
      let c = super.parseMethod(r, s, n, a, o, l, u);
      if (c.abstract && (this.hasPlugin("estree") ? !!c.value.body : !!c.body)) {
        let {
          key: p
        } = c;
        this.raise(Te.AbstractMethodHasImplementation, c, {
          methodName: p.type === "Identifier" && !c.computed ? p.name : `[${this.input.slice(p.start, p.end)}]`
        });
      }
      return c;
    }
    tsParseTypeParameterName() {
      return this.parseIdentifier().name;
    }
    shouldParseAsAmbientContext() {
      return !!this.getPluginOption("typescript", "dts");
    }
    parse() {
      return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.parse();
    }
    getExpression() {
      return this.shouldParseAsAmbientContext() && (this.state.isAmbientContext = !0), super.getExpression();
    }
    parseExportSpecifier(r, s, n, a) {
      return !s && a ? (this.parseTypeOnlyImportExportSpecifier(r, !1, n), this.finishNode(r, "ExportSpecifier")) : (r.exportKind = "value",
      super.parseExportSpecifier(r, s, n, a));
    }
    parseImportSpecifier(r, s, n, a, o) {
      return !s && a ? (this.parseTypeOnlyImportExportSpecifier(r, !0, n), this.finishNode(r, "ImportSpecifier")) : (r.importKind = "value",
      super.parseImportSpecifier(r, s, n, a, n ? 4098 : 4096));
    }
    parseTypeOnlyImportExportSpecifier(r, s, n) {
      let a = s ? "imported" : "local", o = s ? "local" : "exported", l = r[a], u, c = !1, f = !0, p = l.loc.start;
      if (this.isContextual(93)) {
        let m = this.parseIdentifier();
        if (this.isContextual(93)) {
          let b = this.parseIdentifier();
          pn(this.state.type) ? (c = !0, l = m, u = s ? this.parseIdentifier() : this.parseModuleExportName(), f = !1) : (u = b, f = !1);
        } else pn(this.state.type) ? (f = !1, u = s ? this.parseIdentifier() : this.parseModuleExportName()) : (c = !0, l = m);
      } else pn(this.state.type) && (c = !0, s ? (l = this.parseIdentifier(!0), this.isContextual(93) || this.checkReservedWord(l.name, l.loc.
      start, !0, !0)) : l = this.parseModuleExportName());
      c && n && this.raise(s ? Te.TypeModifierIsUsedInTypeImports : Te.TypeModifierIsUsedInTypeExports, p), r[a] = l, r[o] = u;
      let d = s ? "importKind" : "exportKind";
      r[d] = c ? "type" : "value", f && this.eatContextual(93) && (r[o] = s ? this.parseIdentifier() : this.parseModuleExportName()), r[o] ||
      (r[o] = gi(r[a])), s && this.checkIdentifier(r[o], c ? 4098 : 4096);
    }
  }, "typescript");
  function kCe(e) {
    if (e.type !== "MemberExpression") return !1;
    let {
      computed: t,
      property: r
    } = e;
    return t && r.type !== "StringLiteral" && (r.type !== "TemplateLiteral" || r.expressions.length > 0) ? !1 : mB(e.object);
  }
  i(kCe, "isPossiblyLiteralEnum");
  function FCe(e, t) {
    var r;
    let {
      type: s
    } = e;
    if ((r = e.extra) != null && r.parenthesized)
      return !1;
    if (t) {
      if (s === "Literal") {
        let {
          value: n
        } = e;
        if (typeof n == "string" || typeof n == "boolean")
          return !0;
      }
    } else if (s === "StringLiteral" || s === "BooleanLiteral")
      return !0;
    return !!(hB(e, t) || LCe(e, t) || s === "TemplateLiteral" && e.expressions.length === 0 || kCe(e));
  }
  i(FCe, "isValidAmbientConstInitializer");
  function hB(e, t) {
    return t ? e.type === "Literal" && (typeof e.value == "number" || "bigint" in e) : e.type === "NumericLiteral" || e.type === "BigIntLite\
ral";
  }
  i(hB, "isNumber");
  function LCe(e, t) {
    if (e.type === "UnaryExpression") {
      let {
        operator: r,
        argument: s
      } = e;
      if (r === "-" && hB(s, t))
        return !0;
    }
    return !1;
  }
  i(LCe, "isNegativeNumber");
  function mB(e) {
    return e.type === "Identifier" ? !0 : e.type !== "MemberExpression" || e.computed ? !1 : mB(e.object);
  }
  i(mB, "isUncomputedMemberExpressionChain");
  var X3 = yi`placeholders`({
    ClassNameIsRequired: "A class name is required.",
    UnexpectedSpace: "Unexpected space in placeholder."
  }), BCe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "PlaceholdersParserMixin");
    }
    parsePlaceholder(r) {
      if (this.match(144)) {
        let s = this.startNode();
        return this.next(), this.assertNoSpace(), s.name = super.parseIdentifier(!0), this.assertNoSpace(), this.expect(144), this.finishPlaceholder(
        s, r);
      }
    }
    finishPlaceholder(r, s) {
      let n = !!(r.expectedNode && r.type === "Placeholder");
      return r.expectedNode = s, n ? r : this.finishNode(r, "Placeholder");
    }
    getTokenFromCode(r) {
      r === 37 && this.input.charCodeAt(this.state.pos + 1) === 37 ? this.finishOp(144, 2) : super.getTokenFromCode(r);
    }
    parseExprAtom(r) {
      return this.parsePlaceholder("Expression") || super.parseExprAtom(r);
    }
    parseIdentifier(r) {
      return this.parsePlaceholder("Identifier") || super.parseIdentifier(r);
    }
    checkReservedWord(r, s, n, a) {
      r !== void 0 && super.checkReservedWord(r, s, n, a);
    }
    parseBindingAtom() {
      return this.parsePlaceholder("Pattern") || super.parseBindingAtom();
    }
    isValidLVal(r, s, n) {
      return r === "Placeholder" || super.isValidLVal(r, s, n);
    }
    toAssignable(r, s) {
      r && r.type === "Placeholder" && r.expectedNode === "Expression" ? r.expectedNode = "Pattern" : super.toAssignable(r, s);
    }
    chStartsBindingIdentifier(r, s) {
      return !!(super.chStartsBindingIdentifier(r, s) || this.lookahead().type === 144);
    }
    verifyBreakContinue(r, s) {
      r.label && r.label.type === "Placeholder" || super.verifyBreakContinue(r, s);
    }
    parseExpressionStatement(r, s) {
      var n;
      if (s.type !== "Placeholder" || (n = s.extra) != null && n.parenthesized)
        return super.parseExpressionStatement(r, s);
      if (this.match(14)) {
        let a = r;
        return a.label = this.finishPlaceholder(s, "Identifier"), this.next(), a.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration(),
        this.finishNode(a, "LabeledStatement");
      }
      return this.semicolon(), r.name = s.name, this.finishPlaceholder(r, "Statement");
    }
    parseBlock(r, s, n) {
      return this.parsePlaceholder("BlockStatement") || super.parseBlock(r, s, n);
    }
    parseFunctionId(r) {
      return this.parsePlaceholder("Identifier") || super.parseFunctionId(r);
    }
    parseClass(r, s, n) {
      let a = s ? "ClassDeclaration" : "ClassExpression";
      this.next();
      let o = this.state.strict, l = this.parsePlaceholder("Identifier");
      if (l)
        if (this.match(81) || this.match(144) || this.match(5))
          r.id = l;
        else {
          if (n || !s)
            return r.id = null, r.body = this.finishPlaceholder(l, "ClassBody"), this.finishNode(r, a);
          throw this.raise(X3.ClassNameIsRequired, this.state.startLoc);
        }
      else
        this.parseClassId(r, s, n);
      return super.parseClassSuper(r), r.body = this.parsePlaceholder("ClassBody") || super.parseClassBody(!!r.superClass, o), this.finishNode(
      r, a);
    }
    parseExport(r, s) {
      let n = this.parsePlaceholder("Identifier");
      if (!n) return super.parseExport(r, s);
      if (!this.isContextual(98) && !this.match(12))
        return r.specifiers = [], r.source = null, r.declaration = this.finishPlaceholder(n, "Declaration"), this.finishNode(r, "ExportNamed\
Declaration");
      this.expectPlugin("exportDefaultFrom");
      let a = this.startNode();
      return a.exported = n, r.specifiers = [this.finishNode(a, "ExportDefaultSpecifier")], super.parseExport(r, s);
    }
    isExportDefaultSpecifier() {
      if (this.match(65)) {
        let r = this.nextTokenStart();
        if (this.isUnparsedContextual(r, "from") && this.input.startsWith(la(144), this.nextTokenStartSince(r + 4)))
          return !0;
      }
      return super.isExportDefaultSpecifier();
    }
    maybeParseExportDefaultSpecifier(r, s) {
      var n;
      return (n = r.specifiers) != null && n.length ? !0 : super.maybeParseExportDefaultSpecifier(r, s);
    }
    checkExport(r) {
      let {
        specifiers: s
      } = r;
      s != null && s.length && (r.specifiers = s.filter((n) => n.exported.type === "Placeholder")), super.checkExport(r), r.specifiers = s;
    }
    parseImport(r) {
      let s = this.parsePlaceholder("Identifier");
      if (!s) return super.parseImport(r);
      if (r.specifiers = [], !this.isContextual(98) && !this.match(12))
        return r.source = this.finishPlaceholder(s, "StringLiteral"), this.semicolon(), this.finishNode(r, "ImportDeclaration");
      let n = this.startNodeAtNode(s);
      return n.local = s, r.specifiers.push(this.finishNode(n, "ImportDefaultSpecifier")), this.eat(12) && (this.maybeParseStarImportSpecifier(
      r) || this.parseNamedImportSpecifiers(r)), this.expectContextual(98), r.source = this.parseImportSource(), this.semicolon(), this.finishNode(
      r, "ImportDeclaration");
    }
    parseImportSource() {
      return this.parsePlaceholder("StringLiteral") || super.parseImportSource();
    }
    assertNoSpace() {
      this.state.start > this.state.lastTokEndLoc.index && this.raise(X3.UnexpectedSpace, this.state.lastTokEndLoc);
    }
  }, "placeholders"), MCe = /* @__PURE__ */ i((e) => class extends e {
    static {
      i(this, "V8IntrinsicMixin");
    }
    parseV8Intrinsic() {
      if (this.match(54)) {
        let r = this.state.startLoc, s = this.startNode();
        if (this.next(), Tt(this.state.type)) {
          let n = this.parseIdentifierName(), a = this.createIdentifier(s, n);
          if (a.type = "V8IntrinsicIdentifier", this.match(10))
            return a;
        }
        this.unexpected(r);
      }
    }
    parseExprAtom(r) {
      return this.parseV8Intrinsic() || super.parseExprAtom(r);
    }
  }, "v8intrinsic");
  function vr(e, t) {
    let [r, s] = typeof t == "string" ? [t, {}] : t, n = Object.keys(s), a = n.length === 0;
    return e.some((o) => {
      if (typeof o == "string")
        return a && o === r;
      {
        let [l, u] = o;
        if (l !== r)
          return !1;
        for (let c of n)
          if (u[c] !== s[c])
            return !1;
        return !0;
      }
    });
  }
  i(vr, "hasPlugin");
  function oa(e, t, r) {
    let s = e.find((n) => Array.isArray(n) ? n[0] === t : n === t);
    return s && Array.isArray(s) && s.length > 1 ? s[1][r] : null;
  }
  i(oa, "getPluginOption");
  var z3 = ["minimal", "fsharp", "hack", "smart"], J3 = ["^^", "@@", "^", "%", "#"], Q3 = ["hash", "bar"];
  function jCe(e) {
    if (vr(e, "decorators")) {
      if (vr(e, "decorators-legacy"))
        throw new Error("Cannot use the decorators and decorators-legacy plugin together");
      let t = oa(e, "decorators", "decoratorsBeforeExport");
      if (t != null && typeof t != "boolean")
        throw new Error("'decoratorsBeforeExport' must be a boolean, if specified.");
      let r = oa(e, "decorators", "allowCallParenthesized");
      if (r != null && typeof r != "boolean")
        throw new Error("'allowCallParenthesized' must be a boolean.");
    }
    if (vr(e, "flow") && vr(e, "typescript"))
      throw new Error("Cannot combine flow and typescript plugins.");
    if (vr(e, "placeholders") && vr(e, "v8intrinsic"))
      throw new Error("Cannot combine placeholders and v8intrinsic plugins.");
    if (vr(e, "pipelineOperator")) {
      let t = oa(e, "pipelineOperator", "proposal");
      if (!z3.includes(t)) {
        let s = z3.map((n) => `"${n}"`).join(", ");
        throw new Error(`"pipelineOperator" requires "proposal" option whose value must be one of: ${s}.`);
      }
      let r = vr(e, ["recordAndTuple", {
        syntaxType: "hash"
      }]);
      if (t === "hack") {
        if (vr(e, "placeholders"))
          throw new Error("Cannot combine placeholders plugin and Hack-style pipes.");
        if (vr(e, "v8intrinsic"))
          throw new Error("Cannot combine v8intrinsic plugin and Hack-style pipes.");
        let s = oa(e, "pipelineOperator", "topicToken");
        if (!J3.includes(s)) {
          let n = J3.map((a) => `"${a}"`).join(", ");
          throw new Error(`"pipelineOperator" in "proposal": "hack" mode also requires a "topicToken" option whose value must be one of: ${n}\
.`);
        }
        if (s === "#" && r)
          throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "hack", topicToken: "#" }]` and `["recordAndtuple", { s\
yntaxType: "hash"}]`.');
      } else if (t === "smart" && r)
        throw new Error('Plugin conflict between `["pipelineOperator", { proposal: "smart" }]` and `["recordAndtuple", { syntaxType: "hash"}\
]`.');
    }
    if (vr(e, "moduleAttributes")) {
      if (vr(e, "importAssertions") || vr(e, "importAttributes"))
        throw new Error("Cannot combine importAssertions, importAttributes and moduleAttributes plugins.");
      if (oa(e, "moduleAttributes", "version") !== "may-2020")
        throw new Error("The 'moduleAttributes' plugin requires a 'version' option, representing the last proposal update. Currently, the on\
ly supported value is 'may-2020'.");
    }
    if (vr(e, "importAssertions") && vr(e, "importAttributes"))
      throw new Error("Cannot combine importAssertions and importAttributes plugins.");
    if (vr(e, "recordAndTuple") && oa(e, "recordAndTuple", "syntaxType") != null && !Q3.includes(oa(e, "recordAndTuple", "syntaxType")))
      throw new Error("The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: " + Q3.map((t) => `'${t}'`).join(", "));
    if (vr(e, "asyncDoExpressions") && !vr(e, "doExpressions")) {
      let t = new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");
      throw t.missingPlugins = "doExpressions", t;
    }
    if (vr(e, "optionalChainingAssign") && oa(e, "optionalChainingAssign", "version") !== "2023-07")
      throw new Error("The 'optionalChainingAssign' plugin requires a 'version' option, representing the last proposal update. Currently, th\
e only supported value is '2023-07'.");
  }
  i(jCe, "validatePlugins");
  var yB = {
    estree: qAe,
    jsx: wCe,
    flow: ACe,
    typescript: RCe,
    v8intrinsic: MCe,
    placeholders: BCe
  }, qCe = Object.keys(yB), Xv = {
    sourceType: "script",
    sourceFilename: void 0,
    startColumn: 0,
    startLine: 1,
    allowAwaitOutsideFunction: !1,
    allowReturnOutsideFunction: !1,
    allowNewTargetOutsideFunction: !1,
    allowImportExportEverywhere: !1,
    allowSuperOutsideMethod: !1,
    allowUndeclaredExports: !1,
    plugins: [],
    strictMode: null,
    ranges: !1,
    tokens: !1,
    createImportExpressions: !1,
    createParenthesizedExpressions: !1,
    errorRecovery: !1,
    attachComment: !0,
    annexB: !0
  };
  function $Ce(e) {
    if (e == null)
      return Object.assign({}, Xv);
    if (e.annexB != null && e.annexB !== !1)
      throw new Error("The `annexB` option can only be set to `false`.");
    let t = {};
    for (let s of Object.keys(Xv)) {
      var r;
      t[s] = (r = e[s]) != null ? r : Xv[s];
    }
    return t;
  }
  i($Ce, "getOptions");
  var yS = class extends mS {
    static {
      i(this, "ExpressionParser");
    }
    checkProto(t, r, s, n) {
      if (t.type === "SpreadElement" || this.isObjectMethod(t) || t.computed || t.shorthand)
        return;
      let a = t.key;
      if ((a.type === "Identifier" ? a.name : a.value) === "__proto__") {
        if (r) {
          this.raise(k.RecordNoProto, a);
          return;
        }
        s.used && (n ? n.doubleProtoLoc === null && (n.doubleProtoLoc = a.loc.start) : this.raise(k.DuplicateProto, a)), s.used = !0;
      }
    }
    shouldExitDescending(t, r) {
      return t.type === "ArrowFunctionExpression" && t.start === r;
    }
    getExpression() {
      this.enterInitialScopes(), this.nextToken();
      let t = this.parseExpression();
      return this.match(139) || this.unexpected(), this.finalizeRemainingComments(), t.comments = this.comments, t.errors = this.state.errors,
      this.options.tokens && (t.tokens = this.tokens), t;
    }
    parseExpression(t, r) {
      return t ? this.disallowInAnd(() => this.parseExpressionBase(r)) : this.allowInAnd(() => this.parseExpressionBase(r));
    }
    parseExpressionBase(t) {
      let r = this.state.startLoc, s = this.parseMaybeAssign(t);
      if (this.match(12)) {
        let n = this.startNodeAt(r);
        for (n.expressions = [s]; this.eat(12); )
          n.expressions.push(this.parseMaybeAssign(t));
        return this.toReferencedList(n.expressions), this.finishNode(n, "SequenceExpression");
      }
      return s;
    }
    parseMaybeAssignDisallowIn(t, r) {
      return this.disallowInAnd(() => this.parseMaybeAssign(t, r));
    }
    parseMaybeAssignAllowIn(t, r) {
      return this.allowInAnd(() => this.parseMaybeAssign(t, r));
    }
    setOptionalParametersError(t, r) {
      var s;
      t.optionalParametersLoc = (s = r?.loc) != null ? s : this.state.startLoc;
    }
    parseMaybeAssign(t, r) {
      let s = this.state.startLoc;
      if (this.isContextual(108) && this.prodParam.hasYield) {
        let l = this.parseYield();
        return r && (l = r.call(this, l, s)), l;
      }
      let n;
      t ? n = !1 : (t = new pl(), n = !0);
      let {
        type: a
      } = this.state;
      (a === 10 || Tt(a)) && (this.state.potentialArrowAt = this.state.start);
      let o = this.parseMaybeConditional(t);
      if (r && (o = r.call(this, o, s)), HAe(this.state.type)) {
        let l = this.startNodeAt(s), u = this.state.value;
        if (l.operator = u, this.match(29)) {
          this.toAssignable(o, !0), l.left = o;
          let c = s.index;
          t.doubleProtoLoc != null && t.doubleProtoLoc.index >= c && (t.doubleProtoLoc = null), t.shorthandAssignLoc != null && t.shorthandAssignLoc.
          index >= c && (t.shorthandAssignLoc = null), t.privateKeyLoc != null && t.privateKeyLoc.index >= c && (this.checkDestructuringPrivate(
          t), t.privateKeyLoc = null);
        } else
          l.left = o;
        return this.next(), l.right = this.parseMaybeAssign(), this.checkLVal(o, {
          in: this.finishNode(l, "AssignmentExpression")
        }), l;
      } else n && this.checkExpressionErrors(t, !0);
      return o;
    }
    parseMaybeConditional(t) {
      let r = this.state.startLoc, s = this.state.potentialArrowAt, n = this.parseExprOps(t);
      return this.shouldExitDescending(n, s) ? n : this.parseConditional(n, r, t);
    }
    parseConditional(t, r, s) {
      if (this.eat(17)) {
        let n = this.startNodeAt(r);
        return n.test = t, n.consequent = this.parseMaybeAssignAllowIn(), this.expect(14), n.alternate = this.parseMaybeAssign(), this.finishNode(
        n, "ConditionalExpression");
      }
      return t;
    }
    parseMaybeUnaryOrPrivate(t) {
      return this.match(138) ? this.parsePrivateName() : this.parseMaybeUnary(t);
    }
    parseExprOps(t) {
      let r = this.state.startLoc, s = this.state.potentialArrowAt, n = this.parseMaybeUnaryOrPrivate(t);
      return this.shouldExitDescending(n, s) ? n : this.parseExprOp(n, r, -1);
    }
    parseExprOp(t, r, s) {
      if (this.isPrivateName(t)) {
        let a = this.getPrivateNameSV(t);
        (s >= Od(58) || !this.prodParam.hasIn || !this.match(58)) && this.raise(k.PrivateInExpectedIn, t, {
          identifierName: a
        }), this.classScope.usePrivateName(a, t.loc.start);
      }
      let n = this.state.type;
      if (KAe(n) && (this.prodParam.hasIn || !this.match(58))) {
        let a = Od(n);
        if (a > s) {
          if (n === 39) {
            if (this.expectPlugin("pipelineOperator"), this.state.inFSharpPipelineDirectBody)
              return t;
            this.checkPipelineAtInfixOperator(t, r);
          }
          let o = this.startNodeAt(r);
          o.left = t, o.operator = this.state.value;
          let l = n === 41 || n === 42, u = n === 40;
          if (u && (a = Od(42)), this.next(), n === 39 && this.hasPlugin(["pipelineOperator", {
            proposal: "minimal"
          }]) && this.state.type === 96 && this.prodParam.hasAwait)
            throw this.raise(k.UnexpectedAwaitAfterPipelineBody, this.state.startLoc);
          o.right = this.parseExprOpRightExpr(n, a);
          let c = this.finishNode(o, l || u ? "LogicalExpression" : "BinaryExpression"), f = this.state.type;
          if (u && (f === 41 || f === 42) || l && f === 40)
            throw this.raise(k.MixingCoalesceWithLogical, this.state.startLoc);
          return this.parseExprOp(c, r, s);
        }
      }
      return t;
    }
    parseExprOpRightExpr(t, r) {
      let s = this.state.startLoc;
      switch (t) {
        case 39:
          switch (this.getPluginOption("pipelineOperator", "proposal")) {
            case "hack":
              return this.withTopicBindingContext(() => this.parseHackPipeBody());
            case "smart":
              return this.withTopicBindingContext(() => {
                if (this.prodParam.hasYield && this.isContextual(108))
                  throw this.raise(k.PipeBodyIsTighter, this.state.startLoc);
                return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(t, r), s);
              });
            case "fsharp":
              return this.withSoloAwaitPermittingContext(() => this.parseFSharpPipelineBody(r));
          }
        default:
          return this.parseExprOpBaseRightExpr(t, r);
      }
    }
    parseExprOpBaseRightExpr(t, r) {
      let s = this.state.startLoc;
      return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), s, QAe(t) ? r - 1 : r);
    }
    parseHackPipeBody() {
      var t;
      let {
        startLoc: r
      } = this.state, s = this.parseMaybeAssign();
      return kAe.has(s.type) && !((t = s.extra) != null && t.parenthesized) && this.raise(k.PipeUnparenthesizedBody, r, {
        type: s.type
      }), this.topicReferenceWasUsedInCurrentContext() || this.raise(k.PipeTopicUnused, r), s;
    }
    checkExponentialAfterUnary(t) {
      this.match(57) && this.raise(k.UnexpectedTokenUnaryExponentiation, t.argument);
    }
    parseMaybeUnary(t, r) {
      let s = this.state.startLoc, n = this.isContextual(96);
      if (n && this.isAwaitAllowed()) {
        this.next();
        let u = this.parseAwait(s);
        return r || this.checkExponentialAfterUnary(u), u;
      }
      let a = this.match(34), o = this.startNode();
      if (XAe(this.state.type)) {
        o.operator = this.state.value, o.prefix = !0, this.match(72) && this.expectPlugin("throwExpressions");
        let u = this.match(89);
        if (this.next(), o.argument = this.parseMaybeUnary(null, !0), this.checkExpressionErrors(t, !0), this.state.strict && u) {
          let c = o.argument;
          c.type === "Identifier" ? this.raise(k.StrictDelete, o) : this.hasPropertyAsPrivateName(c) && this.raise(k.DeletePrivateField, o);
        }
        if (!a)
          return r || this.checkExponentialAfterUnary(o), this.finishNode(o, "UnaryExpression");
      }
      let l = this.parseUpdate(o, a, t);
      if (n) {
        let {
          type: u
        } = this.state;
        if ((this.hasPlugin("v8intrinsic") ? Qv(u) : Qv(u) && !this.match(54)) && !this.isAmbiguousAwait())
          return this.raiseOverwrite(k.AwaitNotInAsyncContext, s), this.parseAwait(s);
      }
      return l;
    }
    parseUpdate(t, r, s) {
      if (r) {
        let o = t;
        return this.checkLVal(o.argument, {
          in: this.finishNode(o, "UpdateExpression")
        }), t;
      }
      let n = this.state.startLoc, a = this.parseExprSubscripts(s);
      if (this.checkExpressionErrors(s, !1)) return a;
      for (; YAe(this.state.type) && !this.canInsertSemicolon(); ) {
        let o = this.startNodeAt(n);
        o.operator = this.state.value, o.prefix = !1, o.argument = a, this.next(), this.checkLVal(a, {
          in: a = this.finishNode(o, "UpdateExpression")
        });
      }
      return a;
    }
    parseExprSubscripts(t) {
      let r = this.state.startLoc, s = this.state.potentialArrowAt, n = this.parseExprAtom(t);
      return this.shouldExitDescending(n, s) ? n : this.parseSubscripts(n, r);
    }
    parseSubscripts(t, r, s) {
      let n = {
        optionalChainMember: !1,
        maybeAsyncArrow: this.atPossibleAsyncArrow(t),
        stop: !1
      };
      do
        t = this.parseSubscript(t, r, s, n), n.maybeAsyncArrow = !1;
      while (!n.stop);
      return t;
    }
    parseSubscript(t, r, s, n) {
      let {
        type: a
      } = this.state;
      if (!s && a === 15)
        return this.parseBind(t, r, s, n);
      if (Fd(a))
        return this.parseTaggedTemplateExpression(t, r, n);
      let o = !1;
      if (a === 18) {
        if (s && (this.raise(k.OptionalChainingNoNew, this.state.startLoc), this.lookaheadCharCode() === 40))
          return n.stop = !0, t;
        n.optionalChainMember = o = !0, this.next();
      }
      if (!s && this.match(10))
        return this.parseCoverCallAndAsyncArrowHead(t, r, n, o);
      {
        let l = this.eat(0);
        return l || o || this.eat(16) ? this.parseMember(t, r, n, l, o) : (n.stop = !0, t);
      }
    }
    parseMember(t, r, s, n, a) {
      let o = this.startNodeAt(r);
      return o.object = t, o.computed = n, n ? (o.property = this.parseExpression(), this.expect(3)) : this.match(138) ? (t.type === "Super" &&
      this.raise(k.SuperPrivateField, r), this.classScope.usePrivateName(this.state.value, this.state.startLoc), o.property = this.parsePrivateName()) :
      o.property = this.parseIdentifier(!0), s.optionalChainMember ? (o.optional = a, this.finishNode(o, "OptionalMemberExpression")) : this.
      finishNode(o, "MemberExpression");
    }
    parseBind(t, r, s, n) {
      let a = this.startNodeAt(r);
      return a.object = t, this.next(), a.callee = this.parseNoCallExpr(), n.stop = !0, this.parseSubscripts(this.finishNode(a, "BindExpress\
ion"), r, s);
    }
    parseCoverCallAndAsyncArrowHead(t, r, s, n) {
      let a = this.state.maybeInArrowParameters, o = null;
      this.state.maybeInArrowParameters = !0, this.next();
      let l = this.startNodeAt(r);
      l.callee = t;
      let {
        maybeAsyncArrow: u,
        optionalChainMember: c
      } = s;
      u && (this.expressionScope.enter(gCe()), o = new pl()), c && (l.optional = n), n ? l.arguments = this.parseCallExpressionArguments(11) :
      l.arguments = this.parseCallExpressionArguments(11, t.type === "Import", t.type !== "Super", l, o);
      let f = this.finishCallExpression(l, c);
      return u && this.shouldParseAsyncArrow() && !n ? (s.stop = !0, this.checkDestructuringPrivate(o), this.expressionScope.validateAsPattern(),
      this.expressionScope.exit(), f = this.parseAsyncArrowFromCallExpression(this.startNodeAt(r), f)) : (u && (this.checkExpressionErrors(o,
      !0), this.expressionScope.exit()), this.toReferencedArguments(f)), this.state.maybeInArrowParameters = a, f;
    }
    toReferencedArguments(t, r) {
      this.toReferencedListDeep(t.arguments, r);
    }
    parseTaggedTemplateExpression(t, r, s) {
      let n = this.startNodeAt(r);
      return n.tag = t, n.quasi = this.parseTemplate(!0), s.optionalChainMember && this.raise(k.OptionalChainingNoTemplate, r), this.finishNode(
      n, "TaggedTemplateExpression");
    }
    atPossibleAsyncArrow(t) {
      return t.type === "Identifier" && t.name === "async" && this.state.lastTokEndLoc.index === t.end && !this.canInsertSemicolon() && t.end -
      t.start === 5 && t.start === this.state.potentialArrowAt;
    }
    expectImportAttributesPlugin() {
      this.hasPlugin("importAssertions") || this.expectPlugin("importAttributes");
    }
    finishCallExpression(t, r) {
      if (t.callee.type === "Import")
        if (t.arguments.length === 2 && (this.hasPlugin("moduleAttributes") || this.expectImportAttributesPlugin()), t.arguments.length === 0 ||
        t.arguments.length > 2)
          this.raise(k.ImportCallArity, t, {
            maxArgumentCount: this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions") || this.hasPlugin("moduleAttributes") ?
            2 : 1
          });
        else
          for (let s of t.arguments)
            s.type === "SpreadElement" && this.raise(k.ImportCallSpreadArgument, s);
      return this.finishNode(t, r ? "OptionalCallExpression" : "CallExpression");
    }
    parseCallExpressionArguments(t, r, s, n, a) {
      let o = [], l = !0, u = this.state.inFSharpPipelineDirectBody;
      for (this.state.inFSharpPipelineDirectBody = !1; !this.eat(t); ) {
        if (l)
          l = !1;
        else if (this.expect(12), this.match(t)) {
          r && !this.hasPlugin("importAttributes") && !this.hasPlugin("importAssertions") && !this.hasPlugin("moduleAttributes") && this.raise(
          k.ImportCallArgumentTrailingComma, this.state.lastTokStartLoc), n && this.addTrailingCommaExtraToNode(n), this.next();
          break;
        }
        o.push(this.parseExprListItem(!1, a, s));
      }
      return this.state.inFSharpPipelineDirectBody = u, o;
    }
    shouldParseAsyncArrow() {
      return this.match(19) && !this.canInsertSemicolon();
    }
    parseAsyncArrowFromCallExpression(t, r) {
      var s;
      return this.resetPreviousNodeTrailingComments(r), this.expect(19), this.parseArrowExpression(t, r.arguments, !0, (s = r.extra) == null ?
      void 0 : s.trailingCommaLoc), r.innerComments && Tc(t, r.innerComments), r.callee.trailingComments && Tc(t, r.callee.trailingComments),
      t;
    }
    parseNoCallExpr() {
      let t = this.state.startLoc;
      return this.parseSubscripts(this.parseExprAtom(), t, !0);
    }
    parseExprAtom(t) {
      let r, s = null, {
        type: n
      } = this.state;
      switch (n) {
        case 79:
          return this.parseSuper();
        case 83:
          return r = this.startNode(), this.next(), this.match(16) ? this.parseImportMetaProperty(r) : this.match(10) ? this.options.createImportExpressions ?
          this.parseImportCall(r) : this.finishNode(r, "Import") : (this.raise(k.UnsupportedImport, this.state.lastTokStartLoc), this.finishNode(
          r, "Import"));
        case 78:
          return r = this.startNode(), this.next(), this.finishNode(r, "ThisExpression");
        case 90:
          return this.parseDo(this.startNode(), !1);
        case 56:
        case 31:
          return this.readRegexp(), this.parseRegExpLiteral(this.state.value);
        case 134:
          return this.parseNumericLiteral(this.state.value);
        case 135:
          return this.parseBigIntLiteral(this.state.value);
        case 136:
          return this.parseDecimalLiteral(this.state.value);
        case 133:
          return this.parseStringLiteral(this.state.value);
        case 84:
          return this.parseNullLiteral();
        case 85:
          return this.parseBooleanLiteral(!0);
        case 86:
          return this.parseBooleanLiteral(!1);
        case 10: {
          let a = this.state.potentialArrowAt === this.state.start;
          return this.parseParenAndDistinguishExpression(a);
        }
        case 2:
        case 1:
          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, !1, !0);
        case 0:
          return this.parseArrayLike(3, !0, !1, t);
        case 6:
        case 7:
          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, !1, !0);
        case 5:
          return this.parseObjectLike(8, !1, !1, t);
        case 68:
          return this.parseFunctionOrFunctionSent();
        case 26:
          s = this.parseDecorators();
        case 80:
          return this.parseClass(this.maybeTakeDecorators(s, this.startNode()), !1);
        case 77:
          return this.parseNewOrNewTarget();
        case 25:
        case 24:
          return this.parseTemplate(!1);
        case 15: {
          r = this.startNode(), this.next(), r.object = null;
          let a = r.callee = this.parseNoCallExpr();
          if (a.type === "MemberExpression")
            return this.finishNode(r, "BindExpression");
          throw this.raise(k.UnsupportedBind, a);
        }
        case 138:
          return this.raise(k.PrivateInExpectedIn, this.state.startLoc, {
            identifierName: this.state.value
          }), this.parsePrivateName();
        case 33:
          return this.parseTopicReferenceThenEqualsSign(54, "%");
        case 32:
          return this.parseTopicReferenceThenEqualsSign(44, "^");
        case 37:
        case 38:
          return this.parseTopicReference("hack");
        case 44:
        case 54:
        case 27: {
          let a = this.getPluginOption("pipelineOperator", "proposal");
          if (a)
            return this.parseTopicReference(a);
          this.unexpected();
          break;
        }
        case 47: {
          let a = this.input.codePointAt(this.nextTokenStart());
          mi(a) || a === 62 ? this.expectOnePlugin(["jsx", "flow", "typescript"]) : this.unexpected();
          break;
        }
        default:
          if (Tt(n)) {
            if (this.isContextual(127) && this.lookaheadInLineCharCode() === 123)
              return this.parseModuleExpression();
            let a = this.state.potentialArrowAt === this.state.start, o = this.state.containsEsc, l = this.parseIdentifier();
            if (!o && l.name === "async" && !this.canInsertSemicolon()) {
              let {
                type: u
              } = this.state;
              if (u === 68)
                return this.resetPreviousNodeTrailingComments(l), this.next(), this.parseAsyncFunctionExpression(this.startNodeAtNode(l));
              if (Tt(u))
                return this.lookaheadCharCode() === 61 ? this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(l)) : l;
              if (u === 90)
                return this.resetPreviousNodeTrailingComments(l), this.parseDo(this.startNodeAtNode(l), !0);
            }
            return a && this.match(19) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(this.startNodeAtNode(l), [l],
            !1)) : l;
          } else
            this.unexpected();
      }
    }
    parseTopicReferenceThenEqualsSign(t, r) {
      let s = this.getPluginOption("pipelineOperator", "proposal");
      if (s)
        return this.state.type = t, this.state.value = r, this.state.pos--, this.state.end--, this.state.endLoc = us(this.state.endLoc, -1),
        this.parseTopicReference(s);
      this.unexpected();
    }
    parseTopicReference(t) {
      let r = this.startNode(), s = this.state.startLoc, n = this.state.type;
      return this.next(), this.finishTopicReference(r, s, t, n);
    }
    finishTopicReference(t, r, s, n) {
      if (this.testTopicReferenceConfiguration(s, r, n)) {
        let a = s === "smart" ? "PipelinePrimaryTopicReference" : "TopicReference";
        return this.topicReferenceIsAllowedInCurrentContext() || this.raise(s === "smart" ? k.PrimaryTopicNotAllowed : k.PipeTopicUnbound, r),
        this.registerTopicReference(), this.finishNode(t, a);
      } else
        throw this.raise(k.PipeTopicUnconfiguredToken, r, {
          token: la(n)
        });
    }
    testTopicReferenceConfiguration(t, r, s) {
      switch (t) {
        case "hack":
          return this.hasPlugin(["pipelineOperator", {
            topicToken: la(s)
          }]);
        case "smart":
          return s === 27;
        default:
          throw this.raise(k.PipeTopicRequiresHackPipes, r);
      }
    }
    parseAsyncArrowUnaryFunction(t) {
      this.prodParam.enter(Rd(!0, this.prodParam.hasYield));
      let r = [this.parseIdentifier()];
      return this.prodParam.exit(), this.hasPrecedingLineBreak() && this.raise(k.LineTerminatorBeforeArrow, this.state.curPosition()), this.
      expect(19), this.parseArrowExpression(t, r, !0);
    }
    parseDo(t, r) {
      this.expectPlugin("doExpressions"), r && this.expectPlugin("asyncDoExpressions"), t.async = r, this.next();
      let s = this.state.labels;
      return this.state.labels = [], r ? (this.prodParam.enter(2), t.body = this.parseBlock(), this.prodParam.exit()) : t.body = this.parseBlock(),
      this.state.labels = s, this.finishNode(t, "DoExpression");
    }
    parseSuper() {
      let t = this.startNode();
      return this.next(), this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod ? this.raise(k.SuperNotAllowed,
      t) : !this.scope.allowSuper && !this.options.allowSuperOutsideMethod && this.raise(k.UnexpectedSuper, t), !this.match(10) && !this.match(
      0) && !this.match(16) && this.raise(k.UnsupportedSuper, t), this.finishNode(t, "Super");
    }
    parsePrivateName() {
      let t = this.startNode(), r = this.startNodeAt(us(this.state.startLoc, 1)), s = this.state.value;
      return this.next(), t.id = this.createIdentifier(r, s), this.finishNode(t, "PrivateName");
    }
    parseFunctionOrFunctionSent() {
      let t = this.startNode();
      if (this.next(), this.prodParam.hasYield && this.match(16)) {
        let r = this.createIdentifier(this.startNodeAtNode(t), "function");
        return this.next(), this.match(103) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected(), this.
        parseMetaProperty(t, r, "sent");
      }
      return this.parseFunction(t);
    }
    parseMetaProperty(t, r, s) {
      t.meta = r;
      let n = this.state.containsEsc;
      return t.property = this.parseIdentifier(!0), (t.property.name !== s || n) && this.raise(k.UnsupportedMetaProperty, t.property, {
        target: r.name,
        onlyValidPropertyName: s
      }), this.finishNode(t, "MetaProperty");
    }
    parseImportMetaProperty(t) {
      let r = this.createIdentifier(this.startNodeAtNode(t), "import");
      if (this.next(), this.isContextual(101))
        this.inModule || this.raise(k.ImportMetaOutsideModule, r), this.sawUnambiguousESM = !0;
      else if (this.isContextual(105) || this.isContextual(97)) {
        let s = this.isContextual(105);
        if (s || this.unexpected(), this.expectPlugin(s ? "sourcePhaseImports" : "deferredImportEvaluation"), !this.options.createImportExpressions)
          throw this.raise(k.DynamicImportPhaseRequiresImportExpressions, this.state.startLoc, {
            phase: this.state.value
          });
        return this.next(), t.phase = s ? "source" : "defer", this.parseImportCall(t);
      }
      return this.parseMetaProperty(t, r, "meta");
    }
    parseLiteralAtNode(t, r, s) {
      return this.addExtra(s, "rawValue", t), this.addExtra(s, "raw", this.input.slice(s.start, this.state.end)), s.value = t, this.next(), this.
      finishNode(s, r);
    }
    parseLiteral(t, r) {
      let s = this.startNode();
      return this.parseLiteralAtNode(t, r, s);
    }
    parseStringLiteral(t) {
      return this.parseLiteral(t, "StringLiteral");
    }
    parseNumericLiteral(t) {
      return this.parseLiteral(t, "NumericLiteral");
    }
    parseBigIntLiteral(t) {
      return this.parseLiteral(t, "BigIntLiteral");
    }
    parseDecimalLiteral(t) {
      return this.parseLiteral(t, "DecimalLiteral");
    }
    parseRegExpLiteral(t) {
      let r = this.parseLiteral(t.value, "RegExpLiteral");
      return r.pattern = t.pattern, r.flags = t.flags, r;
    }
    parseBooleanLiteral(t) {
      let r = this.startNode();
      return r.value = t, this.next(), this.finishNode(r, "BooleanLiteral");
    }
    parseNullLiteral() {
      let t = this.startNode();
      return this.next(), this.finishNode(t, "NullLiteral");
    }
    parseParenAndDistinguishExpression(t) {
      let r = this.state.startLoc, s;
      this.next(), this.expressionScope.enter(yCe());
      let n = this.state.maybeInArrowParameters, a = this.state.inFSharpPipelineDirectBody;
      this.state.maybeInArrowParameters = !0, this.state.inFSharpPipelineDirectBody = !1;
      let o = this.state.startLoc, l = [], u = new pl(), c = !0, f, p;
      for (; !this.match(11); ) {
        if (c)
          c = !1;
        else if (this.expect(12, u.optionalParametersLoc === null ? null : u.optionalParametersLoc), this.match(11)) {
          p = this.state.startLoc;
          break;
        }
        if (this.match(21)) {
          let b = this.state.startLoc;
          if (f = this.state.startLoc, l.push(this.parseParenItem(this.parseRestBinding(), b)), !this.checkCommaAfterRest(41))
            break;
        } else
          l.push(this.parseMaybeAssignAllowIn(u, this.parseParenItem));
      }
      let d = this.state.lastTokEndLoc;
      this.expect(11), this.state.maybeInArrowParameters = n, this.state.inFSharpPipelineDirectBody = a;
      let m = this.startNodeAt(r);
      return t && this.shouldParseArrow(l) && (m = this.parseArrow(m)) ? (this.checkDestructuringPrivate(u), this.expressionScope.validateAsPattern(),
      this.expressionScope.exit(), this.parseArrowExpression(m, l, !1), m) : (this.expressionScope.exit(), l.length || this.unexpected(this.
      state.lastTokStartLoc), p && this.unexpected(p), f && this.unexpected(f), this.checkExpressionErrors(u, !0), this.toReferencedListDeep(
      l, !0), l.length > 1 ? (s = this.startNodeAt(o), s.expressions = l, this.finishNode(s, "SequenceExpression"), this.resetEndLocation(s,
      d)) : s = l[0], this.wrapParenthesis(r, s));
    }
    wrapParenthesis(t, r) {
      if (!this.options.createParenthesizedExpressions)
        return this.addExtra(r, "parenthesized", !0), this.addExtra(r, "parenStart", t.index), this.takeSurroundingComments(r, t.index, this.
        state.lastTokEndLoc.index), r;
      let s = this.startNodeAt(t);
      return s.expression = r, this.finishNode(s, "ParenthesizedExpression");
    }
    shouldParseArrow(t) {
      return !this.canInsertSemicolon();
    }
    parseArrow(t) {
      if (this.eat(19))
        return t;
    }
    parseParenItem(t, r) {
      return t;
    }
    parseNewOrNewTarget() {
      let t = this.startNode();
      if (this.next(), this.match(16)) {
        let r = this.createIdentifier(this.startNodeAtNode(t), "new");
        this.next();
        let s = this.parseMetaProperty(t, r, "target");
        return !this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction && this.raise(k.UnexpectedNewTarget,
        s), s;
      }
      return this.parseNew(t);
    }
    parseNew(t) {
      if (this.parseNewCallee(t), this.eat(10)) {
        let r = this.parseExprList(11);
        this.toReferencedList(r), t.arguments = r;
      } else
        t.arguments = [];
      return this.finishNode(t, "NewExpression");
    }
    parseNewCallee(t) {
      let r = this.match(83), s = this.parseNoCallExpr();
      t.callee = s, r && (s.type === "Import" || s.type === "ImportExpression") && this.raise(k.ImportCallNotNewExpression, s);
    }
    parseTemplateElement(t) {
      let {
        start: r,
        startLoc: s,
        end: n,
        value: a
      } = this.state, o = r + 1, l = this.startNodeAt(us(s, 1));
      a === null && (t || this.raise(k.InvalidEscapeSequenceTemplate, us(this.state.firstInvalidTemplateEscapePos, 1)));
      let u = this.match(24), c = u ? -1 : -2, f = n + c;
      l.value = {
        raw: this.input.slice(o, f).replace(/\r\n?/g, `
`),
        cooked: a === null ? null : a.slice(1, c)
      }, l.tail = u, this.next();
      let p = this.finishNode(l, "TemplateElement");
      return this.resetEndLocation(p, us(this.state.lastTokEndLoc, c)), p;
    }
    parseTemplate(t) {
      let r = this.startNode();
      r.expressions = [];
      let s = this.parseTemplateElement(t);
      for (r.quasis = [s]; !s.tail; )
        r.expressions.push(this.parseTemplateSubstitution()), this.readTemplateContinuation(), r.quasis.push(s = this.parseTemplateElement(t));
      return this.finishNode(r, "TemplateLiteral");
    }
    parseTemplateSubstitution() {
      return this.parseExpression();
    }
    parseObjectLike(t, r, s, n) {
      s && this.expectPlugin("recordAndTuple");
      let a = this.state.inFSharpPipelineDirectBody;
      this.state.inFSharpPipelineDirectBody = !1;
      let o = /* @__PURE__ */ Object.create(null), l = !0, u = this.startNode();
      for (u.properties = [], this.next(); !this.match(t); ) {
        if (l)
          l = !1;
        else if (this.expect(12), this.match(t)) {
          this.addTrailingCommaExtraToNode(u);
          break;
        }
        let f;
        r ? f = this.parseBindingProperty() : (f = this.parsePropertyDefinition(n), this.checkProto(f, s, o, n)), s && !this.isObjectProperty(
        f) && f.type !== "SpreadElement" && this.raise(k.InvalidRecordProperty, f), f.shorthand && this.addExtra(f, "shorthand", !0), u.properties.
        push(f);
      }
      this.next(), this.state.inFSharpPipelineDirectBody = a;
      let c = "ObjectExpression";
      return r ? c = "ObjectPattern" : s && (c = "RecordExpression"), this.finishNode(u, c);
    }
    addTrailingCommaExtraToNode(t) {
      this.addExtra(t, "trailingComma", this.state.lastTokStartLoc.index), this.addExtra(t, "trailingCommaLoc", this.state.lastTokStartLoc, !1);
    }
    maybeAsyncOrAccessorProp(t) {
      return !t.computed && t.key.type === "Identifier" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));
    }
    parsePropertyDefinition(t) {
      let r = [];
      if (this.match(26))
        for (this.hasPlugin("decorators") && this.raise(k.UnsupportedPropertyDecorator, this.state.startLoc); this.match(26); )
          r.push(this.parseDecorator());
      let s = this.startNode(), n = !1, a = !1, o;
      if (this.match(21))
        return r.length && this.unexpected(), this.parseSpread();
      r.length && (s.decorators = r, r = []), s.method = !1, t && (o = this.state.startLoc);
      let l = this.eat(55);
      this.parsePropertyNamePrefixOperator(s);
      let u = this.state.containsEsc, c = this.parsePropertyName(s, t);
      if (!l && !u && this.maybeAsyncOrAccessorProp(s)) {
        let f = c.name;
        f === "async" && !this.hasPrecedingLineBreak() && (n = !0, this.resetPreviousNodeTrailingComments(c), l = this.eat(55), this.parsePropertyName(
        s)), (f === "get" || f === "set") && (a = !0, this.resetPreviousNodeTrailingComments(c), s.kind = f, this.match(55) && (l = !0, this.
        raise(k.AccessorIsGenerator, this.state.curPosition(), {
          kind: f
        }), this.next()), this.parsePropertyName(s));
      }
      return this.parseObjPropValue(s, o, l, n, !1, a, t);
    }
    getGetterSetterExpectedParamCount(t) {
      return t.kind === "get" ? 0 : 1;
    }
    getObjectOrClassMethodParams(t) {
      return t.params;
    }
    checkGetterSetterParams(t) {
      var r;
      let s = this.getGetterSetterExpectedParamCount(t), n = this.getObjectOrClassMethodParams(t);
      n.length !== s && this.raise(t.kind === "get" ? k.BadGetterArity : k.BadSetterArity, t), t.kind === "set" && ((r = n[n.length - 1]) ==
      null ? void 0 : r.type) === "RestElement" && this.raise(k.BadSetterRestParameter, t);
    }
    parseObjectMethod(t, r, s, n, a) {
      if (a) {
        let o = this.parseMethod(t, r, !1, !1, !1, "ObjectMethod");
        return this.checkGetterSetterParams(o), o;
      }
      if (s || r || this.match(10))
        return n && this.unexpected(), t.kind = "method", t.method = !0, this.parseMethod(t, r, s, !1, !1, "ObjectMethod");
    }
    parseObjectProperty(t, r, s, n) {
      if (t.shorthand = !1, this.eat(14))
        return t.value = s ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(n), this.finishNode(t, "ObjectProper\
ty");
      if (!t.computed && t.key.type === "Identifier") {
        if (this.checkReservedWord(t.key.name, t.key.loc.start, !0, !1), s)
          t.value = this.parseMaybeDefault(r, gi(t.key));
        else if (this.match(29)) {
          let a = this.state.startLoc;
          n != null ? n.shorthandAssignLoc === null && (n.shorthandAssignLoc = a) : this.raise(k.InvalidCoverInitializedName, a), t.value = this.
          parseMaybeDefault(r, gi(t.key));
        } else
          t.value = gi(t.key);
        return t.shorthand = !0, this.finishNode(t, "ObjectProperty");
      }
    }
    parseObjPropValue(t, r, s, n, a, o, l) {
      let u = this.parseObjectMethod(t, s, n, a, o) || this.parseObjectProperty(t, r, a, l);
      return u || this.unexpected(), u;
    }
    parsePropertyName(t, r) {
      if (this.eat(0))
        t.computed = !0, t.key = this.parseMaybeAssignAllowIn(), this.expect(3);
      else {
        let {
          type: s,
          value: n
        } = this.state, a;
        if (pn(s))
          a = this.parseIdentifier(!0);
        else
          switch (s) {
            case 134:
              a = this.parseNumericLiteral(n);
              break;
            case 133:
              a = this.parseStringLiteral(n);
              break;
            case 135:
              a = this.parseBigIntLiteral(n);
              break;
            case 136:
              a = this.parseDecimalLiteral(n);
              break;
            case 138: {
              let o = this.state.startLoc;
              r != null ? r.privateKeyLoc === null && (r.privateKeyLoc = o) : this.raise(k.UnexpectedPrivateField, o), a = this.parsePrivateName();
              break;
            }
            default:
              this.unexpected();
          }
        t.key = a, s !== 138 && (t.computed = !1);
      }
      return t.key;
    }
    initFunction(t, r) {
      t.id = null, t.generator = !1, t.async = r;
    }
    parseMethod(t, r, s, n, a, o, l = !1) {
      this.initFunction(t, s), t.generator = r, this.scope.enter(18 | (l ? 64 : 0) | (a ? 32 : 0)), this.prodParam.enter(Rd(s, t.generator)),
      this.parseFunctionParams(t, n);
      let u = this.parseFunctionBodyAndFinish(t, o, !0);
      return this.prodParam.exit(), this.scope.exit(), u;
    }
    parseArrayLike(t, r, s, n) {
      s && this.expectPlugin("recordAndTuple");
      let a = this.state.inFSharpPipelineDirectBody;
      this.state.inFSharpPipelineDirectBody = !1;
      let o = this.startNode();
      return this.next(), o.elements = this.parseExprList(t, !s, n, o), this.state.inFSharpPipelineDirectBody = a, this.finishNode(o, s ? "T\
upleExpression" : "ArrayExpression");
    }
    parseArrowExpression(t, r, s, n) {
      this.scope.enter(6);
      let a = Rd(s, !1);
      !this.match(5) && this.prodParam.hasIn && (a |= 8), this.prodParam.enter(a), this.initFunction(t, s);
      let o = this.state.maybeInArrowParameters;
      return r && (this.state.maybeInArrowParameters = !0, this.setArrowFunctionParameters(t, r, n)), this.state.maybeInArrowParameters = !1,
      this.parseFunctionBody(t, !0), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = o, this.finishNode(t, "Ar\
rowFunctionExpression");
    }
    setArrowFunctionParameters(t, r, s) {
      this.toAssignableList(r, s, !1), t.params = r;
    }
    parseFunctionBodyAndFinish(t, r, s = !1) {
      return this.parseFunctionBody(t, !1, s), this.finishNode(t, r);
    }
    parseFunctionBody(t, r, s = !1) {
      let n = r && !this.match(5);
      if (this.expressionScope.enter(pB()), n)
        t.body = this.parseMaybeAssign(), this.checkParams(t, !1, r, !1);
      else {
        let a = this.state.strict, o = this.state.labels;
        this.state.labels = [], this.prodParam.enter(this.prodParam.currentFlags() | 4), t.body = this.parseBlock(!0, !1, (l) => {
          let u = !this.isSimpleParamList(t.params);
          l && u && this.raise(k.IllegalLanguageModeDirective, (t.kind === "method" || t.kind === "constructor") && t.key ? t.key.loc.end : t);
          let c = !a && this.state.strict;
          this.checkParams(t, !this.state.strict && !r && !s && !u, r, c), this.state.strict && t.id && this.checkIdentifier(t.id, 65, c);
        }), this.prodParam.exit(), this.state.labels = o;
      }
      this.expressionScope.exit();
    }
    isSimpleParameter(t) {
      return t.type === "Identifier";
    }
    isSimpleParamList(t) {
      for (let r = 0, s = t.length; r < s; r++)
        if (!this.isSimpleParameter(t[r])) return !1;
      return !0;
    }
    checkParams(t, r, s, n = !0) {
      let a = !r && /* @__PURE__ */ new Set(), o = {
        type: "FormalParameters"
      };
      for (let l of t.params)
        this.checkLVal(l, {
          in: o,
          binding: 5,
          checkClashes: a,
          strictModeChanged: n
        });
    }
    parseExprList(t, r, s, n) {
      let a = [], o = !0;
      for (; !this.eat(t); ) {
        if (o)
          o = !1;
        else if (this.expect(12), this.match(t)) {
          n && this.addTrailingCommaExtraToNode(n), this.next();
          break;
        }
        a.push(this.parseExprListItem(r, s));
      }
      return a;
    }
    parseExprListItem(t, r, s) {
      let n;
      if (this.match(12))
        t || this.raise(k.UnexpectedToken, this.state.curPosition(), {
          unexpected: ","
        }), n = null;
      else if (this.match(21)) {
        let a = this.state.startLoc;
        n = this.parseParenItem(this.parseSpread(r), a);
      } else if (this.match(17)) {
        this.expectPlugin("partialApplication"), s || this.raise(k.UnexpectedArgumentPlaceholder, this.state.startLoc);
        let a = this.startNode();
        this.next(), n = this.finishNode(a, "ArgumentPlaceholder");
      } else
        n = this.parseMaybeAssignAllowIn(r, this.parseParenItem);
      return n;
    }
    parseIdentifier(t) {
      let r = this.startNode(), s = this.parseIdentifierName(t);
      return this.createIdentifier(r, s);
    }
    createIdentifier(t, r) {
      return t.name = r, t.loc.identifierName = r, this.finishNode(t, "Identifier");
    }
    parseIdentifierName(t) {
      let r, {
        startLoc: s,
        type: n
      } = this.state;
      pn(n) ? r = this.state.value : this.unexpected();
      let a = VAe(n);
      return t ? a && this.replaceToken(132) : this.checkReservedWord(r, s, a, !1), this.next(), r;
    }
    checkReservedWord(t, r, s, n) {
      if (t.length > 10 || !lCe(t))
        return;
      if (s && iCe(t)) {
        this.raise(k.UnexpectedKeyword, r, {
          keyword: t
        });
        return;
      }
      if ((this.state.strict ? n ? oB : iB : nB)(t, this.inModule)) {
        this.raise(k.UnexpectedReservedWord, r, {
          reservedWord: t
        });
        return;
      } else if (t === "yield") {
        if (this.prodParam.hasYield) {
          this.raise(k.YieldBindingIdentifier, r);
          return;
        }
      } else if (t === "await") {
        if (this.prodParam.hasAwait) {
          this.raise(k.AwaitBindingIdentifier, r);
          return;
        }
        if (this.scope.inStaticBlock) {
          this.raise(k.AwaitBindingIdentifierInStaticBlock, r);
          return;
        }
        this.expressionScope.recordAsyncArrowParametersError(r);
      } else if (t === "arguments" && this.scope.inClassAndNotInNonArrowFunction) {
        this.raise(k.ArgumentsInClass, r);
        return;
      }
    }
    isAwaitAllowed() {
      return !!(this.prodParam.hasAwait || this.options.allowAwaitOutsideFunction && !this.scope.inFunction);
    }
    parseAwait(t) {
      let r = this.startNodeAt(t);
      return this.expressionScope.recordParameterInitializerError(k.AwaitExpressionFormalParameter, r), this.eat(55) && this.raise(k.ObsoleteAwaitStar,
      r), !this.scope.inFunction && !this.options.allowAwaitOutsideFunction && (this.isAmbiguousAwait() ? this.ambiguousScriptDifferentAst =
      !0 : this.sawUnambiguousESM = !0), this.state.soloAwait || (r.argument = this.parseMaybeUnary(null, !0)), this.finishNode(r, "AwaitExp\
ression");
    }
    isAmbiguousAwait() {
      if (this.hasPrecedingLineBreak()) return !0;
      let {
        type: t
      } = this.state;
      return t === 53 || t === 10 || t === 0 || Fd(t) || t === 102 && !this.state.containsEsc || t === 137 || t === 56 || this.hasPlugin("v8\
intrinsic") && t === 54;
    }
    parseYield() {
      let t = this.startNode();
      this.expressionScope.recordParameterInitializerError(k.YieldInParameter, t), this.next();
      let r = !1, s = null;
      if (!this.hasPrecedingLineBreak())
        switch (r = this.eat(55), this.state.type) {
          case 13:
          case 139:
          case 8:
          case 11:
          case 3:
          case 9:
          case 14:
          case 12:
            if (!r) break;
          default:
            s = this.parseMaybeAssign();
        }
      return t.delegate = r, t.argument = s, this.finishNode(t, "YieldExpression");
    }
    parseImportCall(t) {
      return this.next(), t.source = this.parseMaybeAssignAllowIn(), (this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions")) &&
      (t.options = null), this.eat(12) && (this.expectImportAttributesPlugin(), this.match(11) || (t.options = this.parseMaybeAssignAllowIn(),
      this.eat(12))), this.expect(11), this.finishNode(t, "ImportExpression");
    }
    checkPipelineAtInfixOperator(t, r) {
      this.hasPlugin(["pipelineOperator", {
        proposal: "smart"
      }]) && t.type === "SequenceExpression" && this.raise(k.PipelineHeadSequenceExpression, r);
    }
    parseSmartPipelineBodyInStyle(t, r) {
      if (this.isSimpleReference(t)) {
        let s = this.startNodeAt(r);
        return s.callee = t, this.finishNode(s, "PipelineBareFunction");
      } else {
        let s = this.startNodeAt(r);
        return this.checkSmartPipeTopicBodyEarlyErrors(r), s.expression = t, this.finishNode(s, "PipelineTopicExpression");
      }
    }
    isSimpleReference(t) {
      switch (t.type) {
        case "MemberExpression":
          return !t.computed && this.isSimpleReference(t.object);
        case "Identifier":
          return !0;
        default:
          return !1;
      }
    }
    checkSmartPipeTopicBodyEarlyErrors(t) {
      if (this.match(19))
        throw this.raise(k.PipelineBodyNoArrow, this.state.startLoc);
      this.topicReferenceWasUsedInCurrentContext() || this.raise(k.PipelineTopicUnused, t);
    }
    withTopicBindingContext(t) {
      let r = this.state.topicContext;
      this.state.topicContext = {
        maxNumOfResolvableTopics: 1,
        maxTopicIndex: null
      };
      try {
        return t();
      } finally {
        this.state.topicContext = r;
      }
    }
    withSmartMixTopicForbiddingContext(t) {
      if (this.hasPlugin(["pipelineOperator", {
        proposal: "smart"
      }])) {
        let r = this.state.topicContext;
        this.state.topicContext = {
          maxNumOfResolvableTopics: 0,
          maxTopicIndex: null
        };
        try {
          return t();
        } finally {
          this.state.topicContext = r;
        }
      } else
        return t();
    }
    withSoloAwaitPermittingContext(t) {
      let r = this.state.soloAwait;
      this.state.soloAwait = !0;
      try {
        return t();
      } finally {
        this.state.soloAwait = r;
      }
    }
    allowInAnd(t) {
      let r = this.prodParam.currentFlags();
      if (8 & ~r) {
        this.prodParam.enter(r | 8);
        try {
          return t();
        } finally {
          this.prodParam.exit();
        }
      }
      return t();
    }
    disallowInAnd(t) {
      let r = this.prodParam.currentFlags();
      if (8 & r) {
        this.prodParam.enter(r & -9);
        try {
          return t();
        } finally {
          this.prodParam.exit();
        }
      }
      return t();
    }
    registerTopicReference() {
      this.state.topicContext.maxTopicIndex = 0;
    }
    topicReferenceIsAllowedInCurrentContext() {
      return this.state.topicContext.maxNumOfResolvableTopics >= 1;
    }
    topicReferenceWasUsedInCurrentContext() {
      return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;
    }
    parseFSharpPipelineBody(t) {
      let r = this.state.startLoc;
      this.state.potentialArrowAt = this.state.start;
      let s = this.state.inFSharpPipelineDirectBody;
      this.state.inFSharpPipelineDirectBody = !0;
      let n = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), r, t);
      return this.state.inFSharpPipelineDirectBody = s, n;
    }
    parseModuleExpression() {
      this.expectPlugin("moduleBlocks");
      let t = this.startNode();
      this.next(), this.match(5) || this.unexpected(null, 5);
      let r = this.startNodeAt(this.state.endLoc);
      this.next();
      let s = this.initializeScopes(!0);
      this.enterInitialScopes();
      try {
        t.body = this.parseProgram(r, 8, "module");
      } finally {
        s();
      }
      return this.finishNode(t, "ModuleExpression");
    }
    parsePropertyNamePrefixOperator(t) {
    }
  }, zv = {
    kind: 1
  }, UCe = {
    kind: 2
  }, VCe = /[\uD800-\uDFFF]/u, Jv = /in(?:stanceof)?/y;
  function WCe(e, t) {
    for (let r = 0; r < e.length; r++) {
      let s = e[r], {
        type: n
      } = s;
      if (typeof n == "number") {
        {
          if (n === 138) {
            let {
              loc: a,
              start: o,
              value: l,
              end: u
            } = s, c = o + 1, f = us(a.start, 1);
            e.splice(r, 1, new Fn({
              type: di(27),
              value: "#",
              start: o,
              end: c,
              startLoc: a.start,
              endLoc: f
            }), new Fn({
              type: di(132),
              value: l,
              start: c,
              end: u,
              startLoc: f,
              endLoc: a.end
            })), r++;
            continue;
          }
          if (Fd(n)) {
            let {
              loc: a,
              start: o,
              value: l,
              end: u
            } = s, c = o + 1, f = us(a.start, 1), p;
            t.charCodeAt(o) === 96 ? p = new Fn({
              type: di(22),
              value: "`",
              start: o,
              end: c,
              startLoc: a.start,
              endLoc: f
            }) : p = new Fn({
              type: di(8),
              value: "}",
              start: o,
              end: c,
              startLoc: a.start,
              endLoc: f
            });
            let d, m, b, h;
            n === 24 ? (m = u - 1, b = us(a.end, -1), d = l === null ? null : l.slice(1, -1), h = new Fn({
              type: di(22),
              value: "`",
              start: m,
              end: u,
              startLoc: b,
              endLoc: a.end
            })) : (m = u - 2, b = us(a.end, -2), d = l === null ? null : l.slice(1, -2), h = new Fn({
              type: di(23),
              value: "${",
              start: m,
              end: u,
              startLoc: b,
              endLoc: a.end
            })), e.splice(r, 1, p, new Fn({
              type: di(20),
              value: d,
              start: c,
              end: m,
              startLoc: f,
              endLoc: b
            }), h), r += 2;
            continue;
          }
        }
        s.type = di(n);
      }
    }
    return e;
  }
  i(WCe, "babel7CompatTokens");
  var gS = class extends yS {
    static {
      i(this, "StatementParser");
    }
    parseTopLevel(t, r) {
      return t.program = this.parseProgram(r), t.comments = this.comments, this.options.tokens && (t.tokens = WCe(this.tokens, this.input)),
      this.finishNode(t, "File");
    }
    parseProgram(t, r = 139, s = this.options.sourceType) {
      if (t.sourceType = s, t.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(t, !0, !0, r), this.inModule && !this.options.
      allowUndeclaredExports && this.scope.undefinedExports.size > 0)
        for (let [a, o] of Array.from(this.scope.undefinedExports))
          this.raise(k.ModuleExportUndefined, o, {
            localName: a
          });
      let n;
      return r === 139 ? n = this.finishNode(t, "Program") : n = this.finishNodeAt(t, "Program", us(this.state.startLoc, -1)), n;
    }
    stmtToDirective(t) {
      let r = t;
      r.type = "Directive", r.value = r.expression, delete r.expression;
      let s = r.value, n = s.value, a = this.input.slice(s.start, s.end), o = s.value = a.slice(1, -1);
      return this.addExtra(s, "raw", a), this.addExtra(s, "rawValue", o), this.addExtra(s, "expressionValue", n), s.type = "DirectiveLiteral",
      r;
    }
    parseInterpreterDirective() {
      if (!this.match(28))
        return null;
      let t = this.startNode();
      return t.value = this.state.value, this.next(), this.finishNode(t, "InterpreterDirective");
    }
    isLet() {
      return this.isContextual(100) ? this.hasFollowingBindingAtom() : !1;
    }
    chStartsBindingIdentifier(t, r) {
      if (mi(t)) {
        if (Jv.lastIndex = r, Jv.test(this.input)) {
          let s = this.codePointAtPos(Jv.lastIndex);
          if (!fl(s) && s !== 92)
            return !1;
        }
        return !0;
      } else return t === 92;
    }
    chStartsBindingPattern(t) {
      return t === 91 || t === 123;
    }
    hasFollowingBindingAtom() {
      let t = this.nextTokenStart(), r = this.codePointAtPos(t);
      return this.chStartsBindingPattern(r) || this.chStartsBindingIdentifier(r, t);
    }
    hasInLineFollowingBindingIdentifier() {
      let t = this.nextTokenInLineStart(), r = this.codePointAtPos(t);
      return this.chStartsBindingIdentifier(r, t);
    }
    startsUsingForOf() {
      let {
        type: t,
        containsEsc: r
      } = this.lookahead();
      if (t === 102 && !r)
        return !1;
      if (Tt(t) && !this.hasFollowingLineBreak())
        return this.expectPlugin("explicitResourceManagement"), !0;
    }
    startsAwaitUsing() {
      let t = this.nextTokenInLineStart();
      if (this.isUnparsedContextual(t, "using")) {
        t = this.nextTokenInLineStartSince(t + 5);
        let r = this.codePointAtPos(t);
        if (this.chStartsBindingIdentifier(r, t))
          return this.expectPlugin("explicitResourceManagement"), !0;
      }
      return !1;
    }
    parseModuleItem() {
      return this.parseStatementLike(15);
    }
    parseStatementListItem() {
      return this.parseStatementLike(6 | (!this.options.annexB || this.state.strict ? 0 : 8));
    }
    parseStatementOrSloppyAnnexBFunctionDeclaration(t = !1) {
      let r = 0;
      return this.options.annexB && !this.state.strict && (r |= 4, t && (r |= 8)), this.parseStatementLike(r);
    }
    parseStatement() {
      return this.parseStatementLike(0);
    }
    parseStatementLike(t) {
      let r = null;
      return this.match(26) && (r = this.parseDecorators(!0)), this.parseStatementContent(t, r);
    }
    parseStatementContent(t, r) {
      let s = this.state.type, n = this.startNode(), a = !!(t & 2), o = !!(t & 4), l = t & 1;
      switch (s) {
        case 60:
          return this.parseBreakContinueStatement(n, !0);
        case 63:
          return this.parseBreakContinueStatement(n, !1);
        case 64:
          return this.parseDebuggerStatement(n);
        case 90:
          return this.parseDoWhileStatement(n);
        case 91:
          return this.parseForStatement(n);
        case 68:
          if (this.lookaheadCharCode() === 46) break;
          return o || this.raise(this.state.strict ? k.StrictFunction : this.options.annexB ? k.SloppyFunctionAnnexB : k.SloppyFunction, this.
          state.startLoc), this.parseFunctionStatement(n, !1, !a && o);
        case 80:
          return a || this.unexpected(), this.parseClass(this.maybeTakeDecorators(r, n), !0);
        case 69:
          return this.parseIfStatement(n);
        case 70:
          return this.parseReturnStatement(n);
        case 71:
          return this.parseSwitchStatement(n);
        case 72:
          return this.parseThrowStatement(n);
        case 73:
          return this.parseTryStatement(n);
        case 96:
          if (!this.state.containsEsc && this.startsAwaitUsing())
            return this.isAwaitAllowed() ? a || this.raise(k.UnexpectedLexicalDeclaration, n) : this.raise(k.AwaitUsingNotInAsyncContext, n),
            this.next(), this.parseVarStatement(n, "await using");
          break;
        case 107:
          if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier())
            break;
          return this.expectPlugin("explicitResourceManagement"), !this.scope.inModule && this.scope.inTopLevel ? this.raise(k.UnexpectedUsingDeclaration,
          this.state.startLoc) : a || this.raise(k.UnexpectedLexicalDeclaration, this.state.startLoc), this.parseVarStatement(n, "using");
        case 100: {
          if (this.state.containsEsc)
            break;
          let f = this.nextTokenStart(), p = this.codePointAtPos(f);
          if (p !== 91 && (!a && this.hasFollowingLineBreak() || !this.chStartsBindingIdentifier(p, f) && p !== 123))
            break;
        }
        case 75:
          a || this.raise(k.UnexpectedLexicalDeclaration, this.state.startLoc);
        case 74: {
          let f = this.state.value;
          return this.parseVarStatement(n, f);
        }
        case 92:
          return this.parseWhileStatement(n);
        case 76:
          return this.parseWithStatement(n);
        case 5:
          return this.parseBlock();
        case 13:
          return this.parseEmptyStatement(n);
        case 83: {
          let f = this.lookaheadCharCode();
          if (f === 40 || f === 46)
            break;
        }
        case 82: {
          !this.options.allowImportExportEverywhere && !l && this.raise(k.UnexpectedImportExport, this.state.startLoc), this.next();
          let f;
          return s === 83 ? (f = this.parseImport(n), f.type === "ImportDeclaration" && (!f.importKind || f.importKind === "value") && (this.
          sawUnambiguousESM = !0)) : (f = this.parseExport(n, r), (f.type === "ExportNamedDeclaration" && (!f.exportKind || f.exportKind ===
          "value") || f.type === "ExportAllDeclaration" && (!f.exportKind || f.exportKind === "value") || f.type === "ExportDefaultDeclarati\
on") && (this.sawUnambiguousESM = !0)), this.assertModuleNodeAllowed(f), f;
        }
        default:
          if (this.isAsyncFunction())
            return a || this.raise(k.AsyncFunctionInSingleStatementContext, this.state.startLoc), this.next(), this.parseFunctionStatement(n,
            !0, !a && o);
      }
      let u = this.state.value, c = this.parseExpression();
      return Tt(s) && c.type === "Identifier" && this.eat(14) ? this.parseLabeledStatement(n, u, c, t) : this.parseExpressionStatement(n, c,
      r);
    }
    assertModuleNodeAllowed(t) {
      !this.options.allowImportExportEverywhere && !this.inModule && this.raise(k.ImportOutsideModule, t);
    }
    decoratorsEnabledBeforeExport() {
      return this.hasPlugin("decorators-legacy") ? !0 : this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBefore\
Export") !== !1;
    }
    maybeTakeDecorators(t, r, s) {
      return t && (r.decorators && r.decorators.length > 0 ? (typeof this.getPluginOption("decorators", "decoratorsBeforeExport") != "boolea\
n" && this.raise(k.DecoratorsBeforeAfterExport, r.decorators[0]), r.decorators.unshift(...t)) : r.decorators = t, this.resetStartLocationFromNode(
      r, t[0]), s && this.resetStartLocationFromNode(s, r)), r;
    }
    canHaveLeadingDecorator() {
      return this.match(80);
    }
    parseDecorators(t) {
      let r = [];
      do
        r.push(this.parseDecorator());
      while (this.match(26));
      if (this.match(82))
        t || this.unexpected(), this.decoratorsEnabledBeforeExport() || this.raise(k.DecoratorExportClass, this.state.startLoc);
      else if (!this.canHaveLeadingDecorator())
        throw this.raise(k.UnexpectedLeadingDecorator, this.state.startLoc);
      return r;
    }
    parseDecorator() {
      this.expectOnePlugin(["decorators", "decorators-legacy"]);
      let t = this.startNode();
      if (this.next(), this.hasPlugin("decorators")) {
        let r = this.state.startLoc, s;
        if (this.match(10)) {
          let n = this.state.startLoc;
          this.next(), s = this.parseExpression(), this.expect(11), s = this.wrapParenthesis(n, s);
          let a = this.state.startLoc;
          t.expression = this.parseMaybeDecoratorArguments(s), this.getPluginOption("decorators", "allowCallParenthesized") === !1 && t.expression !==
          s && this.raise(k.DecoratorArgumentsOutsideParentheses, a);
        } else {
          for (s = this.parseIdentifier(!1); this.eat(16); ) {
            let n = this.startNodeAt(r);
            n.object = s, this.match(138) ? (this.classScope.usePrivateName(this.state.value, this.state.startLoc), n.property = this.parsePrivateName()) :
            n.property = this.parseIdentifier(!0), n.computed = !1, s = this.finishNode(n, "MemberExpression");
          }
          t.expression = this.parseMaybeDecoratorArguments(s);
        }
      } else
        t.expression = this.parseExprSubscripts();
      return this.finishNode(t, "Decorator");
    }
    parseMaybeDecoratorArguments(t) {
      if (this.eat(10)) {
        let r = this.startNodeAtNode(t);
        return r.callee = t, r.arguments = this.parseCallExpressionArguments(11, !1), this.toReferencedList(r.arguments), this.finishNode(r,
        "CallExpression");
      }
      return t;
    }
    parseBreakContinueStatement(t, r) {
      return this.next(), this.isLineTerminator() ? t.label = null : (t.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(
      t, r), this.finishNode(t, r ? "BreakStatement" : "ContinueStatement");
    }
    verifyBreakContinue(t, r) {
      let s;
      for (s = 0; s < this.state.labels.length; ++s) {
        let n = this.state.labels[s];
        if ((t.label == null || n.name === t.label.name) && (n.kind != null && (r || n.kind === 1) || t.label && r))
          break;
      }
      if (s === this.state.labels.length) {
        let n = r ? "BreakStatement" : "ContinueStatement";
        this.raise(k.IllegalBreakContinue, t, {
          type: n
        });
      }
    }
    parseDebuggerStatement(t) {
      return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");
    }
    parseHeaderExpression() {
      this.expect(10);
      let t = this.parseExpression();
      return this.expect(11), t;
    }
    parseDoWhileStatement(t) {
      return this.next(), this.state.labels.push(zv), t.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.state.
      labels.pop(), this.expect(92), t.test = this.parseHeaderExpression(), this.eat(13), this.finishNode(t, "DoWhileStatement");
    }
    parseForStatement(t) {
      this.next(), this.state.labels.push(zv);
      let r = null;
      if (this.isAwaitAllowed() && this.eatContextual(96) && (r = this.state.lastTokStartLoc), this.scope.enter(0), this.expect(10), this.match(
      13))
        return r !== null && this.unexpected(r), this.parseFor(t, null);
      let s = this.isContextual(100);
      {
        let u = this.isContextual(96) && this.startsAwaitUsing(), c = u || this.isContextual(107) && this.startsUsingForOf(), f = s && this.
        hasFollowingBindingAtom() || c;
        if (this.match(74) || this.match(75) || f) {
          let p = this.startNode(), d;
          u ? (d = "await using", this.isAwaitAllowed() || this.raise(k.AwaitUsingNotInAsyncContext, this.state.startLoc), this.next()) : d =
          this.state.value, this.next(), this.parseVar(p, !0, d);
          let m = this.finishNode(p, "VariableDeclaration"), b = this.match(58);
          return b && c && this.raise(k.ForInUsing, m), (b || this.isContextual(102)) && m.declarations.length === 1 ? this.parseForIn(t, m,
          r) : (r !== null && this.unexpected(r), this.parseFor(t, m));
        }
      }
      let n = this.isContextual(95), a = new pl(), o = this.parseExpression(!0, a), l = this.isContextual(102);
      if (l && (s && this.raise(k.ForOfLet, o), r === null && n && o.type === "Identifier" && this.raise(k.ForOfAsync, o)), l || this.match(
      58)) {
        this.checkDestructuringPrivate(a), this.toAssignable(o, !0);
        let u = l ? "ForOfStatement" : "ForInStatement";
        return this.checkLVal(o, {
          in: {
            type: u
          }
        }), this.parseForIn(t, o, r);
      } else
        this.checkExpressionErrors(a, !0);
      return r !== null && this.unexpected(r), this.parseFor(t, o);
    }
    parseFunctionStatement(t, r, s) {
      return this.next(), this.parseFunction(t, 1 | (s ? 2 : 0) | (r ? 8 : 0));
    }
    parseIfStatement(t) {
      return this.next(), t.test = this.parseHeaderExpression(), t.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration(), t.alternate =
      this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null, this.finishNode(t, "IfStatement");
    }
    parseReturnStatement(t) {
      return !this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction && this.raise(k.IllegalReturn, this.state.startLoc), this.
      next(), this.isLineTerminator() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "Ret\
urnStatement");
    }
    parseSwitchStatement(t) {
      this.next(), t.discriminant = this.parseHeaderExpression();
      let r = t.cases = [];
      this.expect(5), this.state.labels.push(UCe), this.scope.enter(0);
      let s;
      for (let n; !this.match(8); )
        if (this.match(61) || this.match(65)) {
          let a = this.match(61);
          s && this.finishNode(s, "SwitchCase"), r.push(s = this.startNode()), s.consequent = [], this.next(), a ? s.test = this.parseExpression() :
          (n && this.raise(k.MultipleDefaultsInSwitch, this.state.lastTokStartLoc), n = !0, s.test = null), this.expect(14);
        } else
          s ? s.consequent.push(this.parseStatementListItem()) : this.unexpected();
      return this.scope.exit(), s && this.finishNode(s, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(t, "SwitchState\
ment");
    }
    parseThrowStatement(t) {
      return this.next(), this.hasPrecedingLineBreak() && this.raise(k.NewlineAfterThrow, this.state.lastTokEndLoc), t.argument = this.parseExpression(),
      this.semicolon(), this.finishNode(t, "ThrowStatement");
    }
    parseCatchClauseParam() {
      let t = this.parseBindingAtom();
      return this.scope.enter(this.options.annexB && t.type === "Identifier" ? 8 : 0), this.checkLVal(t, {
        in: {
          type: "CatchClause"
        },
        binding: 9
      }), t;
    }
    parseTryStatement(t) {
      if (this.next(), t.block = this.parseBlock(), t.handler = null, this.match(62)) {
        let r = this.startNode();
        this.next(), this.match(10) ? (this.expect(10), r.param = this.parseCatchClauseParam(), this.expect(11)) : (r.param = null, this.scope.
        enter(0)), r.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(!1, !1)), this.scope.exit(), t.handler = this.finishNode(
        r, "CatchClause");
      }
      return t.finalizer = this.eat(67) ? this.parseBlock() : null, !t.handler && !t.finalizer && this.raise(k.NoCatchOrFinally, t), this.finishNode(
      t, "TryStatement");
    }
    parseVarStatement(t, r, s = !1) {
      return this.next(), this.parseVar(t, !1, r, s), this.semicolon(), this.finishNode(t, "VariableDeclaration");
    }
    parseWhileStatement(t) {
      return this.next(), t.test = this.parseHeaderExpression(), this.state.labels.push(zv), t.body = this.withSmartMixTopicForbiddingContext(
      () => this.parseStatement()), this.state.labels.pop(), this.finishNode(t, "WhileStatement");
    }
    parseWithStatement(t) {
      return this.state.strict && this.raise(k.StrictWith, this.state.startLoc), this.next(), t.object = this.parseHeaderExpression(), t.body =
      this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.finishNode(t, "WithStatement");
    }
    parseEmptyStatement(t) {
      return this.next(), this.finishNode(t, "EmptyStatement");
    }
    parseLabeledStatement(t, r, s, n) {
      for (let o of this.state.labels)
        o.name === r && this.raise(k.LabelRedeclaration, s, {
          labelName: r
        });
      let a = GAe(this.state.type) ? 1 : this.match(71) ? 2 : null;
      for (let o = this.state.labels.length - 1; o >= 0; o--) {
        let l = this.state.labels[o];
        if (l.statementStart === t.start)
          l.statementStart = this.state.start, l.kind = a;
        else
          break;
      }
      return this.state.labels.push({
        name: r,
        kind: a,
        statementStart: this.state.start
      }), t.body = n & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(!0) : this.parseStatement(), this.state.labels.pop(), t.label =
      s, this.finishNode(t, "LabeledStatement");
    }
    parseExpressionStatement(t, r, s) {
      return t.expression = r, this.semicolon(), this.finishNode(t, "ExpressionStatement");
    }
    parseBlock(t = !1, r = !0, s) {
      let n = this.startNode();
      return t && this.state.strictErrors.clear(), this.expect(5), r && this.scope.enter(0), this.parseBlockBody(n, t, !1, 8, s), r && this.
      scope.exit(), this.finishNode(n, "BlockStatement");
    }
    isValidDirective(t) {
      return t.type === "ExpressionStatement" && t.expression.type === "StringLiteral" && !t.expression.extra.parenthesized;
    }
    parseBlockBody(t, r, s, n, a) {
      let o = t.body = [], l = t.directives = [];
      this.parseBlockOrModuleBlockBody(o, r ? l : void 0, s, n, a);
    }
    parseBlockOrModuleBlockBody(t, r, s, n, a) {
      let o = this.state.strict, l = !1, u = !1;
      for (; !this.match(n); ) {
        let c = s ? this.parseModuleItem() : this.parseStatementListItem();
        if (r && !u) {
          if (this.isValidDirective(c)) {
            let f = this.stmtToDirective(c);
            r.push(f), !l && f.value.value === "use strict" && (l = !0, this.setStrict(!0));
            continue;
          }
          u = !0, this.state.strictErrors.clear();
        }
        t.push(c);
      }
      a?.call(this, l), o || this.setStrict(!1), this.next();
    }
    parseFor(t, r) {
      return t.init = r, this.semicolon(!1), t.test = this.match(13) ? null : this.parseExpression(), this.semicolon(!1), t.update = this.match(
      11) ? null : this.parseExpression(), this.expect(11), t.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement()), this.
      scope.exit(), this.state.labels.pop(), this.finishNode(t, "ForStatement");
    }
    parseForIn(t, r, s) {
      let n = this.match(58);
      return this.next(), n ? s !== null && this.unexpected(s) : t.await = s !== null, r.type === "VariableDeclaration" && r.declarations[0].
      init != null && (!n || !this.options.annexB || this.state.strict || r.kind !== "var" || r.declarations[0].id.type !== "Identifier") &&
      this.raise(k.ForInOfLoopInitializer, r, {
        type: n ? "ForInStatement" : "ForOfStatement"
      }), r.type === "AssignmentPattern" && this.raise(k.InvalidLhs, r, {
        ancestor: {
          type: "ForStatement"
        }
      }), t.left = r, t.right = n ? this.parseExpression() : this.parseMaybeAssignAllowIn(), this.expect(11), t.body = this.withSmartMixTopicForbiddingContext(
      () => this.parseStatement()), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, n ? "ForInStatement" : "ForOfStatement");
    }
    parseVar(t, r, s, n = !1) {
      let a = t.declarations = [];
      for (t.kind = s; ; ) {
        let o = this.startNode();
        if (this.parseVarId(o, s), o.init = this.eat(29) ? r ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn() : null, o.
        init === null && !n && (o.id.type !== "Identifier" && !(r && (this.match(58) || this.isContextual(102))) ? this.raise(k.DeclarationMissingInitializer,
        this.state.lastTokEndLoc, {
          kind: "destructuring"
        }) : (s === "const" || s === "using" || s === "await using") && !(this.match(58) || this.isContextual(102)) && this.raise(k.DeclarationMissingInitializer,
        this.state.lastTokEndLoc, {
          kind: s
        })), a.push(this.finishNode(o, "VariableDeclarator")), !this.eat(12)) break;
      }
      return t;
    }
    parseVarId(t, r) {
      let s = this.parseBindingAtom();
      this.checkLVal(s, {
        in: {
          type: "VariableDeclarator"
        },
        binding: r === "var" ? 5 : 8201
      }), t.id = s;
    }
    parseAsyncFunctionExpression(t) {
      return this.parseFunction(t, 8);
    }
    parseFunction(t, r = 0) {
      let s = r & 2, n = !!(r & 1), a = n && !(r & 4), o = !!(r & 8);
      this.initFunction(t, o), this.match(55) && (s && this.raise(k.GeneratorInSingleStatementContext, this.state.startLoc), this.next(), t.
      generator = !0), n && (t.id = this.parseFunctionId(a));
      let l = this.state.maybeInArrowParameters;
      return this.state.maybeInArrowParameters = !1, this.scope.enter(2), this.prodParam.enter(Rd(o, t.generator)), n || (t.id = this.parseFunctionId()),
      this.parseFunctionParams(t, !1), this.withSmartMixTopicForbiddingContext(() => {
        this.parseFunctionBodyAndFinish(t, n ? "FunctionDeclaration" : "FunctionExpression");
      }), this.prodParam.exit(), this.scope.exit(), n && !s && this.registerFunctionStatementId(t), this.state.maybeInArrowParameters = l, t;
    }
    parseFunctionId(t) {
      return t || Tt(this.state.type) ? this.parseIdentifier() : null;
    }
    parseFunctionParams(t, r) {
      this.expect(10), this.expressionScope.enter(mCe()), t.params = this.parseBindingList(11, 41, 2 | (r ? 4 : 0)), this.expressionScope.exit();
    }
    registerFunctionStatementId(t) {
      t.id && this.scope.declareName(t.id.name, !this.options.annexB || this.state.strict || t.generator || t.async ? this.scope.treatFunctionsAsVar ?
      5 : 8201 : 17, t.id.loc.start);
    }
    parseClass(t, r, s) {
      this.next();
      let n = this.state.strict;
      return this.state.strict = !0, this.parseClassId(t, r, s), this.parseClassSuper(t), t.body = this.parseClassBody(!!t.superClass, n), this.
      finishNode(t, r ? "ClassDeclaration" : "ClassExpression");
    }
    isClassProperty() {
      return this.match(29) || this.match(13) || this.match(8);
    }
    isClassMethod() {
      return this.match(10);
    }
    isNonstaticConstructor(t) {
      return !t.computed && !t.static && (t.key.name === "constructor" || t.key.value === "constructor");
    }
    parseClassBody(t, r) {
      this.classScope.enter();
      let s = {
        hadConstructor: !1,
        hadSuperClass: t
      }, n = [], a = this.startNode();
      if (a.body = [], this.expect(5), this.withSmartMixTopicForbiddingContext(() => {
        for (; !this.match(8); ) {
          if (this.eat(13)) {
            if (n.length > 0)
              throw this.raise(k.DecoratorSemicolon, this.state.lastTokEndLoc);
            continue;
          }
          if (this.match(26)) {
            n.push(this.parseDecorator());
            continue;
          }
          let o = this.startNode();
          n.length && (o.decorators = n, this.resetStartLocationFromNode(o, n[0]), n = []), this.parseClassMember(a, o, s), o.kind === "cons\
tructor" && o.decorators && o.decorators.length > 0 && this.raise(k.DecoratorConstructor, o);
        }
      }), this.state.strict = r, this.next(), n.length)
        throw this.raise(k.TrailingDecorator, this.state.startLoc);
      return this.classScope.exit(), this.finishNode(a, "ClassBody");
    }
    parseClassMemberFromModifier(t, r) {
      let s = this.parseIdentifier(!0);
      if (this.isClassMethod()) {
        let n = r;
        return n.kind = "method", n.computed = !1, n.key = s, n.static = !1, this.pushClassMethod(t, n, !1, !1, !1, !1), !0;
      } else if (this.isClassProperty()) {
        let n = r;
        return n.computed = !1, n.key = s, n.static = !1, t.body.push(this.parseClassProperty(n)), !0;
      }
      return this.resetPreviousNodeTrailingComments(s), !1;
    }
    parseClassMember(t, r, s) {
      let n = this.isContextual(106);
      if (n) {
        if (this.parseClassMemberFromModifier(t, r))
          return;
        if (this.eat(5)) {
          this.parseClassStaticBlock(t, r);
          return;
        }
      }
      this.parseClassMemberWithIsStatic(t, r, s, n);
    }
    parseClassMemberWithIsStatic(t, r, s, n) {
      let a = r, o = r, l = r, u = r, c = r, f = a, p = a;
      if (r.static = n, this.parsePropertyNamePrefixOperator(r), this.eat(55)) {
        f.kind = "method";
        let g = this.match(138);
        if (this.parseClassElementName(f), g) {
          this.pushClassPrivateMethod(t, o, !0, !1);
          return;
        }
        this.isNonstaticConstructor(a) && this.raise(k.ConstructorIsGenerator, a.key), this.pushClassMethod(t, a, !0, !1, !1, !1);
        return;
      }
      let d = Tt(this.state.type) && !this.state.containsEsc, m = this.match(138), b = this.parseClassElementName(r), h = this.state.startLoc;
      if (this.parsePostMemberNameModifiers(p), this.isClassMethod()) {
        if (f.kind = "method", m) {
          this.pushClassPrivateMethod(t, o, !1, !1);
          return;
        }
        let g = this.isNonstaticConstructor(a), E = !1;
        g && (a.kind = "constructor", s.hadConstructor && !this.hasPlugin("typescript") && this.raise(k.DuplicateConstructor, b), g && this.
        hasPlugin("typescript") && r.override && this.raise(k.OverrideOnConstructor, b), s.hadConstructor = !0, E = s.hadSuperClass), this.pushClassMethod(
        t, a, !1, !1, g, E);
      } else if (this.isClassProperty())
        m ? this.pushClassPrivateProperty(t, u) : this.pushClassProperty(t, l);
      else if (d && b.name === "async" && !this.isLineTerminator()) {
        this.resetPreviousNodeTrailingComments(b);
        let g = this.eat(55);
        p.optional && this.unexpected(h), f.kind = "method";
        let E = this.match(138);
        this.parseClassElementName(f), this.parsePostMemberNameModifiers(p), E ? this.pushClassPrivateMethod(t, o, g, !0) : (this.isNonstaticConstructor(
        a) && this.raise(k.ConstructorIsAsync, a.key), this.pushClassMethod(t, a, g, !0, !1, !1));
      } else if (d && (b.name === "get" || b.name === "set") && !(this.match(55) && this.isLineTerminator())) {
        this.resetPreviousNodeTrailingComments(b), f.kind = b.name;
        let g = this.match(138);
        this.parseClassElementName(a), g ? this.pushClassPrivateMethod(t, o, !1, !1) : (this.isNonstaticConstructor(a) && this.raise(k.ConstructorIsAccessor,
        a.key), this.pushClassMethod(t, a, !1, !1, !1, !1)), this.checkGetterSetterParams(a);
      } else if (d && b.name === "accessor" && !this.isLineTerminator()) {
        this.expectPlugin("decoratorAutoAccessors"), this.resetPreviousNodeTrailingComments(b);
        let g = this.match(138);
        this.parseClassElementName(l), this.pushClassAccessorProperty(t, c, g);
      } else this.isLineTerminator() ? m ? this.pushClassPrivateProperty(t, u) : this.pushClassProperty(t, l) : this.unexpected();
    }
    parseClassElementName(t) {
      let {
        type: r,
        value: s
      } = this.state;
      if ((r === 132 || r === 133) && t.static && s === "prototype" && this.raise(k.StaticPrototype, this.state.startLoc), r === 138) {
        s === "constructor" && this.raise(k.ConstructorClassPrivateField, this.state.startLoc);
        let n = this.parsePrivateName();
        return t.key = n, n;
      }
      return this.parsePropertyName(t);
    }
    parseClassStaticBlock(t, r) {
      var s;
      this.scope.enter(208);
      let n = this.state.labels;
      this.state.labels = [], this.prodParam.enter(0);
      let a = r.body = [];
      this.parseBlockOrModuleBlockBody(a, void 0, !1, 8), this.prodParam.exit(), this.scope.exit(), this.state.labels = n, t.body.push(this.
      finishNode(r, "StaticBlock")), (s = r.decorators) != null && s.length && this.raise(k.DecoratorStaticBlock, r);
    }
    pushClassProperty(t, r) {
      !r.computed && (r.key.name === "constructor" || r.key.value === "constructor") && this.raise(k.ConstructorClassField, r.key), t.body.push(
      this.parseClassProperty(r));
    }
    pushClassPrivateProperty(t, r) {
      let s = this.parseClassPrivateProperty(r);
      t.body.push(s), this.classScope.declarePrivateName(this.getPrivateNameSV(s.key), 0, s.key.loc.start);
    }
    pushClassAccessorProperty(t, r, s) {
      if (!s && !r.computed) {
        let a = r.key;
        (a.name === "constructor" || a.value === "constructor") && this.raise(k.ConstructorClassField, a);
      }
      let n = this.parseClassAccessorProperty(r);
      t.body.push(n), s && this.classScope.declarePrivateName(this.getPrivateNameSV(n.key), 0, n.key.loc.start);
    }
    pushClassMethod(t, r, s, n, a, o) {
      t.body.push(this.parseMethod(r, s, n, a, o, "ClassMethod", !0));
    }
    pushClassPrivateMethod(t, r, s, n) {
      let a = this.parseMethod(r, s, n, !1, !1, "ClassPrivateMethod", !0);
      t.body.push(a);
      let o = a.kind === "get" ? a.static ? 6 : 2 : a.kind === "set" ? a.static ? 5 : 1 : 0;
      this.declareClassPrivateMethodInScope(a, o);
    }
    declareClassPrivateMethodInScope(t, r) {
      this.classScope.declarePrivateName(this.getPrivateNameSV(t.key), r, t.key.loc.start);
    }
    parsePostMemberNameModifiers(t) {
    }
    parseClassPrivateProperty(t) {
      return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassPrivateProperty");
    }
    parseClassProperty(t) {
      return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassProperty");
    }
    parseClassAccessorProperty(t) {
      return this.parseInitializer(t), this.semicolon(), this.finishNode(t, "ClassAccessorProperty");
    }
    parseInitializer(t) {
      this.scope.enter(80), this.expressionScope.enter(pB()), this.prodParam.enter(0), t.value = this.eat(29) ? this.parseMaybeAssignAllowIn() :
      null, this.expressionScope.exit(), this.prodParam.exit(), this.scope.exit();
    }
    parseClassId(t, r, s, n = 8331) {
      if (Tt(this.state.type))
        t.id = this.parseIdentifier(), r && this.declareNameFromIdentifier(t.id, n);
      else if (s || !r)
        t.id = null;
      else
        throw this.raise(k.MissingClassName, this.state.startLoc);
    }
    parseClassSuper(t) {
      t.superClass = this.eat(81) ? this.parseExprSubscripts() : null;
    }
    parseExport(t, r) {
      let s = this.parseMaybeImportPhase(t, !0), n = this.maybeParseExportDefaultSpecifier(t, s), a = !n || this.eat(12), o = a && this.eatExportStar(
      t), l = o && this.maybeParseExportNamespaceSpecifier(t), u = a && (!l || this.eat(12)), c = n || o;
      if (o && !l) {
        if (n && this.unexpected(), r)
          throw this.raise(k.UnsupportedDecoratorExport, t);
        return this.parseExportFrom(t, !0), this.finishNode(t, "ExportAllDeclaration");
      }
      let f = this.maybeParseExportNamedSpecifiers(t);
      n && a && !o && !f && this.unexpected(null, 5), l && u && this.unexpected(null, 98);
      let p;
      if (c || f) {
        if (p = !1, r)
          throw this.raise(k.UnsupportedDecoratorExport, t);
        this.parseExportFrom(t, c);
      } else
        p = this.maybeParseExportDeclaration(t);
      if (c || f || p) {
        var d;
        let m = t;
        if (this.checkExport(m, !0, !1, !!m.source), ((d = m.declaration) == null ? void 0 : d.type) === "ClassDeclaration")
          this.maybeTakeDecorators(r, m.declaration, m);
        else if (r)
          throw this.raise(k.UnsupportedDecoratorExport, t);
        return this.finishNode(m, "ExportNamedDeclaration");
      }
      if (this.eat(65)) {
        let m = t, b = this.parseExportDefaultExpression();
        if (m.declaration = b, b.type === "ClassDeclaration")
          this.maybeTakeDecorators(r, b, m);
        else if (r)
          throw this.raise(k.UnsupportedDecoratorExport, t);
        return this.checkExport(m, !0, !0), this.finishNode(m, "ExportDefaultDeclaration");
      }
      this.unexpected(null, 5);
    }
    eatExportStar(t) {
      return this.eat(55);
    }
    maybeParseExportDefaultSpecifier(t, r) {
      if (r || this.isExportDefaultSpecifier()) {
        this.expectPlugin("exportDefaultFrom", r?.loc.start);
        let s = r || this.parseIdentifier(!0), n = this.startNodeAtNode(s);
        return n.exported = s, t.specifiers = [this.finishNode(n, "ExportDefaultSpecifier")], !0;
      }
      return !1;
    }
    maybeParseExportNamespaceSpecifier(t) {
      if (this.isContextual(93)) {
        t.specifiers || (t.specifiers = []);
        let r = this.startNodeAt(this.state.lastTokStartLoc);
        return this.next(), r.exported = this.parseModuleExportName(), t.specifiers.push(this.finishNode(r, "ExportNamespaceSpecifier")), !0;
      }
      return !1;
    }
    maybeParseExportNamedSpecifiers(t) {
      if (this.match(5)) {
        t.specifiers || (t.specifiers = []);
        let r = t.exportKind === "type";
        return t.specifiers.push(...this.parseExportSpecifiers(r)), t.source = null, t.declaration = null, this.hasPlugin("importAssertions") &&
        (t.assertions = []), !0;
      }
      return !1;
    }
    maybeParseExportDeclaration(t) {
      return this.shouldParseExportDeclaration() ? (t.specifiers = [], t.source = null, this.hasPlugin("importAssertions") && (t.assertions =
      []), t.declaration = this.parseExportDeclaration(t), !0) : !1;
    }
    isAsyncFunction() {
      if (!this.isContextual(95)) return !1;
      let t = this.nextTokenInLineStart();
      return this.isUnparsedContextual(t, "function");
    }
    parseExportDefaultExpression() {
      let t = this.startNode();
      if (this.match(68))
        return this.next(), this.parseFunction(t, 5);
      if (this.isAsyncFunction())
        return this.next(), this.next(), this.parseFunction(t, 13);
      if (this.match(80))
        return this.parseClass(t, !0, !0);
      if (this.match(26))
        return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") === !0 && this.raise(k.DecoratorBeforeExport,
        this.state.startLoc), this.parseClass(this.maybeTakeDecorators(this.parseDecorators(!1), this.startNode()), !0, !0);
      if (this.match(75) || this.match(74) || this.isLet())
        throw this.raise(k.UnsupportedDefaultExport, this.state.startLoc);
      let r = this.parseMaybeAssignAllowIn();
      return this.semicolon(), r;
    }
    parseExportDeclaration(t) {
      return this.match(80) ? this.parseClass(this.startNode(), !0, !1) : this.parseStatementListItem();
    }
    isExportDefaultSpecifier() {
      let {
        type: t
      } = this.state;
      if (Tt(t)) {
        if (t === 95 && !this.state.containsEsc || t === 100)
          return !1;
        if ((t === 130 || t === 129) && !this.state.containsEsc) {
          let {
            type: n
          } = this.lookahead();
          if (Tt(n) && n !== 98 || n === 5)
            return this.expectOnePlugin(["flow", "typescript"]), !1;
        }
      } else if (!this.match(65))
        return !1;
      let r = this.nextTokenStart(), s = this.isUnparsedContextual(r, "from");
      if (this.input.charCodeAt(r) === 44 || Tt(this.state.type) && s)
        return !0;
      if (this.match(65) && s) {
        let n = this.input.charCodeAt(this.nextTokenStartSince(r + 4));
        return n === 34 || n === 39;
      }
      return !1;
    }
    parseExportFrom(t, r) {
      this.eatContextual(98) ? (t.source = this.parseImportSource(), this.checkExport(t), this.maybeParseImportAttributes(t), this.checkJSONModuleImport(
      t)) : r && this.unexpected(), this.semicolon();
    }
    shouldParseExportDeclaration() {
      let {
        type: t
      } = this.state;
      return t === 26 && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators")) ? (this.getPluginOption("\
decorators", "decoratorsBeforeExport") === !0 && this.raise(k.DecoratorBeforeExport, this.state.startLoc), !0) : t === 74 || t === 75 || t ===
      68 || t === 80 || this.isLet() || this.isAsyncFunction();
    }
    checkExport(t, r, s, n) {
      if (r) {
        var a;
        if (s) {
          if (this.checkDuplicateExports(t, "default"), this.hasPlugin("exportDefaultFrom")) {
            var o;
            let l = t.declaration;
            l.type === "Identifier" && l.name === "from" && l.end - l.start === 4 && !((o = l.extra) != null && o.parenthesized) && this.raise(
            k.ExportDefaultFromAsIdentifier, l);
          }
        } else if ((a = t.specifiers) != null && a.length)
          for (let l of t.specifiers) {
            let {
              exported: u
            } = l, c = u.type === "Identifier" ? u.name : u.value;
            if (this.checkDuplicateExports(l, c), !n && l.local) {
              let {
                local: f
              } = l;
              f.type !== "Identifier" ? this.raise(k.ExportBindingIsString, l, {
                localName: f.value,
                exportName: c
              }) : (this.checkReservedWord(f.name, f.loc.start, !0, !1), this.scope.checkLocalExport(f));
            }
          }
        else if (t.declaration) {
          if (t.declaration.type === "FunctionDeclaration" || t.declaration.type === "ClassDeclaration") {
            let l = t.declaration.id;
            if (!l) throw new Error("Assertion failure");
            this.checkDuplicateExports(t, l.name);
          } else if (t.declaration.type === "VariableDeclaration")
            for (let l of t.declaration.declarations)
              this.checkDeclaration(l.id);
        }
      }
    }
    checkDeclaration(t) {
      if (t.type === "Identifier")
        this.checkDuplicateExports(t, t.name);
      else if (t.type === "ObjectPattern")
        for (let r of t.properties)
          this.checkDeclaration(r);
      else if (t.type === "ArrayPattern")
        for (let r of t.elements)
          r && this.checkDeclaration(r);
      else t.type === "ObjectProperty" ? this.checkDeclaration(t.value) : t.type === "RestElement" ? this.checkDeclaration(t.argument) : t.type ===
      "AssignmentPattern" && this.checkDeclaration(t.left);
    }
    checkDuplicateExports(t, r) {
      this.exportedIdentifiers.has(r) && (r === "default" ? this.raise(k.DuplicateDefaultExport, t) : this.raise(k.DuplicateExport, t, {
        exportName: r
      })), this.exportedIdentifiers.add(r);
    }
    parseExportSpecifiers(t) {
      let r = [], s = !0;
      for (this.expect(5); !this.eat(8); ) {
        if (s)
          s = !1;
        else if (this.expect(12), this.eat(8)) break;
        let n = this.isContextual(130), a = this.match(133), o = this.startNode();
        o.local = this.parseModuleExportName(), r.push(this.parseExportSpecifier(o, a, t, n));
      }
      return r;
    }
    parseExportSpecifier(t, r, s, n) {
      return this.eatContextual(93) ? t.exported = this.parseModuleExportName() : r ? t.exported = ECe(t.local) : t.exported || (t.exported =
      gi(t.local)), this.finishNode(t, "ExportSpecifier");
    }
    parseModuleExportName() {
      if (this.match(133)) {
        let t = this.parseStringLiteral(this.state.value), r = t.value.match(VCe);
        return r && this.raise(k.ModuleExportNameHasLoneSurrogate, t, {
          surrogateCharCode: r[0].charCodeAt(0)
        }), t;
      }
      return this.parseIdentifier(!0);
    }
    isJSONModuleImport(t) {
      return t.assertions != null ? t.assertions.some(({
        key: r,
        value: s
      }) => s.value === "json" && (r.type === "Identifier" ? r.name === "type" : r.value === "type")) : !1;
    }
    checkImportReflection(t) {
      let {
        specifiers: r
      } = t, s = r.length === 1 ? r[0].type : null;
      if (t.phase === "source")
        s !== "ImportDefaultSpecifier" && this.raise(k.SourcePhaseImportRequiresDefault, r[0].loc.start);
      else if (t.phase === "defer")
        s !== "ImportNamespaceSpecifier" && this.raise(k.DeferImportRequiresNamespace, r[0].loc.start);
      else if (t.module) {
        var n;
        s !== "ImportDefaultSpecifier" && this.raise(k.ImportReflectionNotBinding, r[0].loc.start), ((n = t.assertions) == null ? void 0 : n.
        length) > 0 && this.raise(k.ImportReflectionHasAssertion, r[0].loc.start);
      }
    }
    checkJSONModuleImport(t) {
      if (this.isJSONModuleImport(t) && t.type !== "ExportAllDeclaration") {
        let {
          specifiers: r
        } = t;
        if (r != null) {
          let s = r.find((n) => {
            let a;
            if (n.type === "ExportSpecifier" ? a = n.local : n.type === "ImportSpecifier" && (a = n.imported), a !== void 0)
              return a.type === "Identifier" ? a.name !== "default" : a.value !== "default";
          });
          s !== void 0 && this.raise(k.ImportJSONBindingNotDefault, s.loc.start);
        }
      }
    }
    isPotentialImportPhase(t) {
      return t ? !1 : this.isContextual(105) || this.isContextual(97) || this.isContextual(127);
    }
    applyImportPhase(t, r, s, n) {
      r || (s === "module" ? (this.expectPlugin("importReflection", n), t.module = !0) : this.hasPlugin("importReflection") && (t.module = !1),
      s === "source" ? (this.expectPlugin("sourcePhaseImports", n), t.phase = "source") : s === "defer" ? (this.expectPlugin("deferredImport\
Evaluation", n), t.phase = "defer") : this.hasPlugin("sourcePhaseImports") && (t.phase = null));
    }
    parseMaybeImportPhase(t, r) {
      if (!this.isPotentialImportPhase(r))
        return this.applyImportPhase(t, r, null), null;
      let s = this.parseIdentifier(!0), {
        type: n
      } = this.state;
      return (pn(n) ? n !== 98 || this.lookaheadCharCode() === 102 : n !== 12) ? (this.resetPreviousIdentifierLeadingComments(s), this.applyImportPhase(
      t, r, s.name, s.loc.start), null) : (this.applyImportPhase(t, r, null), s);
    }
    isPrecedingIdImportPhase(t) {
      let {
        type: r
      } = this.state;
      return Tt(r) ? r !== 98 || this.lookaheadCharCode() === 102 : r !== 12;
    }
    parseImport(t) {
      return this.match(133) ? this.parseImportSourceAndAttributes(t) : this.parseImportSpecifiersAndAfter(t, this.parseMaybeImportPhase(t, !1));
    }
    parseImportSpecifiersAndAfter(t, r) {
      t.specifiers = [];
      let n = !this.maybeParseDefaultImportSpecifier(t, r) || this.eat(12), a = n && this.maybeParseStarImportSpecifier(t);
      return n && !a && this.parseNamedImportSpecifiers(t), this.expectContextual(98), this.parseImportSourceAndAttributes(t);
    }
    parseImportSourceAndAttributes(t) {
      var r;
      return (r = t.specifiers) != null || (t.specifiers = []), t.source = this.parseImportSource(), this.maybeParseImportAttributes(t), this.
      checkImportReflection(t), this.checkJSONModuleImport(t), this.semicolon(), this.finishNode(t, "ImportDeclaration");
    }
    parseImportSource() {
      return this.match(133) || this.unexpected(), this.parseExprAtom();
    }
    parseImportSpecifierLocal(t, r, s) {
      r.local = this.parseIdentifier(), t.specifiers.push(this.finishImportSpecifier(r, s));
    }
    finishImportSpecifier(t, r, s = 8201) {
      return this.checkLVal(t.local, {
        in: {
          type: r
        },
        binding: s
      }), this.finishNode(t, r);
    }
    parseImportAttributes() {
      this.expect(5);
      let t = [], r = /* @__PURE__ */ new Set();
      do {
        if (this.match(8))
          break;
        let s = this.startNode(), n = this.state.value;
        if (r.has(n) && this.raise(k.ModuleAttributesWithDuplicateKeys, this.state.startLoc, {
          key: n
        }), r.add(n), this.match(133) ? s.key = this.parseStringLiteral(n) : s.key = this.parseIdentifier(!0), this.expect(14), !this.match(
        133))
          throw this.raise(k.ModuleAttributeInvalidValue, this.state.startLoc);
        s.value = this.parseStringLiteral(this.state.value), t.push(this.finishNode(s, "ImportAttribute"));
      } while (this.eat(12));
      return this.expect(8), t;
    }
    parseModuleAttributes() {
      let t = [], r = /* @__PURE__ */ new Set();
      do {
        let s = this.startNode();
        if (s.key = this.parseIdentifier(!0), s.key.name !== "type" && this.raise(k.ModuleAttributeDifferentFromType, s.key), r.has(s.key.name) &&
        this.raise(k.ModuleAttributesWithDuplicateKeys, s.key, {
          key: s.key.name
        }), r.add(s.key.name), this.expect(14), !this.match(133))
          throw this.raise(k.ModuleAttributeInvalidValue, this.state.startLoc);
        s.value = this.parseStringLiteral(this.state.value), t.push(this.finishNode(s, "ImportAttribute"));
      } while (this.eat(12));
      return t;
    }
    maybeParseImportAttributes(t) {
      let r, s = !1;
      if (this.match(76)) {
        if (this.hasPrecedingLineBreak() && this.lookaheadCharCode() === 40)
          return;
        this.next(), this.hasPlugin("moduleAttributes") ? r = this.parseModuleAttributes() : (this.expectImportAttributesPlugin(), r = this.
        parseImportAttributes()), s = !0;
      } else if (this.isContextual(94) && !this.hasPrecedingLineBreak())
        this.hasPlugin("importAttributes") ? (this.getPluginOption("importAttributes", "deprecatedAssertSyntax") !== !0 && this.raise(k.ImportAttributesUseAssert,
        this.state.startLoc), this.addExtra(t, "deprecatedAssertSyntax", !0)) : this.expectOnePlugin(["importAttributes", "importAssertions"]),
        this.next(), r = this.parseImportAttributes();
      else if (this.hasPlugin("importAttributes") || this.hasPlugin("importAssertions"))
        r = [];
      else if (this.hasPlugin("moduleAttributes"))
        r = [];
      else return;
      !s && this.hasPlugin("importAssertions") ? t.assertions = r : t.attributes = r;
    }
    maybeParseDefaultImportSpecifier(t, r) {
      if (r) {
        let s = this.startNodeAtNode(r);
        return s.local = r, t.specifiers.push(this.finishImportSpecifier(s, "ImportDefaultSpecifier")), !0;
      } else if (pn(this.state.type))
        return this.parseImportSpecifierLocal(t, this.startNode(), "ImportDefaultSpecifier"), !0;
      return !1;
    }
    maybeParseStarImportSpecifier(t) {
      if (this.match(55)) {
        let r = this.startNode();
        return this.next(), this.expectContextual(93), this.parseImportSpecifierLocal(t, r, "ImportNamespaceSpecifier"), !0;
      }
      return !1;
    }
    parseNamedImportSpecifiers(t) {
      let r = !0;
      for (this.expect(5); !this.eat(8); ) {
        if (r)
          r = !1;
        else {
          if (this.eat(14))
            throw this.raise(k.DestructureNamedImport, this.state.startLoc);
          if (this.expect(12), this.eat(8)) break;
        }
        let s = this.startNode(), n = this.match(133), a = this.isContextual(130);
        s.imported = this.parseModuleExportName();
        let o = this.parseImportSpecifier(s, n, t.importKind === "type" || t.importKind === "typeof", a, void 0);
        t.specifiers.push(o);
      }
    }
    parseImportSpecifier(t, r, s, n, a) {
      if (this.eatContextual(93))
        t.local = this.parseIdentifier();
      else {
        let {
          imported: o
        } = t;
        if (r)
          throw this.raise(k.ImportBindingIsString, t, {
            importName: o.value
          });
        this.checkReservedWord(o.name, t.loc.start, !0, !0), t.local || (t.local = gi(o));
      }
      return this.finishImportSpecifier(t, "ImportSpecifier", a);
    }
    isThisParam(t) {
      return t.type === "Identifier" && t.name === "this";
    }
  }, Bd = class extends gS {
    static {
      i(this, "Parser");
    }
    constructor(t, r) {
      t = $Ce(t), super(t, r), this.options = t, this.initializeScopes(), this.plugins = HCe(this.options.plugins), this.filename = t.sourceFilename;
    }
    getScopeHandler() {
      return Sc;
    }
    parse() {
      this.enterInitialScopes();
      let t = this.startNode(), r = this.startNode();
      return this.nextToken(), t.errors = null, this.parseTopLevel(t, r), t.errors = this.state.errors, t.comments.length = this.state.commentsLen,
      t;
    }
  };
  function HCe(e) {
    let t = /* @__PURE__ */ new Map();
    for (let r of e) {
      let [s, n] = Array.isArray(r) ? r : [r, {}];
      t.has(s) || t.set(s, n || {});
    }
    return t;
  }
  i(HCe, "pluginsMap");
  function GCe(e, t) {
    var r;
    if (((r = t) == null ? void 0 : r.sourceType) === "unambiguous") {
      t = Object.assign({}, t);
      try {
        t.sourceType = "module";
        let s = gc(t, e), n = s.parse();
        if (s.sawUnambiguousESM)
          return n;
        if (s.ambiguousScriptDifferentAst)
          try {
            return t.sourceType = "script", gc(t, e).parse();
          } catch {
          }
        else
          n.program.sourceType = "script";
        return n;
      } catch (s) {
        try {
          return t.sourceType = "script", gc(t, e).parse();
        } catch {
        }
        throw s;
      }
    } else
      return gc(t, e).parse();
  }
  i(GCe, "parse");
  function KCe(e, t) {
    let r = gc(t, e);
    return r.options.strictMode && (r.state.strict = !0), r.getExpression();
  }
  i(KCe, "parseExpression");
  function YCe(e) {
    let t = {};
    for (let r of Object.keys(e))
      t[r] = di(e[r]);
    return t;
  }
  i(YCe, "generateExportedTokenTypes");
  var XCe = YCe(UAe);
  function gc(e, t) {
    let r = Bd;
    return e != null && e.plugins && (jCe(e.plugins), r = zCe(e.plugins)), new r(e, t);
  }
  i(gc, "getParser");
  var Z3 = {};
  function zCe(e) {
    let t = qCe.filter((n) => vr(e, n)), r = t.join("/"), s = Z3[r];
    if (!s) {
      s = Bd;
      for (let n of t)
        s = yB[n](s);
      Z3[r] = s;
    }
    return s;
  }
  i(zCe, "getParserClass");
  xc.parse = GCe;
  xc.parseExpression = KCe;
  xc.tokTypes = XCe;
});

// ../node_modules/@babel/helper-hoist-variables/lib/index.js
var gB = y((DS) => {
  "use strict";
  Object.defineProperty(DS, "__esModule", {
    value: !0
  });
  DS.default = rwe;
  var JCe = Re(), {
    assignmentExpression: QCe,
    expressionStatement: ZCe,
    identifier: ewe
  } = JCe, twe = {
    Scope(e, t) {
      t.kind === "let" && e.skip();
    },
    FunctionParent(e) {
      e.skip();
    },
    VariableDeclaration(e, t) {
      if (t.kind && e.node.kind !== t.kind) return;
      let r = [], s = e.get("declarations"), n;
      for (let a of s) {
        n = a.node.id, a.node.init && r.push(ZCe(QCe("=", a.node.id, a.node.init)));
        for (let o of Object.keys(a.getBindingIdentifiers()))
          t.emit(ewe(o), o, a.node.init !== null);
      }
      e.parentPath.isFor({
        left: e.node
      }) ? e.replaceWith(n) : e.replaceWithMultiple(r);
    }
  };
  function rwe(e, t, r = "var") {
    e.traverse(twe, {
      kind: r,
      emit: t
    });
  }
  i(rwe, "hoistVariables");
});

// ../node_modules/@babel/traverse/lib/path/replacement.js
var AB = y((ua) => {
  "use strict";
  Object.defineProperty(ua, "__esModule", {
    value: !0
  });
  ua._replaceWith = Owe;
  ua.replaceExpressionWithStatements = Nwe;
  ua.replaceInline = Rwe;
  ua.replaceWith = _we;
  ua.replaceWithMultiple = Dwe;
  ua.replaceWithSourceString = Iwe;
  var swe = pc(), _S = Bs(), nwe = ca(), TB = Ha(), iwe = to(), awe = Re(), owe = gB(), {
    FUNCTION_TYPES: bB,
    arrowFunctionExpression: lwe,
    assignmentExpression: xB,
    awaitExpression: uwe,
    blockStatement: cwe,
    buildUndefinedNode: IS,
    callExpression: fwe,
    cloneNode: OS,
    conditionalExpression: pwe,
    expressionStatement: dwe,
    getBindingIdentifiers: hwe,
    identifier: mwe,
    inheritLeadingComments: ywe,
    inheritTrailingComments: gwe,
    inheritsComments: bwe,
    isBlockStatement: Ewe,
    isEmptyStatement: EB,
    isExpression: PB,
    isExpressionStatement: vwe,
    isIfStatement: Swe,
    isProgram: Twe,
    isStatement: xwe,
    isVariableDeclaration: Pwe,
    removeComments: Awe,
    returnStatement: vB,
    sequenceExpression: Cwe,
    validate: SB,
    yieldExpression: wwe
  } = awe;
  function Dwe(e) {
    var t;
    this.resync(), e = this._verifyNodeList(e), ywe(e[0], this.node), gwe(e[e.length - 1], this.node), (t = (0, TB.getCachedPaths)(this.hub,
    this.parent)) == null || t.delete(this.node), this.node = this.container[this.key] = null;
    let r = this.insertAfter(e);
    return this.node ? this.requeue() : this.remove(), r;
  }
  i(Dwe, "replaceWithMultiple");
  function Iwe(e) {
    this.resync();
    let t;
    try {
      e = `(${e})`, t = (0, iwe.parse)(e);
    } catch (s) {
      let n = s.loc;
      throw n && (s.message += ` - make sure this is an expression.
` + (0, swe.codeFrameColumns)(e, {
        start: {
          line: n.line,
          column: n.column + 1
        }
      }), s.code = "BABEL_REPLACE_SOURCE_ERROR"), s;
    }
    let r = t.program.body[0].expression;
    return _S.default.removeProperties(r), this.replaceWith(r);
  }
  i(Iwe, "replaceWithSourceString");
  function _we(e) {
    if (this.resync(), this.removed)
      throw new Error("You can't replace this node, we've already removed it");
    let t = e instanceof nwe.default ? e.node : e;
    if (!t)
      throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
    if (this.node === t)
      return [this];
    if (this.isProgram() && !Twe(t))
      throw new Error("You can only replace a Program root node with another Program node");
    if (Array.isArray(t))
      throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
    if (typeof t == "string")
      throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
    let r = "";
    if (this.isNodeType("Statement") && PB(t) && !this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(
    t) && !this.parentPath.isExportDefaultDeclaration() && (t = dwe(t), r = "expression"), this.isNodeType("Expression") && xwe(t) && !this.
    canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(t))
      return this.replaceExpressionWithStatements([t]);
    let s = this.node;
    return s && (bwe(t, s), Awe(s)), this._replaceWith(t), this.type = t.type, this.setScope(), this.requeue(), [r ? this.get(r) : this];
  }
  i(_we, "replaceWith");
  function Owe(e) {
    var t;
    if (!this.container)
      throw new ReferenceError("Container is falsy");
    this.inList ? SB(this.parent, this.key, [e]) : SB(this.parent, this.key, e), this.debug(`Replace with ${e?.type}`), (t = (0, TB.getCachedPaths)(
    this.hub, this.parent)) == null || t.set(e, this).delete(this.node), this.node = this.container[this.key] = e;
  }
  i(Owe, "_replaceWith");
  function Nwe(e) {
    this.resync();
    let t = [], r = Md(e, t);
    if (r) {
      for (let d of t) this.scope.push({
        id: d
      });
      return this.replaceWith(r)[0].get("expressions");
    }
    let s = this.getFunctionParent(), n = s?.is("async"), a = s?.is("generator"), o = lwe([], cwe(e));
    this.replaceWith(fwe(o, []));
    let l = this.get("callee");
    (0, owe.default)(l.get("body"), (d) => {
      this.scope.push({
        id: d
      });
    }, "var");
    let u = this.get("callee").getCompletionRecords();
    for (let d of u) {
      if (!d.isExpressionStatement()) continue;
      let m = d.findParent((b) => b.isLoop());
      if (m) {
        let b = m.getData("expressionReplacementReturnUid");
        b ? b = mwe(b.name) : (b = l.scope.generateDeclaredUidIdentifier("ret"), l.get("body").pushContainer("body", vB(OS(b))), m.setData("\
expressionReplacementReturnUid", b)), d.get("expression").replaceWith(xB("=", OS(b), d.node.expression));
      } else
        d.replaceWith(vB(d.node.expression));
    }
    l.arrowFunctionToExpression();
    let c = l, f = n && _S.default.hasType(this.get("callee.body").node, "AwaitExpression", bB), p = a && _S.default.hasType(this.get("calle\
e.body").node, "YieldExpression", bB);
    return f && (c.set("async", !0), p || this.replaceWith(uwe(this.node))), p && (c.set("generator", !0), this.replaceWith(wwe(this.node, !0))),
    c.get("body.body");
  }
  i(Nwe, "replaceExpressionWithStatements");
  function Md(e, t) {
    let r = [], s = !0;
    for (let n of e)
      if (EB(n) || (s = !1), PB(n))
        r.push(n);
      else if (vwe(n))
        r.push(n.expression);
      else if (Pwe(n)) {
        if (n.kind !== "var") return;
        for (let a of n.declarations) {
          let o = hwe(a);
          for (let l of Object.keys(o))
            t.push(OS(o[l]));
          a.init && r.push(xB("=", a.id, a.init));
        }
        s = !0;
      } else if (Swe(n)) {
        let a = n.consequent ? Md([n.consequent], t) : IS(), o = n.alternate ? Md([n.alternate], t) : IS();
        if (!a || !o) return;
        r.push(pwe(n.test, a, o));
      } else if (Ewe(n)) {
        let a = Md(n.body, t);
        if (!a) return;
        r.push(a);
      } else if (EB(n))
        e.indexOf(n) === 0 && (s = !0);
      else
        return;
    return s && r.push(IS()), r.length === 1 ? r[0] : Cwe(r);
  }
  i(Md, "gatherSequenceExpressions");
  function Rwe(e) {
    if (this.resync(), Array.isArray(e))
      if (Array.isArray(this.container)) {
        e = this._verifyNodeList(e);
        let t = this._containerInsertAfter(e);
        return this.remove(), t;
      } else
        return this.replaceWithMultiple(e);
    else
      return this.replaceWith(e);
  }
  i(Rwe, "replaceInline");
});

// ../node_modules/@babel/traverse/lib/path/evaluation.js
var IB = y((jd) => {
  "use strict";
  Object.defineProperty(jd, "__esModule", {
    value: !0
  });
  jd.evaluate = $we;
  jd.evaluateTruthy = jwe;
  var kwe = ["Number", "String", "Math"], Fwe = ["isFinite", "isNaN", "parseFloat", "parseInt", "decodeURI", "decodeURIComponent", "encodeUR\
I", "encodeURIComponent", null, null], Lwe = ["random"];
  function CB(e) {
    return kwe.includes(e);
  }
  i(CB, "isValidObjectCallee");
  function Bwe(e) {
    return Fwe.includes(e);
  }
  i(Bwe, "isValidIdentifierCallee");
  function Mwe(e) {
    return Lwe.includes(e);
  }
  i(Mwe, "isInvalidMethod");
  function jwe() {
    let e = this.evaluate();
    if (e.confident) return !!e.value;
  }
  i(jwe, "evaluateTruthy");
  function bi(e, t) {
    t.confident && (t.deoptPath = e, t.confident = !1);
  }
  i(bi, "deopt");
  var wB = /* @__PURE__ */ new Map([["undefined", void 0], ["Infinity", 1 / 0], ["NaN", NaN]]);
  function cs(e, t) {
    let {
      node: r
    } = e, {
      seen: s
    } = t;
    if (s.has(r)) {
      let n = s.get(r);
      if (n.resolved)
        return n.value;
      bi(e, t);
      return;
    } else {
      let n = {
        resolved: !1
      };
      s.set(r, n);
      let a = qwe(e, t);
      return t.confident && (n.resolved = !0, n.value = a), a;
    }
  }
  i(cs, "evaluateCached");
  function qwe(e, t) {
    if (t.confident) {
      if (e.isSequenceExpression()) {
        let r = e.get("expressions");
        return cs(r[r.length - 1], t);
      }
      if (e.isStringLiteral() || e.isNumericLiteral() || e.isBooleanLiteral())
        return e.node.value;
      if (e.isNullLiteral())
        return null;
      if (e.isTemplateLiteral())
        return DB(e, e.node.quasis, t);
      if (e.isTaggedTemplateExpression() && e.get("tag").isMemberExpression()) {
        let r = e.get("tag.object"), {
          node: {
            name: s
          }
        } = r, n = e.get("tag.property");
        if (r.isIdentifier() && s === "String" && !e.scope.getBinding(s) && n.isIdentifier() && n.node.name === "raw")
          return DB(e, e.node.quasi.quasis, t, !0);
      }
      if (e.isConditionalExpression()) {
        let r = cs(e.get("test"), t);
        return t.confident ? cs(r ? e.get("consequent") : e.get("alternate"), t) : void 0;
      }
      if (e.isExpressionWrapper())
        return cs(e.get("expression"), t);
      if (e.isMemberExpression() && !e.parentPath.isCallExpression({
        callee: e.node
      })) {
        let r = e.get("property"), s = e.get("object");
        if (s.isLiteral()) {
          let n = s.node.value, a = typeof n, o = null;
          if (e.node.computed) {
            if (o = cs(r, t), !t.confident) return;
          } else r.isIdentifier() && (o = r.node.name);
          if ((a === "number" || a === "string") && o != null && (typeof o == "number" || typeof o == "string"))
            return n[o];
        }
      }
      if (e.isReferencedIdentifier()) {
        let r = e.scope.getBinding(e.node.name);
        if (r) {
          if (r.constantViolations.length > 0 || e.node.start < r.path.node.end) {
            bi(r.path, t);
            return;
          }
          if (r.hasValue)
            return r.value;
        }
        let s = e.node.name;
        if (wB.has(s)) {
          if (!r)
            return wB.get(s);
          bi(r.path, t);
          return;
        }
        let n = e.resolve();
        if (n === e) {
          bi(e, t);
          return;
        } else
          return cs(n, t);
      }
      if (e.isUnaryExpression({
        prefix: !0
      })) {
        if (e.node.operator === "void")
          return;
        let r = e.get("argument");
        if (e.node.operator === "typeof" && (r.isFunction() || r.isClass()))
          return "function";
        let s = cs(r, t);
        if (!t.confident) return;
        switch (e.node.operator) {
          case "!":
            return !s;
          case "+":
            return +s;
          case "-":
            return -s;
          case "~":
            return ~s;
          case "typeof":
            return typeof s;
        }
      }
      if (e.isArrayExpression()) {
        let r = [], s = e.get("elements");
        for (let n of s) {
          let a = n.evaluate();
          if (a.confident)
            r.push(a.value);
          else {
            bi(a.deopt, t);
            return;
          }
        }
        return r;
      }
      if (e.isObjectExpression()) {
        let r = {}, s = e.get("properties");
        for (let n of s) {
          if (n.isObjectMethod() || n.isSpreadElement()) {
            bi(n, t);
            return;
          }
          let a = n.get("key"), o;
          if (n.node.computed) {
            if (o = a.evaluate(), !o.confident) {
              bi(o.deopt, t);
              return;
            }
            o = o.value;
          } else a.isIdentifier() ? o = a.node.name : o = a.node.value;
          let u = n.get("value").evaluate();
          if (!u.confident) {
            bi(u.deopt, t);
            return;
          }
          u = u.value, r[o] = u;
        }
        return r;
      }
      if (e.isLogicalExpression()) {
        let r = t.confident, s = cs(e.get("left"), t), n = t.confident;
        t.confident = r;
        let a = cs(e.get("right"), t), o = t.confident;
        switch (e.node.operator) {
          case "||":
            return t.confident = n && (!!s || o), t.confident ? s || a : void 0;
          case "&&":
            return t.confident = n && (!s || o), t.confident ? s && a : void 0;
          case "??":
            return t.confident = n && (s != null || o), t.confident ? s ?? a : void 0;
        }
      }
      if (e.isBinaryExpression()) {
        let r = cs(e.get("left"), t);
        if (!t.confident) return;
        let s = cs(e.get("right"), t);
        if (!t.confident) return;
        switch (e.node.operator) {
          case "-":
            return r - s;
          case "+":
            return r + s;
          case "/":
            return r / s;
          case "*":
            return r * s;
          case "%":
            return r % s;
          case "**":
            return Math.pow(r, s);
          case "<":
            return r < s;
          case ">":
            return r > s;
          case "<=":
            return r <= s;
          case ">=":
            return r >= s;
          case "==":
            return r == s;
          case "!=":
            return r != s;
          case "===":
            return r === s;
          case "!==":
            return r !== s;
          case "|":
            return r | s;
          case "&":
            return r & s;
          case "^":
            return r ^ s;
          case "<<":
            return r << s;
          case ">>":
            return r >> s;
          case ">>>":
            return r >>> s;
        }
      }
      if (e.isCallExpression()) {
        let r = e.get("callee"), s, n;
        if (r.isIdentifier() && !e.scope.getBinding(r.node.name) && (CB(r.node.name) || Bwe(r.node.name)) && (n = global[r.node.name]), r.isMemberExpression()) {
          let a = r.get("object"), o = r.get("property");
          if (a.isIdentifier() && o.isIdentifier() && CB(a.node.name) && !Mwe(o.node.name)) {
            s = global[a.node.name];
            let l = o.node.name;
            hasOwnProperty.call(s, l) && (n = s[l]);
          }
          if (a.isLiteral() && o.isIdentifier()) {
            let l = typeof a.node.value;
            (l === "string" || l === "number") && (s = a.node.value, n = s[o.node.name]);
          }
        }
        if (n) {
          let a = e.get("arguments").map((o) => cs(o, t));
          return t.confident ? n.apply(s, a) : void 0;
        }
      }
      bi(e, t);
    }
  }
  i(qwe, "_evaluate");
  function DB(e, t, r, s = !1) {
    let n = "", a = 0, o = e.isTemplateLiteral() ? e.get("expressions") : e.get("quasi.expressions");
    for (let l of t) {
      if (!r.confident) break;
      n += s ? l.value.raw : l.value.cooked;
      let u = o[a++];
      u && (n += String(cs(u, r)));
    }
    if (r.confident)
      return n;
  }
  i(DB, "evaluateQuasis");
  function $we() {
    let e = {
      confident: !0,
      deoptPath: null,
      seen: /* @__PURE__ */ new Map()
    }, t = cs(this, e);
    return e.confident || (t = void 0), {
      confident: e.confident,
      deopt: e.deoptPath,
      value: t
    };
  }
  i($we, "evaluate");
});

// ../node_modules/@babel/template/lib/formatters.js
var _B = y((qs) => {
  "use strict";
  Object.defineProperty(qs, "__esModule", {
    value: !0
  });
  qs.statements = qs.statement = qs.smart = qs.program = qs.expression = void 0;
  var Uwe = Re(), {
    assertExpressionStatement: Vwe
  } = Uwe;
  function NS(e) {
    return {
      code: /* @__PURE__ */ i((t) => `/* @babel/template */;
${t}`, "code"),
      validate: /* @__PURE__ */ i(() => {
      }, "validate"),
      unwrap: /* @__PURE__ */ i((t) => e(t.program.body.slice(1)), "unwrap")
    };
  }
  i(NS, "makeStatementFormatter");
  var Vtt = qs.smart = NS((e) => e.length > 1 ? e : e[0]), Wtt = qs.statements = NS((e) => e), Htt = qs.statement = NS((e) => {
    if (e.length === 0)
      throw new Error("Found nothing to return.");
    if (e.length > 1)
      throw new Error("Found multiple statements but wanted one");
    return e[0];
  }), Wwe = qs.expression = {
    code: /* @__PURE__ */ i((e) => `(
${e}
)`, "code"),
    validate: /* @__PURE__ */ i((e) => {
      if (e.program.body.length > 1)
        throw new Error("Found multiple statements but wanted one");
      if (Wwe.unwrap(e).start === 0)
        throw new Error("Parse result included parens.");
    }, "validate"),
    unwrap: /* @__PURE__ */ i(({
      program: e
    }) => {
      let [t] = e.body;
      return Vwe(t), t.expression;
    }, "unwrap")
  }, Gtt = qs.program = {
    code: /* @__PURE__ */ i((e) => e, "code"),
    validate: /* @__PURE__ */ i(() => {
    }, "validate"),
    unwrap: /* @__PURE__ */ i((e) => e.program, "unwrap")
  };
});

// ../node_modules/@babel/template/lib/options.js
var qd = y((Pc) => {
  "use strict";
  Object.defineProperty(Pc, "__esModule", {
    value: !0
  });
  Pc.merge = Kwe;
  Pc.normalizeReplacements = Xwe;
  Pc.validate = Ywe;
  var Hwe = ["placeholderWhitelist", "placeholderPattern", "preserveComments", "syntacticPlaceholders"];
  function Gwe(e, t) {
    if (e == null) return {};
    var r = {}, s = Object.keys(e), n, a;
    for (a = 0; a < s.length; a++)
      n = s[a], !(t.indexOf(n) >= 0) && (r[n] = e[n]);
    return r;
  }
  i(Gwe, "_objectWithoutPropertiesLoose");
  function Kwe(e, t) {
    let {
      placeholderWhitelist: r = e.placeholderWhitelist,
      placeholderPattern: s = e.placeholderPattern,
      preserveComments: n = e.preserveComments,
      syntacticPlaceholders: a = e.syntacticPlaceholders
    } = t;
    return {
      parser: Object.assign({}, e.parser, t.parser),
      placeholderWhitelist: r,
      placeholderPattern: s,
      preserveComments: n,
      syntacticPlaceholders: a
    };
  }
  i(Kwe, "merge");
  function Ywe(e) {
    if (e != null && typeof e != "object")
      throw new Error("Unknown template options.");
    let t = e || {}, {
      placeholderWhitelist: r,
      placeholderPattern: s,
      preserveComments: n,
      syntacticPlaceholders: a
    } = t, o = Gwe(t, Hwe);
    if (r != null && !(r instanceof Set))
      throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");
    if (s != null && !(s instanceof RegExp) && s !== !1)
      throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");
    if (n != null && typeof n != "boolean")
      throw new Error("'.preserveComments' must be a boolean, null, or undefined");
    if (a != null && typeof a != "boolean")
      throw new Error("'.syntacticPlaceholders' must be a boolean, null, or undefined");
    if (a === !0 && (r != null || s != null))
      throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");
    return {
      parser: o,
      placeholderWhitelist: r || void 0,
      placeholderPattern: s ?? void 0,
      preserveComments: n ?? void 0,
      syntacticPlaceholders: a ?? void 0
    };
  }
  i(Ywe, "validate");
  function Xwe(e) {
    if (Array.isArray(e))
      return e.reduce((t, r, s) => (t["$" + s] = r, t), {});
    if (typeof e == "object" || e == null)
      return e || void 0;
    throw new Error("Template replacements must be an array, object, null, or undefined");
  }
  i(Xwe, "normalizeReplacements");
});

// ../node_modules/@babel/template/lib/parse.js
var kS = y((RS) => {
  "use strict";
  Object.defineProperty(RS, "__esModule", {
    value: !0
  });
  RS.default = uDe;
  var zwe = Re(), Jwe = to(), Qwe = pc(), {
    isCallExpression: Zwe,
    isExpressionStatement: eDe,
    isFunction: tDe,
    isIdentifier: rDe,
    isJSXIdentifier: sDe,
    isNewExpression: nDe,
    isPlaceholder: $d,
    isStatement: iDe,
    isStringLiteral: OB,
    removePropertiesDeep: aDe,
    traverse: oDe
  } = zwe, lDe = /^[_$A-Z0-9]+$/;
  function uDe(e, t, r) {
    let {
      placeholderWhitelist: s,
      placeholderPattern: n,
      preserveComments: a,
      syntacticPlaceholders: o
    } = r, l = pDe(t, r.parser, o);
    aDe(l, {
      preserveComments: a
    }), e.validate(l);
    let u = {
      syntactic: {
        placeholders: [],
        placeholderNames: /* @__PURE__ */ new Set()
      },
      legacy: {
        placeholders: [],
        placeholderNames: /* @__PURE__ */ new Set()
      },
      placeholderWhitelist: s,
      placeholderPattern: n,
      syntacticPlaceholders: o
    };
    return oDe(l, cDe, u), Object.assign({
      ast: l
    }, u.syntactic.placeholders.length ? u.syntactic : u.legacy);
  }
  i(uDe, "parseAndBuildMetadata");
  function cDe(e, t, r) {
    var s;
    let n, a = r.syntactic.placeholders.length > 0;
    if ($d(e)) {
      if (r.syntacticPlaceholders === !1)
        throw new Error("%%foo%%-style placeholders can't be used when '.syntacticPlaceholders' is false.");
      n = e.name.name, a = !0;
    } else {
      if (a || r.syntacticPlaceholders)
        return;
      if (rDe(e) || sDe(e))
        n = e.name;
      else if (OB(e))
        n = e.value;
      else
        return;
    }
    if (a && (r.placeholderPattern != null || r.placeholderWhitelist != null))
      throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible with '.syntacticPlaceholders: true'");
    if (!a && (r.placeholderPattern === !1 || !(r.placeholderPattern || lDe).test(n)) && !((s = r.placeholderWhitelist) != null && s.has(n)))
      return;
    t = t.slice();
    let {
      node: o,
      key: l
    } = t[t.length - 1], u;
    OB(e) || $d(e, {
      expectedNode: "StringLiteral"
    }) ? u = "string" : nDe(o) && l === "arguments" || Zwe(o) && l === "arguments" || tDe(o) && l === "params" ? u = "param" : eDe(o) && !$d(
    e) ? (u = "statement", t = t.slice(0, -1)) : iDe(e) && $d(e) ? u = "statement" : u = "other";
    let {
      placeholders: c,
      placeholderNames: f
    } = a ? r.syntactic : r.legacy;
    c.push({
      name: n,
      type: u,
      resolve: /* @__PURE__ */ i((p) => fDe(p, t), "resolve"),
      isDuplicate: f.has(n)
    }), f.add(n);
  }
  i(cDe, "placeholderVisitorHandler");
  function fDe(e, t) {
    let r = e;
    for (let a = 0; a < t.length - 1; a++) {
      let {
        key: o,
        index: l
      } = t[a];
      l === void 0 ? r = r[o] : r = r[o][l];
    }
    let {
      key: s,
      index: n
    } = t[t.length - 1];
    return {
      parent: r,
      key: s,
      index: n
    };
  }
  i(fDe, "resolveAncestors");
  function pDe(e, t, r) {
    let s = (t.plugins || []).slice();
    r !== !1 && s.push("placeholders"), t = Object.assign({
      allowReturnOutsideFunction: !0,
      allowSuperOutsideMethod: !0,
      sourceType: "module"
    }, t, {
      plugins: s
    });
    try {
      return (0, Jwe.parse)(e, t);
    } catch (n) {
      let a = n.loc;
      throw a && (n.message += `
` + (0, Qwe.codeFrameColumns)(e, {
        start: a
      }), n.code = "BABEL_TEMPLATE_PARSE_ERROR"), n;
    }
  }
  i(pDe, "parseWithCodeFrame");
});

// ../node_modules/@babel/template/lib/populate.js
var MS = y((BS) => {
  "use strict";
  Object.defineProperty(BS, "__esModule", {
    value: !0
  });
  BS.default = bDe;
  var dDe = Re(), {
    blockStatement: hDe,
    cloneNode: LS,
    emptyStatement: mDe,
    expressionStatement: FS,
    identifier: Ud,
    isStatement: NB,
    isStringLiteral: yDe,
    stringLiteral: gDe,
    validate: RB
  } = dDe;
  function bDe(e, t) {
    let r = LS(e.ast);
    return t && (e.placeholders.forEach((s) => {
      if (!hasOwnProperty.call(t, s.name)) {
        let n = s.name;
        throw new Error(`Error: No substitution given for "${n}". If this is not meant to be a
            placeholder you may want to consider passing one of the following options to @babel/template:
            - { placeholderPattern: false, placeholderWhitelist: new Set(['${n}'])}
            - { placeholderPattern: /^${n}$/ }`);
      }
    }), Object.keys(t).forEach((s) => {
      if (!e.placeholderNames.has(s))
        throw new Error(`Unknown substitution "${s}" given`);
    })), e.placeholders.slice().reverse().forEach((s) => {
      try {
        EDe(s, r, t && t[s.name] || null);
      } catch (n) {
        throw n.message = `@babel/template placeholder "${s.name}": ${n.message}`, n;
      }
    }), r;
  }
  i(bDe, "populatePlaceholders");
  function EDe(e, t, r) {
    e.isDuplicate && (Array.isArray(r) ? r = r.map((o) => LS(o)) : typeof r == "object" && (r = LS(r)));
    let {
      parent: s,
      key: n,
      index: a
    } = e.resolve(t);
    if (e.type === "string") {
      if (typeof r == "string" && (r = gDe(r)), !r || !yDe(r))
        throw new Error("Expected string substitution");
    } else if (e.type === "statement")
      a === void 0 ? r ? Array.isArray(r) ? r = hDe(r) : typeof r == "string" ? r = FS(Ud(r)) : NB(r) || (r = FS(r)) : r = mDe() : r && !Array.
      isArray(r) && (typeof r == "string" && (r = Ud(r)), NB(r) || (r = FS(r)));
    else if (e.type === "param") {
      if (typeof r == "string" && (r = Ud(r)), a === void 0) throw new Error("Assertion failure.");
    } else if (typeof r == "string" && (r = Ud(r)), Array.isArray(r))
      throw new Error("Cannot replace single expression with an array.");
    if (a === void 0)
      RB(s, n, r), s[n] = r;
    else {
      let o = s[n].slice();
      e.type === "statement" || e.type === "param" ? r == null ? o.splice(a, 1) : Array.isArray(r) ? o.splice(a, 1, ...r) : o[a] = r : o[a] =
      r, RB(s, n, o), s[n] = o;
    }
  }
  i(EDe, "applyReplacement");
});

// ../node_modules/@babel/template/lib/string.js
var kB = y((jS) => {
  "use strict";
  Object.defineProperty(jS, "__esModule", {
    value: !0
  });
  jS.default = xDe;
  var vDe = qd(), SDe = kS(), TDe = MS();
  function xDe(e, t, r) {
    t = e.code(t);
    let s;
    return (n) => {
      let a = (0, vDe.normalizeReplacements)(n);
      return s || (s = (0, SDe.default)(e, t, r)), e.unwrap((0, TDe.default)(s, a));
    };
  }
  i(xDe, "stringTemplate");
});

// ../node_modules/@babel/template/lib/literal.js
var FB = y((qS) => {
  "use strict";
  Object.defineProperty(qS, "__esModule", {
    value: !0
  });
  qS.default = wDe;
  var PDe = qd(), ADe = kS(), CDe = MS();
  function wDe(e, t, r) {
    let {
      metadata: s,
      names: n
    } = DDe(e, t, r);
    return (a) => {
      let o = {};
      return a.forEach((l, u) => {
        o[n[u]] = l;
      }), (l) => {
        let u = (0, PDe.normalizeReplacements)(l);
        return u && Object.keys(u).forEach((c) => {
          if (hasOwnProperty.call(o, c))
            throw new Error("Unexpected replacement overlap.");
        }), e.unwrap((0, CDe.default)(s, u ? Object.assign(u, o) : o));
      };
    };
  }
  i(wDe, "literalTemplate");
  function DDe(e, t, r) {
    let s = "BABEL_TPL$", n = t.join("");
    do
      s = "$$" + s;
    while (n.includes(s));
    let {
      names: a,
      code: o
    } = IDe(t, s);
    return {
      metadata: (0, ADe.default)(e, e.code(o), {
        parser: r.parser,
        placeholderWhitelist: new Set(a.concat(r.placeholderWhitelist ? Array.from(r.placeholderWhitelist) : [])),
        placeholderPattern: r.placeholderPattern,
        preserveComments: r.preserveComments,
        syntacticPlaceholders: r.syntacticPlaceholders
      }),
      names: a
    };
  }
  i(DDe, "buildLiteralData");
  function IDe(e, t) {
    let r = [], s = e[0];
    for (let n = 1; n < e.length; n++) {
      let a = `${t}${n - 1}`;
      r.push(a), s += a + e[n];
    }
    return {
      names: r,
      code: s
    };
  }
  i(IDe, "buildTemplateCode");
});

// ../node_modules/@babel/template/lib/builder.js
var $B = y(($S) => {
  "use strict";
  Object.defineProperty($S, "__esModule", {
    value: !0
  });
  $S.default = qB;
  var Bn = qd(), LB = kB(), BB = FB(), MB = (0, Bn.validate)({
    placeholderPattern: !1
  });
  function qB(e, t) {
    let r = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakMap(), n = t || (0, Bn.validate)(null);
    return Object.assign((a, ...o) => {
      if (typeof a == "string") {
        if (o.length > 1) throw new Error("Unexpected extra params.");
        return jB((0, LB.default)(e, a, (0, Bn.merge)(n, (0, Bn.validate)(o[0]))));
      } else if (Array.isArray(a)) {
        let l = r.get(a);
        return l || (l = (0, BB.default)(e, a, n), r.set(a, l)), jB(l(o));
      } else if (typeof a == "object" && a) {
        if (o.length > 0) throw new Error("Unexpected extra params.");
        return qB(e, (0, Bn.merge)(n, (0, Bn.validate)(a)));
      }
      throw new Error(`Unexpected template param ${typeof a}`);
    }, {
      ast: /* @__PURE__ */ i((a, ...o) => {
        if (typeof a == "string") {
          if (o.length > 1) throw new Error("Unexpected extra params.");
          return (0, LB.default)(e, a, (0, Bn.merge)((0, Bn.merge)(n, (0, Bn.validate)(o[0])), MB))();
        } else if (Array.isArray(a)) {
          let l = s.get(a);
          return l || (l = (0, BB.default)(e, a, (0, Bn.merge)(n, MB)), s.set(a, l)), l(o)();
        }
        throw new Error(`Unexpected template param ${typeof a}`);
      }, "ast")
    });
  }
  i(qB, "createTemplateBuilder");
  function jB(e) {
    let t = "";
    try {
      throw new Error();
    } catch (r) {
      r.stack && (t = r.stack.split(`
`).slice(3).join(`
`));
    }
    return (r) => {
      try {
        return e(r);
      } catch (s) {
        throw s.stack += `
    =============
${t}`, s;
      }
    };
  }
  i(jB, "extendedTrace");
});

// ../node_modules/@babel/template/lib/index.js
var yl = y((Es) => {
  "use strict";
  Object.defineProperty(Es, "__esModule", {
    value: !0
  });
  Es.statements = Es.statement = Es.smart = Es.program = Es.expression = Es.default = void 0;
  var Ac = _B(), Cc = $B(), US = Es.smart = (0, Cc.default)(Ac.smart), _De = Es.statement = (0, Cc.default)(Ac.statement), ODe = Es.statements =
  (0, Cc.default)(Ac.statements), NDe = Es.expression = (0, Cc.default)(Ac.expression), RDe = Es.program = (0, Cc.default)(Ac.program), ort = Es.
  default = Object.assign(US.bind(void 0), {
    smart: US,
    statement: _De,
    statements: ODe,
    expression: NDe,
    program: RDe,
    ast: US.ast
  });
});

// ../node_modules/@babel/helper-function-name/lib/index.js
var Vd = y((VS) => {
  "use strict";
  Object.defineProperty(VS, "__esModule", {
    value: !0
  });
  VS.default = e2e;
  var HB = yl(), kDe = Re(), {
    NOT_LOCAL_BINDING: UB,
    cloneNode: FDe,
    identifier: LDe,
    isAssignmentExpression: BDe,
    isAssignmentPattern: MDe,
    isFunction: GB,
    isIdentifier: VB,
    isLiteral: WB,
    isNullLiteral: jDe,
    isObjectMethod: qDe,
    isObjectProperty: $De,
    isRegExpLiteral: UDe,
    isRestElement: VDe,
    isTemplateLiteral: WDe,
    isVariableDeclarator: HDe,
    toBindingIdentifierName: GDe
  } = kDe;
  function KDe(e) {
    let t = e.params.findIndex((r) => MDe(r) || VDe(r));
    return t === -1 ? e.params.length : t;
  }
  i(KDe, "getFunctionArity");
  var YDe = HB.default.statement(`
  (function (FUNCTION_KEY) {
    function FUNCTION_ID() {
      return FUNCTION_KEY.apply(this, arguments);
    }

    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    }

    return FUNCTION_ID;
  })(FUNCTION)
`), XDe = HB.default.statement(`
  (function (FUNCTION_KEY) {
    function* FUNCTION_ID() {
      return yield* FUNCTION_KEY.apply(this, arguments);
    }

    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    };

    return FUNCTION_ID;
  })(FUNCTION)
`), zDe = {
    "ReferencedIdentifier|BindingIdentifier"(e, t) {
      e.node.name !== t.name || e.scope.getBindingIdentifier(t.name) !== t.outerDeclar || (t.selfReference = !0, e.stop());
    }
  };
  function JDe(e) {
    return jDe(e) ? "null" : UDe(e) ? `_${e.pattern}_${e.flags}` : WDe(e) ? e.quasis.map((t) => t.value.raw).join("") : e.value !== void 0 ?
    e.value + "" : "";
  }
  i(JDe, "getNameFromLiteralId");
  function QDe(e, t, r, s) {
    if (e.selfReference)
      if (s.hasBinding(r.name) && !s.hasGlobal(r.name))
        s.rename(r.name);
      else {
        if (!GB(t)) return;
        let n = YDe;
        t.generator && (n = XDe);
        let a = n({
          FUNCTION: t,
          FUNCTION_ID: r,
          FUNCTION_KEY: s.generateUidIdentifier(r.name)
        }).expression, o = a.callee.body.body[0].params;
        for (let l = 0, u = KDe(t); l < u; l++)
          o.push(s.generateUidIdentifier("x"));
        return a;
      }
    t.id = r, s.getProgramParent().references[r.name] = !0;
  }
  i(QDe, "wrap");
  function ZDe(e, t, r) {
    let s = {
      selfAssignment: !1,
      selfReference: !1,
      outerDeclar: r.getBindingIdentifier(t),
      name: t
    }, n = r.getOwnBinding(t);
    return n ? n.kind === "param" && (s.selfReference = !0) : (s.outerDeclar || r.hasGlobal(t)) && r.traverse(e, zDe, s), s;
  }
  i(ZDe, "visit");
  function e2e({
    node: e,
    parent: t,
    scope: r,
    id: s
  }, n = !1, a = !1) {
    if (e.id) return;
    if (($De(t) || qDe(t, {
      kind: "method"
    })) && (!t.computed || WB(t.key)))
      s = t.key;
    else if (HDe(t)) {
      if (s = t.id, VB(s) && !n) {
        let c = r.parent.getBinding(s.name);
        if (c && c.constant && r.getBinding(s.name) === c) {
          e.id = FDe(s), e.id[UB] = !0;
          return;
        }
      }
    } else if (BDe(t, {
      operator: "="
    }))
      s = t.left;
    else if (!s)
      return;
    let o;
    if (s && WB(s) ? o = JDe(s) : s && VB(s) && (o = s.name), o === void 0 || !a && GB(e) && /[\uD800-\uDFFF]/.test(o))
      return;
    o = GDe(o);
    let l = LDe(o);
    l[UB] = !0;
    let u = ZDe(e, o, r);
    return QDe(u, e, l, r) || e;
  }
  i(e2e, "_default");
});

// ../node_modules/@babel/traverse/lib/path/conversion.js
var JB = y((so) => {
  "use strict";
  Object.defineProperty(so, "__esModule", {
    value: !0
  });
  so.arrowFunctionToExpression = T2e;
  so.ensureBlock = E2e;
  so.toComputedKey = b2e;
  so.unwrapFunctionEnvironment = v2e;
  var t2e = Re(), GS = ea(), r2e = Vd(), KS = ec(), {
    arrowFunctionExpression: YS,
    assignmentExpression: ro,
    binaryExpression: WS,
    blockStatement: s2e,
    callExpression: gl,
    conditionalExpression: n2e,
    expressionStatement: KB,
    identifier: Ht,
    isIdentifier: i2e,
    jsxIdentifier: a2e,
    logicalExpression: o2e,
    LOGICAL_OPERATORS: l2e,
    memberExpression: dn,
    metaProperty: u2e,
    numericLiteral: c2e,
    objectExpression: f2e,
    restElement: p2e,
    returnStatement: d2e,
    sequenceExpression: h2e,
    spreadElement: m2e,
    stringLiteral: YB,
    super: HS,
    thisExpression: wc,
    toExpression: y2e,
    unaryExpression: g2e
  } = t2e;
  function b2e() {
    let e;
    if (this.isMemberExpression())
      e = this.node.property;
    else if (this.isProperty() || this.isMethod())
      e = this.node.key;
    else
      throw new ReferenceError("todo");
    return this.node.computed || i2e(e) && (e = YB(e.name)), e;
  }
  i(b2e, "toComputedKey");
  function E2e() {
    let e = this.get("body"), t = e.node;
    if (Array.isArray(e))
      throw new Error("Can't convert array path to a block statement");
    if (!t)
      throw new Error("Can't convert node without a body");
    if (e.isBlockStatement())
      return t;
    let r = [], s = "body", n, a;
    e.isStatement() ? (a = "body", n = 0, r.push(e.node)) : (s += ".body.0", this.isFunction() ? (n = "argument", r.push(d2e(e.node))) : (n =
    "expression", r.push(KB(e.node)))), this.node.body = s2e(r);
    let o = this.get(s);
    return e.setup(o, a ? o.node[a] : o.node, a, n), this.node;
  }
  i(E2e, "ensureBlock");
  so.arrowFunctionToShadowed = function() {
    this.isArrowFunctionExpression() && this.arrowFunctionToExpression();
  };
  function v2e() {
    if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration())
      throw this.buildCodeFrameError("Can only unwrap the environment of a function.");
    XB(this);
  }
  i(v2e, "unwrapFunctionEnvironment");
  function S2e(e, t) {
    e.node.type = t;
  }
  i(S2e, "setType");
  function T2e({
    allowInsertArrow: e = !0,
    allowInsertArrowWithRest: t = e,
    noNewArrows: r = !((s) => (s = arguments[0]) == null ? void 0 : s.specCompliant)()
  } = {}) {
    if (!this.isArrowFunctionExpression())
      throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");
    let {
      thisBinding: s,
      fnPath: n
    } = XB(this, r, e, t);
    if (n.ensureBlock(), S2e(n, "FunctionExpression"), !r) {
      let a = s ? null : n.scope.generateUidIdentifier("arrowCheckId");
      return a && n.parentPath.scope.push({
        id: a,
        init: f2e([])
      }), n.get("body").unshiftContainer("body", KB(gl(this.hub.addHelper("newArrowCheck"), [wc(), Ht(a ? a.name : s)]))), n.replaceWith(gl(
      dn((0, r2e.default)(this, !0) || n.node, Ht("bind")), [a ? Ht(a.name) : wc()])), n.get("callee.object");
    }
    return n;
  }
  i(T2e, "arrowFunctionToExpression");
  var x2e = (0, KS.merge)([{
    CallExpression(e, {
      allSuperCalls: t
    }) {
      e.get("callee").isSuper() && t.push(e);
    }
  }, GS.default]);
  function XB(e, t = !0, r = !0, s = !0) {
    let n, a = e.findParent((m) => {
      if (m.isArrowFunctionExpression()) {
        var b;
        return (b = n) != null || (n = m), !1;
      }
      return m.isFunction() || m.isProgram() || m.isClassProperty({
        static: !1
      }) || m.isClassPrivateProperty({
        static: !1
      });
    }), o = a.isClassMethod({
      kind: "constructor"
    });
    if (a.isClassProperty() || a.isClassPrivateProperty())
      if (n)
        a = n;
      else if (r)
        e.replaceWith(gl(YS([], y2e(e.node)), [])), a = e.get("callee"), e = a.get("body");
      else
        throw e.buildCodeFrameError("Unable to transform arrow inside class property");
    let {
      thisPaths: l,
      argumentsPaths: u,
      newTargetPaths: c,
      superProps: f,
      superCalls: p
    } = O2e(e);
    if (o && p.length > 0) {
      if (!r)
        throw p[0].buildCodeFrameError("When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super()` in an a\
rrow function without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");
      if (!s)
        throw p[0].buildCodeFrameError("When using '@babel/plugin-transform-parameters', it's not possible to compile `super()` in an arrow \
function with default or rest parameters without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration\
.");
      let m = [];
      a.traverse(x2e, {
        allSuperCalls: m
      });
      let b = D2e(a);
      m.forEach((h) => {
        let g = Ht(b);
        g.loc = h.node.callee.loc, h.get("callee").replaceWith(g);
      });
    }
    if (u.length > 0) {
      let m = Dc(a, "arguments", () => {
        let b = /* @__PURE__ */ i(() => Ht("arguments"), "args");
        return a.scope.path.isProgram() ? n2e(WS("===", g2e("typeof", b()), YB("undefined")), a.scope.buildUndefinedNode(), b()) : b();
      });
      u.forEach((b) => {
        let h = Ht(m);
        h.loc = b.node.loc, b.replaceWith(h);
      });
    }
    if (c.length > 0) {
      let m = Dc(a, "newtarget", () => u2e(Ht("new"), Ht("target")));
      c.forEach((b) => {
        let h = Ht(m);
        h.loc = b.node.loc, b.replaceWith(h);
      });
    }
    if (f.length > 0) {
      if (!r)
        throw f[0].buildCodeFrameError("When using '@babel/plugin-transform-arrow-functions', it's not possible to compile `super.prop` in a\
n arrow function without compiling classes.\nPlease add '@babel/plugin-transform-classes' to your Babel configuration.");
      f.reduce((b, h) => b.concat(A2e(h)), []).forEach((b) => {
        let h = b.node.computed ? "" : b.get("property").node.name, g = b.parentPath, E = g.isAssignmentExpression({
          left: b.node
        }), D = g.isCallExpression({
          callee: b.node
        }), C = g.isTaggedTemplateExpression({
          tag: b.node
        }), N = I2e(a, E, h), I = [];
        if (b.node.computed && I.push(b.get("property").node), E) {
          let q = g.node.right;
          I.push(q);
        }
        let M = gl(Ht(N), I);
        D ? (g.unshiftContainer("arguments", wc()), b.replaceWith(dn(M, Ht("call"))), l.push(g.get("arguments.0"))) : E ? g.replaceWith(M) :
        C ? (b.replaceWith(gl(dn(M, Ht("bind"), !1), [wc()])), l.push(b.get("arguments.0"))) : b.replaceWith(M);
      });
    }
    let d;
    return (l.length > 0 || !t) && (d = w2e(a, o), (t || o && zB(a)) && (l.forEach((m) => {
      let b = m.isJSX() ? a2e(d) : Ht(d);
      b.loc = m.node.loc, m.replaceWith(b);
    }), t || (d = null))), {
      thisBinding: d,
      fnPath: e
    };
  }
  i(XB, "hoistFunctionEnvironment");
  function P2e(e) {
    return l2e.includes(e);
  }
  i(P2e, "isLogicalOp");
  function A2e(e) {
    if (e.parentPath.isAssignmentExpression() && e.parentPath.node.operator !== "=") {
      let r = e.parentPath, s = r.node.operator.slice(0, -1), n = r.node.right, a = P2e(s);
      if (e.node.computed) {
        let o = e.scope.generateDeclaredUidIdentifier("tmp"), l = e.node.object, u = e.node.property;
        r.get("left").replaceWith(dn(l, ro("=", o, u), !0)), r.get("right").replaceWith(t(a ? "=" : s, dn(l, Ht(o.name), !0), n));
      } else {
        let o = e.node.object, l = e.node.property;
        r.get("left").replaceWith(dn(o, l)), r.get("right").replaceWith(t(a ? "=" : s, dn(o, Ht(l.name)), n));
      }
      return a ? r.replaceWith(o2e(s, r.node.left, r.node.right)) : r.node.operator = "=", [r.get("left"), r.get("right").get("left")];
    } else if (e.parentPath.isUpdateExpression()) {
      let r = e.parentPath, s = e.scope.generateDeclaredUidIdentifier("tmp"), n = e.node.computed ? e.scope.generateDeclaredUidIdentifier("p\
rop") : null, a = [ro("=", s, dn(e.node.object, n ? ro("=", n, e.node.property) : e.node.property, e.node.computed)), ro("=", dn(e.node.object,
      n ? Ht(n.name) : e.node.property, e.node.computed), WS(e.parentPath.node.operator[0], Ht(s.name), c2e(1)))];
      e.parentPath.node.prefix || a.push(Ht(s.name)), r.replaceWith(h2e(a));
      let o = r.get("expressions.0.right"), l = r.get("expressions.1.left");
      return [o, l];
    }
    return [e];
    function t(r, s, n) {
      return r === "=" ? ro("=", s, n) : WS(r, s, n);
    }
  }
  i(A2e, "standardizeSuperProperty");
  function zB(e) {
    return e.isClassMethod() && !!e.parentPath.parentPath.node.superClass;
  }
  i(zB, "hasSuperClass");
  var C2e = (0, KS.merge)([{
    CallExpression(e, {
      supers: t,
      thisBinding: r
    }) {
      e.get("callee").isSuper() && (t.has(e.node) || (t.add(e.node), e.replaceWithMultiple([e.node, ro("=", Ht(r), Ht("this"))])));
    }
  }, GS.default]);
  function w2e(e, t) {
    return Dc(e, "this", (r) => {
      if (!t || !zB(e)) return wc();
      e.traverse(C2e, {
        supers: /* @__PURE__ */ new WeakSet(),
        thisBinding: r
      });
    });
  }
  i(w2e, "getThisBinding");
  function D2e(e) {
    return Dc(e, "supercall", () => {
      let t = e.scope.generateUidIdentifier("args");
      return YS([p2e(t)], gl(HS(), [m2e(Ht(t.name))]));
    });
  }
  i(D2e, "getSuperBinding");
  function I2e(e, t, r) {
    return Dc(e, `superprop_${t ? "set" : "get"}:${r || ""}`, () => {
      let n = [], a;
      if (r)
        a = dn(HS(), Ht(r));
      else {
        let o = e.scope.generateUidIdentifier("prop");
        n.unshift(o), a = dn(HS(), Ht(o.name), !0);
      }
      if (t) {
        let o = e.scope.generateUidIdentifier("value");
        n.push(o), a = ro("=", a, Ht(o.name));
      }
      return YS(n, a);
    });
  }
  i(I2e, "getSuperPropBinding");
  function Dc(e, t, r) {
    let s = "binding:" + t, n = e.getData(s);
    if (!n) {
      let a = e.scope.generateUidIdentifier(t);
      n = a.name, e.setData(s, n), e.scope.push({
        id: a,
        init: r(n)
      });
    }
    return n;
  }
  i(Dc, "getBinding");
  var _2e = (0, KS.merge)([{
    ThisExpression(e, {
      thisPaths: t
    }) {
      t.push(e);
    },
    JSXIdentifier(e, {
      thisPaths: t
    }) {
      e.node.name === "this" && (!e.parentPath.isJSXMemberExpression({
        object: e.node
      }) && !e.parentPath.isJSXOpeningElement({
        name: e.node
      }) || t.push(e));
    },
    CallExpression(e, {
      superCalls: t
    }) {
      e.get("callee").isSuper() && t.push(e);
    },
    MemberExpression(e, {
      superProps: t
    }) {
      e.get("object").isSuper() && t.push(e);
    },
    Identifier(e, {
      argumentsPaths: t
    }) {
      if (!e.isReferencedIdentifier({
        name: "arguments"
      })) return;
      let r = e.scope;
      do {
        if (r.hasOwnBinding("arguments")) {
          r.rename("arguments");
          return;
        }
        if (r.path.isFunction() && !r.path.isArrowFunctionExpression())
          break;
      } while (r = r.parent);
      t.push(e);
    },
    MetaProperty(e, {
      newTargetPaths: t
    }) {
      e.get("meta").isIdentifier({
        name: "new"
      }) && e.get("property").isIdentifier({
        name: "target"
      }) && t.push(e);
    }
  }, GS.default]);
  function O2e(e) {
    let t = [], r = [], s = [], n = [], a = [];
    return e.traverse(_2e, {
      thisPaths: t,
      argumentsPaths: r,
      newTargetPaths: s,
      superProps: n,
      superCalls: a
    }), {
      thisPaths: t,
      argumentsPaths: r,
      newTargetPaths: s,
      superProps: n,
      superCalls: a
    };
  }
  i(O2e, "getScopeInformation");
});

// ../node_modules/@babel/traverse/lib/path/introspection.js
var sM = y((fr) => {
  "use strict";
  Object.defineProperty(fr, "__esModule", {
    value: !0
  });
  fr._guessExecutionStatusRelativeTo = eIe;
  fr._resolve = nIe;
  fr.canHaveVariableDeclarationOrExpression = G2e;
  fr.canSwapBetweenExpressionAndStatement = K2e;
  fr.equals = W2e;
  fr.getSource = J2e;
  fr.has = rM;
  fr.is = void 0;
  fr.isCompletionRecord = Y2e;
  fr.isConstantExpression = iIe;
  fr.isInStrictMode = aIe;
  fr.isNodeType = H2e;
  fr.isStatementOrBlock = X2e;
  fr.isStatic = U2e;
  fr.isnt = V2e;
  fr.matchesPattern = $2e;
  fr.referencesImport = z2e;
  fr.resolve = sIe;
  fr.willIMaybeExecuteBefore = Q2e;
  var N2e = Re(), {
    STATEMENT_OR_BLOCK_KEYS: R2e,
    VISITOR_KEYS: k2e,
    isBlockStatement: tM,
    isExpression: F2e,
    isIdentifier: L2e,
    isLiteral: B2e,
    isStringLiteral: M2e,
    isType: j2e,
    matchesPattern: q2e
  } = N2e;
  function $2e(e, t) {
    return q2e(this.node, e, t);
  }
  i($2e, "matchesPattern");
  function rM(e) {
    let t = this.node && this.node[e];
    return t && Array.isArray(t) ? !!t.length : !!t;
  }
  i(rM, "has");
  function U2e() {
    return this.scope.isStatic(this.node);
  }
  i(U2e, "isStatic");
  var drt = fr.is = rM;
  function V2e(e) {
    return !this.has(e);
  }
  i(V2e, "isnt");
  function W2e(e, t) {
    return this.node[e] === t;
  }
  i(W2e, "equals");
  function H2e(e) {
    return j2e(this.type, e);
  }
  i(H2e, "isNodeType");
  function G2e() {
    return (this.key === "init" || this.key === "left") && this.parentPath.isFor();
  }
  i(G2e, "canHaveVariableDeclarationOrExpression");
  function K2e(e) {
    return this.key !== "body" || !this.parentPath.isArrowFunctionExpression() ? !1 : this.isExpression() ? tM(e) : this.isBlockStatement() ?
    F2e(e) : !1;
  }
  i(K2e, "canSwapBetweenExpressionAndStatement");
  function Y2e(e) {
    let t = this, r = !0;
    do {
      let {
        type: s,
        container: n
      } = t;
      if (!r && (t.isFunction() || s === "StaticBlock"))
        return !!e;
      if (r = !1, Array.isArray(n) && t.key !== n.length - 1)
        return !1;
    } while ((t = t.parentPath) && !t.isProgram() && !t.isDoExpression());
    return !0;
  }
  i(Y2e, "isCompletionRecord");
  function X2e() {
    return this.parentPath.isLabeledStatement() || tM(this.container) ? !1 : R2e.includes(this.key);
  }
  i(X2e, "isStatementOrBlock");
  function z2e(e, t) {
    if (!this.isReferencedIdentifier()) {
      if (this.isJSXMemberExpression() && this.node.property.name === t || (this.isMemberExpression() || this.isOptionalMemberExpression()) &&
      (this.node.computed ? M2e(this.node.property, {
        value: t
      }) : this.node.property.name === t)) {
        let a = this.get("object");
        return a.isReferencedIdentifier() && a.referencesImport(e, "*");
      }
      return !1;
    }
    let r = this.scope.getBinding(this.node.name);
    if (!r || r.kind !== "module") return !1;
    let s = r.path, n = s.parentPath;
    if (!n.isImportDeclaration()) return !1;
    if (n.node.source.value === e) {
      if (!t) return !0;
    } else
      return !1;
    return !!(s.isImportDefaultSpecifier() && t === "default" || s.isImportNamespaceSpecifier() && t === "*" || s.isImportSpecifier() && L2e(
    s.node.imported, {
      name: t
    }));
  }
  i(z2e, "referencesImport");
  function J2e() {
    let e = this.node;
    if (e.end) {
      let t = this.hub.getCode();
      if (t) return t.slice(e.start, e.end);
    }
    return "";
  }
  i(J2e, "getSource");
  function Q2e(e) {
    return this._guessExecutionStatusRelativeTo(e) !== "after";
  }
  i(Q2e, "willIMaybeExecuteBefore");
  function QB(e) {
    return e.isProgram() ? e : (e.parentPath.scope.getFunctionParent() || e.parentPath.scope.getProgramParent()).path;
  }
  i(QB, "getOuterFunction");
  function Z2e(e, t) {
    switch (e) {
      case "LogicalExpression":
        return t === "right";
      case "ConditionalExpression":
      case "IfStatement":
        return t === "consequent" || t === "alternate";
      case "WhileStatement":
      case "DoWhileStatement":
      case "ForInStatement":
      case "ForOfStatement":
        return t === "body";
      case "ForStatement":
        return t === "body" || t === "update";
      case "SwitchStatement":
        return t === "cases";
      case "TryStatement":
        return t === "handler";
      case "AssignmentPattern":
        return t === "right";
      case "OptionalMemberExpression":
        return t === "property";
      case "OptionalCallExpression":
        return t === "arguments";
      default:
        return !1;
    }
  }
  i(Z2e, "isExecutionUncertain");
  function ZB(e, t) {
    for (let r = 0; r < t; r++) {
      let s = e[r];
      if (Z2e(s.parent.type, s.parentKey))
        return !0;
    }
    return !1;
  }
  i(ZB, "isExecutionUncertainInList");
  var eM = Symbol();
  function eIe(e) {
    return XS(this, e, /* @__PURE__ */ new Map());
  }
  i(eIe, "_guessExecutionStatusRelativeTo");
  function XS(e, t, r) {
    let s = {
      this: QB(e),
      target: QB(t)
    };
    if (s.target.node !== s.this.node)
      return rIe(e, s.target, r);
    let n = {
      target: t.getAncestry(),
      this: e.getAncestry()
    };
    if (n.target.indexOf(e) >= 0) return "after";
    if (n.this.indexOf(t) >= 0) return "before";
    let a, o = {
      target: 0,
      this: 0
    };
    for (; !a && o.this < n.this.length; ) {
      let f = n.this[o.this];
      o.target = n.target.indexOf(f), o.target >= 0 ? a = f : o.this++;
    }
    if (!a)
      throw new Error("Internal Babel error - The two compared nodes don't appear to belong to the same program.");
    if (ZB(n.this, o.this - 1) || ZB(n.target, o.target - 1))
      return "unknown";
    let l = {
      this: n.this[o.this - 1],
      target: n.target[o.target - 1]
    };
    if (l.target.listKey && l.this.listKey && l.target.container === l.this.container)
      return l.target.key > l.this.key ? "before" : "after";
    let u = k2e[a.type], c = {
      this: u.indexOf(l.this.parentKey),
      target: u.indexOf(l.target.parentKey)
    };
    return c.target > c.this ? "before" : "after";
  }
  i(XS, "_guessExecutionStatusRelativeToCached");
  function tIe(e, t, r) {
    if (t.isFunctionDeclaration()) {
      if (t.parentPath.isExportDeclaration())
        return "unknown";
    } else return XS(e, t, r) === "before" ? "before" : "unknown";
    let s = t.scope.getBinding(t.node.id.name);
    if (!s.references) return "before";
    let n = s.referencePaths, a;
    for (let o of n) {
      if (!!o.find((c) => c.node === t.node)) continue;
      if (o.key !== "callee" || !o.parentPath.isCallExpression())
        return "unknown";
      let u = XS(e, o, r);
      if (a && a !== u)
        return "unknown";
      a = u;
    }
    return a;
  }
  i(tIe, "_guessExecutionStatusRelativeToDifferentFunctionsInternal");
  function rIe(e, t, r) {
    let s = r.get(e.node), n;
    if (!s)
      r.set(e.node, s = /* @__PURE__ */ new Map());
    else if (n = s.get(t.node))
      return n === eM ? "unknown" : n;
    s.set(t.node, eM);
    let a = tIe(e, t, r);
    return s.set(t.node, a), a;
  }
  i(rIe, "_guessExecutionStatusRelativeToDifferentFunctionsCached");
  function sIe(e, t) {
    return this._resolve(e, t) || this;
  }
  i(sIe, "resolve");
  function nIe(e, t) {
    if (!(t && t.indexOf(this) >= 0))
      if (t = t || [], t.push(this), this.isVariableDeclarator()) {
        if (this.get("id").isIdentifier())
          return this.get("init").resolve(e, t);
      } else if (this.isReferencedIdentifier()) {
        let r = this.scope.getBinding(this.node.name);
        if (!r || !r.constant || r.kind === "module") return;
        if (r.path !== this) {
          let s = r.path.resolve(e, t);
          return this.find((n) => n.node === s.node) ? void 0 : s;
        }
      } else {
        if (this.isTypeCastExpression())
          return this.get("expression").resolve(e, t);
        if (e && this.isMemberExpression()) {
          let r = this.toComputedKey();
          if (!B2e(r)) return;
          let s = r.value, n = this.get("object").resolve(e, t);
          if (n.isObjectExpression()) {
            let a = n.get("properties");
            for (let o of a) {
              if (!o.isProperty()) continue;
              let l = o.get("key"), u = o.isnt("computed") && l.isIdentifier({
                name: s
              });
              if (u = u || l.isLiteral({
                value: s
              }), u) return o.get("value").resolve(e, t);
            }
          } else if (n.isArrayExpression() && !isNaN(+s)) {
            let o = n.get("elements")[s];
            if (o) return o.resolve(e, t);
          }
        }
      }
  }
  i(nIe, "_resolve");
  function iIe() {
    if (this.isIdentifier()) {
      let e = this.scope.getBinding(this.node.name);
      return e ? e.constant : !1;
    }
    if (this.isLiteral())
      return this.isRegExpLiteral() ? !1 : this.isTemplateLiteral() ? this.get("expressions").every((e) => e.isConstantExpression()) : !0;
    if (this.isUnaryExpression())
      return this.node.operator !== "void" ? !1 : this.get("argument").isConstantExpression();
    if (this.isBinaryExpression()) {
      let {
        operator: e
      } = this.node;
      return e !== "in" && e !== "instanceof" && this.get("left").isConstantExpression() && this.get("right").isConstantExpression();
    }
    return this.isMemberExpression() ? !this.node.computed && this.get("object").isIdentifier({
      name: "Symbol"
    }) && !this.scope.hasBinding("Symbol", {
      noGlobals: !0
    }) : this.isCallExpression() ? this.node.arguments.length === 1 && this.get("callee").matchesPattern("Symbol.for") && !this.scope.hasBinding(
    "Symbol", {
      noGlobals: !0
    }) && this.get("arguments")[0].isStringLiteral() : !1;
  }
  i(iIe, "isConstantExpression");
  function aIe() {
    return !!(this.isProgram() ? this : this.parentPath).find((r) => {
      if (r.isProgram({
        sourceType: "module"
      }) || r.isClass()) return !0;
      if (r.isArrowFunctionExpression() && !r.get("body").isBlockStatement())
        return !1;
      let s;
      if (r.isFunction())
        s = r.node.body;
      else if (r.isProgram())
        s = r.node;
      else
        return !1;
      for (let n of s.directives)
        if (n.value.value === "use strict")
          return !0;
    });
  }
  i(aIe, "isInStrictMode");
});

// ../node_modules/@babel/traverse/lib/path/context.js
var aM = y((ar) => {
  "use strict";
  Object.defineProperty(ar, "__esModule", {
    value: !0
  });
  ar._call = uIe;
  ar._getQueueContexts = wIe;
  ar._resyncKey = EIe;
  ar._resyncList = vIe;
  ar._resyncParent = bIe;
  ar._resyncRemoved = SIe;
  ar.call = lIe;
  ar.isBlacklisted = ar.isDenylisted = cIe;
  ar.popContext = TIe;
  ar.pushContext = xIe;
  ar.requeue = CIe;
  ar.resync = gIe;
  ar.setContext = yIe;
  ar.setKey = AIe;
  ar.setScope = mIe;
  ar.setup = PIe;
  ar.skip = pIe;
  ar.skipKey = dIe;
  ar.stop = hIe;
  ar.visit = fIe;
  var oIe = Jp(), nM = ca();
  function lIe(e) {
    let t = this.opts;
    if (this.debug(e), this.node && this._call(t[e]))
      return !0;
    if (this.node) {
      var r;
      return this._call((r = t[this.node.type]) == null ? void 0 : r[e]);
    }
    return !1;
  }
  i(lIe, "call");
  function uIe(e) {
    if (!e) return !1;
    for (let t of e) {
      if (!t) continue;
      let r = this.node;
      if (!r) return !0;
      let s = t.call(this.state, this, this.state);
      if (s && typeof s == "object" && typeof s.then == "function")
        throw new Error("You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not suppo\
rt. If you're using a published plugin, you may need to upgrade your @babel/core version.");
      if (s)
        throw new Error(`Unexpected return value from visitor method ${t}`);
      if (this.node !== r || this._traverseFlags > 0) return !0;
    }
    return !1;
  }
  i(uIe, "_call");
  function cIe() {
    var e;
    let t = (e = this.opts.denylist) != null ? e : this.opts.blacklist;
    return t && t.indexOf(this.node.type) > -1;
  }
  i(cIe, "isDenylisted");
  function iM(e, t) {
    e.context !== t && (e.context = t, e.state = t.state, e.opts = t.opts);
  }
  i(iM, "restoreContext");
  function fIe() {
    var e, t;
    if (!this.node || this.isDenylisted() || (e = (t = this.opts).shouldSkip) != null && e.call(t, this))
      return !1;
    let r = this.context;
    return this.shouldSkip || this.call("enter") ? (this.debug("Skip..."), this.shouldStop) : (iM(this, r), this.debug("Recursing into..."),
    this.shouldStop = (0, oIe.traverseNode)(this.node, this.opts, this.scope, this.state, this, this.skipKeys), iM(this, r), this.call("exit"),
    this.shouldStop);
  }
  i(fIe, "visit");
  function pIe() {
    this.shouldSkip = !0;
  }
  i(pIe, "skip");
  function dIe(e) {
    this.skipKeys == null && (this.skipKeys = {}), this.skipKeys[e] = !0;
  }
  i(dIe, "skipKey");
  function hIe() {
    this._traverseFlags |= nM.SHOULD_SKIP | nM.SHOULD_STOP;
  }
  i(hIe, "stop");
  function mIe() {
    var e, t;
    if ((e = this.opts) != null && e.noScope) return;
    let r = this.parentPath;
    ((this.key === "key" || this.listKey === "decorators") && r.isMethod() || this.key === "discriminant" && r.isSwitchStatement()) && (r = r.
    parentPath);
    let s;
    for (; r && !s; ) {
      var n;
      if ((n = r.opts) != null && n.noScope) return;
      s = r.scope, r = r.parentPath;
    }
    this.scope = this.getScope(s), (t = this.scope) == null || t.init();
  }
  i(mIe, "setScope");
  function yIe(e) {
    return this.skipKeys != null && (this.skipKeys = {}), this._traverseFlags = 0, e && (this.context = e, this.state = e.state, this.opts =
    e.opts), this.setScope(), this;
  }
  i(yIe, "setContext");
  function gIe() {
    this.removed || (this._resyncParent(), this._resyncList(), this._resyncKey());
  }
  i(gIe, "resync");
  function bIe() {
    this.parentPath && (this.parent = this.parentPath.node);
  }
  i(bIe, "_resyncParent");
  function EIe() {
    if (this.container && this.node !== this.container[this.key]) {
      if (Array.isArray(this.container)) {
        for (let e = 0; e < this.container.length; e++)
          if (this.container[e] === this.node) {
            this.setKey(e);
            return;
          }
      } else
        for (let e of Object.keys(this.container))
          if (this.container[e] === this.node) {
            this.setKey(e);
            return;
          }
      this.key = null;
    }
  }
  i(EIe, "_resyncKey");
  function vIe() {
    if (!this.parent || !this.inList) return;
    let e = this.parent[this.listKey];
    this.container !== e && (this.container = e || null);
  }
  i(vIe, "_resyncList");
  function SIe() {
    (this.key == null || !this.container || this.container[this.key] !== this.node) && this._markRemoved();
  }
  i(SIe, "_resyncRemoved");
  function TIe() {
    this.contexts.pop(), this.contexts.length > 0 ? this.setContext(this.contexts[this.contexts.length - 1]) : this.setContext(void 0);
  }
  i(TIe, "popContext");
  function xIe(e) {
    this.contexts.push(e), this.setContext(e);
  }
  i(xIe, "pushContext");
  function PIe(e, t, r, s) {
    this.listKey = r, this.container = t, this.parentPath = e || this.parentPath, this.setKey(s);
  }
  i(PIe, "setup");
  function AIe(e) {
    var t;
    this.key = e, this.node = this.container[this.key], this.type = (t = this.node) == null ? void 0 : t.type;
  }
  i(AIe, "setKey");
  function CIe(e = this) {
    if (e.removed) return;
    let t = this.contexts;
    for (let r of t)
      r.maybeQueue(e);
  }
  i(CIe, "requeue");
  function wIe() {
    let e = this, t = this.contexts;
    for (; !t.length && (e = e.parentPath, !!e); )
      t = e.contexts;
    return t;
  }
  i(wIe, "_getQueueContexts");
});

// ../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js
var oM = y((Wd) => {
  "use strict";
  Object.defineProperty(Wd, "__esModule", {
    value: !0
  });
  Wd.hooks = void 0;
  var brt = Wd.hooks = [function(e, t) {
    if (e.key === "test" && (t.isWhile() || t.isSwitchCase()) || e.key === "declaration" && t.isExportDeclaration() || e.key === "body" && t.
    isLabeledStatement() || e.listKey === "declarations" && t.isVariableDeclaration() && t.node.declarations.length === 1 || e.key === "expr\
ession" && t.isExpressionStatement())
      return t.remove(), !0;
  }, function(e, t) {
    if (t.isSequenceExpression() && t.node.expressions.length === 1)
      return t.replaceWith(t.node.expressions[0]), !0;
  }, function(e, t) {
    if (t.isBinary())
      return e.key === "left" ? t.replaceWith(t.node.right) : t.replaceWith(t.node.left), !0;
  }, function(e, t) {
    if (t.isIfStatement() && e.key === "consequent" || e.key === "body" && (t.isLoop() || t.isArrowFunctionExpression()))
      return e.replaceWith({
        type: "BlockStatement",
        body: []
      }), !0;
  }];
});

// ../node_modules/@babel/traverse/lib/path/removal.js
var uM = y((fa) => {
  "use strict";
  Object.defineProperty(fa, "__esModule", {
    value: !0
  });
  fa._assertUnremoved = BIe;
  fa._callRemovalHooks = kIe;
  fa._markRemoved = LIe;
  fa._remove = FIe;
  fa._removeFromScope = RIe;
  fa.remove = NIe;
  var DIe = oM(), IIe = Ha(), lM = ca(), _Ie = Re(), {
    getBindingIdentifiers: OIe
  } = _Ie;
  function NIe() {
    var e;
    if (this._assertUnremoved(), this.resync(), (e = this.opts) != null && e.noScope || this._removeFromScope(), this._callRemovalHooks()) {
      this._markRemoved();
      return;
    }
    this.shareCommentsWithSiblings(), this._remove(), this._markRemoved();
  }
  i(NIe, "remove");
  function RIe() {
    let e = OIe(this.node, !1, !1, !0);
    Object.keys(e).forEach((t) => this.scope.removeBinding(t));
  }
  i(RIe, "_removeFromScope");
  function kIe() {
    if (this.parentPath) {
      for (let e of DIe.hooks)
        if (e(this, this.parentPath)) return !0;
    }
  }
  i(kIe, "_callRemovalHooks");
  function FIe() {
    Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
  }
  i(FIe, "_remove");
  function LIe() {
    this._traverseFlags |= lM.SHOULD_SKIP | lM.REMOVED, this.parent && (0, IIe.getCachedPaths)(this.hub, this.parent).delete(this.node), this.
    node = null;
  }
  i(LIe, "_markRemoved");
  function BIe() {
    if (this.removed)
      throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
  }
  i(BIe, "_assertUnremoved");
});

// ../node_modules/@babel/traverse/lib/path/lib/hoister.js
var fM = y((Hd) => {
  "use strict";
  Object.defineProperty(Hd, "__esModule", {
    value: !0
  });
  Hd.default = void 0;
  var cM = Re(), MIe = cM, {
    react: jIe
  } = cM, {
    cloneNode: qIe,
    jsxExpressionContainer: $Ie,
    variableDeclaration: UIe,
    variableDeclarator: VIe
  } = MIe, WIe = {
    ReferencedIdentifier(e, t) {
      if (e.isJSXIdentifier() && jIe.isCompatTag(e.node.name) && !e.parentPath.isJSXMemberExpression())
        return;
      if (e.node.name === "this") {
        let s = e.scope;
        do
          if (s.path.isFunction() && !s.path.isArrowFunctionExpression())
            break;
        while (s = s.parent);
        s && t.breakOnScopePaths.push(s.path);
      }
      let r = e.scope.getBinding(e.node.name);
      if (r) {
        for (let s of r.constantViolations)
          if (s.scope !== r.path.scope) {
            t.mutableBinding = !0, e.stop();
            return;
          }
        r === t.scope.getBinding(e.node.name) && (t.bindings[e.node.name] = r);
      }
    }
  }, zS = class {
    static {
      i(this, "PathHoister");
    }
    constructor(t, r) {
      this.breakOnScopePaths = void 0, this.bindings = void 0, this.mutableBinding = void 0, this.scopes = void 0, this.scope = void 0, this.
      path = void 0, this.attachAfter = void 0, this.breakOnScopePaths = [], this.bindings = {}, this.mutableBinding = !1, this.scopes = [],
      this.scope = r, this.path = t, this.attachAfter = !1;
    }
    isCompatibleScope(t) {
      for (let r of Object.keys(this.bindings)) {
        let s = this.bindings[r];
        if (!t.bindingIdentifierEquals(r, s.identifier))
          return !1;
      }
      return !0;
    }
    getCompatibleScopes() {
      let t = this.path.scope;
      do {
        if (this.isCompatibleScope(t))
          this.scopes.push(t);
        else
          break;
        if (this.breakOnScopePaths.indexOf(t.path) >= 0)
          break;
      } while (t = t.parent);
    }
    getAttachmentPath() {
      let t = this._getAttachmentPath();
      if (!t) return;
      let r = t.scope;
      if (r.path === t && (r = t.scope.parent), r.path.isProgram() || r.path.isFunction())
        for (let s of Object.keys(this.bindings)) {
          if (!r.hasOwnBinding(s)) continue;
          let n = this.bindings[s];
          if (n.kind === "param" || n.path.parentKey === "params")
            continue;
          if (this.getAttachmentParentForPath(n.path).key >= t.key) {
            this.attachAfter = !0, t = n.path;
            for (let o of n.constantViolations)
              this.getAttachmentParentForPath(o).key > t.key && (t = o);
          }
        }
      return t;
    }
    _getAttachmentPath() {
      let r = this.scopes.pop();
      if (r) {
        if (r.path.isFunction())
          if (this.hasOwnParamBindings(r)) {
            if (this.scope === r) return;
            let s = r.path.get("body").get("body");
            for (let n = 0; n < s.length; n++)
              if (!s[n].node._blockHoist)
                return s[n];
          } else
            return this.getNextScopeAttachmentParent();
        else if (r.path.isProgram())
          return this.getNextScopeAttachmentParent();
      }
    }
    getNextScopeAttachmentParent() {
      let t = this.scopes.pop();
      if (t) return this.getAttachmentParentForPath(t.path);
    }
    getAttachmentParentForPath(t) {
      do
        if (!t.parentPath || Array.isArray(t.container) && t.isStatement())
          return t;
      while (t = t.parentPath);
    }
    hasOwnParamBindings(t) {
      for (let r of Object.keys(this.bindings)) {
        if (!t.hasOwnBinding(r)) continue;
        let s = this.bindings[r];
        if (s.kind === "param" && s.constant) return !0;
      }
      return !1;
    }
    run() {
      if (this.path.traverse(WIe, this), this.mutableBinding) return;
      this.getCompatibleScopes();
      let t = this.getAttachmentPath();
      if (!t || t.getFunctionParent() === this.path.getFunctionParent()) return;
      let r = t.scope.generateUidIdentifier("ref"), s = VIe(r, this.path.node), n = this.attachAfter ? "insertAfter" : "insertBefore", [a] = t[n](
      [t.isVariableDeclarator() ? s : UIe("var", [s])]), o = this.path.parentPath;
      return o.isJSXElement() && this.path.container === o.node.children && (r = $Ie(r)), this.path.replaceWith(qIe(r)), t.isVariableDeclarator() ?
      a.get("init") : a.get("declarations.0.init");
    }
  };
  Hd.default = zS;
});

// ../node_modules/@babel/traverse/lib/path/modification.js
var yM = y(($s) => {
  "use strict";
  Object.defineProperty($s, "__esModule", {
    value: !0
  });
  $s._containerInsert = a_e;
  $s._containerInsertAfter = l_e;
  $s._containerInsertBefore = o_e;
  $s._verifyNodeList = p_e;
  $s.hoist = m_e;
  $s.insertAfter = c_e;
  $s.insertBefore = i_e;
  $s.pushContainer = h_e;
  $s.unshiftContainer = d_e;
  $s.updateSiblingKeys = f_e;
  var HIe = Ha(), GIe = fM(), ZS = ca(), KIe = Re(), {
    arrowFunctionExpression: YIe,
    assertExpression: XIe,
    assignmentExpression: zIe,
    blockStatement: pM,
    callExpression: JIe,
    cloneNode: JS,
    expressionStatement: QS,
    isAssignmentExpression: QIe,
    isCallExpression: ZIe,
    isExportNamedDeclaration: dM,
    isExpression: e_e,
    isIdentifier: t_e,
    isSequenceExpression: r_e,
    isSuper: s_e,
    thisExpression: n_e
  } = KIe;
  function i_e(e) {
    this._assertUnremoved();
    let t = this._verifyNodeList(e), {
      parentPath: r,
      parent: s
    } = this;
    if (r.isExpressionStatement() || r.isLabeledStatement() || dM(s) || r.isExportDefaultDeclaration() && this.isDeclaration())
      return r.insertBefore(t);
    if (this.isNodeType("Expression") && !this.isJSXElement() || r.isForStatement() && this.key === "init")
      return this.node && t.push(this.node), this.replaceExpressionWithStatements(t);
    if (Array.isArray(this.container))
      return this._containerInsertBefore(t);
    if (this.isStatementOrBlock()) {
      let n = this.node, a = n && (!this.isExpressionStatement() || n.expression != null);
      return this.replaceWith(pM(a ? [n] : [])), this.unshiftContainer("body", t);
    } else
      throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
  }
  i(i_e, "insertBefore");
  function a_e(e, t) {
    this.updateSiblingKeys(e, t.length);
    let r = [];
    this.container.splice(e, 0, ...t);
    for (let a = 0; a < t.length; a++) {
      var s;
      let o = e + a, l = this.getSibling(o);
      r.push(l), (s = this.context) != null && s.queue && l.pushContext(this.context);
    }
    let n = this._getQueueContexts();
    for (let a of r) {
      a.setScope(), a.debug("Inserted.");
      for (let o of n)
        o.maybeQueue(a, !0);
    }
    return r;
  }
  i(a_e, "_containerInsert");
  function o_e(e) {
    return this._containerInsert(this.key, e);
  }
  i(o_e, "_containerInsertBefore");
  function l_e(e) {
    return this._containerInsert(this.key + 1, e);
  }
  i(l_e, "_containerInsertAfter");
  var hM = /* @__PURE__ */ i((e) => e[e.length - 1], "last");
  function mM(e) {
    return r_e(e.parent) && (hM(e.parent.expressions) !== e.node || mM(e.parentPath));
  }
  i(mM, "isHiddenInSequenceExpression");
  function u_e(e, t) {
    if (!QIe(e) || !t_e(e.left))
      return !1;
    let r = t.getBlockParent();
    return r.hasOwnBinding(e.left.name) && r.getOwnBinding(e.left.name).constantViolations.length <= 1;
  }
  i(u_e, "isAlmostConstantAssignment");
  function c_e(e) {
    if (this._assertUnremoved(), this.isSequenceExpression())
      return hM(this.get("expressions")).insertAfter(e);
    let t = this._verifyNodeList(e), {
      parentPath: r,
      parent: s
    } = this;
    if (r.isExpressionStatement() || r.isLabeledStatement() || dM(s) || r.isExportDefaultDeclaration() && this.isDeclaration())
      return r.insertAfter(t.map((n) => e_e(n) ? QS(n) : n));
    if (this.isNodeType("Expression") && !this.isJSXElement() && !r.isJSXElement() || r.isForStatement() && this.key === "init") {
      if (this.node) {
        let n = this.node, {
          scope: a
        } = this;
        if (a.path.isPattern())
          return XIe(n), this.replaceWith(JIe(YIe([], n), [])), this.get("callee.body").insertAfter(t), [this];
        if (mM(this))
          t.unshift(n);
        else if (ZIe(n) && s_e(n.callee))
          t.unshift(n), t.push(n_e());
        else if (u_e(n, a))
          t.unshift(n), t.push(JS(n.left));
        else if (a.isPure(n, !0))
          t.push(n);
        else {
          r.isMethod({
            computed: !0,
            key: n
          }) && (a = a.parent);
          let o = a.generateDeclaredUidIdentifier();
          t.unshift(QS(zIe("=", JS(o), n))), t.push(QS(JS(o)));
        }
      }
      return this.replaceExpressionWithStatements(t);
    } else {
      if (Array.isArray(this.container))
        return this._containerInsertAfter(t);
      if (this.isStatementOrBlock()) {
        let n = this.node, a = n && (!this.isExpressionStatement() || n.expression != null);
        return this.replaceWith(pM(a ? [n] : [])), this.pushContainer("body", t);
      } else
        throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");
    }
  }
  i(c_e, "insertAfter");
  function f_e(e, t) {
    if (!this.parent) return;
    let r = (0, HIe.getCachedPaths)(this.hub, this.parent) || [];
    for (let [, s] of r)
      typeof s.key == "number" && s.key >= e && (s.key += t);
  }
  i(f_e, "updateSiblingKeys");
  function p_e(e) {
    if (!e)
      return [];
    Array.isArray(e) || (e = [e]);
    for (let t = 0; t < e.length; t++) {
      let r = e[t], s;
      if (r ? typeof r != "object" ? s = "contains a non-object node" : r.type ? r instanceof ZS.default && (s = "has a NodePath when it exp\
ected a raw object") : s = "without a type" : s = "has falsy node", s) {
        let n = Array.isArray(r) ? "array" : typeof r;
        throw new Error(`Node list ${s} with the index of ${t} and type of ${n}`);
      }
    }
    return e;
  }
  i(p_e, "_verifyNodeList");
  function d_e(e, t) {
    return this._assertUnremoved(), t = this._verifyNodeList(t), ZS.default.get({
      parentPath: this,
      parent: this.node,
      container: this.node[e],
      listKey: e,
      key: 0
    }).setContext(this.context)._containerInsertBefore(t);
  }
  i(d_e, "unshiftContainer");
  function h_e(e, t) {
    this._assertUnremoved();
    let r = this._verifyNodeList(t), s = this.node[e];
    return ZS.default.get({
      parentPath: this,
      parent: this.node,
      container: s,
      listKey: e,
      key: s.length
    }).setContext(this.context).replaceWithMultiple(r);
  }
  i(h_e, "pushContainer");
  function m_e(e = this.scope) {
    return new GIe.default(this, e).run();
  }
  i(m_e, "hoist");
});

// ../node_modules/@babel/traverse/lib/path/family.js
var EM = y((qr) => {
  "use strict";
  Object.defineProperty(qr, "__esModule", {
    value: !0
  });
  qr._getKey = R_e;
  qr._getPattern = k_e;
  qr.get = N_e;
  qr.getAllNextSiblings = __e;
  qr.getAllPrevSiblings = O_e;
  qr.getBindingIdentifierPaths = B_e;
  qr.getBindingIdentifiers = F_e;
  qr.getCompletionRecords = C_e;
  qr.getNextSibling = I_e;
  qr.getOpposite = x_e;
  qr.getOuterBindingIdentifierPaths = M_e;
  qr.getOuterBindingIdentifiers = L_e;
  qr.getPrevSibling = D_e;
  qr.getSibling = w_e;
  var t1 = ca(), y_e = Re(), {
    getBindingIdentifiers: bM,
    getOuterBindingIdentifiers: g_e,
    isDeclaration: b_e,
    numericLiteral: E_e,
    unaryExpression: v_e
  } = y_e, r1 = 0, Ic = 1;
  function S_e(e) {
    return {
      type: r1,
      path: e
    };
  }
  i(S_e, "NormalCompletion");
  function T_e(e) {
    return {
      type: Ic,
      path: e
    };
  }
  i(T_e, "BreakCompletion");
  function x_e() {
    return this.key === "left" ? this.getSibling("right") : this.key === "right" ? this.getSibling("left") : null;
  }
  i(x_e, "getOpposite");
  function bl(e, t, r) {
    return e && t.push(...El(e, r)), t;
  }
  i(bl, "addCompletionRecords");
  function P_e(e, t, r) {
    let s = [];
    for (let n = 0; n < e.length; n++) {
      let a = e[n], o = El(a, r), l = [], u = [];
      for (let c of o)
        c.type === r1 && l.push(c), c.type === Ic && u.push(c);
      l.length && (s = l), t.push(...u);
    }
    return t.push(...s), t;
  }
  i(P_e, "completionRecordForSwitch");
  function A_e(e) {
    e.forEach((t) => {
      t.type = Ic;
    });
  }
  i(A_e, "normalCompletionToBreak");
  function e1(e, t) {
    e.forEach((r) => {
      r.path.isBreakStatement({
        label: null
      }) && (t ? r.path.replaceWith(v_e("void", E_e(0))) : r.path.remove());
    });
  }
  i(e1, "replaceBreakStatementInBreakCompletion");
  function gM(e, t) {
    let r = [];
    if (t.canHaveBreak) {
      let s = [];
      for (let n = 0; n < e.length; n++) {
        let a = e[n], o = Object.assign({}, t, {
          inCaseClause: !1
        });
        a.isBlockStatement() && (t.inCaseClause || t.shouldPopulateBreak) ? o.shouldPopulateBreak = !0 : o.shouldPopulateBreak = !1;
        let l = El(a, o);
        if (l.length > 0 && l.every((u) => u.type === Ic)) {
          s.length > 0 && l.every((u) => u.path.isBreakStatement({
            label: null
          })) ? (A_e(s), r.push(...s), s.some((u) => u.path.isDeclaration()) && (r.push(...l), e1(l, !0)), e1(l, !1)) : (r.push(...l), t.shouldPopulateBreak ||
          e1(l, !0));
          break;
        }
        if (n === e.length - 1)
          r.push(...l);
        else {
          s = [];
          for (let u = 0; u < l.length; u++) {
            let c = l[u];
            c.type === Ic && r.push(c), c.type === r1 && s.push(c);
          }
        }
      }
    } else if (e.length)
      for (let s = e.length - 1; s >= 0; s--) {
        let n = El(e[s], t);
        if (n.length > 1 || n.length === 1 && !n[0].path.isVariableDeclaration()) {
          r.push(...n);
          break;
        }
      }
    return r;
  }
  i(gM, "getStatementListCompletion");
  function El(e, t) {
    let r = [];
    if (e.isIfStatement())
      r = bl(e.get("consequent"), r, t), r = bl(e.get("alternate"), r, t);
    else {
      if (e.isDoExpression() || e.isFor() || e.isWhile() || e.isLabeledStatement())
        return bl(e.get("body"), r, t);
      if (e.isProgram() || e.isBlockStatement())
        return gM(e.get("body"), t);
      if (e.isFunction())
        return El(e.get("body"), t);
      if (e.isTryStatement())
        r = bl(e.get("block"), r, t), r = bl(e.get("handler"), r, t);
      else {
        if (e.isCatchClause())
          return bl(e.get("body"), r, t);
        if (e.isSwitchStatement())
          return P_e(e.get("cases"), r, t);
        if (e.isSwitchCase())
          return gM(e.get("consequent"), {
            canHaveBreak: !0,
            shouldPopulateBreak: !1,
            inCaseClause: !0
          });
        e.isBreakStatement() ? r.push(T_e(e)) : r.push(S_e(e));
      }
    }
    return r;
  }
  i(El, "_getCompletionRecords");
  function C_e() {
    return El(this, {
      canHaveBreak: !1,
      shouldPopulateBreak: !1,
      inCaseClause: !1
    }).map((t) => t.path);
  }
  i(C_e, "getCompletionRecords");
  function w_e(e) {
    return t1.default.get({
      parentPath: this.parentPath,
      parent: this.parent,
      container: this.container,
      listKey: this.listKey,
      key: e
    }).setContext(this.context);
  }
  i(w_e, "getSibling");
  function D_e() {
    return this.getSibling(this.key - 1);
  }
  i(D_e, "getPrevSibling");
  function I_e() {
    return this.getSibling(this.key + 1);
  }
  i(I_e, "getNextSibling");
  function __e() {
    let e = this.key, t = this.getSibling(++e), r = [];
    for (; t.node; )
      r.push(t), t = this.getSibling(++e);
    return r;
  }
  i(__e, "getAllNextSiblings");
  function O_e() {
    let e = this.key, t = this.getSibling(--e), r = [];
    for (; t.node; )
      r.push(t), t = this.getSibling(--e);
    return r;
  }
  i(O_e, "getAllPrevSiblings");
  function N_e(e, t = !0) {
    t === !0 && (t = this.context);
    let r = e.split(".");
    return r.length === 1 ? this._getKey(e, t) : this._getPattern(r, t);
  }
  i(N_e, "get");
  function R_e(e, t) {
    let r = this.node, s = r[e];
    return Array.isArray(s) ? s.map((n, a) => t1.default.get({
      listKey: e,
      parentPath: this,
      parent: r,
      container: s,
      key: a
    }).setContext(t)) : t1.default.get({
      parentPath: this,
      parent: r,
      container: r,
      key: e
    }).setContext(t);
  }
  i(R_e, "_getKey");
  function k_e(e, t) {
    let r = this;
    for (let s of e)
      s === "." ? r = r.parentPath : Array.isArray(r) ? r = r[s] : r = r.get(s, t);
    return r;
  }
  i(k_e, "_getPattern");
  function F_e(e) {
    return bM(this.node, e);
  }
  i(F_e, "getBindingIdentifiers");
  function L_e(e) {
    return g_e(this.node, e);
  }
  i(L_e, "getOuterBindingIdentifiers");
  function B_e(e = !1, t = !1) {
    let s = [this], n = /* @__PURE__ */ Object.create(null);
    for (; s.length; ) {
      let a = s.shift();
      if (!a || !a.node) continue;
      let o = bM.keys[a.node.type];
      if (a.isIdentifier()) {
        e ? (n[a.node.name] = n[a.node.name] || []).push(a) : n[a.node.name] = a;
        continue;
      }
      if (a.isExportDeclaration()) {
        let l = a.get("declaration");
        b_e(l) && s.push(l);
        continue;
      }
      if (t) {
        if (a.isFunctionDeclaration()) {
          s.push(a.get("id"));
          continue;
        }
        if (a.isFunctionExpression())
          continue;
      }
      if (o)
        for (let l = 0; l < o.length; l++) {
          let u = o[l], c = a.get(u);
          Array.isArray(c) ? s.push(...c) : c.node && s.push(c);
        }
    }
    return n;
  }
  i(B_e, "getBindingIdentifierPaths");
  function M_e(e = !1) {
    return this.getBindingIdentifierPaths(e, !0);
  }
  i(M_e, "getOuterBindingIdentifierPaths");
});

// ../node_modules/@babel/traverse/lib/path/comments.js
var SM = y((_c) => {
  "use strict";
  Object.defineProperty(_c, "__esModule", {
    value: !0
  });
  _c.addComment = V_e;
  _c.addComments = W_e;
  _c.shareCommentsWithSiblings = U_e;
  var j_e = Re(), {
    addComment: q_e,
    addComments: $_e
  } = j_e;
  function U_e() {
    if (typeof this.key == "string") return;
    let e = this.node;
    if (!e) return;
    let t = e.trailingComments, r = e.leadingComments;
    if (!t && !r) return;
    let s = this.getSibling(this.key - 1), n = this.getSibling(this.key + 1), a = !!s.node, o = !!n.node;
    a && (r && s.addComments("trailing", vM(r, s.node.trailingComments)), t && !o && s.addComments("trailing", t)), o && (t && n.addComments(
    "leading", vM(t, n.node.leadingComments)), r && !a && n.addComments("leading", r));
  }
  i(U_e, "shareCommentsWithSiblings");
  function vM(e, t) {
    if (!(t != null && t.length)) return e;
    let r = new Set(t);
    return e.filter((s) => !r.has(s));
  }
  i(vM, "removeIfExisting");
  function V_e(e, t, r) {
    q_e(this.node, e, t, r);
  }
  i(V_e, "addComment");
  function W_e(e, t) {
    $_e(this.node, e, t);
  }
  i(W_e, "addComments");
});

// ../node_modules/@babel/traverse/lib/path/index.js
var ca = y((Mn) => {
  "use strict";
  Object.defineProperty(Mn, "__esModule", {
    value: !0
  });
  Mn.default = Mn.SHOULD_STOP = Mn.SHOULD_SKIP = Mn.REMOVED = void 0;
  var H_e = BE(), G_e = Ka(), K_e = Bs(), Y_e = ev(), xM = Re(), Gd = xM, X_e = Ha(), z_e = gd(), J_e = wL(), Q_e = GL(), Z_e = AB(), eOe = IB(),
  tOe = JB(), PM = sM(), rOe = aM(), sOe = uM(), nOe = yM(), iOe = EM(), aOe = SM(), oOe = jE(), {
    validate: lOe
  } = xM, TM = G_e("babel"), s1 = Mn.REMOVED = 1, n1 = Mn.SHOULD_STOP = 2, i1 = Mn.SHOULD_SKIP = 4, pa = class e {
    static {
      i(this, "NodePath");
    }
    constructor(t, r) {
      this.contexts = [], this.state = null, this.opts = null, this._traverseFlags = 0, this.skipKeys = null, this.parentPath = null, this.container =
      null, this.listKey = null, this.key = null, this.node = null, this.type = null, this.parent = r, this.hub = t, this.data = null, this.
      context = null, this.scope = null;
    }
    static get({
      hub: t,
      parentPath: r,
      parent: s,
      container: n,
      listKey: a,
      key: o
    }) {
      if (!t && r && (t = r.hub), !s)
        throw new Error("To get a node path the parent needs to exist");
      let l = n[o], u = X_e.getOrCreateCachedPaths(t, s), c = u.get(l);
      return c || (c = new e(t, s), l && u.set(l, c)), c.setup(r, n, a, o), c;
    }
    getScope(t) {
      return this.isScope() ? new Y_e.default(this) : t;
    }
    setData(t, r) {
      return this.data == null && (this.data = /* @__PURE__ */ Object.create(null)), this.data[t] = r;
    }
    getData(t, r) {
      this.data == null && (this.data = /* @__PURE__ */ Object.create(null));
      let s = this.data[t];
      return s === void 0 && r !== void 0 && (s = this.data[t] = r), s;
    }
    hasNode() {
      return this.node != null;
    }
    buildCodeFrameError(t, r = SyntaxError) {
      return this.hub.buildError(this.node, t, r);
    }
    traverse(t, r) {
      (0, K_e.default)(this.node, t, this.scope, r, this);
    }
    set(t, r) {
      lOe(this.node, t, r), this.node[t] = r;
    }
    getPathLocation() {
      let t = [], r = this;
      do {
        let s = r.key;
        r.inList && (s = `${r.listKey}[${s}]`), t.unshift(s);
      } while (r = r.parentPath);
      return t.join(".");
    }
    debug(t) {
      TM.enabled && TM(`${this.getPathLocation()} ${this.type}: ${t}`);
    }
    toString() {
      return (0, z_e.default)(this.node).code;
    }
    get inList() {
      return !!this.listKey;
    }
    set inList(t) {
      t || (this.listKey = null);
    }
    get parentKey() {
      return this.listKey || this.key;
    }
    get shouldSkip() {
      return !!(this._traverseFlags & i1);
    }
    set shouldSkip(t) {
      t ? this._traverseFlags |= i1 : this._traverseFlags &= ~i1;
    }
    get shouldStop() {
      return !!(this._traverseFlags & n1);
    }
    set shouldStop(t) {
      t ? this._traverseFlags |= n1 : this._traverseFlags &= ~n1;
    }
    get removed() {
      return !!(this._traverseFlags & s1);
    }
    set removed(t) {
      t ? this._traverseFlags |= s1 : this._traverseFlags &= ~s1;
    }
  };
  Object.assign(pa.prototype, J_e, Q_e, Z_e, eOe, tOe, PM, rOe, sOe, nOe, iOe, aOe);
  pa.prototype._guessExecutionStatusRelativeToDifferentFunctions = PM._guessExecutionStatusRelativeTo;
  for (let e of Gd.TYPES) {
    let t = `is${e}`, r = Gd[t];
    pa.prototype[t] = function(s) {
      return r(this.node, s);
    }, pa.prototype[`assert${e}`] = function(s) {
      if (!r(this.node, s))
        throw new TypeError(`Expected node path of type ${e}`);
    };
  }
  Object.assign(pa.prototype, oOe);
  for (let e of Object.keys(H_e))
    e[0] !== "_" && (Gd.TYPES.includes(e) || Gd.TYPES.push(e));
  var _rt = Mn.default = pa;
});

// ../node_modules/@babel/traverse/lib/context.js
var AM = y((Kd) => {
  "use strict";
  Object.defineProperty(Kd, "__esModule", {
    value: !0
  });
  Kd.default = void 0;
  var uOe = ca(), cOe = Re(), {
    VISITOR_KEYS: fOe
  } = cOe, a1 = class {
    static {
      i(this, "TraversalContext");
    }
    constructor(t, r, s, n) {
      this.queue = null, this.priorityQueue = null, this.parentPath = n, this.scope = t, this.state = s, this.opts = r;
    }
    shouldVisit(t) {
      let r = this.opts;
      if (r.enter || r.exit || r[t.type]) return !0;
      let s = fOe[t.type];
      if (!(s != null && s.length)) return !1;
      for (let n of s)
        if (t[n])
          return !0;
      return !1;
    }
    create(t, r, s, n) {
      return uOe.default.get({
        parentPath: this.parentPath,
        parent: t,
        container: r,
        key: s,
        listKey: n
      });
    }
    maybeQueue(t, r) {
      this.queue && (r ? this.queue.push(t) : this.priorityQueue.push(t));
    }
    visitMultiple(t, r, s) {
      if (t.length === 0) return !1;
      let n = [];
      for (let a = 0; a < t.length; a++) {
        let o = t[a];
        o && this.shouldVisit(o) && n.push(this.create(r, t, a, s));
      }
      return this.visitQueue(n);
    }
    visitSingle(t, r) {
      return this.shouldVisit(t[r]) ? this.visitQueue([this.create(t, t, r)]) : !1;
    }
    visitQueue(t) {
      this.queue = t, this.priorityQueue = [];
      let r = /* @__PURE__ */ new WeakSet(), s = !1, n = 0;
      for (; n < t.length; ) {
        let a = t[n];
        if (n++, a.resync(), (a.contexts.length === 0 || a.contexts[a.contexts.length - 1] !== this) && a.pushContext(this), a.key === null)
         continue;
        let {
          node: o
        } = a;
        if (!r.has(o)) {
          if (o && r.add(o), a.visit()) {
            s = !0;
            break;
          }
          if (this.priorityQueue.length && (s = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = t, s))
            break;
        }
      }
      for (let a = 0; a < n; a++)
        t[a].popContext();
      return this.queue = null, s;
    }
    visit(t, r) {
      let s = t[r];
      return s ? Array.isArray(s) ? this.visitMultiple(s, t, r) : this.visitSingle(t, r) : !1;
    }
  };
  Kd.default = a1;
});

// ../node_modules/@babel/traverse/lib/traverse-node.js
var Jp = y((o1) => {
  "use strict";
  Object.defineProperty(o1, "__esModule", {
    value: !0
  });
  o1.traverseNode = mOe;
  var pOe = AM(), dOe = Re(), {
    VISITOR_KEYS: hOe
  } = dOe;
  function mOe(e, t, r, s, n, a, o) {
    let l = hOe[e.type];
    if (!l) return !1;
    let u = new pOe.default(r, t, s, n);
    if (o)
      return a != null && a[n.parentKey] ? !1 : u.visitQueue([n]);
    for (let c of l)
      if (!(a != null && a[c]) && u.visit(e, c))
        return !0;
    return !1;
  }
  i(mOe, "traverseNode");
});

// ../node_modules/@babel/traverse/lib/hub.js
var CM = y((Yd) => {
  "use strict";
  Object.defineProperty(Yd, "__esModule", {
    value: !0
  });
  Yd.default = void 0;
  var l1 = class {
    static {
      i(this, "Hub");
    }
    getCode() {
    }
    getScope() {
    }
    addHelper() {
      throw new Error("Helpers are not supported by the default hub.");
    }
    buildError(t, r, s = TypeError) {
      return new s(r);
    }
  };
  Yd.default = l1;
});

// ../node_modules/@babel/traverse/lib/index.js
var Bs = y((Ei) => {
  "use strict";
  Object.defineProperty(Ei, "__esModule", {
    value: !0
  });
  Object.defineProperty(Ei, "Hub", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return vOe.default;
    }, "get")
  });
  Object.defineProperty(Ei, "NodePath", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return bOe.default;
    }, "get")
  });
  Object.defineProperty(Ei, "Scope", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return EOe.default;
    }, "get")
  });
  Ei.visitors = Ei.default = void 0;
  var Oc = ec();
  Ei.visitors = Oc;
  var yOe = Re(), gOe = Ha(), wM = Jp(), bOe = ca(), EOe = ev(), vOe = CM(), {
    VISITOR_KEYS: SOe,
    removeProperties: TOe,
    traverseFast: DM
  } = yOe;
  function Us(e, t = {}, r, s, n, a) {
    if (e) {
      if (!t.noScope && !r && e.type !== "Program" && e.type !== "File")
        throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${e.
        type} node without passing scope and parentPath.`);
      if (!n && a)
        throw new Error("visitSelf can only be used when providing a NodePath.");
      SOe[e.type] && (Oc.explode(t), (0, wM.traverseNode)(e, t, r, s, n, null, a));
    }
  }
  i(Us, "traverse");
  var jrt = Ei.default = Us;
  Us.visitors = Oc;
  Us.verify = Oc.verify;
  Us.explode = Oc.explode;
  Us.cheap = function(e, t) {
    DM(e, t);
  };
  Us.node = function(e, t, r, s, n, a) {
    (0, wM.traverseNode)(e, t, r, s, n, a);
  };
  Us.clearNode = function(e, t) {
    TOe(e, t);
  };
  Us.removeProperties = function(e, t) {
    return DM(e, Us.clearNode, t), e;
  };
  function xOe(e, t) {
    e.node.type === t.type && (t.has = !0, e.stop());
  }
  i(xOe, "hasDenylistedType");
  Us.hasType = function(e, t, r) {
    if (r != null && r.includes(e.type)) return !1;
    if (e.type === t) return !0;
    let s = {
      has: !1,
      type: t
    };
    return Us(e, {
      noScope: !0,
      denylist: r,
      enter: xOe
    }, null, s), s.has;
  };
  Us.cache = gOe;
});

// ../node_modules/@babel/helpers/lib/helpers-generated.js
var MM = y((zd) => {
  "use strict";
  Object.defineProperty(zd, "__esModule", {
    value: !0
  });
  zd.default = void 0;
  var LOe = yl();
  function lt(e, t) {
    return Object.freeze({
      minVersion: e,
      ast: /* @__PURE__ */ i(() => LOe.default.program.ast(t, {
        preserveComments: !0
      }), "ast")
    });
  }
  i(lt, "helper");
  var pst = zd.default = Object.freeze({
    AsyncGenerator: lt("7.0.0-beta.0", 'import OverloadYield from"OverloadYield";export default function AsyncGenerator(e){var r,t;function \
resume(r,t){try{var n=e[r](t),o=n.value,u=o instanceof OverloadYield;Promise.resolve(u?o.v:o).then((function(t){if(u){var i="return"===r?"re\
turn":"next";if(!o.k||t.done)return resume(i,t);t=e[i](t).value}settle(n.done?"return":"normal",t)}),(function(e){resume("throw",e)}))}catch\
(e){settle("throw",e)}}function settle(e,n){switch(e){case"return":r.resolve({value:n,done:!0});break;case"throw":r.reject(n);break;default:\
r.resolve({value:n,done:!1})}(r=r.next)?resume(r.key,r.arg):t=null}this._invoke=function(e,n){return new Promise((function(o,u){var i={key:e\
,arg:n,resolve:o,reject:u,next:null};t?t=t.next=i:(r=t=i,resume(e,n))}))},"function"!=typeof e.return&&(this.return=void 0)}AsyncGenerator.p\
rototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},AsyncGenerator.prototype.next=function(\
e){return this._invoke("next",e)},AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e)},AsyncGenerator.prototype.return\
=function(e){return this._invoke("return",e)};'),
    OverloadYield: lt("7.18.14", "export default function _OverloadYield(t,e){this.v=t,this.k=e}"),
    applyDecs: lt("7.17.8", 'import setFunctionName from"setFunctionName";import toPropertyKey from"toPropertyKey";function old_createMetada\
taMethodsForProperty(e,t,a,r){return{getMetadata:function(o){old_assertNotFinished(r,"getMetadata"),old_assertMetadataKey(o);var i=e[o];if(v\
oid 0!==i)if(1===t){var n=i.public;if(void 0!==n)return n[a]}else if(2===t){var l=i.private;if(void 0!==l)return l.get(a)}else if(Object.has\
OwnProperty.call(i,"constructor"))return i.constructor},setMetadata:function(o,i){old_assertNotFinished(r,"setMetadata"),old_assertMetadataK\
ey(o);var n=e[o];if(void 0===n&&(n=e[o]={}),1===t){var l=n.public;void 0===l&&(l=n.public={}),l[a]=i}else if(2===t){var s=n.priv;void 0===s&\
&(s=n.private=new Map),s.set(a,i)}else n.constructor=i}}}function old_convertMetadataMapToFinal(e,t){var a=e[Symbol.metadata||Symbol.for("Sy\
mbol.metadata")],r=Object.getOwnPropertySymbols(t);if(0!==r.length){for(var o=0;o<r.length;o++){var i=r[o],n=t[i],l=a?a[i]:null,s=n.public,c\
=l?l.public:null;s&&c&&Object.setPrototypeOf(s,c);var d=n.private;if(d){var u=Array.from(d.values()),f=l?l.private:null;f&&(u=u.concat(f)),n\
.private=u}l&&Object.setPrototypeOf(n,l)}a&&Object.setPrototypeOf(t,a),e[Symbol.metadata||Symbol.for("Symbol.metadata")]=t}}function old_cre\
ateAddInitializerMethod(e,t){return function(a){old_assertNotFinished(t,"addInitializer"),old_assertCallable(a,"An initializer"),e.push(a)}}\
function old_memberDec(e,t,a,r,o,i,n,l,s){var c;switch(i){case 1:c="accessor";break;case 2:c="method";break;case 3:c="getter";break;case 4:c\
="setter";break;default:c="field"}var d,u,f={kind:c,name:l?"#"+t:toPropertyKey(t),isStatic:n,isPrivate:l},p={v:!1};if(0!==i&&(f.addInitializ\
er=old_createAddInitializerMethod(o,p)),l){d=2,u=Symbol(t);var v={};0===i?(v.get=a.get,v.set=a.set):2===i?v.get=function(){return a.value}:(\
1!==i&&3!==i||(v.get=function(){return a.get.call(this)}),1!==i&&4!==i||(v.set=function(e){a.set.call(this,e)})),f.access=v}else d=1,u=t;try\
{return e(s,Object.assign(f,old_createMetadataMethodsForProperty(r,d,u,p)))}finally{p.v=!0}}function old_assertNotFinished(e,t){if(e.v)throw\
 Error("attempted to call "+t+" after decoration was finished")}function old_assertMetadataKey(e){if("symbol"!=typeof e)throw new TypeError(\
"Metadata keys must be symbols, received: "+e)}function old_assertCallable(e,t){if("function"!=typeof e)throw new TypeError(t+" must be a fu\
nction")}function old_assertValidReturnValue(e,t){var a=typeof t;if(1===e){if("object"!==a||null===t)throw new TypeError("accessor decorator\
s must return an object with get, set, or init properties or void 0");void 0!==t.get&&old_assertCallable(t.get,"accessor.get"),void 0!==t.se\
t&&old_assertCallable(t.set,"accessor.set"),void 0!==t.init&&old_assertCallable(t.init,"accessor.init"),void 0!==t.initializer&&old_assertCa\
llable(t.initializer,"accessor.initializer")}else if("function"!==a)throw new TypeError((0===e?"field":10===e?"class":"method")+" decorators\
 must return a function or void 0")}function old_getInit(e){var t;return null==(t=e.init)&&(t=e.initializer)&&void 0!==console&&console.warn\
(".initializer has been renamed to .init as of March 2022"),t}function old_applyMemberDec(e,t,a,r,o,i,n,l,s){var c,d,u,f,p,v,y,h=a[0];if(n?(\
0===o||1===o?(c={get:a[3],set:a[4]},u="get"):3===o?(c={get:a[3]},u="get"):4===o?(c={set:a[3]},u="set"):c={value:a[3]},0!==o&&(1===o&&setFunc\
tionName(a[4],"#"+r,"set"),setFunctionName(a[3],"#"+r,u))):0!==o&&(c=Object.getOwnPropertyDescriptor(t,r)),1===o?f={get:c.get,set:c.set}:2==\
=o?f=c.value:3===o?f=c.get:4===o&&(f=c.set),"function"==typeof h)void 0!==(p=old_memberDec(h,r,c,l,s,o,i,n,f))&&(old_assertValidReturnValue(\
o,p),0===o?d=p:1===o?(d=old_getInit(p),v=p.get||f.get,y=p.set||f.set,f={get:v,set:y}):f=p);else for(var m=h.length-1;m>=0;m--){var b;void 0!\
==(p=old_memberDec(h[m],r,c,l,s,o,i,n,f))&&(old_assertValidReturnValue(o,p),0===o?b=p:1===o?(b=old_getInit(p),v=p.get||f.get,y=p.set||f.set,\
f={get:v,set:y}):f=p,void 0!==b&&(void 0===d?d=b:"function"==typeof d?d=[d,b]:d.push(b)))}if(0===o||1===o){if(void 0===d)d=function(e,t){ret\
urn t};else if("function"!=typeof d){var g=d;d=function(e,t){for(var a=t,r=0;r<g.length;r++)a=g[r].call(e,a);return a}}else{var _=d;d=functi\
on(e,t){return _.call(e,t)}}e.push(d)}0!==o&&(1===o?(c.get=f.get,c.set=f.set):2===o?c.value=f:3===o?c.get=f:4===o&&(c.set=f),n?1===o?(e.push\
((function(e,t){return f.get.call(e,t)})),e.push((function(e,t){return f.set.call(e,t)}))):2===o?e.push(f):e.push((function(e,t){return f.ca\
ll(e,t)})):Object.defineProperty(t,r,c))}function old_applyMemberDecs(e,t,a,r,o){for(var i,n,l=new Map,s=new Map,c=0;c<o.length;c++){var d=o\
[c];if(Array.isArray(d)){var u,f,p,v=d[1],y=d[2],h=d.length>3,m=v>=5;if(m?(u=t,f=r,0!=(v-=5)&&(p=n=n||[])):(u=t.prototype,f=a,0!==v&&(p=i=i|\
|[])),0!==v&&!h){var b=m?s:l,g=b.get(y)||0;if(!0===g||3===g&&4!==v||4===g&&3!==v)throw Error("Attempted to decorate a public method/accessor\
 that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property\
 name was: "+y);!g&&v>2?b.set(y,v):b.set(y,!0)}old_applyMemberDec(e,u,d,y,v,m,h,f,p)}}old_pushInitializers(e,i),old_pushInitializers(e,n)}fu\
nction old_pushInitializers(e,t){t&&e.push((function(e){for(var a=0;a<t.length;a++)t[a].call(e);return e}))}function old_applyClassDecs(e,t,\
a,r){if(r.length>0){for(var o=[],i=t,n=t.name,l=r.length-1;l>=0;l--){var s={v:!1};try{var c=Object.assign({kind:"class",name:n,addInitialize\
r:old_createAddInitializerMethod(o,s)},old_createMetadataMethodsForProperty(a,0,n,s)),d=r[l](i,c)}finally{s.v=!0}void 0!==d&&(old_assertVali\
dReturnValue(10,d),i=d)}e.push(i,(function(){for(var e=0;e<o.length;e++)o[e].call(i)}))}}export default function applyDecs(e,t,a){var r=[],o\
={},i={};return old_applyMemberDecs(r,e,i,o,t),old_convertMetadataMapToFinal(e.prototype,i),old_applyClassDecs(r,e,o,a),old_convertMetadataM\
apToFinal(e,o),r}'),
    applyDecs2203: lt("7.19.0", 'function applyDecs2203Factory(){function createAddInitializerMethod(e,t){return function(r){!function(e,t){\
if(e.v)throw Error("attempted to call addInitializer after decoration was finished")}(t),assertCallable(r,"An initializer"),e.push(r)}}funct\
ion memberDec(e,t,r,a,n,i,s,o){var c;switch(n){case 1:c="accessor";break;case 2:c="method";break;case 3:c="getter";break;case 4:c="setter";b\
reak;default:c="field"}var l,u,f={kind:c,name:s?"#"+t:t,static:i,private:s},p={v:!1};0!==n&&(f.addInitializer=createAddInitializerMethod(a,p\
)),0===n?s?(l=r.get,u=r.set):(l=function(){return this[t]},u=function(e){this[t]=e}):2===n?l=function(){return r.value}:(1!==n&&3!==n||(l=fu\
nction(){return r.get.call(this)}),1!==n&&4!==n||(u=function(e){r.set.call(this,e)})),f.access=l&&u?{get:l,set:u}:l?{get:l}:{set:u};try{retu\
rn e(o,f)}finally{p.v=!0}}function assertCallable(e,t){if("function"!=typeof e)throw new TypeError(t+" must be a function")}function assertV\
alidReturnValue(e,t){var r=typeof t;if(1===e){if("object"!==r||null===t)throw new TypeError("accessor decorators must return an object with \
get, set, or init properties or void 0");void 0!==t.get&&assertCallable(t.get,"accessor.get"),void 0!==t.set&&assertCallable(t.set,"accessor\
.set"),void 0!==t.init&&assertCallable(t.init,"accessor.init")}else if("function"!==r)throw new TypeError((0===e?"field":10===e?"class":"met\
hod")+" decorators must return a function or void 0")}function applyMemberDec(e,t,r,a,n,i,s,o){var c,l,u,f,p,d,h=r[0];if(s?c=0===n||1===n?{g\
et:r[3],set:r[4]}:3===n?{get:r[3]}:4===n?{set:r[3]}:{value:r[3]}:0!==n&&(c=Object.getOwnPropertyDescriptor(t,a)),1===n?u={get:c.get,set:c.se\
t}:2===n?u=c.value:3===n?u=c.get:4===n&&(u=c.set),"function"==typeof h)void 0!==(f=memberDec(h,a,c,o,n,i,s,u))&&(assertValidReturnValue(n,f)\
,0===n?l=f:1===n?(l=f.init,p=f.get||u.get,d=f.set||u.set,u={get:p,set:d}):u=f);else for(var v=h.length-1;v>=0;v--){var g;void 0!==(f=memberD\
ec(h[v],a,c,o,n,i,s,u))&&(assertValidReturnValue(n,f),0===n?g=f:1===n?(g=f.init,p=f.get||u.get,d=f.set||u.set,u={get:p,set:d}):u=f,void 0!==\
g&&(void 0===l?l=g:"function"==typeof l?l=[l,g]:l.push(g)))}if(0===n||1===n){if(void 0===l)l=function(e,t){return t};else if("function"!=typ\
eof l){var y=l;l=function(e,t){for(var r=t,a=0;a<y.length;a++)r=y[a].call(e,r);return r}}else{var m=l;l=function(e,t){return m.call(e,t)}}e.\
push(l)}0!==n&&(1===n?(c.get=u.get,c.set=u.set):2===n?c.value=u:3===n?c.get=u:4===n&&(c.set=u),s?1===n?(e.push((function(e,t){return u.get.c\
all(e,t)})),e.push((function(e,t){return u.set.call(e,t)}))):2===n?e.push(u):e.push((function(e,t){return u.call(e,t)})):Object.defineProper\
ty(t,a,c))}function pushInitializers(e,t){t&&e.push((function(e){for(var r=0;r<t.length;r++)t[r].call(e);return e}))}return function(e,t,r){\
var a=[];return function(e,t,r){for(var a,n,i=new Map,s=new Map,o=0;o<r.length;o++){var c=r[o];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=\
c.length>3,h=f>=5;if(h?(l=t,0!=(f-=5)&&(u=n=n||[])):(l=t.prototype,0!==f&&(u=a=a||[])),0!==f&&!d){var v=h?s:i,g=v.get(p)||0;if(!0===g||3===g\
&&4!==f||4===g&&3!==f)throw Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public me\
thod/accessor. This is not currently supported by the decorators plugin. Property name was: "+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMemberD\
ec(e,l,c,p,f,h,d,u)}}pushInitializers(e,a),pushInitializers(e,n)}(a,e,t),function(e,t,r){if(r.length>0){for(var a=[],n=t,i=t.name,s=r.length\
-1;s>=0;s--){var o={v:!1};try{var c=r[s](n,{kind:"class",name:i,addInitializer:createAddInitializerMethod(a,o)})}finally{o.v=!0}void 0!==c&&\
(assertValidReturnValue(10,c),n=c)}e.push(n,(function(){for(var e=0;e<a.length;e++)a[e].call(n)}))}}(a,e,r),a}}var applyDecs2203Impl;export \
default function applyDecs2203(e,t,r){return(applyDecs2203Impl=applyDecs2203Impl||applyDecs2203Factory())(e,t,r)}'),
    applyDecs2203R: lt("7.20.0", 'import setFunctionName from"setFunctionName";import toPropertyKey from"toPropertyKey";function applyDecs22\
03RFactory(){function createAddInitializerMethod(e,t){return function(r){!function(e,t){if(e.v)throw Error("attempted to call addInitializer\
 after decoration was finished")}(t),assertCallable(r,"An initializer"),e.push(r)}}function memberDec(e,t,r,n,a,i,o,s){var c;switch(a){case \
1:c="accessor";break;case 2:c="method";break;case 3:c="getter";break;case 4:c="setter";break;default:c="field"}var l,u,f={kind:c,name:o?"#"+\
t:toPropertyKey(t),static:i,private:o},p={v:!1};0!==a&&(f.addInitializer=createAddInitializerMethod(n,p)),0===a?o?(l=r.get,u=r.set):(l=funct\
ion(){return this[t]},u=function(e){this[t]=e}):2===a?l=function(){return r.value}:(1!==a&&3!==a||(l=function(){return r.get.call(this)}),1!\
==a&&4!==a||(u=function(e){r.set.call(this,e)})),f.access=l&&u?{get:l,set:u}:l?{get:l}:{set:u};try{return e(s,f)}finally{p.v=!0}}function as\
sertCallable(e,t){if("function"!=typeof e)throw new TypeError(t+" must be a function")}function assertValidReturnValue(e,t){var r=typeof t;i\
f(1===e){if("object"!==r||null===t)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void \
0");void 0!==t.get&&assertCallable(t.get,"accessor.get"),void 0!==t.set&&assertCallable(t.set,"accessor.set"),void 0!==t.init&&assertCallabl\
e(t.init,"accessor.init")}else if("function"!==r)throw new TypeError((0===e?"field":10===e?"class":"method")+" decorators must return a func\
tion or void 0")}function applyMemberDec(e,t,r,n,a,i,o,s){var c,l,u,f,p,d,h,v=r[0];if(o?(0===a||1===a?(c={get:r[3],set:r[4]},u="get"):3===a?\
(c={get:r[3]},u="get"):4===a?(c={set:r[3]},u="set"):c={value:r[3]},0!==a&&(1===a&&setFunctionName(r[4],"#"+n,"set"),setFunctionName(r[3],"#"\
+n,u))):0!==a&&(c=Object.getOwnPropertyDescriptor(t,n)),1===a?f={get:c.get,set:c.set}:2===a?f=c.value:3===a?f=c.get:4===a&&(f=c.set),"functi\
on"==typeof v)void 0!==(p=memberDec(v,n,c,s,a,i,o,f))&&(assertValidReturnValue(a,p),0===a?l=p:1===a?(l=p.init,d=p.get||f.get,h=p.set||f.set,\
f={get:d,set:h}):f=p);else for(var g=v.length-1;g>=0;g--){var y;void 0!==(p=memberDec(v[g],n,c,s,a,i,o,f))&&(assertValidReturnValue(a,p),0==\
=a?y=p:1===a?(y=p.init,d=p.get||f.get,h=p.set||f.set,f={get:d,set:h}):f=p,void 0!==y&&(void 0===l?l=y:"function"==typeof l?l=[l,y]:l.push(y)\
))}if(0===a||1===a){if(void 0===l)l=function(e,t){return t};else if("function"!=typeof l){var m=l;l=function(e,t){for(var r=t,n=0;n<m.length\
;n++)r=m[n].call(e,r);return r}}else{var b=l;l=function(e,t){return b.call(e,t)}}e.push(l)}0!==a&&(1===a?(c.get=f.get,c.set=f.set):2===a?c.v\
alue=f:3===a?c.get=f:4===a&&(c.set=f),o?1===a?(e.push((function(e,t){return f.get.call(e,t)})),e.push((function(e,t){return f.set.call(e,t)}\
))):2===a?e.push(f):e.push((function(e,t){return f.call(e,t)})):Object.defineProperty(t,n,c))}function applyMemberDecs(e,t){for(var r,n,a=[]\
,i=new Map,o=new Map,s=0;s<t.length;s++){var c=t[s];if(Array.isArray(c)){var l,u,f=c[1],p=c[2],d=c.length>3,h=f>=5;if(h?(l=e,0!=(f-=5)&&(u=n\
=n||[])):(l=e.prototype,0!==f&&(u=r=r||[])),0!==f&&!d){var v=h?o:i,g=v.get(p)||0;if(!0===g||3===g&&4!==f||4===g&&3!==f)throw Error("Attempte\
d to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently suppor\
ted by the decorators plugin. Property name was: "+p);!g&&f>2?v.set(p,f):v.set(p,!0)}applyMemberDec(a,l,c,p,f,h,d,u)}}return pushInitializer\
s(a,r),pushInitializers(a,n),a}function pushInitializers(e,t){t&&e.push((function(e){for(var r=0;r<t.length;r++)t[r].call(e);return e}))}ret\
urn function(e,t,r){return{e:applyMemberDecs(e,t),get c(){return function(e,t){if(t.length>0){for(var r=[],n=e,a=e.name,i=t.length-1;i>=0;i-\
-){var o={v:!1};try{var s=t[i](n,{kind:"class",name:a,addInitializer:createAddInitializerMethod(r,o)})}finally{o.v=!0}void 0!==s&&(assertVal\
idReturnValue(10,s),n=s)}return[n,function(){for(var e=0;e<r.length;e++)r[e].call(n)}]}}(e,r)}}}}export default function applyDecs2203R(e,t,\
r){return(applyDecs2203R=applyDecs2203RFactory())(e,t,r)}'),
    applyDecs2301: lt("7.21.0", 'import checkInRHS from"checkInRHS";import setFunctionName from"setFunctionName";import toPropertyKey from"t\
oPropertyKey";function applyDecs2301Factory(){function createAddInitializerMethod(e,t){return function(r){!function(e,t){if(e.v)throw Error(\
"attempted to call addInitializer after decoration was finished")}(t),assertCallable(r,"An initializer"),e.push(r)}}function assertInstanceI\
fPrivate(e,t){if(!e(t))throw new TypeError("Attempted to access private element on non-instance")}function memberDec(e,t,r,n,a,i,s,o,c){var \
u;switch(a){case 1:u="accessor";break;case 2:u="method";break;case 3:u="getter";break;case 4:u="setter";break;default:u="field"}var l,f,p={k\
ind:u,name:s?"#"+t:toPropertyKey(t),static:i,private:s},d={v:!1};if(0!==a&&(p.addInitializer=createAddInitializerMethod(n,d)),s||0!==a&&2!==\
a)if(2===a)l=function(e){return assertInstanceIfPrivate(c,e),r.value};else{var h=0===a||1===a;(h||3===a)&&(l=s?function(e){return assertInst\
anceIfPrivate(c,e),r.get.call(e)}:function(e){return r.get.call(e)}),(h||4===a)&&(f=s?function(e,t){assertInstanceIfPrivate(c,e),r.set.call(\
e,t)}:function(e,t){r.set.call(e,t)})}else l=function(e){return e[t]},0===a&&(f=function(e,r){e[t]=r});var v=s?c.bind():function(e){return t\
 in e};p.access=l&&f?{get:l,set:f,has:v}:l?{get:l,has:v}:{set:f,has:v};try{return e(o,p)}finally{d.v=!0}}function assertCallable(e,t){if("fu\
nction"!=typeof e)throw new TypeError(t+" must be a function")}function assertValidReturnValue(e,t){var r=typeof t;if(1===e){if("object"!==r\
||null===t)throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");void 0!==t.get&&asse\
rtCallable(t.get,"accessor.get"),void 0!==t.set&&assertCallable(t.set,"accessor.set"),void 0!==t.init&&assertCallable(t.init,"accessor.init"\
)}else if("function"!==r)throw new TypeError((0===e?"field":10===e?"class":"method")+" decorators must return a function or void 0")}functio\
n curryThis2(e){return function(t){e(this,t)}}function applyMemberDec(e,t,r,n,a,i,s,o,c){var u,l,f,p,d,h,v,y,g=r[0];if(s?(0===a||1===a?(u={g\
et:(d=r[3],function(){return d(this)}),set:curryThis2(r[4])},f="get"):3===a?(u={get:r[3]},f="get"):4===a?(u={set:r[3]},f="set"):u={value:r[3\
]},0!==a&&(1===a&&setFunctionName(u.set,"#"+n,"set"),setFunctionName(u[f||"value"],"#"+n,f))):0!==a&&(u=Object.getOwnPropertyDescriptor(t,n)\
),1===a?p={get:u.get,set:u.set}:2===a?p=u.value:3===a?p=u.get:4===a&&(p=u.set),"function"==typeof g)void 0!==(h=memberDec(g,n,u,o,a,i,s,p,c)\
)&&(assertValidReturnValue(a,h),0===a?l=h:1===a?(l=h.init,v=h.get||p.get,y=h.set||p.set,p={get:v,set:y}):p=h);else for(var m=g.length-1;m>=0\
;m--){var b;void 0!==(h=memberDec(g[m],n,u,o,a,i,s,p,c))&&(assertValidReturnValue(a,h),0===a?b=h:1===a?(b=h.init,v=h.get||p.get,y=h.set||p.s\
et,p={get:v,set:y}):p=h,void 0!==b&&(void 0===l?l=b:"function"==typeof l?l=[l,b]:l.push(b)))}if(0===a||1===a){if(void 0===l)l=function(e,t){\
return t};else if("function"!=typeof l){var I=l;l=function(e,t){for(var r=t,n=0;n<I.length;n++)r=I[n].call(e,r);return r}}else{var w=l;l=fun\
ction(e,t){return w.call(e,t)}}e.push(l)}0!==a&&(1===a?(u.get=p.get,u.set=p.set):2===a?u.value=p:3===a?u.get=p:4===a&&(u.set=p),s?1===a?(e.p\
ush((function(e,t){return p.get.call(e,t)})),e.push((function(e,t){return p.set.call(e,t)}))):2===a?e.push(p):e.push((function(e,t){return p\
.call(e,t)})):Object.defineProperty(t,n,u))}function applyMemberDecs(e,t,r){for(var n,a,i,s=[],o=new Map,c=new Map,u=0;u<t.length;u++){var l\
=t[u];if(Array.isArray(l)){var f,p,d=l[1],h=l[2],v=l.length>3,y=d>=5,g=r;if(y?(f=e,0!=(d-=5)&&(p=a=a||[]),v&&!i&&(i=function(t){return check\
InRHS(t)===e}),g=i):(f=e.prototype,0!==d&&(p=n=n||[])),0!==d&&!v){var m=y?c:o,b=m.get(h)||0;if(!0===b||3===b&&4!==d||4===b&&3!==d)throw Erro\
r("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not curre\
ntly supported by the decorators plugin. Property name was: "+h);!b&&d>2?m.set(h,d):m.set(h,!0)}applyMemberDec(s,f,l,h,d,y,v,p,g)}}return pu\
shInitializers(s,n),pushInitializers(s,a),s}function pushInitializers(e,t){t&&e.push((function(e){for(var r=0;r<t.length;r++)t[r].call(e);re\
turn e}))}return function(e,t,r,n){return{e:applyMemberDecs(e,t,n),get c(){return function(e,t){if(t.length>0){for(var r=[],n=e,a=e.name,i=t\
.length-1;i>=0;i--){var s={v:!1};try{var o=t[i](n,{kind:"class",name:a,addInitializer:createAddInitializerMethod(r,s)})}finally{s.v=!0}void \
0!==o&&(assertValidReturnValue(10,o),n=o)}return[n,function(){for(var e=0;e<r.length;e++)r[e].call(n)}]}}(e,r)}}}}export default function ap\
plyDecs2301(e,t,r,n){return(applyDecs2301=applyDecs2301Factory())(e,t,r,n)}'),
    applyDecs2305: lt("7.21.0", 'import checkInRHS from"checkInRHS";import setFunctionName from"setFunctionName";import toPropertyKey from"t\
oPropertyKey";export default function applyDecs2305(e,t,r,n,o,a){function i(e,t,r){return function(n,o){return r&&r(n),e[t].call(n,o)}}funct\
ion c(e,t){for(var r=0;r<e.length;r++)e[r].call(t);return t}function s(e,t,r,n){if("function"!=typeof e&&(n||void 0!==e))throw new TypeError\
(t+" must "+(r||"be")+" a function"+(n?"":" or undefined"));return e}function applyDec(e,t,r,n,o,a,c,u,l,f,p,d,h){function m(e){if(!h(e))thr\
ow new TypeError("Attempted to access private element on non-instance")}var y,v=t[0],g=t[3],b=!u;if(!b){r||Array.isArray(v)||(v=[v]);var w={\
},S=[],A=3===o?"get":4===o||d?"set":"value";f?(p||d?w={get:setFunctionName((function(){return g(this)}),n,"get"),set:function(e){t[4](this,e\
)}}:w[A]=g,p||setFunctionName(w[A],n,2===o?"":A)):p||(w=Object.getOwnPropertyDescriptor(e,n))}for(var P=e,j=v.length-1;j>=0;j-=r?2:1){var D=\
v[j],E=r?v[j-1]:void 0,I={},O={kind:["field","accessor","method","getter","setter","class"][o],name:n,metadata:a,addInitializer:function(e,t\
){if(e.v)throw Error("attempted to call addInitializer after decoration was finished");s(t,"An initializer","be",!0),c.push(t)}.bind(null,I)\
};try{if(b)(y=s(D.call(E,P,O),"class decorators","return"))&&(P=y);else{var k,F;O.static=l,O.private=f,f?2===o?k=function(e){return m(e),w.v\
alue}:(o<4&&(k=i(w,"get",m)),3!==o&&(F=i(w,"set",m))):(k=function(e){return e[n]},(o<2||4===o)&&(F=function(e,t){e[n]=t}));var N=O.access={h\
as:f?h.bind():function(e){return n in e}};if(k&&(N.get=k),F&&(N.set=F),P=D.call(E,d?{get:w.get,set:w.set}:w[A],O),d){if("object"==typeof P&&\
P)(y=s(P.get,"accessor.get"))&&(w.get=y),(y=s(P.set,"accessor.set"))&&(w.set=y),(y=s(P.init,"accessor.init"))&&S.push(y);else if(void 0!==P)\
throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0")}else s(P,(p?"field":"method")+"\
 decorators","return")&&(p?S.push(P):w[A]=P)}}finally{I.v=!0}}return(p||d)&&u.push((function(e,t){for(var r=S.length-1;r>=0;r--)t=S[r].call(\
e,t);return t})),p||b||(f?d?u.push(i(w,"get"),i(w,"set")):u.push(2===o?w[A]:i.call.bind(w[A])):Object.defineProperty(e,n,w)),P}function u(e,\
t){return Object.defineProperty(e,Symbol.metadata||Symbol.for("Symbol.metadata"),{configurable:!0,enumerable:!0,value:t})}if(arguments.lengt\
h>=6)var l=a[Symbol.metadata||Symbol.for("Symbol.metadata")];var f=Object.create(null==l?null:l),p=function(e,t,r,n){var o,a,i=[],s=function\
(t){return checkInRHS(t)===e},u=new Map;function l(e){e&&i.push(c.bind(null,e))}for(var f=0;f<t.length;f++){var p=t[f];if(Array.isArray(p)){\
var d=p[1],h=p[2],m=p.length>3,y=16&d,v=!!(8&d),g=0==(d&=7),b=h+"/"+v;if(!g&&!m){var w=u.get(b);if(!0===w||3===w&&4!==d||4===w&&3!==d)throw \
Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not c\
urrently supported by the decorators plugin. Property name was: "+h);u.set(b,!(d>2)||d)}applyDec(v?e:e.prototype,p,y,m?"#"+h:toPropertyKey(h\
),d,n,v?a=a||[]:o=o||[],i,v,m,g,1===d,v&&m?s:r)}}return l(o),l(a),i}(e,t,o,f);return r.length||u(e,f),{e:p,get c(){var t=[];return r.length&\
&[u(applyDec(e,[r],n,e.name,5,f,t),f),c.bind(null,t,e)]}}}'),
    applyDecs2311: lt("7.24.0", 'import checkInRHS from"checkInRHS";import setFunctionName from"setFunctionName";import toPropertyKey from"t\
oPropertyKey";export default function applyDecs2311(e,t,n,r,o,i){var a,c,u,s,f,l,p,d=Symbol.metadata||Symbol.for("Symbol.metadata"),m=Object\
.defineProperty,h=Object.create,y=[h(null),h(null)],v=t.length;function g(t,n,r){return function(o,i){n&&(i=o,o=e);for(var a=0;a<t.length;a+\
+)i=t[a].apply(o,r?[i]:[]);return r?i:o}}function b(e,t,n,r){if("function"!=typeof e&&(r||void 0!==e))throw new TypeError(t+" must "+(n||"be\
")+" a function"+(r?"":" or undefined"));return e}function applyDec(e,t,n,r,o,i,u,s,f,l,p){function d(e){if(!p(e))throw new TypeError("Attem\
pted to access private element on non-instance")}var h=[].concat(t[0]),v=t[3],w=!u,D=1===o,S=3===o,j=4===o,E=2===o;function I(t,n,r){return \
function(o,i){return n&&(i=o,o=e),r&&r(o),P[t].call(o,i)}}if(!w){var P={},k=[],F=S?"get":j||D?"set":"value";if(f?(l||D?P={get:setFunctionNam\
e((function(){return v(this)}),r,"get"),set:function(e){t[4](this,e)}}:P[F]=v,l||setFunctionName(P[F],r,E?"":F)):l||(P=Object.getOwnProperty\
Descriptor(e,r)),!l&&!f){if((c=y[+s][r])&&7!=(c^o))throw Error("Decorating two elements with the same name ("+P[F].name+") is not supported \
yet");y[+s][r]=o<3?1:o}}for(var N=e,O=h.length-1;O>=0;O-=n?2:1){var z=b(h[O],"A decorator","be",!0),A=n?h[O-1]:void 0,H={},K={kind:["field",\
"accessor","method","getter","setter","class"][o],name:r,metadata:a,addInitializer:function(e,t){if(e.v)throw Error("attempted to call addIn\
itializer after decoration was finished");b(t,"An initializer","be",!0),i.push(t)}.bind(null,H)};if(w)c=z.call(A,N,K),H.v=1,b(c,"class decor\
ators","return")&&(N=c);else if(K.static=s,K.private=f,c=K.access={has:f?p.bind():function(e){return r in e}},j||(c.get=f?E?function(e){retu\
rn d(e),P.value}:I("get",0,d):function(e){return e[r]}),E||S||(c.set=f?I("set",0,d):function(e,t){e[r]=t}),N=z.call(A,D?{get:P.get,set:P.set\
}:P[F],K),H.v=1,D){if("object"==typeof N&&N)(c=b(N.get,"accessor.get"))&&(P.get=c),(c=b(N.set,"accessor.set"))&&(P.set=c),(c=b(N.init,"acces\
sor.init"))&&k.unshift(c);else if(void 0!==N)throw new TypeError("accessor decorators must return an object with get, set, or init propertie\
s or undefined")}else b(N,(l?"field":"method")+" decorators","return")&&(l?k.unshift(N):P[F]=N)}return o<2&&u.push(g(k,s,1),g(i,s,0)),l||w||\
(f?D?u.splice(-1,0,I("get",s),I("set",s)):u.push(E?P[F]:b.call.bind(P[F])):m(e,r,P)),N}function w(e){return m(e,d,{configurable:!0,enumerabl\
e:!0,value:a})}return void 0!==i&&(a=i[d]),a=h(null==a?null:a),f=[],l=function(e){e&&f.push(g(e))},p=function(t,r){for(var i=0;i<n.length;i+\
+){var a=n[i],c=a[1],l=7&c;if((8&c)==t&&!l==r){var p=a[2],d=!!a[3],m=16&c;applyDec(t?e:e.prototype,a,m,d?"#"+p:toPropertyKey(p),l,l<2?[]:t?s\
=s||[]:u=u||[],f,!!t,d,r,t&&d?function(t){return checkInRHS(t)===e}:o)}}},p(8,0),p(0,0),p(8,1),p(0,1),l(u),l(s),c=f,v||w(e),{e:c,get c(){var\
 n=[];return v&&[w(e=applyDec(e,[t],r,e.name,5,n)),g(n,1)]}}}'),
    assertClassBrand: lt("7.24.0", 'export default function _assertClassBrand(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments\
.length<3?t:n;throw new TypeError("Private element is not present on this object")}'),
    asyncGeneratorDelegate: lt("7.0.0-beta.0", 'import OverloadYield from"OverloadYield";export default function _asyncGeneratorDelegate(t){\
var e={},n=!1;function pump(e,r){return n=!0,r=new Promise((function(n){n(t[e](r))})),{done:!1,value:new OverloadYield(r,1)}}return e["undef\
ined"!=typeof Symbol&&Symbol.iterator||"@@iterator"]=function(){return this},e.next=function(t){return n?(n=!1,t):pump("next",t)},"function"\
==typeof t.throw&&(e.throw=function(t){if(n)throw n=!1,t;return pump("throw",t)}),"function"==typeof t.return&&(e.return=function(t){return \
n?(n=!1,t):pump("return",t)}),e}'),
    asyncIterator: lt("7.15.9", 'export default function _asyncIterator(r){var n,t,o,e=2;for("undefined"!=typeof Symbol&&(t=Symbol.asyncIter\
ator,o=Symbol.iterator);e--;){if(t&&null!=(n=r[t]))return n.call(r);if(o&&null!=(n=r[o]))return new AsyncFromSyncIterator(n.call(r));t="@@as\
yncIterator",o="@@iterator"}throw new TypeError("Object is not async iterable")}function AsyncFromSyncIterator(r){function AsyncFromSyncIter\
atorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var n=r.done;return Promise.resolve(r.valu\
e).then((function(r){return{value:r,done:n}}))}return AsyncFromSyncIterator=function(r){this.s=r,this.n=r.next},AsyncFromSyncIterator.protot\
ype={s:null,n:null,next:function(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments))},return:function(r){var n=this.s\
.return;return void 0===n?Promise.resolve({value:r,done:!0}):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments))},throw:function(r)\
{var n=this.s.return;return void 0===n?Promise.reject(r):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments))}},new AsyncFromSyncIte\
rator(r)}'),
    awaitAsyncGenerator: lt("7.0.0-beta.0", 'import OverloadYield from"OverloadYield";export default function _awaitAsyncGenerator(e){return\
 new OverloadYield(e,0)}'),
    callSuper: lt("7.23.8", 'import getPrototypeOf from"getPrototypeOf";import isNativeReflectConstruct from"isNativeReflectConstruct";impor\
t possibleConstructorReturn from"possibleConstructorReturn";export default function _callSuper(t,o,e){return o=getPrototypeOf(o),possibleCon\
structorReturn(t,isNativeReflectConstruct()?Reflect.construct(o,e||[],getPrototypeOf(t).constructor):o.apply(t,e))}'),
    checkInRHS: lt("7.20.5", `export default function _checkInRHS(e){if(Object(e)!==e)throw TypeError("right-hand side of 'in' should be an \
object, got "+(null!==e?typeof e:"null"));return e}`),
    classPrivateFieldGet2: lt("7.24.0", 'import assertClassBrand from"assertClassBrand";export default function _classPrivateFieldGet2(s,a){\
return s.get(assertClassBrand(s,a))}'),
    classPrivateFieldSet2: lt("7.24.0", 'import assertClassBrand from"assertClassBrand";export default function _classPrivateFieldSet2(s,a,r\
){return s.set(assertClassBrand(s,a),r),r}'),
    classPrivateGetter: lt("7.24.0", 'import assertClassBrand from"assertClassBrand";export default function _classPrivateGetter(s,r,a){retu\
rn a(assertClassBrand(s,r))}'),
    classPrivateSetter: lt("7.24.0", 'import assertClassBrand from"assertClassBrand";export default function _classPrivateSetter(s,r,a,t){re\
turn r(assertClassBrand(s,a),t),t}'),
    construct: lt("7.0.0-beta.0", 'import setPrototypeOf from"setPrototypeOf";import isNativeReflectConstruct from"isNativeReflectConstruct"\
;export default function _construct(t,e,r){if(isNativeReflectConstruct())return Reflect.construct.apply(null,arguments);var o=[null];o.push.\
apply(o,e);var p=new(t.bind.apply(t,o));return r&&setPrototypeOf(p,r.prototype),p}'),
    defineAccessor: lt("7.20.7", "export default function _defineAccessor(e,r,n,t){var c={configurable:!0,enumerable:!0};return c[e]=t,Objec\
t.defineProperty(r,n,c)}"),
    dispose: lt("7.22.0", 'function dispose_SuppressedError(r,e){return"undefined"!=typeof SuppressedError?dispose_SuppressedError=Suppresse\
dError:(dispose_SuppressedError=function(r,e){this.suppressed=e,this.error=r,this.stack=Error().stack},dispose_SuppressedError.prototype=Obj\
ect.create(Error.prototype,{constructor:{value:dispose_SuppressedError,writable:!0,configurable:!0}})),new dispose_SuppressedError(r,e)}expo\
rt default function _dispose(r,e,s){function next(){for(;r.length>0;)try{var o=r.pop(),p=o.d.call(o.v);if(o.a)return Promise.resolve(p).then\
(next,err)}catch(r){return err(r)}if(s)throw e}function err(r){return e=s?new dispose_SuppressedError(e,r):r,s=!0,next()}return next()}'),
    importDeferProxy: lt("7.23.0", "export default function _importDeferProxy(e){var t=null,constValue=function(e){return function(){return \
e}},proxy=function(r){return function(n,o,f){return null===t&&(t=e()),r(t,o,f)}};return new Proxy({},{defineProperty:constValue(!1),deletePr\
operty:constValue(!1),get:proxy(Reflect.get),getOwnPropertyDescriptor:proxy(Reflect.getOwnPropertyDescriptor),getPrototypeOf:constValue(null\
),isExtensible:constValue(!1),has:proxy(Reflect.has),ownKeys:proxy(Reflect.ownKeys),preventExtensions:constValue(!0),set:constValue(!1),setP\
rototypeOf:constValue(!1)})}"),
    interopRequireWildcard: lt("7.14.0", 'function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t\
=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}export default function _interopRequireWildcard(e,r){if(!r&&e&&e.\
__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e)\
)return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnP\
roperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.defau\
lt=e,t&&t.set(e,n),n}'),
    isNativeReflectConstruct: lt("7.9.0", "export default function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Ref\
lect.construct(Boolean,[],(function(){})))}catch(t){}return(_isNativeReflectConstruct=function(){return!!t})()}"),
    iterableToArrayLimit: lt("7.0.0-beta.0", 'export default function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symb\
ol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=\
!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return\
(),Object(u)!==u))return}finally{if(o)throw n}}return a}}'),
    iterableToArrayLimitLoose: lt("7.0.0-beta.0", 'export default function _iterableToArrayLimitLoose(e,r){var t=e&&("undefined"!=typeof Sym\
bol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var o,l=[];for(t=t.call(e);e.length<r&&!(o=t.next()).done;)l.push(o.value);return l}}'),
    jsx: lt("7.0.0-beta.0", 'var REACT_ELEMENT_TYPE;export default function _createRawReactElement(e,r,E,l){REACT_ELEMENT_TYPE||(REACT_ELEME\
NT_TYPE="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var o=e&&e.defaultProps,n=arguments.length-3;if(r||0===n|\
|(r={children:void 0}),1===n)r.children=l;else if(n>1){for(var t=Array(n),f=0;f<n;f++)t[f]=arguments[f+3];r.children=t}if(r&&o)for(var i in \
o)void 0===r[i]&&(r[i]=o[i]);else r||(r=o||{});return{$$typeof:REACT_ELEMENT_TYPE,type:e,key:void 0===E?null:""+E,ref:null,props:r,_owner:nu\
ll}}'),
    objectSpread2: lt("7.5.0", 'import defineProperty from"defineProperty";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnProper\
tySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.pu\
sh.apply(t,o)}return t}export default function _objectSpread2(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{\
};r%2?ownKeys(Object(t),!0).forEach((function(r){defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Obje\
ct.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}\
return e}'),
    regeneratorRuntime: lt("7.18.0", `export default function _regeneratorRuntime(){"use strict";
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LI\
CENSE */_regeneratorRuntime=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t\
[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStr\
ingTag";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{define({},"")}\
catch(t){define=function(t,e,r){return t[e]=r}}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(\
i.prototype),c=new Context(n||[]);return o(a,"_invoke",{value:makeInvokeMethod(t,r,c)}),a}function tryCatch(t,e,r){try{return{type:"normal",\
arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=wrap;var h="suspendedStart",l="suspendedYield",f="executing",s="completed",y={}\
;function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,(function(){return this}));v\
ar d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype\
=Object.create(p);function defineIteratorMethods(t){["next","throw","return"].forEach((function(e){define(t,e,(function(t){return this._invo\
ke(e,t)}))}))}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if("throw"!==c.type){var u=c.arg,h=u.value;retur\
n h&&"object"==typeof h&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){invoke("next",t,i,a)}),(function(t){invoke("throw",t,i,a\
)})):e.resolve(h).then((function(t){u.value=t,i(u)}),(function(t){return invoke("throw",t,i,a)}))}a(c.arg)}var r;o(this,"_invoke",{value:fun\
ction(t,n){function callInvokeWithMethodAndArg(){return new e((function(e,r){invoke(t,n,e,r)}))}return r=r?r.then(callInvokeWithMethodAndArg\
,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw Er\
ror("Generator is already running");if(o===s){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c\
){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(\
o===h)throw o=s,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var p=tryCatch(e,r,n);if("normal"===p\
.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done}}"throw"===p.type&&(o=s,n.method="throw",n.arg=p.arg)}}}function ma\
ybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.a\
rg=t,maybeInvokeDelegate(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n\
+"' method")),y;var i=tryCatch(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,y;var a=i.arg;ret\
urn a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,y):a:(r.method="throw"\
,r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc\
=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function resetTryEntry(t){var e=t.completion||{};e.type="normal",\
delete e.arg,t.completion=e}function Context(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(pushTryEntry,this),this.reset(!0)}function value\
s(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){fo\
r(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next};return i.next=i}}throw new T\
ypeError(typeof e+" is not iterable")}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,"constructor",{value:GeneratorFuncti\
onPrototype,configurable:!0}),o(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displa\
yName=define(GeneratorFunctionPrototype,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;r\
eturn!!e&&(e===GeneratorFunction||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.set\
PrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,"GeneratorFunction")),t.prototype=Object.create\
(g),t},e.awrap=function(t){return{__await:t}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,(function(){re\
turn this})),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);retu\
rn e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},defineIteratorMethods(g),define(g,u,"Generator")\
,define(g,a,(function(){return this})),define(g,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[]\
;for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next}r\
eturn next.done=!0,next}},e.values=values,Context.prototype={constructor:Context,reset:function(e){if(this.prev=0,this.next=0,this.sent=this\
._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)"t"===r.c\
harAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.\
type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type="throw",\
a.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("r\
oot"===i.tryLoc)return handle("end");if(i.tryLoc<=this.prev){var c=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(c&&u){if(this.prev<i.cat\
chLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return handle(i.\
catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}}}},abru\
pt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.\
prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.\
type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;retu\
rn"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"n\
ormal"===t.type&&e&&(this.next=e),y},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLo\
c===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var \
r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;resetTryEntry(r)}return o}}throw Error("illegal ca\
tch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},"next"===this.method&&(this.ar\
g=t),y}},e}`),
    setFunctionName: lt("7.23.6", 'export default function setFunctionName(e,t,n){"symbol"==typeof t&&(t=(t=t.description)?"["+t+"]":"");try\
{Object.defineProperty(e,"name",{configurable:!0,value:n?n+" "+t:t})}catch(e){}return e}'),
    toPrimitive: lt("7.1.5", 'export default function toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(voi\
d 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}ret\
urn("string"===r?String:Number)(t)}'),
    toPropertyKey: lt("7.1.5", 'import toPrimitive from"toPrimitive";export default function toPropertyKey(t){var i=toPrimitive(t,"string");\
return"symbol"==typeof i?i:i+""}'),
    toSetter: lt("7.24.0", 'export default function _toSetter(t,e,n){e||(e=[]);var r=e.length++;return Object.defineProperty({},"_",{set:fun\
ction(o){e[r]=o,t.apply(n,e)}})}'),
    typeof: lt("7.0.0-beta.0", 'export default function _typeof(o){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symb\
ol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol\
.prototype?"symbol":typeof o},_typeof(o)}'),
    using: lt("7.22.0", 'export default function _using(o,n,e){if(null==n)return n;if(Object(n)!==n)throw new TypeError("using declarations \
can only be used with objects, functions, null, or undefined.");if(e)var r=n[Symbol.asyncDispose||Symbol.for("Symbol.asyncDispose")];if(null\
==r&&(r=n[Symbol.dispose||Symbol.for("Symbol.dispose")]),"function"!=typeof r)throw new TypeError("Property [Symbol.dispose] is not a functi\
on.");return o.push({v:n,d:r,a:e}),n}'),
    usingCtx: lt("7.23.9", 'export default function _usingCtx(){var r="function"==typeof SuppressedError?SuppressedError:function(r,n){var e\
=Error();return e.name="SuppressedError",e.suppressed=n,e.error=r,e},n={},e=[];function using(r,n){if(null!=n){if(Object(n)!==n)throw new Ty\
peError("using declarations can only be used with objects, functions, null, or undefined.");if(r)var o=n[Symbol.asyncDispose||Symbol.for("Sy\
mbol.asyncDispose")];if(null==o&&(o=n[Symbol.dispose||Symbol.for("Symbol.dispose")]),"function"!=typeof o)throw new TypeError("Property [Sym\
bol.dispose] is not a function.");e.push({v:n,d:o,a:r})}return n}return{e:n,u:using.bind(null,!1),a:using.bind(null,!0),d:function(){var o=t\
his.e;function next(){for(;r=e.pop();)try{var r,t=r.d.call(r.v);if(r.a)return Promise.resolve(t).then(next,err)}catch(r){return err(r)}if(o!\
==n)throw o}function err(e){return o=o!==n?new r(o,e):e,next()}return next()}}}'),
    wrapRegExp: lt("7.19.0", 'import setPrototypeOf from"setPrototypeOf";import inherits from"inherits";export default function _wrapRegExp(\
){_wrapRegExp=function(e,r){return new BabelRegExp(e,void 0,r)};var e=RegExp.prototype,r=new WeakMap;function BabelRegExp(e,t,p){var o=RegEx\
p(e,t);return r.set(o,p||r.get(e)),setPrototypeOf(o,BabelRegExp.prototype)}function buildGroups(e,t){var p=r.get(t);return Object.keys(p).re\
duce((function(r,t){var o=p[t];if("number"==typeof o)r[t]=e[o];else{for(var i=0;void 0===e[o[i]]&&i+1<o.length;)i++;r[t]=e[o[i]]}return r}),\
Object.create(null))}return inherits(BabelRegExp,RegExp),BabelRegExp.prototype.exec=function(r){var t=e.exec.call(this,r);if(t){t.groups=bui\
ldGroups(t,this);var p=t.indices;p&&(p.groups=buildGroups(p,this))}return t},BabelRegExp.prototype[Symbol.replace]=function(t,p){if("string"\
==typeof p){var o=r.get(this);return e[Symbol.replace].call(this,t,p.replace(/\\$<([^>]+)>/g,(function(e,r){var t=o[r];return"$"+(Array.isArr\
ay(t)?t.join("$"):t)})))}if("function"==typeof p){var i=this;return e[Symbol.replace].call(this,t,(function(){var e=arguments;return"object"\
!=typeof e[e.length-1]&&(e=[].slice.call(e)).push(buildGroups(e,i)),p.apply(this,e)}))}return e[Symbol.replace].call(this,t,p)},_wrapRegExp.\
apply(this,arguments)}')
  });
});

// ../node_modules/@babel/helpers/lib/helpers.js
var jM = y((Jd) => {
  "use strict";
  Object.defineProperty(Jd, "__esModule", {
    value: !0
  });
  Jd.default = void 0;
  var BOe = yl(), MOe = MM(), he = Object.assign({
    __proto__: null
  }, MOe.default), mst = Jd.default = he, ye = /* @__PURE__ */ i((e) => (t) => ({
    minVersion: e,
    ast: /* @__PURE__ */ i(() => BOe.default.program.ast(t), "ast")
  }), "helper");
  he.AwaitValue = ye("7.0.0-beta.0")`
    export default function _AwaitValue(value) {
      this.wrapped = value;
    }
  `;
  he.wrapAsyncGenerator = ye("7.0.0-beta.0")`
  import AsyncGenerator from "AsyncGenerator";

  export default function _wrapAsyncGenerator(fn) {
    return function () {
      return new AsyncGenerator(fn.apply(this, arguments));
    };
  }
`;
  he.asyncToGenerator = ye("7.0.0-beta.0")`
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  export default function _asyncToGenerator(fn) {
    return function () {
      var self = this, args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);
        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }
        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }
`;
  he.classCallCheck = ye("7.0.0-beta.0")`
  export default function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
`;
  he.createClass = ye("7.0.0-beta.0")`
  import toPropertyKey from "toPropertyKey";
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i ++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
    }
  }

  export default function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", { writable: false });
    return Constructor;
  }
`;
  he.defineEnumerableProperties = ye("7.0.0-beta.0")`
    export default function _defineEnumerableProperties(obj, descs) {
      for (var key in descs) {
        var desc = descs[key];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, key, desc);
      }

      // Symbols are not enumerated over by for-in loops. If native
      // Symbols are available, fetch all of the descs object's own
      // symbol properties and define them on our target object too.
      if (Object.getOwnPropertySymbols) {
        var objectSymbols = Object.getOwnPropertySymbols(descs);
        for (var i = 0; i < objectSymbols.length; i++) {
          var sym = objectSymbols[i];
          var desc = descs[sym];
          desc.configurable = desc.enumerable = true;
          if ("value" in desc) desc.writable = true;
          Object.defineProperty(obj, sym, desc);
        }
      }
      return obj;
    }
`;
  he.defaults = ye("7.0.0-beta.0")`
  export default function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
`;
  he.defineProperty = ye("7.0.0-beta.0")`
  import toPropertyKey from "toPropertyKey";
  export default function _defineProperty(obj, key, value) {
    key = toPropertyKey(key);
    // Shortcircuit the slow defineProperty path when possible.
    // We are trying to avoid issues where setters defined on the
    // prototype cause side effects under the fast path of simple
    // assignment. By checking for existence of the property with
    // the in operator, we can optimize most of this overhead away.
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
`;
  he.extends = ye("7.0.0-beta.0")`
  export default function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };

    return _extends.apply(this, arguments);
  }
`;
  he.objectSpread = ye("7.0.0-beta.0")`
    import defineProperty from "defineProperty";

    export default function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = (arguments[i] != null) ? Object(arguments[i]) : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === 'function') {
          ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
  `;
  he.inherits = ye("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    // We can't use defineProperty to set the prototype in a single step because it
    // doesn't work in Chrome <= 36. https://github.com/babel/babel/issues/14056
    // V8 bug: https://bugs.chromium.org/p/v8/issues/detail?id=3334
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    Object.defineProperty(subClass, "prototype", { writable: false });
    if (superClass) setPrototypeOf(subClass, superClass);
  }
`;
  he.inheritsLoose = ye("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    setPrototypeOf(subClass, superClass);
  }
`;
  he.getPrototypeOf = ye("7.0.0-beta.0")`
  export default function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function _getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
        };
    return _getPrototypeOf(o);
  }
`;
  he.setPrototypeOf = ye("7.0.0-beta.0")`
  export default function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function _setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
        };
    return _setPrototypeOf(o, p);
  }
`;
  he.isNativeFunction = ye("7.0.0-beta.0")`
  export default function _isNativeFunction(fn) {
    // Note: This function returns "true" for core-js functions.
    try {
      return Function.toString.call(fn).indexOf("[native code]") !== -1;
    } catch (e) {
      // Firefox 31 throws when "toString" is applied to an HTMLElement
      return typeof fn === "function";
    }
  }
`;
  he.wrapNativeSuper = ye("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";
  import setPrototypeOf from "setPrototypeOf";
  import isNativeFunction from "isNativeFunction";
  import construct from "construct";

  export default function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;
      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }
      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);
        _cache.set(Class, Wrapper);
      }
      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor)
      }
      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true,
        }
      });

      return setPrototypeOf(Wrapper, Class);
    }

    return _wrapNativeSuper(Class)
  }
`;
  he.instanceof = ye("7.0.0-beta.0")`
  export default function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
      return !!right[Symbol.hasInstance](left);
    } else {
      return left instanceof right;
    }
  }
`;
  he.interopRequireDefault = ye("7.0.0-beta.0")`
  export default function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
`;
  he.newArrowCheck = ye("7.0.0-beta.0")`
  export default function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) {
      throw new TypeError("Cannot instantiate an arrow function");
    }
  }
`;
  he.objectDestructuringEmpty = ye("7.0.0-beta.0")`
  export default function _objectDestructuringEmpty(obj) {
    if (obj == null) throw new TypeError("Cannot destructure " + obj);
  }
`;
  he.objectWithoutPropertiesLoose = ye("7.0.0-beta.0")`
  export default function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};

    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }
`;
  he.objectWithoutProperties = ye("7.0.0-beta.0")`
  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";

  export default function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }
`;
  he.assertThisInitialized = ye("7.0.0-beta.0")`
  export default function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
`;
  he.possibleConstructorReturn = ye("7.0.0-beta.0")`
  import assertThisInitialized from "assertThisInitialized";

  export default function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }

    return assertThisInitialized(self);
  }
`;
  he.createSuper = ye("7.9.0")`
    import getPrototypeOf from "getPrototypeOf";
    import isNativeReflectConstruct from "isNativeReflectConstruct";
    import possibleConstructorReturn from "possibleConstructorReturn";

    export default function _createSuper(Derived) {
      var hasNativeReflectConstruct = isNativeReflectConstruct();

      return function _createSuperInternal() {
        var Super = getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          // NOTE: This doesn't work if this.__proto__.constructor has been modified.
          var NewTarget = getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return possibleConstructorReturn(this, result);
      }
    }
`;
  he.superPropBase = ye("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";

  export default function _superPropBase(object, property) {
    // Yes, this throws if object is null to being with, that's on purpose.
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }
    return object;
  }
`;
  he.get = ye("7.0.0-beta.0")`
  import superPropBase from "superPropBase";

  export default function _get() {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get.bind();
    } else {
      _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);

        if (!base) return;

        var desc = Object.getOwnPropertyDescriptor(base, property);
        if (desc.get) {
          // STEP 3. If receiver is not present, then set receiver to target.
          return desc.get.call(arguments.length < 3 ? target : receiver);
        }

        return desc.value;
      };
    }
    return _get.apply(this, arguments);
  }
`;
  he.set = ye("7.0.0-beta.0")`
  import superPropBase from "superPropBase";
  import defineProperty from "defineProperty";

  function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = superPropBase(target, property);
        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);
          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            // Both getter and non-writable fall into this.
            return false;
          }
        }

        // Without a super that defines the property, spec boils down to
        // "define on receiver" for some reason.
        desc = Object.getOwnPropertyDescriptor(receiver, property);
        if (desc) {
          if (!desc.writable) {
            // Setter, getter, and non-writable fall into this.
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          // Avoid setters that may be defined on Sub's prototype, but not on
          // the instance.
          defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  export default function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);
    if (!s && isStrict) {
      throw new TypeError('failed to set property');
    }

    return value;
  }
`;
  he.taggedTemplateLiteral = ye("7.0.0-beta.0")`
  export default function _taggedTemplateLiteral(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    return Object.freeze(Object.defineProperties(strings, {
        raw: { value: Object.freeze(raw) }
    }));
  }
`;
  he.taggedTemplateLiteralLoose = ye("7.0.0-beta.0")`
  export default function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    strings.raw = raw;
    return strings;
  }
`;
  he.readOnlyError = ye("7.0.0-beta.0")`
  export default function _readOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is read-only");
  }
`;
  he.writeOnlyError = ye("7.12.13")`
  export default function _writeOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is write-only");
  }
`;
  he.classNameTDZError = ye("7.0.0-beta.0")`
  export default function _classNameTDZError(name) {
    throw new ReferenceError("Class \\"" + name + "\\" cannot be referenced in computed property keys.");
  }
`;
  he.temporalUndefined = ye("7.0.0-beta.0")`
  // This function isn't mean to be called, but to be used as a reference.
  // We can't use a normal object because it isn't hoisted.
  export default function _temporalUndefined() {}
`;
  he.tdz = ye("7.5.5")`
  export default function _tdzError(name) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  }
`;
  he.temporalRef = ye("7.0.0-beta.0")`
  import undef from "temporalUndefined";
  import err from "tdz";

  export default function _temporalRef(val, name) {
    return val === undef ? err(name) : val;
  }
`;
  he.slicedToArray = ye("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimit from "iterableToArrayLimit";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArray(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimit(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`;
  he.slicedToArrayLoose = ye("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArrayLoose(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimitLoose(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`;
  he.toArray = ye("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _toArray(arr) {
    return (
      arrayWithHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableRest()
    );
  }
`;
  he.toConsumableArray = ye("7.0.0-beta.0")`
  import arrayWithoutHoles from "arrayWithoutHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableSpread from "nonIterableSpread";

  export default function _toConsumableArray(arr) {
    return (
      arrayWithoutHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableSpread()
    );
  }
`;
  he.arrayWithoutHoles = ye("7.0.0-beta.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return arrayLikeToArray(arr);
  }
`;
  he.arrayWithHoles = ye("7.0.0-beta.0")`
  export default function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
`;
  he.maybeArrayLike = ye("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _maybeArrayLike(next, arr, i) {
    if (arr && !Array.isArray(arr) && typeof arr.length === "number") {
      var len = arr.length;
      return arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);
    }
    return next(arr, i);
  }
`;
  he.iterableToArray = ye("7.0.0-beta.0")`
  export default function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
`;
  he.unsupportedIterableToArray = ye("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return arrayLikeToArray(o, minLen);
  }
`;
  he.arrayLikeToArray = ye("7.9.0")`
  export default function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
`;
  he.nonIterableSpread = ye("7.0.0-beta.0")`
  export default function _nonIterableSpread() {
    throw new TypeError(
      "Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`;
  he.nonIterableRest = ye("7.0.0-beta.0")`
  export default function _nonIterableRest() {
    throw new TypeError(
      "Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`;
  he.createForOfIteratorHelper = ye("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  // s: start (create the iterator)
  // n: next
  // e: error (called whenever something throws)
  // f: finish (always called at the end)

  export default function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (!it) {
      // Fallback for engines without symbol support
      if (
        Array.isArray(o) ||
        (it = unsupportedIterableToArray(o)) ||
        (allowArrayLike && o && typeof o.length === "number")
      ) {
        if (it) o = it;
        var i = 0;
        var F = function(){};
        return {
          s: F,
          n: function() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          },
          e: function(e) { throw e; },
          f: F,
        };
      }

      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    var normalCompletion = true, didErr = false, err;

    return {
      s: function() {
        it = it.call(o);
      },
      n: function() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function(e) {
        didErr = true;
        err = e;
      },
      f: function() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
`;
  he.createForOfIteratorHelperLoose = ye("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (it) return (it = it.call(o)).next.bind(it);

    // Fallback for engines without symbol support
    if (
      Array.isArray(o) ||
      (it = unsupportedIterableToArray(o)) ||
      (allowArrayLike && o && typeof o.length === "number")
    ) {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
`;
  he.skipFirstGeneratorNext = ye("7.0.0-beta.0")`
  export default function _skipFirstGeneratorNext(fn) {
    return function () {
      var it = fn.apply(this, arguments);
      it.next();
      return it;
    }
  }
`;
  he.initializerWarningHelper = ye("7.0.0-beta.0")`
    export default function _initializerWarningHelper(descriptor, context){
        throw new Error(
          'Decorating class property failed. Please ensure that ' +
          'transform-class-properties is enabled and runs after the decorators transform.'
        );
    }
`;
  he.initializerDefineProperty = ye("7.0.0-beta.0")`
    export default function _initializerDefineProperty(target, property, descriptor, context){
        if (!descriptor) return;

        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,
        });
    }
`;
  he.applyDecoratedDescriptor = ye("7.0.0-beta.0")`
    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){
        var desc = {};
        Object.keys(descriptor).forEach(function(key){
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;
        if ('value' in desc || desc.initializer){
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function(desc, decorator){
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== void 0){
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0){
            Object.defineProperty(target, property, desc);
            desc = null;
        }

        return desc;
    }
`;
  he.classPrivateFieldLooseKey = ye("7.0.0-beta.0")`
  var id = 0;
  export default function _classPrivateFieldKey(name) {
    return "__private_" + (id++) + "_" + name;
  }
`;
  he.classPrivateFieldLooseBase = ye("7.0.0-beta.0")`
  export default function _classPrivateFieldBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
      throw new TypeError("attempted to use private field on non-instance");
    }
    return receiver;
  }
`;
  he.classPrivateFieldGet = ye("7.0.0-beta.0")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import classPrivateFieldGet2 from "classPrivateFieldGet2";
  export default function _classPrivateFieldGet(receiver, privateMap) {
    var descriptor = classPrivateFieldGet2(privateMap, receiver);
    return classApplyDescriptorGet(receiver, descriptor);
  }
`;
  he.classPrivateFieldSet = ye("7.0.0-beta.0")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import classPrivateFieldGet2 from "classPrivateFieldGet2";
  export default function _classPrivateFieldSet(receiver, privateMap, value) {
    var descriptor = classPrivateFieldGet2(privateMap, receiver);
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`;
  he.classPrivateFieldDestructureSet = ye("7.4.4")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import classPrivateFieldGet2 from "classPrivateFieldGet2";
  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {
    var descriptor = classPrivateFieldGet2(privateMap, receiver);
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`;
  he.classExtractFieldDescriptor = ye("7.13.10")`
  import classPrivateFieldGet2 from "classPrivateFieldGet2";

  export default function _classExtractFieldDescriptor(receiver, privateMap) {
    return classPrivateFieldGet2(privateMap, receiver);
  }
`;
  he.classStaticPrivateFieldSpecGet = ye("7.0.2")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import assertClassBrand from "assertClassBrand";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
    assertClassBrand(classConstructor, receiver);
    classCheckPrivateStaticFieldDescriptor(descriptor, "get");
    return classApplyDescriptorGet(receiver, descriptor);
  }
`;
  he.classStaticPrivateFieldSpecSet = ye("7.0.2")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import assertClassBrand from "assertClassBrand";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
    assertClassBrand(classConstructor, receiver);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`;
  he.classStaticPrivateMethodGet = ye("7.3.2")`
  import assertClassBrand from "assertClassBrand";
  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
    assertClassBrand(classConstructor, receiver);
    return method;
  }
`;
  he.classStaticPrivateMethodSet = ye("7.3.2")`
  export default function _classStaticPrivateMethodSet() {
    throw new TypeError("attempted to set read only static private field");
  }
`;
  he.classApplyDescriptorGet = ye("7.13.10")`
  export default function _classApplyDescriptorGet(receiver, descriptor) {
    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }
    return descriptor.value;
  }
`;
  he.classApplyDescriptorSet = ye("7.13.10")`
  export default function _classApplyDescriptorSet(receiver, descriptor, value) {
    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }
      descriptor.value = value;
    }
  }
`;
  he.classApplyDescriptorDestructureSet = ye("7.13.10")`
  export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {
    if (descriptor.set) {
      if (!("__destrObj" in descriptor)) {
        descriptor.__destrObj = {
          set value(v) {
            descriptor.set.call(receiver, v)
          },
        };
      }
      return descriptor.__destrObj;
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }

      return descriptor;
    }
  }
`;
  he.classStaticPrivateFieldDestructureSet = ye("7.13.10")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import assertClassBrand from "assertClassBrand";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {
    assertClassBrand(classConstructor, receiver);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`;
  he.classCheckPrivateStaticAccess = ye("7.13.10")`
  import assertClassBrand from "assertClassBrand";
  export default function _classCheckPrivateStaticAccess(receiver, classConstructor, returnValue) {
    return assertClassBrand(classConstructor, receiver, returnValue);
  }
`;
  he.classCheckPrivateStaticFieldDescriptor = ye("7.13.10")`
  export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {
    if (descriptor === undefined) {
      throw new TypeError("attempted to " + action + " private static field before its declaration");
    }
  }
`;
  he.decorate = ye("7.1.5")`
  import toArray from "toArray";
  import toPropertyKey from "toPropertyKey";

  // These comments are stripped by @babel/template
  /*::
  type PropertyDescriptor =
    | {
        value: any,
        writable: boolean,
        configurable: boolean,
        enumerable: boolean,
      }
    | {
        get?: () => any,
        set?: (v: any) => void,
        configurable: boolean,
        enumerable: boolean,
      };

  type FieldDescriptor ={
    writable: boolean,
    configurable: boolean,
    enumerable: boolean,
  };

  type Placement = "static" | "prototype" | "own";
  type Key = string | symbol; // PrivateName is not supported yet.

  type ElementDescriptor =
    | {
        kind: "method",
        key: Key,
        placement: Placement,
        descriptor: PropertyDescriptor
      }
    | {
        kind: "field",
        key: Key,
        placement: Placement,
        descriptor: FieldDescriptor,
        initializer?: () => any,
      };

  // This is exposed to the user code
  type ElementObjectInput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
  };

  // This is exposed to the user code
  type ElementObjectOutput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
    extras?: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  // This is exposed to the user code
  type ClassObject = {
    [@@toStringTag]?: "Descriptor",
    kind: "class",
    elements: ElementDescriptor[],
  };

  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;
  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;
  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;

  // Only used by Babel in the transform output, not part of the spec.
  type ElementDefinition =
    | {
        kind: "method",
        value: any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
      }
    | {
        kind: "field",
        value: () => any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
    };

  declare function ClassFactory<C>(initialize: (instance: C) => void): {
    F: Class<C>,
    d: ElementDefinition[]
  }

  */

  /*::
  // Various combinations with/without extras and with one or many finishers

  type ElementFinisherExtras = {
    element: ElementDescriptor,
    finisher?: ClassFinisher,
    extras?: ElementDescriptor[],
  };

  type ElementFinishersExtras = {
    element: ElementDescriptor,
    finishers: ClassFinisher[],
    extras: ElementDescriptor[],
  };

  type ElementsFinisher = {
    elements: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  type ElementsFinishers = {
    elements: ElementDescriptor[],
    finishers: ClassFinisher[],
  };

  */

  /*::

  type Placements = {
    static: Key[],
    prototype: Key[],
    own: Key[],
  };

  */

  // ClassDefinitionEvaluation (Steps 26-*)
  export default function _decorate(
    decorators /*: ClassDecorator[] */,
    factory /*: ClassFactory */,
    superClass /*: ?Class<*> */,
    mixins /*: ?Array<Function> */,
  ) /*: Class<*> */ {
    var api = _getDecoratorsApi();
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators,
    );

    api.initializeClassElements(r.F, decorated.elements);

    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],

      // InitializeInstanceElements
      initializeInstanceElements: function(
        /*::<C>*/ O /*: C */,
        elements /*: ElementDescriptor[] */,
      ) {
        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },

      // InitializeClassElements
      initializeClassElements: function(
        /*::<C>*/ F /*: Class<C> */,
        elements /*: ElementDescriptor[] */,
      ) {
        var proto = F.prototype;

        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            var placement = element.placement;
            if (
              element.kind === kind &&
              (placement === "static" || placement === "prototype")
            ) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },

      // DefineClassElement
      defineClassElement: function(
        /*::<C>*/ receiver /*: C | Class<C> */,
        element /*: ElementDescriptor */,
      ) {
        var descriptor /*: PropertyDescriptor */ = element.descriptor;
        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver),
          };
        }
        Object.defineProperty(receiver, element.key, descriptor);
      },

      // DecorateClass
      decorateClass: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var newElements /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];
        var placements /*: Placements */ = {
          static: [],
          prototype: [],
          own: [],
        };

        elements.forEach(function(element /*: ElementDescriptor */) {
          this.addElementPlacement(element, placements);
        }, this);

        elements.forEach(function(element /*: ElementDescriptor */) {
          if (!_hasDecorators(element)) return newElements.push(element);

          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(
            element,
            placements,
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return { elements: newElements, finishers: finishers };
        }

        var result /*: ElementsFinishers */ = this.decorateConstructor(
          newElements,
          decorators,
        );
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;

        return result;
      },

      // AddElementPlacement
      addElementPlacement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
        silent /*: boolean */,
      ) {
        var keys = placements[element.placement];
        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }
        keys.push(element.key);
      },

      // DecorateElement
      decorateElement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
      ) /*: ElementFinishersExtras */ {
        var extras /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          // (inlined) RemoveElementPlacement
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);

          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(
            element,
          );
          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||
              elementObject,
          );

          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras /*: ElementDescriptor[] | void */ =
            elementFinisherExtras.extras;
          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
          }
        }

        return { element: element, finishers: finishers, extras: extras };
      },

      // DecorateConstructor
      decorateConstructor: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var finishers /*: ClassFinisher[] */ = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);
          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(
            (0, decorators[i])(obj) /*: ClassObject */ || obj,
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    "Duplicated element (" + elements[j].key + ")",
                  );
                }
              }
            }
          }
        }

        return { elements: elements, finishers: finishers };
      },

      // FromElementDescriptor
      fromElementDescriptor: function(
        element /*: ElementDescriptor */,
      ) /*: ElementObject */ {
        var obj /*: ElementObject */ = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor,
        };

        var desc = {
          value: "Descriptor",
          configurable: true,
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        if (element.kind === "field") obj.initializer = element.initializer;

        return obj;
      },

      // ToElementDescriptors
      toElementDescriptors: function(
        elementObjects /*: ElementObject[] */,
      ) /*: ElementDescriptor[] */ {
        if (elementObjects === undefined) return;
        return toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },

      // ToElementDescriptor
      toElementDescriptor: function(
        elementObject /*: ElementObject */,
      ) /*: ElementDescriptor */ {
        var kind = String(elementObject.kind);
        if (kind !== "method" && kind !== "field") {
          throw new TypeError(
            'An element descriptor\\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"',
          );
        }

        var key = toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);
        if (
          placement !== "static" &&
          placement !== "prototype" &&
          placement !== "own"
        ) {
          throw new TypeError(
            'An element descriptor\\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"',
          );
        }

        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;

        this.disallowProperty(elementObject, "elements", "An element descriptor");

        var element /*: ElementDescriptor */ = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor),
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(
            descriptor,
            "get",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "set",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "value",
            "The property descriptor of a field descriptor",
          );

          element.initializer = elementObject.initializer;
        }

        return element;
      },

      toElementFinisherExtras: function(
        elementObject /*: ElementObject */,
      ) /*: ElementFinisherExtras */ {
        var element /*: ElementDescriptor */ = this.toElementDescriptor(
          elementObject,
        );
        var finisher /*: ClassFinisher */ = _optionalCallableProperty(
          elementObject,
          "finisher",
        );
        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(
          elementObject.extras,
        );

        return { element: element, finisher: finisher, extras: extras };
      },

      // FromClassDescriptor
      fromClassDescriptor: function(
        elements /*: ElementDescriptor[] */,
      ) /*: ClassObject */ {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this),
        };

        var desc = { value: "Descriptor", configurable: true };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        return obj;
      },

      // ToClassDescriptor
      toClassDescriptor: function(
        obj /*: ClassObject */,
      ) /*: ElementsFinisher */ {
        var kind = String(obj.kind);
        if (kind !== "class") {
          throw new TypeError(
            'A class descriptor\\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"',
          );
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");
        var elements = this.toElementDescriptors(obj.elements);

        return { elements: elements, finisher: finisher };
      },

      // RunClassFinishers
      runClassFinishers: function(
        constructor /*: Class<*> */,
        finishers /*: ClassFinisher[] */,
      ) /*: Class<*> */ {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);
          if (newConstructor !== undefined) {
            // NOTE: This should check if IsConstructor(newConstructor) is false.
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }
            constructor = newConstructor;
          }
        }
        return constructor;
      },

      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };

    return api;
  }

  // ClassElementEvaluation
  function _createElementDescriptor(
    def /*: ElementDefinition */,
  ) /*: ElementDescriptor */ {
    var key = toPropertyKey(def.key);

    var descriptor /*: PropertyDescriptor */;
    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false,
      };
    } else if (def.kind === "get") {
      descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "set") {
      descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "field") {
      descriptor = { configurable: true, writable: true, enumerable: true };
    }

    var element /*: ElementDescriptor */ = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static
        ? "static"
        : def.kind === "field"
        ? "own"
        : "prototype",
      descriptor: descriptor,
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;

    return element;
  }

  // CoalesceGetterSetter
  function _coalesceGetterSetter(
    element /*: ElementDescriptor */,
    other /*: ElementDescriptor */,
  ) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  // CoalesceClassElements
  function _coalesceClassElements(
    elements /*: ElementDescriptor[] */,
  ) /*: ElementDescriptor[] */ {
    var newElements /*: ElementDescriptor[] */ = [];

    var isSameElement = function(
      other /*: ElementDescriptor */,
    ) /*: boolean */ {
      return (
        other.kind === "method" &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element /*: ElementDescriptor */ = elements[i];
      var other /*: ElementDescriptor */;

      if (
        element.kind === "method" &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              "Duplicated methods (" + element.key + ") can't be decorated.",
            );
          }
          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  "the same property (" +
                  element.key +
                  ").",
              );
            }
            other.decorators = element.decorators;
          }
          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty /*::<T>*/(
    obj /*: T */,
    name /*: $Keys<T> */,
  ) /*: ?Function */ {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
  }

`;
  he.classPrivateMethodGet = ye("7.1.6")`
  import assertClassBrand from "assertClassBrand";
  export default function _classPrivateMethodGet(receiver, privateSet, fn) {
    assertClassBrand(privateSet, receiver);
    return fn;
  }
`;
  he.checkPrivateRedeclaration = ye("7.14.1")`
  export default function _checkPrivateRedeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
      throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
  }
`;
  he.classPrivateFieldInitSpec = ye("7.14.1")`
  import checkPrivateRedeclaration from "checkPrivateRedeclaration";

  export default function _classPrivateFieldInitSpec(obj, privateMap, value) {
    checkPrivateRedeclaration(obj, privateMap);
    privateMap.set(obj, value);
  }
`;
  he.classPrivateMethodInitSpec = ye("7.14.1")`
  import checkPrivateRedeclaration from "checkPrivateRedeclaration";

  export default function _classPrivateMethodInitSpec(obj, privateSet) {
    checkPrivateRedeclaration(obj, privateSet);
    privateSet.add(obj);
  }
`;
  he.classPrivateMethodSet = ye("7.1.6")`
    export default function _classPrivateMethodSet() {
      throw new TypeError("attempted to reassign private method");
    }
  `;
  he.identity = ye("7.17.0")`
  export default function _identity(x) {
    return x;
  }
`;
  he.nullishReceiverError = ye("7.22.6")`
  export default function _nullishReceiverError(r) {
    throw new TypeError("Cannot set property of null or undefined.");
  }
`;
});

// ../node_modules/@babel/helpers/lib/index.js
var h1 = y((qn) => {
  "use strict";
  Object.defineProperty(qn, "__esModule", {
    value: !0
  });
  qn.default = void 0;
  qn.ensure = GOe;
  qn.get = VM;
  qn.getDependencies = HOe;
  qn.list = void 0;
  qn.minVersion = WOe;
  var p1 = Bs(), jOe = Re(), d1 = jM(), {
    assignmentExpression: qM,
    cloneNode: qOe,
    expressionStatement: $Oe,
    file: $M,
    identifier: UOe
  } = jOe;
  function Qd(e) {
    let t = [];
    for (; e.parentPath; e = e.parentPath)
      t.push(e.key), e.inList && t.push(e.listKey);
    return t.reverse().join(".");
  }
  i(Qd, "makePath");
  var Zd;
  function UM(e) {
    let t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), s = /* @__PURE__ */ new Map(), n, a, o = [], l = [], u = [], c = {
      ImportDeclaration(p) {
        let d = p.node.source.value;
        if (!d1.default[d])
          throw p.buildCodeFrameError(`Unknown helper ${d}`);
        if (p.get("specifiers").length !== 1 || !p.get("specifiers.0").isImportDefaultSpecifier())
          throw p.buildCodeFrameError("Helpers can only import a default value");
        let m = p.node.specifiers[0].local;
        s.set(m, d), l.push(Qd(p));
      },
      ExportDefaultDeclaration(p) {
        let d = p.get("declaration");
        if (!d.isFunctionDeclaration() || !d.node.id)
          throw d.buildCodeFrameError("Helpers can only export named function declarations");
        n = d.node.id.name, a = Qd(p);
      },
      ExportAllDeclaration(p) {
        throw p.buildCodeFrameError("Helpers can only export default");
      },
      ExportNamedDeclaration(p) {
        throw p.buildCodeFrameError("Helpers can only export default");
      },
      Statement(p) {
        p.isImportDeclaration() || p.isExportDeclaration() || p.skip();
      }
    }, f = {
      Program(p) {
        let d = p.scope.getAllBindings();
        Object.keys(d).forEach((m) => {
          m !== n && (s.has(d[m].identifier) || r.add(m));
        });
      },
      ReferencedIdentifier(p) {
        let d = p.node.name, m = p.scope.getBinding(d);
        m ? s.has(m.identifier) && u.push(Qd(p)) : (d !== "arguments" || p.scope.path.isProgram()) && t.add(d);
      },
      AssignmentExpression(p) {
        let d = p.get("left");
        if (!(n in d.getBindingIdentifiers())) return;
        if (!d.isIdentifier())
          throw d.buildCodeFrameError("Only simple assignments to exports are allowed in helpers");
        let m = p.scope.getBinding(n);
        m != null && m.scope.path.isProgram() && o.push(Qd(p));
      }
    };
    if ((0, p1.default)(e.ast, c, e.scope), (0, p1.default)(e.ast, f, e.scope), !a) throw new Error("Helpers must have a default export.");
    return o.reverse(), {
      globals: Array.from(t),
      localBindingNames: Array.from(r),
      dependencies: s,
      exportBindingAssignments: o,
      exportPath: a,
      exportName: n,
      importBindingsReferences: u,
      importPaths: l
    };
  }
  i(UM, "getHelperMetadata");
  function VOe(e, t, r, s, n) {
    if (s && !r)
      throw new Error("Unexpected local bindings for module-based helpers.");
    if (!r) return;
    let {
      localBindingNames: a,
      dependencies: o,
      exportBindingAssignments: l,
      exportPath: u,
      exportName: c,
      importBindingsReferences: f,
      importPaths: p
    } = t, d = {};
    o.forEach((N, I) => {
      d[I.name] = typeof n == "function" && n(N) || I;
    });
    let m = {}, b = new Set(s || []);
    r.type === "Identifier" && b.add(r.name), a.forEach((N) => {
      let I = N;
      for (; b.has(I); ) I = "_" + I;
      I !== N && (m[N] = I);
    }), r.type === "Identifier" && c !== r.name && (m[c] = r.name);
    let {
      path: h
    } = e, g = h.get(u), E = p.map((N) => h.get(N)), D = f.map((N) => h.get(N)), C = g.get("declaration");
    if (r.type === "Identifier")
      g.replaceWith(C);
    else if (r.type === "MemberExpression")
      l.forEach((N) => {
        let I = h.get(N);
        I.replaceWith(qM("=", r, I.node));
      }), g.replaceWith(C), h.pushContainer("body", $Oe(qM("=", r, UOe(c))));
    else
      throw new Error("Unexpected helper format.");
    Object.keys(m).forEach((N) => {
      h.scope.rename(N, m[N]);
    });
    for (let N of E) N.remove();
    for (let N of D) {
      let I = qOe(d[N.node.name]);
      N.replaceWith(I);
    }
  }
  i(VOe, "permuteHelperAST");
  var f1 = /* @__PURE__ */ Object.create(null);
  function eh(e) {
    if (!f1[e]) {
      let t = d1.default[e];
      if (!t)
        throw Object.assign(new ReferenceError(`Unknown helper ${e}`), {
          code: "BABEL_HELPER_UNKNOWN",
          helper: e
        });
      let r = /* @__PURE__ */ i(() => {
        if (!Zd) {
          let n = {
            ast: $M(t.ast()),
            path: null
          };
          return (0, p1.default)(n.ast, {
            Program: /* @__PURE__ */ i((a) => (n.path = a).stop(), "Program")
          }), n;
        }
        return new Zd({
          filename: `babel-helper://${e}`
        }, {
          ast: $M(t.ast()),
          code: "[internal Babel helper code]",
          inputMap: null
        });
      }, "fn"), s = null;
      f1[e] = {
        minVersion: t.minVersion,
        build(n, a, o) {
          let l = r();
          return s || (s = UM(l)), VOe(l, s, a, o, n), {
            nodes: l.ast.program.body,
            globals: s.globals
          };
        },
        getDependencies() {
          return s || (s = UM(r())), Array.from(s.dependencies.values());
        }
      };
    }
    return f1[e];
  }
  i(eh, "loadHelper");
  function VM(e, t, r, s) {
    return eh(e).build(t, r, s);
  }
  i(VM, "get");
  function WOe(e) {
    return eh(e).minVersion;
  }
  i(WOe, "minVersion");
  function HOe(e) {
    return eh(e).getDependencies();
  }
  i(HOe, "getDependencies");
  function GOe(e, t) {
    Zd || (Zd = t), eh(e);
  }
  i(GOe, "ensure");
  var bst = qn.list = Object.keys(d1.default).map((e) => e.replace(/^_/, "")), Est = qn.default = VM;
});

// ../node_modules/@babel/helper-module-imports/lib/import-builder.js
var GM = y((rh) => {
  "use strict";
  Object.defineProperty(rh, "__esModule", {
    value: !0
  });
  rh.default = void 0;
  var hn = Q("assert"), KOe = Re(), {
    callExpression: m1,
    cloneNode: th,
    expressionStatement: WM,
    identifier: Nc,
    importDeclaration: YOe,
    importDefaultSpecifier: XOe,
    importNamespaceSpecifier: zOe,
    importSpecifier: JOe,
    memberExpression: y1,
    stringLiteral: HM,
    variableDeclaration: QOe,
    variableDeclarator: ZOe
  } = KOe, g1 = class {
    static {
      i(this, "ImportBuilder");
    }
    constructor(t, r, s) {
      this._statements = [], this._resultName = null, this._importedSource = void 0, this._scope = r, this._hub = s, this._importedSource = t;
    }
    done() {
      return {
        statements: this._statements,
        resultName: this._resultName
      };
    }
    import() {
      return this._statements.push(YOe([], HM(this._importedSource))), this;
    }
    require() {
      return this._statements.push(WM(m1(Nc("require"), [HM(this._importedSource)]))), this;
    }
    namespace(t = "namespace") {
      let r = this._scope.generateUidIdentifier(t), s = this._statements[this._statements.length - 1];
      return hn(s.type === "ImportDeclaration"), hn(s.specifiers.length === 0), s.specifiers = [zOe(r)], this._resultName = th(r), this;
    }
    default(t) {
      let r = this._scope.generateUidIdentifier(t), s = this._statements[this._statements.length - 1];
      return hn(s.type === "ImportDeclaration"), hn(s.specifiers.length === 0), s.specifiers = [XOe(r)], this._resultName = th(r), this;
    }
    named(t, r) {
      if (r === "default") return this.default(t);
      let s = this._scope.generateUidIdentifier(t), n = this._statements[this._statements.length - 1];
      return hn(n.type === "ImportDeclaration"), hn(n.specifiers.length === 0), n.specifiers = [JOe(s, Nc(r))], this._resultName = th(s), this;
    }
    var(t) {
      let r = this._scope.generateUidIdentifier(t), s = this._statements[this._statements.length - 1];
      return s.type !== "ExpressionStatement" && (hn(this._resultName), s = WM(this._resultName), this._statements.push(s)), this._statements[this.
      _statements.length - 1] = QOe("var", [ZOe(r, s.expression)]), this._resultName = th(r), this;
    }
    defaultInterop() {
      return this._interop(this._hub.addHelper("interopRequireDefault"));
    }
    wildcardInterop() {
      return this._interop(this._hub.addHelper("interopRequireWildcard"));
    }
    _interop(t) {
      let r = this._statements[this._statements.length - 1];
      return r.type === "ExpressionStatement" ? r.expression = m1(t, [r.expression]) : r.type === "VariableDeclaration" ? (hn(r.declarations.
      length === 1), r.declarations[0].init = m1(t, [r.declarations[0].init])) : hn.fail("Unexpected type."), this;
    }
    prop(t) {
      let r = this._statements[this._statements.length - 1];
      return r.type === "ExpressionStatement" ? r.expression = y1(r.expression, Nc(t)) : r.type === "VariableDeclaration" ? (hn(r.declarations.
      length === 1), r.declarations[0].init = y1(r.declarations[0].init, Nc(t))) : hn.fail("Unexpected type:" + r.type), this;
    }
    read(t) {
      this._resultName = y1(this._resultName, Nc(t));
    }
  };
  rh.default = g1;
});

// ../node_modules/@babel/helper-module-imports/lib/is-module.js
var E1 = y((b1) => {
  "use strict";
  Object.defineProperty(b1, "__esModule", {
    value: !0
  });
  b1.default = eNe;
  function eNe(e) {
    return e.node.sourceType === "module";
  }
  i(eNe, "isModule");
});

// ../node_modules/@babel/helper-module-imports/lib/import-injector.js
var QM = y((nh) => {
  "use strict";
  Object.defineProperty(nh, "__esModule", {
    value: !0
  });
  nh.default = void 0;
  var KM = Q("assert"), tNe = Re(), rNe = GM(), sNe = E1(), {
    identifier: nNe,
    importSpecifier: iNe,
    numericLiteral: aNe,
    sequenceExpression: oNe,
    isImportDeclaration: YM
  } = tNe, v1 = class {
    static {
      i(this, "ImportInjector");
    }
    constructor(t, r, s) {
      this._defaultOpts = {
        importedSource: null,
        importedType: "commonjs",
        importedInterop: "babel",
        importingInterop: "babel",
        ensureLiveReference: !1,
        ensureNoContext: !1,
        importPosition: "before"
      };
      let n = t.find((a) => a.isProgram());
      this._programPath = n, this._programScope = n.scope, this._hub = n.hub, this._defaultOpts = this._applyDefaults(r, s, !0);
    }
    addDefault(t, r) {
      return this.addNamed("default", t, r);
    }
    addNamed(t, r, s) {
      return KM(typeof t == "string"), this._generateImport(this._applyDefaults(r, s), t);
    }
    addNamespace(t, r) {
      return this._generateImport(this._applyDefaults(t, r), null);
    }
    addSideEffect(t, r) {
      return this._generateImport(this._applyDefaults(t, r), void 0);
    }
    _applyDefaults(t, r, s = !1) {
      let n;
      return typeof t == "string" ? n = Object.assign({}, this._defaultOpts, {
        importedSource: t
      }, r) : (KM(!r, "Unexpected secondary arguments."), n = Object.assign({}, this._defaultOpts, t)), !s && r && (r.nameHint !== void 0 &&
      (n.nameHint = r.nameHint), r.blockHoist !== void 0 && (n.blockHoist = r.blockHoist)), n;
    }
    _generateImport(t, r) {
      let s = r === "default", n = !!r && !s, a = r === null, {
        importedSource: o,
        importedType: l,
        importedInterop: u,
        importingInterop: c,
        ensureLiveReference: f,
        ensureNoContext: p,
        nameHint: d,
        importPosition: m,
        blockHoist: b
      } = t, h = d || r, g = (0, sNe.default)(this._programPath), E = g && c === "node", D = g && c === "babel";
      if (m === "after" && !g)
        throw new Error('"importPosition": "after" is only supported in modules');
      let C = new rNe.default(o, this._programScope, this._hub);
      if (l === "es6") {
        if (!E && !D)
          throw new Error("Cannot import an ES6 module from CommonJS");
        C.import(), a ? C.namespace(d || o) : (s || n) && C.named(h, r);
      } else {
        if (l !== "commonjs")
          throw new Error(`Unexpected interopType "${l}"`);
        if (u === "babel")
          if (E) {
            h = h !== "default" ? h : o;
            let M = `${o}$es6Default`;
            C.import(), a ? C.default(M).var(h || o).wildcardInterop() : s ? f ? C.default(M).var(h || o).defaultInterop().read("default") :
            C.default(M).var(h).defaultInterop().prop(r) : n && C.default(M).read(r);
          } else D ? (C.import(), a ? C.namespace(h || o) : (s || n) && C.named(h, r)) : (C.require(), a ? C.var(h || o).wildcardInterop() :
          (s || n) && f ? s ? (h = h !== "default" ? h : o, C.var(h).read(r), C.defaultInterop()) : C.var(o).read(r) : s ? C.var(h).defaultInterop().
          prop(r) : n && C.var(h).prop(r));
        else if (u === "compiled")
          E ? (C.import(), a ? C.default(h || o) : (s || n) && C.default(o).read(h)) : D ? (C.import(), a ? C.namespace(h || o) : (s || n) &&
          C.named(h, r)) : (C.require(), a ? C.var(h || o) : (s || n) && (f ? C.var(o).read(h) : C.prop(r).var(h)));
        else if (u === "uncompiled") {
          if (s && f)
            throw new Error("No live reference for commonjs default");
          E ? (C.import(), a ? C.default(h || o) : s ? C.default(h) : n && C.default(o).read(h)) : D ? (C.import(), a ? C.default(h || o) : s ?
          C.default(h) : n && C.named(h, r)) : (C.require(), a ? C.var(h || o) : s ? C.var(h) : n && (f ? C.var(o).read(h) : C.var(h).prop(r)));
        } else
          throw new Error(`Unknown importedInterop "${u}".`);
      }
      let {
        statements: N,
        resultName: I
      } = C.done();
      return this._insertStatements(N, m, b), (s || n) && p && I.type !== "Identifier" ? oNe([aNe(0), I]) : I;
    }
    _insertStatements(t, r = "before", s = 3) {
      if (r === "after") {
        if (this._insertStatementsAfter(t)) return;
      } else if (this._insertStatementsBefore(t, s)) return;
      this._programPath.unshiftContainer("body", t);
    }
    _insertStatementsBefore(t, r) {
      if (t.length === 1 && YM(t[0]) && sh(t[0])) {
        let n = this._programPath.get("body").find((a) => a.isImportDeclaration() && sh(a.node));
        if (n?.node.source.value === t[0].source.value && JM(n.node, t[0]))
          return !0;
      }
      t.forEach((n) => {
        n._blockHoist = r;
      });
      let s = this._programPath.get("body").find((n) => {
        let a = n.node._blockHoist;
        return Number.isFinite(a) && a < 4;
      });
      return s ? (s.insertBefore(t), !0) : !1;
    }
    _insertStatementsAfter(t) {
      let r = new Set(t), s = /* @__PURE__ */ new Map();
      for (let a of t)
        if (YM(a) && sh(a)) {
          let o = a.source.value;
          s.has(o) || s.set(o, []), s.get(o).push(a);
        }
      let n = null;
      for (let a of this._programPath.get("body"))
        if (a.isImportDeclaration() && sh(a.node)) {
          n = a;
          let o = a.node.source.value, l = s.get(o);
          if (!l) continue;
          for (let u of l)
            r.has(u) && JM(a.node, u) && r.delete(u);
        }
      return r.size === 0 ? !0 : (n && n.insertAfter(Array.from(r)), !!n);
    }
  };
  nh.default = v1;
  function sh(e) {
    return e.importKind !== "type" && e.importKind !== "typeof";
  }
  i(sh, "isValueImport");
  function XM(e) {
    return e.specifiers.length === 1 && e.specifiers[0].type === "ImportNamespaceSpecifier" || e.specifiers.length === 2 && e.specifiers[1].
    type === "ImportNamespaceSpecifier";
  }
  i(XM, "hasNamespaceImport");
  function zM(e) {
    return e.specifiers.length > 0 && e.specifiers[0].type === "ImportDefaultSpecifier";
  }
  i(zM, "hasDefaultImport");
  function JM(e, t) {
    return e.specifiers.length ? t.specifiers.length ? XM(e) || XM(t) ? !1 : (zM(t) && (zM(e) ? t.specifiers[0] = iNe(t.specifiers[0].local,
    nNe("default")) : e.specifiers.unshift(t.specifiers.shift())), e.specifiers.push(...t.specifiers), !0) : !0 : (e.specifiers = t.specifiers,
    !0);
  }
  i(JM, "maybeAppendImportSpecifiers");
});

// ../node_modules/@babel/helper-module-imports/lib/index.js
var ZM = y((da) => {
  "use strict";
  Object.defineProperty(da, "__esModule", {
    value: !0
  });
  Object.defineProperty(da, "ImportInjector", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Rc.default;
    }, "get")
  });
  da.addDefault = uNe;
  da.addNamed = cNe;
  da.addNamespace = fNe;
  da.addSideEffect = pNe;
  Object.defineProperty(da, "isModule", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return lNe.default;
    }, "get")
  });
  var Rc = QM(), lNe = E1();
  function uNe(e, t, r) {
    return new Rc.default(e).addDefault(t, r);
  }
  i(uNe, "addDefault");
  function cNe(e, t, r, s) {
    return new Rc.default(e).addNamed(t, r, s);
  }
  i(cNe, "addNamed");
  function fNe(e, t, r) {
    return new Rc.default(e).addNamespace(t, r);
  }
  i(fNe, "addNamespace");
  function pNe(e, t, r) {
    return new Rc.default(e).addSideEffect(t, r);
  }
  i(pNe, "addSideEffect");
});

// ../node_modules/@babel/helper-module-transforms/lib/rewrite-this.js
var ej = y((T1) => {
  "use strict";
  Object.defineProperty(T1, "__esModule", {
    value: !0
  });
  T1.default = gNe;
  var dNe = ea(), S1 = mr(), {
    numericLiteral: hNe,
    unaryExpression: mNe
  } = S1.types, yNe = S1.traverse.visitors.merge([dNe.default, {
    ThisExpression(e) {
      e.replaceWith(mNe("void", hNe(0), !0));
    }
  }]);
  function gNe(e) {
    (0, S1.traverse)(e.node, Object.assign({}, yNe, {
      noScope: !0
    }));
  }
  i(gNe, "rewriteThis");
});

// ../node_modules/@babel/helper-simple-access/lib/index.js
var w1 = y((C1) => {
  "use strict";
  Object.defineProperty(C1, "__esModule", {
    value: !0
  });
  C1.default = TNe;
  var bNe = Re(), {
    LOGICAL_OPERATORS: ENe,
    assignmentExpression: kc,
    binaryExpression: P1,
    cloneNode: A1,
    identifier: ih,
    logicalExpression: vNe,
    numericLiteral: x1,
    sequenceExpression: SNe,
    unaryExpression: tj
  } = bNe, rj = {
    AssignmentExpression: {
      exit(e) {
        let {
          scope: t,
          seen: r,
          bindingNames: s
        } = this;
        if (e.node.operator === "=" || r.has(e.node)) return;
        r.add(e.node);
        let n = e.get("left");
        if (!n.isIdentifier()) return;
        let a = n.node.name;
        if (!s.has(a) || t.getBinding(a) !== e.scope.getBinding(a))
          return;
        let o = e.node.operator.slice(0, -1);
        ENe.includes(o) ? e.replaceWith(vNe(o, e.node.left, kc("=", A1(e.node.left), e.node.right))) : (e.node.right = P1(o, A1(e.node.left),
        e.node.right), e.node.operator = "=");
      }
    }
  };
  rj.UpdateExpression = {
    exit(e) {
      if (!this.includeUpdateExpression) return;
      let {
        scope: t,
        bindingNames: r
      } = this, s = e.get("argument");
      if (!s.isIdentifier()) return;
      let n = s.node.name;
      if (r.has(n) && t.getBinding(n) === e.scope.getBinding(n))
        if (e.parentPath.isExpressionStatement() && !e.isCompletionRecord()) {
          let a = e.node.operator == "++" ? "+=" : "-=";
          e.replaceWith(kc(a, s.node, x1(1)));
        } else if (e.node.prefix)
          e.replaceWith(kc("=", ih(n), P1(e.node.operator[0], tj("+", s.node), x1(1))));
        else {
          let a = e.scope.generateUidIdentifierBasedOnNode(s.node, "old"), o = a.name;
          e.scope.push({
            id: a
          });
          let l = P1(e.node.operator[0], ih(o), x1(1));
          e.replaceWith(SNe([kc("=", ih(o), tj("+", s.node)), kc("=", A1(s.node), l), ih(o)]));
        }
    }
  };
  function TNe(e, t) {
    {
      var r;
      e.traverse(rj, {
        scope: e.scope,
        bindingNames: t,
        seen: /* @__PURE__ */ new WeakSet(),
        includeUpdateExpression: (r = arguments[2]) != null ? r : !0
      });
    }
  }
  i(TNe, "simplifyAccess");
});

// ../node_modules/@babel/helper-module-transforms/lib/rewrite-live-references.js
var lj = y((D1) => {
  "use strict";
  Object.defineProperty(D1, "__esModule", {
    value: !0
  });
  D1.default = LNe;
  var xNe = Q("assert"), ij = mr(), PNe = w1(), {
    assignmentExpression: oh,
    cloneNode: Fc,
    expressionStatement: Bc,
    getOuterBindingIdentifiers: ANe,
    identifier: ha,
    isArrowFunctionExpression: CNe,
    isClassExpression: wNe,
    isFunctionExpression: DNe,
    isIdentifier: INe,
    isMemberExpression: sj,
    isVariableDeclaration: _Ne,
    jsxIdentifier: nj,
    jsxMemberExpression: ONe,
    memberExpression: aj,
    numericLiteral: NNe,
    sequenceExpression: Lc,
    stringLiteral: oj,
    variableDeclaration: RNe,
    variableDeclarator: kNe
  } = ij.types;
  function FNe(e) {
    do
      switch (e.parent.type) {
        case "TSTypeAnnotation":
        case "TSTypeAliasDeclaration":
        case "TSTypeReference":
        case "TypeAnnotation":
        case "TypeAlias":
          return !0;
        case "ExportSpecifier":
          return e.parentPath.parent.exportKind === "type";
        default:
          if (e.parentPath.isStatement() || e.parentPath.isExpression())
            return !1;
      }
    while (e = e.parentPath);
  }
  i(FNe, "isInType");
  function LNe(e, t, r) {
    let s = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ i((c) => {
      e.requeue(c);
    }, "requeueInParent");
    for (let [c, f] of t.source) {
      for (let [p, d] of f.imports)
        s.set(p, [c, d, null]);
      for (let p of f.importsNamespace)
        s.set(p, [c, null, p]);
    }
    for (let [c, f] of t.local) {
      let p = n.get(c);
      p || (p = [], n.set(c, p)), p.push(...f.names);
    }
    let o = {
      metadata: t,
      requeueInParent: a,
      scope: e.scope,
      exported: n
    };
    e.traverse(BNe, o);
    let l = /* @__PURE__ */ new Set([...Array.from(s.keys()), ...Array.from(n.keys())]);
    (0, PNe.default)(e, l, !1);
    let u = {
      seen: /* @__PURE__ */ new WeakSet(),
      metadata: t,
      requeueInParent: a,
      scope: e.scope,
      imported: s,
      exported: n,
      buildImportReference([c, f, p], d) {
        let m = t.source.get(c);
        if (m.referenced = !0, p) {
          if (m.wrap) {
            var b;
            d = (b = r(d, m.wrap)) != null ? b : d;
          }
          return d;
        }
        let h = ha(m.name);
        if (m.wrap) {
          var g;
          h = (g = r(h, m.wrap)) != null ? g : h;
        }
        if (f === "default" && m.interop === "node-default")
          return h;
        let E = t.stringSpecifiers.has(f);
        return aj(h, E ? oj(f) : ha(f), E);
      }
    };
    e.traverse(MNe, u);
  }
  i(LNe, "rewriteLiveReferences");
  var BNe = {
    Scope(e) {
      e.skip();
    },
    ClassDeclaration(e) {
      let {
        requeueInParent: t,
        exported: r,
        metadata: s
      } = this, {
        id: n
      } = e.node;
      if (!n) throw new Error("Expected class to have a name");
      let a = n.name, o = r.get(a) || [];
      if (o.length > 0) {
        let l = Bc(no(s, o, ha(a), e.scope));
        l._blockHoist = e.node._blockHoist, t(e.insertAfter(l)[0]);
      }
    },
    VariableDeclaration(e) {
      let {
        requeueInParent: t,
        exported: r,
        metadata: s
      } = this, n = e.node.kind === "var";
      for (let a of e.get("declarations")) {
        let {
          id: o
        } = a.node, {
          init: l
        } = a.node;
        if (INe(o) && r.has(o.name) && !CNe(l) && (!DNe(l) || l.id) && (!wNe(l) || l.id)) {
          if (!l) {
            if (n)
              continue;
            l = e.scope.buildUndefinedNode();
          }
          a.node.init = no(s, r.get(o.name), l, e.scope), t(a.get("init"));
        } else
          for (let u of Object.keys(a.getOuterBindingIdentifiers()))
            if (r.has(u)) {
              let c = Bc(no(s, r.get(u), ha(u), e.scope));
              c._blockHoist = e.node._blockHoist, t(e.insertAfter(c)[0]);
            }
      }
    }
  }, no = /* @__PURE__ */ i((e, t, r, s) => {
    let n = e.exportName;
    for (let a = s; a != null; a = a.parent)
      a.hasOwnBinding(n) && a.rename(n);
    return (t || []).reduce((a, o) => {
      let {
        stringSpecifiers: l
      } = e, u = l.has(o);
      return oh("=", aj(ha(n), u ? oj(o) : ha(o), u), a);
    }, r);
  }, "buildBindingExportAssignmentExpression"), ah = /* @__PURE__ */ i((e) => ij.template.expression.ast`
    (function() {
      throw new Error('"' + '${e}' + '" is read-only.');
    })()
  `, "buildImportThrow"), MNe = {
    ReferencedIdentifier(e) {
      let {
        seen: t,
        buildImportReference: r,
        scope: s,
        imported: n,
        requeueInParent: a
      } = this;
      if (t.has(e.node)) return;
      t.add(e.node);
      let o = e.node.name, l = n.get(o);
      if (l) {
        if (FNe(e))
          throw e.buildCodeFrameError(`Cannot transform the imported binding "${o}" since it's also used in a type annotation. Please strip \
type annotations using @babel/preset-typescript or @babel/preset-flow.`);
        let u = e.scope.getBinding(o);
        if (s.getBinding(o) !== u) return;
        let f = r(l, e.node);
        if (f.loc = e.node.loc, (e.parentPath.isCallExpression({
          callee: e.node
        }) || e.parentPath.isOptionalCallExpression({
          callee: e.node
        }) || e.parentPath.isTaggedTemplateExpression({
          tag: e.node
        })) && sj(f))
          e.replaceWith(Lc([NNe(0), f]));
        else if (e.isJSXIdentifier() && sj(f)) {
          let {
            object: p,
            property: d
          } = f;
          e.replaceWith(ONe(nj(p.name), nj(d.name)));
        } else
          e.replaceWith(f);
        a(e), e.skip();
      }
    },
    UpdateExpression(e) {
      let {
        scope: t,
        seen: r,
        imported: s,
        exported: n,
        requeueInParent: a,
        buildImportReference: o
      } = this;
      if (r.has(e.node)) return;
      r.add(e.node);
      let l = e.get("argument");
      if (l.isMemberExpression()) return;
      let u = e.node;
      if (l.isIdentifier()) {
        let c = l.node.name;
        if (t.getBinding(c) !== e.scope.getBinding(c))
          return;
        let f = n.get(c), p = s.get(c);
        if (f?.length > 0 || p)
          if (p)
            e.replaceWith(oh(u.operator[0] + "=", o(p, l.node), ah(c)));
          else if (u.prefix)
            e.replaceWith(no(this.metadata, f, Fc(u), e.scope));
          else {
            let d = t.generateDeclaredUidIdentifier(c);
            e.replaceWith(Lc([oh("=", Fc(d), Fc(u)), no(this.metadata, f, ha(c), e.scope), Fc(d)]));
          }
      }
      a(e), e.skip();
    },
    AssignmentExpression: {
      exit(e) {
        let {
          scope: t,
          seen: r,
          imported: s,
          exported: n,
          requeueInParent: a,
          buildImportReference: o
        } = this;
        if (r.has(e.node)) return;
        r.add(e.node);
        let l = e.get("left");
        if (!l.isMemberExpression())
          if (l.isIdentifier()) {
            let u = l.node.name;
            if (t.getBinding(u) !== e.scope.getBinding(u))
              return;
            let c = n.get(u), f = s.get(u);
            if (c?.length > 0 || f) {
              xNe(e.node.operator === "=", "Path was not simplified");
              let p = e.node;
              f && (p.left = o(f, l.node), p.right = Lc([p.right, ah(u)])), e.replaceWith(no(this.metadata, c, p, e.scope)), a(e);
            }
          } else {
            let u = l.getOuterBindingIdentifiers(), c = Object.keys(u).filter((d) => t.getBinding(d) === e.scope.getBinding(d)), f = c.find(
            (d) => s.has(d));
            f && (e.node.right = Lc([e.node.right, ah(f)]));
            let p = [];
            if (c.forEach((d) => {
              let m = n.get(d) || [];
              m.length > 0 && p.push(no(this.metadata, m, ha(d), e.scope));
            }), p.length > 0) {
              let d = Lc(p);
              e.parentPath.isExpressionStatement() && (d = Bc(d), d._blockHoist = e.parentPath.node._blockHoist);
              let m = e.insertAfter(d)[0];
              a(m);
            }
          }
      }
    },
    "ForOfStatement|ForInStatement"(e) {
      let {
        scope: t,
        node: r
      } = e, {
        left: s
      } = r, {
        exported: n,
        imported: a,
        scope: o
      } = this;
      if (!_Ne(s)) {
        let l = !1, u, c = e.get("body").scope;
        for (let d of Object.keys(ANe(s)))
          o.getBinding(d) === t.getBinding(d) && (n.has(d) && (l = !0, c.hasOwnBinding(d) && c.rename(d)), a.has(d) && !u && (u = d));
        if (!l && !u)
          return;
        e.ensureBlock();
        let f = e.get("body"), p = t.generateUidIdentifierBasedOnNode(s);
        e.get("left").replaceWith(RNe("let", [kNe(Fc(p))])), t.registerDeclaration(e.get("left")), l && f.unshiftContainer("body", Bc(oh("=",
        s, p))), u && f.unshiftContainer("body", Bc(ah(u)));
      }
    }
  };
});

// ../node_modules/@babel/helper-module-transforms/lib/normalize-and-load-metadata.js
var I1 = y((vl) => {
  "use strict";
  Object.defineProperty(vl, "__esModule", {
    value: !0
  });
  vl.default = WNe;
  vl.hasExports = $Ne;
  vl.isSideEffectImport = UNe;
  vl.validateImportInteropOption = cj;
  var uj = Q("path"), jNe = Ko(), qNe = tc();
  function $Ne(e) {
    return e.hasExports;
  }
  i($Ne, "hasExports");
  function UNe(e) {
    return e.imports.size === 0 && e.importsNamespace.size === 0 && e.reexports.size === 0 && e.reexportNamespace.size === 0 && !e.reexportAll;
  }
  i(UNe, "isSideEffectImport");
  function cj(e) {
    if (typeof e != "function" && e !== "none" && e !== "babel" && e !== "node")
      throw new Error(`.importInterop must be one of "none", "babel", "node", or a function returning one of those values (received ${e}).`);
    return e;
  }
  i(cj, "validateImportInteropOption");
  function VNe(e, t, r) {
    return typeof e == "function" ? cj(e(t, r)) : e;
  }
  i(VNe, "resolveImportInterop");
  function WNe(e, t, {
    importInterop: r,
    initializeReexports: s = !1,
    getWrapperPayload: n,
    esNamespaceOnly: a = !1,
    filename: o
  }) {
    t || (t = e.scope.generateUidIdentifier("exports").name);
    let l = /* @__PURE__ */ new Set();
    KNe(e);
    let {
      local: u,
      sources: c,
      hasExports: f
    } = HNe(e, {
      initializeReexports: s,
      getWrapperPayload: n
    }, l);
    YNe(e);
    for (let [p, d] of c) {
      let {
        importsNamespace: m,
        imports: b
      } = d;
      if (m.size > 0 && b.size === 0) {
        let [g] = m;
        d.name = g;
      }
      let h = VNe(r, p, o);
      h === "none" ? d.interop = "none" : h === "node" && d.interop === "namespace" ? d.interop = "node-namespace" : h === "node" && d.interop ===
      "default" ? d.interop = "node-default" : a && d.interop === "namespace" && (d.interop = "default");
    }
    return {
      exportName: t,
      exportNameListName: null,
      hasExports: f,
      local: u,
      source: c,
      stringSpecifiers: l
    };
  }
  i(WNe, "normalizeModuleAndLoadMetadata");
  function lh(e, t) {
    if (e.isIdentifier())
      return e.node.name;
    if (e.isStringLiteral()) {
      let r = e.node.value;
      return (0, jNe.isIdentifierName)(r) || t.add(r), r;
    } else
      throw new Error(`Expected export specifier to be either Identifier or StringLiteral, got ${e.node.type}`);
  }
  i(lh, "getExportSpecifierName");
  function fj(e) {
    if (!e.isExportSpecifier())
      throw e.isExportNamespaceSpecifier() ? e.buildCodeFrameError("Export namespace should be first transformed by `@babel/plugin-transform\
-export-namespace-from`.") : e.buildCodeFrameError("Unexpected export specifier type");
  }
  i(fj, "assertExportSpecifier");
  function HNe(e, {
    getWrapperPayload: t,
    initializeReexports: r
  }, s) {
    let n = GNe(e, r, s), a = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), l = /* @__PURE__ */ i((c, f) => {
      let p = c.value, d = o.get(p);
      return d ? a.get(p).push(f) : (d = {
        name: e.scope.generateUidIdentifier((0, uj.basename)(p, (0, uj.extname)(p))).name,
        interop: "none",
        loc: null,
        imports: /* @__PURE__ */ new Map(),
        importsNamespace: /* @__PURE__ */ new Set(),
        reexports: /* @__PURE__ */ new Map(),
        reexportNamespace: /* @__PURE__ */ new Set(),
        reexportAll: null,
        wrap: null,
        get lazy() {
          return this.wrap === "lazy";
        },
        referenced: !1
      }, o.set(p, d), a.set(p, [f])), d;
    }, "getData"), u = !1;
    e.get("body").forEach((c) => {
      if (c.isImportDeclaration()) {
        let f = l(c.node.source, c.node);
        f.loc || (f.loc = c.node.loc), c.get("specifiers").forEach((p) => {
          if (p.isImportDefaultSpecifier()) {
            let d = p.get("local").node.name;
            f.imports.set(d, "default");
            let m = n.get(d);
            m && (n.delete(d), m.names.forEach((b) => {
              f.reexports.set(b, "default");
            }), f.referenced = !0);
          } else if (p.isImportNamespaceSpecifier()) {
            let d = p.get("local").node.name;
            f.importsNamespace.add(d);
            let m = n.get(d);
            m && (n.delete(d), m.names.forEach((b) => {
              f.reexportNamespace.add(b);
            }), f.referenced = !0);
          } else if (p.isImportSpecifier()) {
            let d = lh(p.get("imported"), s), m = p.get("local").node.name;
            f.imports.set(m, d);
            let b = n.get(m);
            b && (n.delete(m), b.names.forEach((h) => {
              f.reexports.set(h, d);
            }), f.referenced = !0);
          }
        });
      } else if (c.isExportAllDeclaration()) {
        u = !0;
        let f = l(c.node.source, c.node);
        f.loc || (f.loc = c.node.loc), f.reexportAll = {
          loc: c.node.loc
        }, f.referenced = !0;
      } else if (c.isExportNamedDeclaration() && c.node.source) {
        u = !0;
        let f = l(c.node.source, c.node);
        f.loc || (f.loc = c.node.loc), c.get("specifiers").forEach((p) => {
          fj(p);
          let d = lh(p.get("local"), s), m = lh(p.get("exported"), s);
          if (f.reexports.set(m, d), f.referenced = !0, m === "__esModule")
            throw p.get("exported").buildCodeFrameError('Illegal export "__esModule".');
        });
      } else (c.isExportNamedDeclaration() || c.isExportDefaultDeclaration()) && (u = !0);
    });
    for (let c of o.values()) {
      let f = !1, p = !1;
      c.importsNamespace.size > 0 && (f = !0, p = !0), c.reexportAll && (p = !0);
      for (let d of c.imports.values())
        d === "default" ? f = !0 : p = !0;
      for (let d of c.reexports.values())
        d === "default" ? f = !0 : p = !0;
      f && p ? c.interop = "namespace" : f && (c.interop = "default");
    }
    if (t)
      for (let [c, f] of o)
        f.wrap = t(c, f, a.get(c));
    return {
      hasExports: u,
      local: n,
      sources: o
    };
  }
  i(HNe, "getModuleMetadata");
  function GNe(e, t, r) {
    let s = /* @__PURE__ */ new Map();
    e.get("body").forEach((o) => {
      let l;
      if (o.isImportDeclaration())
        l = "import";
      else {
        if (o.isExportDefaultDeclaration() && (o = o.get("declaration")), o.isExportNamedDeclaration()) {
          if (o.node.declaration)
            o = o.get("declaration");
          else if (t && o.node.source && o.get("source").isStringLiteral()) {
            o.get("specifiers").forEach((u) => {
              fj(u), s.set(u.get("local").node.name, "block");
            });
            return;
          }
        }
        if (o.isFunctionDeclaration())
          l = "hoisted";
        else if (o.isClassDeclaration())
          l = "block";
        else if (o.isVariableDeclaration({
          kind: "var"
        }))
          l = "var";
        else if (o.isVariableDeclaration())
          l = "block";
        else
          return;
      }
      Object.keys(o.getOuterBindingIdentifiers()).forEach((u) => {
        s.set(u, l);
      });
    });
    let n = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ i((o) => {
      let l = o.node.name, u = n.get(l);
      if (!u) {
        let c = s.get(l);
        if (c === void 0)
          throw o.buildCodeFrameError(`Exporting local "${l}", which is not declared.`);
        u = {
          names: [],
          kind: c
        }, n.set(l, u);
      }
      return u;
    }, "getLocalMetadata");
    return e.get("body").forEach((o) => {
      if (o.isExportNamedDeclaration() && (t || !o.node.source))
        if (o.node.declaration) {
          let l = o.get("declaration"), u = l.getOuterBindingIdentifierPaths();
          Object.keys(u).forEach((c) => {
            if (c === "__esModule")
              throw l.buildCodeFrameError('Illegal export "__esModule".');
            a(u[c]).names.push(c);
          });
        } else
          o.get("specifiers").forEach((l) => {
            let u = l.get("local"), c = l.get("exported"), f = a(u), p = lh(c, r);
            if (p === "__esModule")
              throw c.buildCodeFrameError('Illegal export "__esModule".');
            f.names.push(p);
          });
      else if (o.isExportDefaultDeclaration()) {
        let l = o.get("declaration");
        if (l.isFunctionDeclaration() || l.isClassDeclaration())
          a(l.get("id")).names.push("default");
        else
          throw l.buildCodeFrameError("Unexpected default expression export.");
      }
    }), n;
  }
  i(GNe, "getLocalExportMetadata");
  function KNe(e) {
    e.get("body").forEach((t) => {
      t.isExportDefaultDeclaration() && (0, qNe.default)(t);
    });
  }
  i(KNe, "nameAnonymousExports");
  function YNe(e) {
    e.get("body").forEach((t) => {
      if (t.isImportDeclaration())
        t.remove();
      else if (t.isExportNamedDeclaration())
        t.node.declaration ? (t.node.declaration._blockHoist = t.node._blockHoist, t.replaceWith(t.node.declaration)) : t.remove();
      else if (t.isExportDefaultDeclaration()) {
        let r = t.get("declaration");
        if (r.isFunctionDeclaration() || r.isClassDeclaration())
          r._blockHoist = t.node._blockHoist, t.replaceWith(r);
        else
          throw r.buildCodeFrameError("Unexpected default expression export.");
      } else t.isExportAllDeclaration() && t.remove();
    });
  }
  i(YNe, "removeImportExportDeclarations");
});

// ../node_modules/@babel/helper-module-transforms/lib/lazy-modules.js
var pj = y((uh) => {
  "use strict";
  Object.defineProperty(uh, "__esModule", {
    value: !0
  });
  uh.toGetWrapperPayload = JNe;
  uh.wrapReference = QNe;
  var XNe = mr(), zNe = I1();
  function JNe(e) {
    return (t, r) => {
      if (e === !1 || (0, zNe.isSideEffectImport)(r) || r.reexportAll) return null;
      if (e === !0)
        return /\./.test(t) ? null : "lazy";
      if (Array.isArray(e))
        return e.indexOf(t) === -1 ? null : "lazy";
      if (typeof e == "function")
        return e(t) ? "lazy" : null;
      throw new Error(".lazy must be a boolean, string array, or function");
    };
  }
  i(JNe, "toGetWrapperPayload");
  function QNe(e, t) {
    return t === "lazy" ? XNe.types.callExpression(e, []) : null;
  }
  i(QNe, "wrapReference");
});

// ../node_modules/@babel/helper-module-transforms/lib/dynamic-import.js
var _1 = y((ch) => {
  "use strict";
  Object.defineProperty(ch, "__esModule", {
    value: !0
  });
  ch.buildDynamicImport = ZNe;
  var Lr = mr();
  ch.getDynamicImportSource = /* @__PURE__ */ i(function(t) {
    let [r] = t.arguments;
    return Lr.types.isStringLiteral(r) || Lr.types.isTemplateLiteral(r) ? r : Lr.template.expression.ast`\`\${${r}}\``;
  }, "getDynamicImportSource");
  function ZNe(e, t, r, s) {
    let n = Lr.types.isCallExpression(e) ? e.arguments[0] : e.source;
    if (Lr.types.isStringLiteral(n) || Lr.types.isTemplateLiteral(n) && n.quasis.length === 0)
      return t ? Lr.template.expression.ast`
        Promise.resolve().then(() => ${s(n)})
      ` : s(n);
    let a = Lr.types.isTemplateLiteral(n) ? Lr.types.identifier("specifier") : Lr.types.templateLiteral([Lr.types.templateElement({
      raw: ""
    }), Lr.types.templateElement({
      raw: ""
    })], [Lr.types.identifier("specifier")]);
    return t ? Lr.template.expression.ast`
      (specifier =>
        new Promise(r => r(${a}))
          .then(s => ${s(Lr.types.identifier("s"))})
      )(${n})
    ` : r ? Lr.template.expression.ast`
      (specifier =>
        new Promise(r => r(${s(a)}))
      )(${n})
    ` : Lr.template.expression.ast`
      (specifier => ${s(a)})(${n})
    `;
  }
  i(ZNe, "buildDynamicImport");
});

// ../node_modules/@babel/helper-module-transforms/lib/get-module-name.js
var dj = y((fh) => {
  "use strict";
  Object.defineProperty(fh, "__esModule", {
    value: !0
  });
  fh.default = O1;
  {
    let e = O1;
    fh.default = O1 = /* @__PURE__ */ i(function(r, s) {
      var n, a, o, l;
      return e(r, {
        moduleId: (n = s.moduleId) != null ? n : r.moduleId,
        moduleIds: (a = s.moduleIds) != null ? a : r.moduleIds,
        getModuleId: (o = s.getModuleId) != null ? o : r.getModuleId,
        moduleRoot: (l = s.moduleRoot) != null ? l : r.moduleRoot
      });
    }, "getModuleName");
  }
  function O1(e, t) {
    let {
      filename: r,
      filenameRelative: s = r,
      sourceRoot: n = t.moduleRoot
    } = e, {
      moduleId: a,
      moduleIds: o = !!a,
      getModuleId: l,
      moduleRoot: u = n
    } = t;
    if (!o) return null;
    if (a != null && !l)
      return a;
    let c = u != null ? u + "/" : "";
    if (s) {
      let f = n != null ? new RegExp("^" + n + "/?") : "";
      c += s.replace(f, "").replace(/\.(\w*?)$/, "");
    }
    return c = c.replace(/\\/g, "/"), l && l(c) || c;
  }
  i(O1, "getModuleName");
});

// ../node_modules/@babel/helper-module-transforms/lib/index.js
var jc = y((As) => {
  "use strict";
  Object.defineProperty(As, "__esModule", {
    value: !0
  });
  Object.defineProperty(As, "buildDynamicImport", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return rRe.buildDynamicImport;
    }, "get")
  });
  As.buildNamespaceInitStatements = yRe;
  As.ensureStatementsHoisted = hRe;
  Object.defineProperty(As, "getModuleName", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return sRe.default;
    }, "get")
  });
  Object.defineProperty(As, "hasExports", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Mc.hasExports;
    }, "get")
  });
  Object.defineProperty(As, "isModule", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return yj.isModule;
    }, "get")
  });
  Object.defineProperty(As, "isSideEffectImport", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Mc.isSideEffectImport;
    }, "get")
  });
  As.rewriteModuleStatementsAndPrepareHeader = dRe;
  Object.defineProperty(As, "rewriteThis", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return gj.default;
    }, "get")
  });
  As.wrapInterop = mRe;
  var eRe = Q("assert"), $r = mr(), yj = ZM(), gj = ej(), tRe = lj(), Mc = I1(), F1 = pj(), rRe = _1(), sRe = dj(), {
    booleanLiteral: nRe,
    callExpression: hj,
    cloneNode: ph,
    directive: iRe,
    directiveLiteral: aRe,
    expressionStatement: oRe,
    identifier: dh,
    isIdentifier: lRe,
    memberExpression: mj,
    stringLiteral: uRe,
    valueToNode: cRe,
    variableDeclaration: fRe,
    variableDeclarator: pRe
  } = $r.types;
  As.getDynamicImportSource = _1().getDynamicImportSource;
  function dRe(e, {
    exportName: t,
    strict: r,
    allowTopLevelThis: s,
    strictMode: n,
    noInterop: a,
    importInterop: o = a ? "none" : "babel",
    lazy: l,
    getWrapperPayload: u = F1.toGetWrapperPayload(l ?? !1),
    wrapReference: c = F1.wrapReference,
    esNamespaceOnly: f,
    filename: p,
    constantReexports: d = arguments[1].loose,
    enumerableModuleMeta: m = arguments[1].loose,
    noIncompleteNsImportDetection: b
  }) {
    (0, Mc.validateImportInteropOption)(o), eRe((0, yj.isModule)(e), "Cannot process module statements in a script"), e.node.sourceType = "s\
cript";
    let h = (0, Mc.default)(e, t, {
      importInterop: o,
      initializeReexports: d,
      getWrapperPayload: u,
      esNamespaceOnly: f,
      filename: p
    });
    s || (0, gj.default)(e), (0, tRe.default)(e, h, c), n !== !1 && (e.node.directives.some((C) => C.value.value === "use strict") || e.unshiftContainer(
    "directives", iRe(aRe("use strict"))));
    let g = [];
    (0, Mc.hasExports)(h) && !r && g.push(gRe(h, m));
    let E = ERe(e, h);
    return E && (h.exportNameListName = E.name, g.push(E.statement)), g.push(...vRe(e, h, c, d, b)), {
      meta: h,
      headers: g
    };
  }
  i(dRe, "rewriteModuleStatementsAndPrepareHeader");
  function hRe(e) {
    e.forEach((t) => {
      t._blockHoist = 3;
    });
  }
  i(hRe, "ensureStatementsHoisted");
  function mRe(e, t, r) {
    if (r === "none")
      return null;
    if (r === "node-namespace")
      return hj(e.hub.addHelper("interopRequireWildcard"), [t, nRe(!0)]);
    if (r === "node-default")
      return null;
    let s;
    if (r === "default")
      s = "interopRequireDefault";
    else if (r === "namespace")
      s = "interopRequireWildcard";
    else
      throw new Error(`Unknown interop: ${r}`);
    return hj(e.hub.addHelper(s), [t]);
  }
  i(mRe, "wrapInterop");
  function yRe(e, t, r = !1, s = F1.wrapReference) {
    var n;
    let a = [], o = dh(t.name);
    for (let u of t.importsNamespace)
      u !== t.name && a.push($r.template.statement`var NAME = SOURCE;`({
        NAME: u,
        SOURCE: ph(o)
      }));
    let l = (n = s(o, t.wrap)) != null ? n : o;
    r && a.push(...bj(e, t, !0, s));
    for (let u of t.reexportNamespace)
      a.push(($r.types.isIdentifier(l) ? $r.template.statement`EXPORTS.NAME = NAMESPACE;` : $r.template.statement`
            Object.defineProperty(EXPORTS, "NAME", {
              enumerable: true,
              get: function() {
                return NAMESPACE;
              }
            });
          `)({
        EXPORTS: e.exportName,
        NAME: u,
        NAMESPACE: ph(l)
      }));
    if (t.reexportAll) {
      let u = bRe(e, ph(l), r);
      u.loc = t.reexportAll.loc, a.push(u);
    }
    return a;
  }
  i(yRe, "buildNamespaceInitStatements");
  var N1 = {
    constant: $r.template.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,
    constantComputed: $r.template.statement`EXPORTS["EXPORT_NAME"] = NAMESPACE_IMPORT;`,
    spec: $r.template.statement`
    Object.defineProperty(EXPORTS, "EXPORT_NAME", {
      enumerable: true,
      get: function() {
        return NAMESPACE_IMPORT;
      },
    });
    `
  };
  function bj(e, t, r, s) {
    var n;
    let a = dh(t.name);
    a = (n = s(a, t.wrap)) != null ? n : a;
    let {
      stringSpecifiers: o
    } = e;
    return Array.from(t.reexports, ([l, u]) => {
      let c = ph(a);
      u === "default" && t.interop === "node-default" || (o.has(u) ? c = mj(c, uRe(u), !0) : c = mj(c, dh(u)));
      let f = {
        EXPORTS: e.exportName,
        EXPORT_NAME: l,
        NAMESPACE_IMPORT: c
      };
      return r || lRe(c) ? o.has(l) ? N1.constantComputed(f) : N1.constant(f) : N1.spec(f);
    });
  }
  i(bj, "buildReexportsFromMeta");
  function gRe(e, t = !1) {
    return (t ? $r.template.statement`
        EXPORTS.__esModule = true;
      ` : $r.template.statement`
        Object.defineProperty(EXPORTS, "__esModule", {
          value: true,
        });
      `)({
      EXPORTS: e.exportName
    });
  }
  i(gRe, "buildESModuleHeader");
  function bRe(e, t, r) {
    return (r ? $r.template.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          EXPORTS[key] = NAMESPACE[key];
        });
      ` : $r.template.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          Object.defineProperty(EXPORTS, key, {
            enumerable: true,
            get: function() {
              return NAMESPACE[key];
            },
          });
        });
    `)({
      NAMESPACE: t,
      EXPORTS: e.exportName,
      VERIFY_NAME_LIST: e.exportNameListName ? (0, $r.template)`
            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;
          `({
        EXPORTS_LIST: e.exportNameListName
      }) : null
    });
  }
  i(bRe, "buildNamespaceReexport");
  function ERe(e, t) {
    let r = /* @__PURE__ */ Object.create(null);
    for (let a of t.local.values())
      for (let o of a.names)
        r[o] = !0;
    let s = !1;
    for (let a of t.source.values()) {
      for (let o of a.reexports.keys())
        r[o] = !0;
      for (let o of a.reexportNamespace)
        r[o] = !0;
      s = s || !!a.reexportAll;
    }
    if (!s || Object.keys(r).length === 0) return null;
    let n = e.scope.generateUidIdentifier("exportNames");
    return delete r.default, {
      name: n.name,
      statement: fRe("var", [pRe(n, cRe(r))])
    };
  }
  i(ERe, "buildExportNameListDeclaration");
  function vRe(e, t, r, s = !1, n = !1) {
    let a = [];
    for (let [l, u] of t.local)
      if (u.kind !== "import") {
        if (u.kind === "hoisted")
          a.push([u.names[0], k1(t, u.names, dh(l))]);
        else if (!n)
          for (let c of u.names)
            a.push([c, null]);
      }
    for (let l of t.source.values()) {
      if (!s) {
        let u = bj(t, l, !1, r), c = [...l.reexports.keys()];
        for (let f = 0; f < u.length; f++)
          a.push([c[f], u[f]]);
      }
      if (!n)
        for (let u of l.reexportNamespace)
          a.push([u, null]);
    }
    a.sort(([l], [u]) => l < u ? -1 : u < l ? 1 : 0);
    let o = [];
    if (n)
      for (let [, l] of a)
        o.push(l);
    else
      for (let u = 0; u < a.length; u += 100) {
        let c = [];
        for (let f = 0; f < 100 && u + f < a.length; f++) {
          let [p, d] = a[u + f];
          d !== null ? (c.length > 0 && (o.push(k1(t, c, e.scope.buildUndefinedNode())), c = []), o.push(d)) : c.push(p);
        }
        c.length > 0 && o.push(k1(t, c, e.scope.buildUndefinedNode()));
      }
    return o;
  }
  i(vRe, "buildExportInitializationStatements");
  var R1 = {
    computed: $r.template.expression`EXPORTS["NAME"] = VALUE`,
    default: $r.template.expression`EXPORTS.NAME = VALUE`,
    define: $r.template.expression`Object.defineProperty(EXPORTS, "NAME", { enumerable:true, value: void 0, writable: true })["NAME"] = VALUE`
  };
  function k1(e, t, r) {
    let {
      stringSpecifiers: s,
      exportName: n
    } = e;
    return oRe(t.reduce((a, o) => {
      let l = {
        EXPORTS: n,
        NAME: o,
        VALUE: a
      };
      return o === "__proto__" ? R1.define(l) : s.has(o) ? R1.computed(l) : R1.default(l);
    }, r));
  }
  i(k1, "buildInitStatement");
});

// ../node_modules/@babel/core/node_modules/semver/semver.js
var bh = y(($e, xj) => {
  $e = xj.exports = ze;
  var Dt;
  typeof process == "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? Dt = /* @__PURE__ */ i(
  function() {
    var e = Array.prototype.slice.call(arguments, 0);
    e.unshift("SEMVER"), console.log.apply(console, e);
  }, "debug") : Dt = /* @__PURE__ */ i(function() {
  }, "debug");
  $e.SEMVER_SPEC_VERSION = "2.0.0";
  var qc = 256, hh = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
  9007199254740991, L1 = 16, SRe = qc - 6, Sl = $e.re = [], wt = $e.safeRe = [], ee = $e.src = [], H = $e.tokens = {}, Sj = 0;
  function nt(e) {
    H[e] = Sj++;
  }
  i(nt, "tok");
  var M1 = "[a-zA-Z0-9-]", B1 = [
    ["\\s", 1],
    ["\\d", qc],
    [M1, SRe]
  ];
  function Uc(e) {
    for (var t = 0; t < B1.length; t++) {
      var r = B1[t][0], s = B1[t][1];
      e = e.split(r + "*").join(r + "{0," + s + "}").split(r + "+").join(r + "{1," + s + "}");
    }
    return e;
  }
  i(Uc, "makeSafeRe");
  nt("NUMERICIDENTIFIER");
  ee[H.NUMERICIDENTIFIER] = "0|[1-9]\\d*";
  nt("NUMERICIDENTIFIERLOOSE");
  ee[H.NUMERICIDENTIFIERLOOSE] = "\\d+";
  nt("NONNUMERICIDENTIFIER");
  ee[H.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-]" + M1 + "*";
  nt("MAINVERSION");
  ee[H.MAINVERSION] = "(" + ee[H.NUMERICIDENTIFIER] + ")\\.(" + ee[H.NUMERICIDENTIFIER] + ")\\.(" + ee[H.NUMERICIDENTIFIER] + ")";
  nt("MAINVERSIONLOOSE");
  ee[H.MAINVERSIONLOOSE] = "(" + ee[H.NUMERICIDENTIFIERLOOSE] + ")\\.(" + ee[H.NUMERICIDENTIFIERLOOSE] + ")\\.(" + ee[H.NUMERICIDENTIFIERLOOSE] +
  ")";
  nt("PRERELEASEIDENTIFIER");
  ee[H.PRERELEASEIDENTIFIER] = "(?:" + ee[H.NUMERICIDENTIFIER] + "|" + ee[H.NONNUMERICIDENTIFIER] + ")";
  nt("PRERELEASEIDENTIFIERLOOSE");
  ee[H.PRERELEASEIDENTIFIERLOOSE] = "(?:" + ee[H.NUMERICIDENTIFIERLOOSE] + "|" + ee[H.NONNUMERICIDENTIFIER] + ")";
  nt("PRERELEASE");
  ee[H.PRERELEASE] = "(?:-(" + ee[H.PRERELEASEIDENTIFIER] + "(?:\\." + ee[H.PRERELEASEIDENTIFIER] + ")*))";
  nt("PRERELEASELOOSE");
  ee[H.PRERELEASELOOSE] = "(?:-?(" + ee[H.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + ee[H.PRERELEASEIDENTIFIERLOOSE] + ")*))";
  nt("BUILDIDENTIFIER");
  ee[H.BUILDIDENTIFIER] = M1 + "+";
  nt("BUILD");
  ee[H.BUILD] = "(?:\\+(" + ee[H.BUILDIDENTIFIER] + "(?:\\." + ee[H.BUILDIDENTIFIER] + ")*))";
  nt("FULL");
  nt("FULLPLAIN");
  ee[H.FULLPLAIN] = "v?" + ee[H.MAINVERSION] + ee[H.PRERELEASE] + "?" + ee[H.BUILD] + "?";
  ee[H.FULL] = "^" + ee[H.FULLPLAIN] + "$";
  nt("LOOSEPLAIN");
  ee[H.LOOSEPLAIN] = "[v=\\s]*" + ee[H.MAINVERSIONLOOSE] + ee[H.PRERELEASELOOSE] + "?" + ee[H.BUILD] + "?";
  nt("LOOSE");
  ee[H.LOOSE] = "^" + ee[H.LOOSEPLAIN] + "$";
  nt("GTLT");
  ee[H.GTLT] = "((?:<|>)?=?)";
  nt("XRANGEIDENTIFIERLOOSE");
  ee[H.XRANGEIDENTIFIERLOOSE] = ee[H.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*";
  nt("XRANGEIDENTIFIER");
  ee[H.XRANGEIDENTIFIER] = ee[H.NUMERICIDENTIFIER] + "|x|X|\\*";
  nt("XRANGEPLAIN");
  ee[H.XRANGEPLAIN] = "[v=\\s]*(" + ee[H.XRANGEIDENTIFIER] + ")(?:\\.(" + ee[H.XRANGEIDENTIFIER] + ")(?:\\.(" + ee[H.XRANGEIDENTIFIER] + ")(\
?:" + ee[H.PRERELEASE] + ")?" + ee[H.BUILD] + "?)?)?";
  nt("XRANGEPLAINLOOSE");
  ee[H.XRANGEPLAINLOOSE] = "[v=\\s]*(" + ee[H.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + ee[H.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + ee[H.XRANGEIDENTIFIERLOOSE] +
  ")(?:" + ee[H.PRERELEASELOOSE] + ")?" + ee[H.BUILD] + "?)?)?";
  nt("XRANGE");
  ee[H.XRANGE] = "^" + ee[H.GTLT] + "\\s*" + ee[H.XRANGEPLAIN] + "$";
  nt("XRANGELOOSE");
  ee[H.XRANGELOOSE] = "^" + ee[H.GTLT] + "\\s*" + ee[H.XRANGEPLAINLOOSE] + "$";
  nt("COERCE");
  ee[H.COERCE] = "(^|[^\\d])(\\d{1," + L1 + "})(?:\\.(\\d{1," + L1 + "}))?(?:\\.(\\d{1," + L1 + "}))?(?:$|[^\\d])";
  nt("COERCERTL");
  Sl[H.COERCERTL] = new RegExp(ee[H.COERCE], "g");
  wt[H.COERCERTL] = new RegExp(Uc(ee[H.COERCE]), "g");
  nt("LONETILDE");
  ee[H.LONETILDE] = "(?:~>?)";
  nt("TILDETRIM");
  ee[H.TILDETRIM] = "(\\s*)" + ee[H.LONETILDE] + "\\s+";
  Sl[H.TILDETRIM] = new RegExp(ee[H.TILDETRIM], "g");
  wt[H.TILDETRIM] = new RegExp(Uc(ee[H.TILDETRIM]), "g");
  var TRe = "$1~";
  nt("TILDE");
  ee[H.TILDE] = "^" + ee[H.LONETILDE] + ee[H.XRANGEPLAIN] + "$";
  nt("TILDELOOSE");
  ee[H.TILDELOOSE] = "^" + ee[H.LONETILDE] + ee[H.XRANGEPLAINLOOSE] + "$";
  nt("LONECARET");
  ee[H.LONECARET] = "(?:\\^)";
  nt("CARETTRIM");
  ee[H.CARETTRIM] = "(\\s*)" + ee[H.LONECARET] + "\\s+";
  Sl[H.CARETTRIM] = new RegExp(ee[H.CARETTRIM], "g");
  wt[H.CARETTRIM] = new RegExp(Uc(ee[H.CARETTRIM]), "g");
  var xRe = "$1^";
  nt("CARET");
  ee[H.CARET] = "^" + ee[H.LONECARET] + ee[H.XRANGEPLAIN] + "$";
  nt("CARETLOOSE");
  ee[H.CARETLOOSE] = "^" + ee[H.LONECARET] + ee[H.XRANGEPLAINLOOSE] + "$";
  nt("COMPARATORLOOSE");
  ee[H.COMPARATORLOOSE] = "^" + ee[H.GTLT] + "\\s*(" + ee[H.LOOSEPLAIN] + ")$|^$";
  nt("COMPARATOR");
  ee[H.COMPARATOR] = "^" + ee[H.GTLT] + "\\s*(" + ee[H.FULLPLAIN] + ")$|^$";
  nt("COMPARATORTRIM");
  ee[H.COMPARATORTRIM] = "(\\s*)" + ee[H.GTLT] + "\\s*(" + ee[H.LOOSEPLAIN] + "|" + ee[H.XRANGEPLAIN] + ")";
  Sl[H.COMPARATORTRIM] = new RegExp(ee[H.COMPARATORTRIM], "g");
  wt[H.COMPARATORTRIM] = new RegExp(Uc(ee[H.COMPARATORTRIM]), "g");
  var PRe = "$1$2$3";
  nt("HYPHENRANGE");
  ee[H.HYPHENRANGE] = "^\\s*(" + ee[H.XRANGEPLAIN] + ")\\s+-\\s+(" + ee[H.XRANGEPLAIN] + ")\\s*$";
  nt("HYPHENRANGELOOSE");
  ee[H.HYPHENRANGELOOSE] = "^\\s*(" + ee[H.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + ee[H.XRANGEPLAINLOOSE] + ")\\s*$";
  nt("STAR");
  ee[H.STAR] = "(<|>)?=?\\s*\\*";
  for ($n = 0; $n < Sj; $n++)
    Dt($n, ee[$n]), Sl[$n] || (Sl[$n] = new RegExp(ee[$n]), wt[$n] = new RegExp(Uc(ee[$n])));
  var $n;
  $e.parse = ao;
  function ao(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof ze)
      return e;
    if (typeof e != "string" || e.length > qc)
      return null;
    var r = t.loose ? wt[H.LOOSE] : wt[H.FULL];
    if (!r.test(e))
      return null;
    try {
      return new ze(e, t);
    } catch {
      return null;
    }
  }
  i(ao, "parse");
  $e.valid = ARe;
  function ARe(e, t) {
    var r = ao(e, t);
    return r ? r.version : null;
  }
  i(ARe, "valid");
  $e.clean = CRe;
  function CRe(e, t) {
    var r = ao(e.trim().replace(/^[=v]+/, ""), t);
    return r ? r.version : null;
  }
  i(CRe, "clean");
  $e.SemVer = ze;
  function ze(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof ze) {
      if (e.loose === t.loose)
        return e;
      e = e.version;
    } else if (typeof e != "string")
      throw new TypeError("Invalid Version: " + e);
    if (e.length > qc)
      throw new TypeError("version is longer than " + qc + " characters");
    if (!(this instanceof ze))
      return new ze(e, t);
    Dt("SemVer", e, t), this.options = t, this.loose = !!t.loose;
    var r = e.trim().match(t.loose ? wt[H.LOOSE] : wt[H.FULL]);
    if (!r)
      throw new TypeError("Invalid Version: " + e);
    if (this.raw = e, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > hh || this.major < 0)
      throw new TypeError("Invalid major version");
    if (this.minor > hh || this.minor < 0)
      throw new TypeError("Invalid minor version");
    if (this.patch > hh || this.patch < 0)
      throw new TypeError("Invalid patch version");
    r[4] ? this.prerelease = r[4].split(".").map(function(s) {
      if (/^[0-9]+$/.test(s)) {
        var n = +s;
        if (n >= 0 && n < hh)
          return n;
      }
      return s;
    }) : this.prerelease = [], this.build = r[5] ? r[5].split(".") : [], this.format();
  }
  i(ze, "SemVer");
  ze.prototype.format = function() {
    return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.
    join(".")), this.version;
  };
  ze.prototype.toString = function() {
    return this.version;
  };
  ze.prototype.compare = function(e) {
    return Dt("SemVer.compare", this.version, this.options, e), e instanceof ze || (e = new ze(e, this.options)), this.compareMain(e) || this.
    comparePre(e);
  };
  ze.prototype.compareMain = function(e) {
    return e instanceof ze || (e = new ze(e, this.options)), io(this.major, e.major) || io(this.minor, e.minor) || io(this.patch, e.patch);
  };
  ze.prototype.comparePre = function(e) {
    if (e instanceof ze || (e = new ze(e, this.options)), this.prerelease.length && !e.prerelease.length)
      return -1;
    if (!this.prerelease.length && e.prerelease.length)
      return 1;
    if (!this.prerelease.length && !e.prerelease.length)
      return 0;
    var t = 0;
    do {
      var r = this.prerelease[t], s = e.prerelease[t];
      if (Dt("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return io(r, s);
    } while (++t);
  };
  ze.prototype.compareBuild = function(e) {
    e instanceof ze || (e = new ze(e, this.options));
    var t = 0;
    do {
      var r = this.build[t], s = e.build[t];
      if (Dt("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return io(r, s);
    } while (++t);
  };
  ze.prototype.inc = function(e, t) {
    switch (e) {
      case "premajor":
        this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t);
        break;
      case "preminor":
        this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t);
        break;
      case "prepatch":
        this.prerelease.length = 0, this.inc("patch", t), this.inc("pre", t);
        break;
      case "prerelease":
        this.prerelease.length === 0 && this.inc("patch", t), this.inc("pre", t);
        break;
      case "major":
        (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease =
        [];
        break;
      case "minor":
        (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = [];
        break;
      case "patch":
        this.prerelease.length === 0 && this.patch++, this.prerelease = [];
        break;
      case "pre":
        if (this.prerelease.length === 0)
          this.prerelease = [0];
        else {
          for (var r = this.prerelease.length; --r >= 0; )
            typeof this.prerelease[r] == "number" && (this.prerelease[r]++, r = -2);
          r === -1 && this.prerelease.push(0);
        }
        t && (this.prerelease[0] === t ? isNaN(this.prerelease[1]) && (this.prerelease = [t, 0]) : this.prerelease = [t, 0]);
        break;
      default:
        throw new Error("invalid increment argument: " + e);
    }
    return this.format(), this.raw = this.version, this;
  };
  $e.inc = wRe;
  function wRe(e, t, r, s) {
    typeof r == "string" && (s = r, r = void 0);
    try {
      return new ze(e, r).inc(t, s).version;
    } catch {
      return null;
    }
  }
  i(wRe, "inc");
  $e.diff = DRe;
  function DRe(e, t) {
    if (j1(e, t))
      return null;
    var r = ao(e), s = ao(t), n = "";
    if (r.prerelease.length || s.prerelease.length) {
      n = "pre";
      var a = "prerelease";
    }
    for (var o in r)
      if ((o === "major" || o === "minor" || o === "patch") && r[o] !== s[o])
        return n + o;
    return a;
  }
  i(DRe, "diff");
  $e.compareIdentifiers = io;
  var Ej = /^[0-9]+$/;
  function io(e, t) {
    var r = Ej.test(e), s = Ej.test(t);
    return r && s && (e = +e, t = +t), e === t ? 0 : r && !s ? -1 : s && !r ? 1 : e < t ? -1 : 1;
  }
  i(io, "compareIdentifiers");
  $e.rcompareIdentifiers = IRe;
  function IRe(e, t) {
    return io(t, e);
  }
  i(IRe, "rcompareIdentifiers");
  $e.major = _Re;
  function _Re(e, t) {
    return new ze(e, t).major;
  }
  i(_Re, "major");
  $e.minor = ORe;
  function ORe(e, t) {
    return new ze(e, t).minor;
  }
  i(ORe, "minor");
  $e.patch = NRe;
  function NRe(e, t) {
    return new ze(e, t).patch;
  }
  i(NRe, "patch");
  $e.compare = vi;
  function vi(e, t, r) {
    return new ze(e, r).compare(new ze(t, r));
  }
  i(vi, "compare");
  $e.compareLoose = RRe;
  function RRe(e, t) {
    return vi(e, t, !0);
  }
  i(RRe, "compareLoose");
  $e.compareBuild = kRe;
  function kRe(e, t, r) {
    var s = new ze(e, r), n = new ze(t, r);
    return s.compare(n) || s.compareBuild(n);
  }
  i(kRe, "compareBuild");
  $e.rcompare = FRe;
  function FRe(e, t, r) {
    return vi(t, e, r);
  }
  i(FRe, "rcompare");
  $e.sort = LRe;
  function LRe(e, t) {
    return e.sort(function(r, s) {
      return $e.compareBuild(r, s, t);
    });
  }
  i(LRe, "sort");
  $e.rsort = BRe;
  function BRe(e, t) {
    return e.sort(function(r, s) {
      return $e.compareBuild(s, r, t);
    });
  }
  i(BRe, "rsort");
  $e.gt = $c;
  function $c(e, t, r) {
    return vi(e, t, r) > 0;
  }
  i($c, "gt");
  $e.lt = mh;
  function mh(e, t, r) {
    return vi(e, t, r) < 0;
  }
  i(mh, "lt");
  $e.eq = j1;
  function j1(e, t, r) {
    return vi(e, t, r) === 0;
  }
  i(j1, "eq");
  $e.neq = Tj;
  function Tj(e, t, r) {
    return vi(e, t, r) !== 0;
  }
  i(Tj, "neq");
  $e.gte = q1;
  function q1(e, t, r) {
    return vi(e, t, r) >= 0;
  }
  i(q1, "gte");
  $e.lte = $1;
  function $1(e, t, r) {
    return vi(e, t, r) <= 0;
  }
  i($1, "lte");
  $e.cmp = yh;
  function yh(e, t, r, s) {
    switch (t) {
      case "===":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e === r;
      case "!==":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e !== r;
      case "":
      case "=":
      case "==":
        return j1(e, r, s);
      case "!=":
        return Tj(e, r, s);
      case ">":
        return $c(e, r, s);
      case ">=":
        return q1(e, r, s);
      case "<":
        return mh(e, r, s);
      case "<=":
        return $1(e, r, s);
      default:
        throw new TypeError("Invalid operator: " + t);
    }
  }
  i(yh, "cmp");
  $e.Comparator = Ws;
  function Ws(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Ws) {
      if (e.loose === !!t.loose)
        return e;
      e = e.value;
    }
    if (!(this instanceof Ws))
      return new Ws(e, t);
    e = e.trim().split(/\s+/).join(" "), Dt("comparator", e, t), this.options = t, this.loose = !!t.loose, this.parse(e), this.semver === Tl ?
    this.value = "" : this.value = this.operator + this.semver.version, Dt("comp", this);
  }
  i(Ws, "Comparator");
  var Tl = {};
  Ws.prototype.parse = function(e) {
    var t = this.options.loose ? wt[H.COMPARATORLOOSE] : wt[H.COMPARATOR], r = e.match(t);
    if (!r)
      throw new TypeError("Invalid comparator: " + e);
    this.operator = r[1] !== void 0 ? r[1] : "", this.operator === "=" && (this.operator = ""), r[2] ? this.semver = new ze(r[2], this.options.
    loose) : this.semver = Tl;
  };
  Ws.prototype.toString = function() {
    return this.value;
  };
  Ws.prototype.test = function(e) {
    if (Dt("Comparator.test", e, this.options.loose), this.semver === Tl || e === Tl)
      return !0;
    if (typeof e == "string")
      try {
        e = new ze(e, this.options);
      } catch {
        return !1;
      }
    return yh(e, this.operator, this.semver, this.options);
  };
  Ws.prototype.intersects = function(e, t) {
    if (!(e instanceof Ws))
      throw new TypeError("a Comparator is required");
    (!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    });
    var r;
    if (this.operator === "")
      return this.value === "" ? !0 : (r = new or(e.value, t), gh(this.value, r, t));
    if (e.operator === "")
      return e.value === "" ? !0 : (r = new or(this.value, t), gh(e.semver, r, t));
    var s = (this.operator === ">=" || this.operator === ">") && (e.operator === ">=" || e.operator === ">"), n = (this.operator === "<=" ||
    this.operator === "<") && (e.operator === "<=" || e.operator === "<"), a = this.semver.version === e.semver.version, o = (this.operator ===
    ">=" || this.operator === "<=") && (e.operator === ">=" || e.operator === "<="), l = yh(this.semver, "<", e.semver, t) && (this.operator ===
    ">=" || this.operator === ">") && (e.operator === "<=" || e.operator === "<"), u = yh(this.semver, ">", e.semver, t) && (this.operator ===
    "<=" || this.operator === "<") && (e.operator === ">=" || e.operator === ">");
    return s || n || a && o || l || u;
  };
  $e.Range = or;
  function or(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof or)
      return e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease ? e : new or(e.raw, t);
    if (e instanceof Ws)
      return new or(e.value, t);
    if (!(this instanceof or))
      return new or(e, t);
    if (this.options = t, this.loose = !!t.loose, this.includePrerelease = !!t.includePrerelease, this.raw = e.trim().split(/\s+/).join(" "),
    this.set = this.raw.split("||").map(function(r) {
      return this.parseRange(r.trim());
    }, this).filter(function(r) {
      return r.length;
    }), !this.set.length)
      throw new TypeError("Invalid SemVer Range: " + this.raw);
    this.format();
  }
  i(or, "Range");
  or.prototype.format = function() {
    return this.range = this.set.map(function(e) {
      return e.join(" ").trim();
    }).join("||").trim(), this.range;
  };
  or.prototype.toString = function() {
    return this.range;
  };
  or.prototype.parseRange = function(e) {
    var t = this.options.loose, r = t ? wt[H.HYPHENRANGELOOSE] : wt[H.HYPHENRANGE];
    e = e.replace(r, KRe), Dt("hyphen replace", e), e = e.replace(wt[H.COMPARATORTRIM], PRe), Dt("comparator trim", e, wt[H.COMPARATORTRIM]),
    e = e.replace(wt[H.TILDETRIM], TRe), e = e.replace(wt[H.CARETTRIM], xRe), e = e.split(/\s+/).join(" ");
    var s = t ? wt[H.COMPARATORLOOSE] : wt[H.COMPARATOR], n = e.split(" ").map(function(a) {
      return jRe(a, this.options);
    }, this).join(" ").split(/\s+/);
    return this.options.loose && (n = n.filter(function(a) {
      return !!a.match(s);
    })), n = n.map(function(a) {
      return new Ws(a, this.options);
    }, this), n;
  };
  or.prototype.intersects = function(e, t) {
    if (!(e instanceof or))
      throw new TypeError("a Range is required");
    return this.set.some(function(r) {
      return vj(r, t) && e.set.some(function(s) {
        return vj(s, t) && r.every(function(n) {
          return s.every(function(a) {
            return n.intersects(a, t);
          });
        });
      });
    });
  };
  function vj(e, t) {
    for (var r = !0, s = e.slice(), n = s.pop(); r && s.length; )
      r = s.every(function(a) {
        return n.intersects(a, t);
      }), n = s.pop();
    return r;
  }
  i(vj, "isSatisfiable");
  $e.toComparators = MRe;
  function MRe(e, t) {
    return new or(e, t).set.map(function(r) {
      return r.map(function(s) {
        return s.value;
      }).join(" ").trim().split(" ");
    });
  }
  i(MRe, "toComparators");
  function jRe(e, t) {
    return Dt("comp", e, t), e = URe(e, t), Dt("caret", e), e = qRe(e, t), Dt("tildes", e), e = WRe(e, t), Dt("xrange", e), e = GRe(e, t), Dt(
    "stars", e), e;
  }
  i(jRe, "parseComparator");
  function fs(e) {
    return !e || e.toLowerCase() === "x" || e === "*";
  }
  i(fs, "isX");
  function qRe(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return $Re(r, t);
    }).join(" ");
  }
  i(qRe, "replaceTildes");
  function $Re(e, t) {
    var r = t.loose ? wt[H.TILDELOOSE] : wt[H.TILDE];
    return e.replace(r, function(s, n, a, o, l) {
      Dt("tilde", e, s, n, a, o, l);
      var u;
      return fs(n) ? u = "" : fs(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : fs(o) ? u = ">=" + n + "." + a + ".0 <" + n + "." + (+a +
      1) + ".0" : l ? (Dt("replaceTilde pr", l), u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + (+a + 1) + ".0") : u = ">=" +
      n + "." + a + "." + o + " <" + n + "." + (+a + 1) + ".0", Dt("tilde return", u), u;
    });
  }
  i($Re, "replaceTilde");
  function URe(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return VRe(r, t);
    }).join(" ");
  }
  i(URe, "replaceCarets");
  function VRe(e, t) {
    Dt("caret", e, t);
    var r = t.loose ? wt[H.CARETLOOSE] : wt[H.CARET];
    return e.replace(r, function(s, n, a, o, l) {
      Dt("caret", e, s, n, a, o, l);
      var u;
      return fs(n) ? u = "" : fs(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : fs(o) ? n === "0" ? u = ">=" + n + "." + a + ".0 <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + ".0 <" + (+n + 1) + ".0.0" : l ? (Dt("replaceCaret pr", l), n === "0" ? a === "0" ? u =
      ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + (+n + 1) + ".0.0") : (Dt("no pr"), n === "0" ? a === "0" ?
      u = ">=" + n + "." + a + "." + o + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + " <" + n + "." + (+a + 1) +
      ".0" : u = ">=" + n + "." + a + "." + o + " <" + (+n + 1) + ".0.0"), Dt("caret return", u), u;
    });
  }
  i(VRe, "replaceCaret");
  function WRe(e, t) {
    return Dt("replaceXRanges", e, t), e.split(/\s+/).map(function(r) {
      return HRe(r, t);
    }).join(" ");
  }
  i(WRe, "replaceXRanges");
  function HRe(e, t) {
    e = e.trim();
    var r = t.loose ? wt[H.XRANGELOOSE] : wt[H.XRANGE];
    return e.replace(r, function(s, n, a, o, l, u) {
      Dt("xRange", e, s, n, a, o, l, u);
      var c = fs(a), f = c || fs(o), p = f || fs(l), d = p;
      return n === "=" && d && (n = ""), u = t.includePrerelease ? "-0" : "", c ? n === ">" || n === "<" ? s = "<0.0.0-0" : s = "*" : n && d ?
      (f && (o = 0), l = 0, n === ">" ? (n = ">=", f ? (a = +a + 1, o = 0, l = 0) : (o = +o + 1, l = 0)) : n === "<=" && (n = "<", f ? a = +a +
      1 : o = +o + 1), s = n + a + "." + o + "." + l + u) : f ? s = ">=" + a + ".0.0" + u + " <" + (+a + 1) + ".0.0" + u : p && (s = ">=" + a +
      "." + o + ".0" + u + " <" + a + "." + (+o + 1) + ".0" + u), Dt("xRange return", s), s;
    });
  }
  i(HRe, "replaceXRange");
  function GRe(e, t) {
    return Dt("replaceStars", e, t), e.trim().replace(wt[H.STAR], "");
  }
  i(GRe, "replaceStars");
  function KRe(e, t, r, s, n, a, o, l, u, c, f, p, d) {
    return fs(r) ? t = "" : fs(s) ? t = ">=" + r + ".0.0" : fs(n) ? t = ">=" + r + "." + s + ".0" : t = ">=" + t, fs(u) ? l = "" : fs(c) ? l =
    "<" + (+u + 1) + ".0.0" : fs(f) ? l = "<" + u + "." + (+c + 1) + ".0" : p ? l = "<=" + u + "." + c + "." + f + "-" + p : l = "<=" + l, (t +
    " " + l).trim();
  }
  i(KRe, "hyphenReplace");
  or.prototype.test = function(e) {
    if (!e)
      return !1;
    if (typeof e == "string")
      try {
        e = new ze(e, this.options);
      } catch {
        return !1;
      }
    for (var t = 0; t < this.set.length; t++)
      if (YRe(this.set[t], e, this.options))
        return !0;
    return !1;
  };
  function YRe(e, t, r) {
    for (var s = 0; s < e.length; s++)
      if (!e[s].test(t))
        return !1;
    if (t.prerelease.length && !r.includePrerelease) {
      for (s = 0; s < e.length; s++)
        if (Dt(e[s].semver), e[s].semver !== Tl && e[s].semver.prerelease.length > 0) {
          var n = e[s].semver;
          if (n.major === t.major && n.minor === t.minor && n.patch === t.patch)
            return !0;
        }
      return !1;
    }
    return !0;
  }
  i(YRe, "testSet");
  $e.satisfies = gh;
  function gh(e, t, r) {
    try {
      t = new or(t, r);
    } catch {
      return !1;
    }
    return t.test(e);
  }
  i(gh, "satisfies");
  $e.maxSatisfying = XRe;
  function XRe(e, t, r) {
    var s = null, n = null;
    try {
      var a = new or(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === -1) && (s = o, n = new ze(s, r));
    }), s;
  }
  i(XRe, "maxSatisfying");
  $e.minSatisfying = zRe;
  function zRe(e, t, r) {
    var s = null, n = null;
    try {
      var a = new or(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === 1) && (s = o, n = new ze(s, r));
    }), s;
  }
  i(zRe, "minSatisfying");
  $e.minVersion = JRe;
  function JRe(e, t) {
    e = new or(e, t);
    var r = new ze("0.0.0");
    if (e.test(r) || (r = new ze("0.0.0-0"), e.test(r)))
      return r;
    r = null;
    for (var s = 0; s < e.set.length; ++s) {
      var n = e.set[s];
      n.forEach(function(a) {
        var o = new ze(a.semver.version);
        switch (a.operator) {
          case ">":
            o.prerelease.length === 0 ? o.patch++ : o.prerelease.push(0), o.raw = o.format();
          case "":
          case ">=":
            (!r || $c(r, o)) && (r = o);
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: " + a.operator);
        }
      });
    }
    return r && e.test(r) ? r : null;
  }
  i(JRe, "minVersion");
  $e.validRange = QRe;
  function QRe(e, t) {
    try {
      return new or(e, t).range || "*";
    } catch {
      return null;
    }
  }
  i(QRe, "validRange");
  $e.ltr = ZRe;
  function ZRe(e, t, r) {
    return U1(e, t, "<", r);
  }
  i(ZRe, "ltr");
  $e.gtr = eke;
  function eke(e, t, r) {
    return U1(e, t, ">", r);
  }
  i(eke, "gtr");
  $e.outside = U1;
  function U1(e, t, r, s) {
    e = new ze(e, s), t = new or(t, s);
    var n, a, o, l, u;
    switch (r) {
      case ">":
        n = $c, a = $1, o = mh, l = ">", u = ">=";
        break;
      case "<":
        n = mh, a = q1, o = $c, l = "<", u = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (gh(e, t, s))
      return !1;
    for (var c = 0; c < t.set.length; ++c) {
      var f = t.set[c], p = null, d = null;
      if (f.forEach(function(m) {
        m.semver === Tl && (m = new Ws(">=0.0.0")), p = p || m, d = d || m, n(m.semver, p.semver, s) ? p = m : o(m.semver, d.semver, s) && (d =
        m);
      }), p.operator === l || p.operator === u || (!d.operator || d.operator === l) && a(e, d.semver))
        return !1;
      if (d.operator === u && o(e, d.semver))
        return !1;
    }
    return !0;
  }
  i(U1, "outside");
  $e.prerelease = tke;
  function tke(e, t) {
    var r = ao(e, t);
    return r && r.prerelease.length ? r.prerelease : null;
  }
  i(tke, "prerelease");
  $e.intersects = rke;
  function rke(e, t, r) {
    return e = new or(e, r), t = new or(t, r), e.intersects(t);
  }
  i(rke, "intersects");
  $e.coerce = ske;
  function ske(e, t) {
    if (e instanceof ze)
      return e;
    if (typeof e == "number" && (e = String(e)), typeof e != "string")
      return null;
    t = t || {};
    var r = null;
    if (!t.rtl)
      r = e.match(wt[H.COERCE]);
    else {
      for (var s; (s = wt[H.COERCERTL].exec(e)) && (!r || r.index + r[0].length !== e.length); )
        (!r || s.index + s[0].length !== r.index + r[0].length) && (r = s), wt[H.COERCERTL].lastIndex = s.index + s[1].length + s[2].length;
      wt[H.COERCERTL].lastIndex = -1;
    }
    return r === null ? null : ao(r[2] + "." + (r[3] || "0") + "." + (r[4] || "0"), t);
  }
  i(ske, "coerce");
});

// ../node_modules/@babel/core/lib/transformation/file/file.js
var Sh = y((vh) => {
  "use strict";
  Object.defineProperty(vh, "__esModule", {
    value: !0
  });
  vh.default = void 0;
  function Vc() {
    let e = h1();
    return Vc = /* @__PURE__ */ i(function() {
      return e;
    }, "helpers"), e;
  }
  i(Vc, "helpers");
  function V1() {
    let e = Bs();
    return V1 = /* @__PURE__ */ i(function() {
      return e;
    }, "_traverse"), e;
  }
  i(V1, "_traverse");
  function Pj() {
    let e = pc();
    return Pj = /* @__PURE__ */ i(function() {
      return e;
    }, "_codeFrame"), e;
  }
  i(Pj, "_codeFrame");
  function Aj() {
    let e = Re();
    return Aj = /* @__PURE__ */ i(function() {
      return e;
    }, "_t"), e;
  }
  i(Aj, "_t");
  function Cj() {
    let e = jc();
    return Cj = /* @__PURE__ */ i(function() {
      return e;
    }, "_helperModuleTransforms"), e;
  }
  i(Cj, "_helperModuleTransforms");
  function Eh() {
    let e = bh();
    return Eh = /* @__PURE__ */ i(function() {
      return e;
    }, "_semver"), e;
  }
  i(Eh, "_semver");
  var {
    cloneNode: nke,
    interpreterDirective: ike
  } = Aj(), ake = {
    enter(e, t) {
      let r = e.node.loc;
      r && (t.loc = r, e.stop());
    }
  }, Wc = class e {
    static {
      i(this, "File");
    }
    constructor(t, {
      code: r,
      ast: s,
      inputMap: n
    }) {
      this._map = /* @__PURE__ */ new Map(), this.opts = void 0, this.declarations = {}, this.path = void 0, this.ast = void 0, this.scope =
      void 0, this.metadata = {}, this.code = "", this.inputMap = void 0, this.hub = {
        file: this,
        getCode: /* @__PURE__ */ i(() => this.code, "getCode"),
        getScope: /* @__PURE__ */ i(() => this.scope, "getScope"),
        addHelper: this.addHelper.bind(this),
        buildError: this.buildCodeFrameError.bind(this)
      }, this.opts = t, this.code = r, this.ast = s, this.inputMap = n, this.path = V1().NodePath.get({
        hub: this.hub,
        parentPath: null,
        parent: this.ast,
        container: this.ast,
        key: "program"
      }).setContext(), this.scope = this.path.scope;
    }
    get shebang() {
      let {
        interpreter: t
      } = this.path.node;
      return t ? t.value : "";
    }
    set shebang(t) {
      t ? this.path.get("interpreter").replaceWith(ike(t)) : this.path.get("interpreter").remove();
    }
    set(t, r) {
      if (t === "helpersNamespace")
        throw new Error("Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @babel/plugin-external-\
helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to \
explore using 'helperGenerator' alongside 'file.availableHelper()'.");
      this._map.set(t, r);
    }
    get(t) {
      return this._map.get(t);
    }
    has(t) {
      return this._map.has(t);
    }
    getModuleName() {
      return (0, Cj().getModuleName)(this.opts, this.opts);
    }
    availableHelper(t, r) {
      let s;
      try {
        s = Vc().minVersion(t);
      } catch (n) {
        if (n.code !== "BABEL_HELPER_UNKNOWN") throw n;
        return !1;
      }
      return typeof r != "string" ? !0 : (Eh().valid(r) && (r = `^${r}`), !Eh().intersects(`<${s}`, r) && !Eh().intersects(">=8.0.0", r));
    }
    addHelper(t) {
      let r = this.declarations[t];
      if (r) return nke(r);
      let s = this.get("helperGenerator");
      if (s) {
        let c = s(t);
        if (c) return c;
      }
      Vc().ensure(t, e);
      let n = this.declarations[t] = this.scope.generateUidIdentifier(t), a = {};
      for (let c of Vc().getDependencies(t))
        a[c] = this.addHelper(c);
      let {
        nodes: o,
        globals: l
      } = Vc().get(t, (c) => a[c], n, Object.keys(this.scope.getAllBindings()));
      l.forEach((c) => {
        this.path.scope.hasBinding(c, !0) && this.path.scope.rename(c);
      }), o.forEach((c) => {
        c._compact = !0;
      });
      let u = this.path.unshiftContainer("body", o);
      for (let c of u)
        c.isVariableDeclaration() && this.scope.registerDeclaration(c);
      return n;
    }
    buildCodeFrameError(t, r, s = SyntaxError) {
      let n = t?.loc;
      if (!n && t) {
        let a = {
          loc: null
        };
        (0, V1().default)(t, ake, this.scope, a), n = a.loc;
        let o = "This is an error on an internal node. Probably an internal error.";
        n && (o += " Location has been estimated."), r += ` (${o})`;
      }
      if (n) {
        let {
          highlightCode: a = !0
        } = this.opts;
        r += `
` + (0, Pj().codeFrameColumns)(this.code, {
          start: {
            line: n.start.line,
            column: n.start.column + 1
          },
          end: n.end && n.start.line === n.end.line ? {
            line: n.end.line,
            column: n.end.column + 1
          } : void 0
        }, {
          highlightCode: a
        });
      }
      return new s(r);
    }
  };
  vh.default = Wc;
  Wc.prototype.addImport = /* @__PURE__ */ i(function() {
    throw new Error("This API has been removed. If you're looking for this functionality in Babel 7, you should import the '@babel/helper-mo\
dule-imports' module and use the functions exposed  from that module, such as 'addNamed' or 'addDefault'.");
  }, "addImport"), Wc.prototype.addTemplateObject = /* @__PURE__ */ i(function() {
    throw new Error("This function has been moved into the template literal transform itself.");
  }, "addTemplateObject");
});

// ../node_modules/@babel/core/lib/tools/build-external-helpers.js
var Rj = y((Y1) => {
  "use strict";
  Object.defineProperty(Y1, "__esModule", {
    value: !0
  });
  Y1.default = xke;
  function Th() {
    let e = h1();
    return Th = /* @__PURE__ */ i(function() {
      return e;
    }, "helpers"), e;
  }
  i(Th, "helpers");
  function wj() {
    let e = gd();
    return wj = /* @__PURE__ */ i(function() {
      return e;
    }, "_generator"), e;
  }
  i(wj, "_generator");
  function Dj() {
    let e = yl();
    return Dj = /* @__PURE__ */ i(function() {
      return e;
    }, "_template"), e;
  }
  i(Dj, "_template");
  function Ij() {
    let e = Re();
    return Ij = /* @__PURE__ */ i(function() {
      return e;
    }, "_t"), e;
  }
  i(Ij, "_t");
  var oke = Sh(), {
    arrayExpression: lke,
    assignmentExpression: _j,
    binaryExpression: uke,
    blockStatement: cke,
    callExpression: fke,
    cloneNode: pke,
    conditionalExpression: dke,
    exportNamedDeclaration: hke,
    exportSpecifier: mke,
    expressionStatement: Oj,
    functionExpression: yke,
    identifier: Ur,
    memberExpression: W1,
    objectExpression: H1,
    program: xh,
    stringLiteral: Nj,
    unaryExpression: gke,
    variableDeclaration: G1,
    variableDeclarator: K1
  } = Ij(), bke = /* @__PURE__ */ i((e) => Dj().default.statement`
    (function (root, factory) {
      if (typeof define === "function" && define.amd) {
        define(AMD_ARGUMENTS, factory);
      } else if (typeof exports === "object") {
        factory(COMMON_ARGUMENTS);
      } else {
        factory(BROWSER_ARGUMENTS);
      }
    })(UMD_ROOT, function (FACTORY_PARAMETERS) {
      FACTORY_BODY
    });
  `(e), "buildUmdWrapper");
  function Eke(e) {
    let t = Ur("babelHelpers"), r = [], s = yke(null, [Ur("global")], cke(r)), n = xh([Oj(fke(s, [dke(uke("===", gke("typeof", Ur("global")),
    Nj("undefined")), Ur("self"), Ur("global"))]))]);
    return r.push(G1("var", [K1(t, _j("=", W1(Ur("global"), t), H1([])))])), Ph(r, t, e), n;
  }
  i(Eke, "buildGlobal");
  function vke(e) {
    let t = [], r = Ph(t, null, e);
    return t.unshift(hke(null, Object.keys(r).map((s) => mke(pke(r[s]), Ur(s))))), xh(t, [], "module");
  }
  i(vke, "buildModule");
  function Ske(e) {
    let t = Ur("babelHelpers"), r = [];
    return r.push(G1("var", [K1(t, Ur("global"))])), Ph(r, t, e), xh([bke({
      FACTORY_PARAMETERS: Ur("global"),
      BROWSER_ARGUMENTS: _j("=", W1(Ur("root"), t), H1([])),
      COMMON_ARGUMENTS: Ur("exports"),
      AMD_ARGUMENTS: lke([Nj("exports")]),
      FACTORY_BODY: r,
      UMD_ROOT: Ur("this")
    })]);
  }
  i(Ske, "buildUmd");
  function Tke(e) {
    let t = Ur("babelHelpers"), r = [];
    r.push(G1("var", [K1(t, H1([]))]));
    let s = xh(r);
    return Ph(r, t, e), r.push(Oj(t)), s;
  }
  i(Tke, "buildVar");
  function Ph(e, t, r) {
    let s = /* @__PURE__ */ i((a) => t ? W1(t, Ur(a)) : Ur(`_${a}`), "getHelperReference"), n = {};
    return Th().list.forEach(function(a) {
      if (r && r.indexOf(a) < 0) return;
      let o = n[a] = s(a);
      Th().ensure(a, oke.default);
      let {
        nodes: l
      } = Th().get(a, s, o);
      e.push(...l);
    }), n;
  }
  i(Ph, "buildHelpers");
  function xke(e, t = "global") {
    let r, s = {
      global: Eke,
      module: vke,
      umd: Ske,
      var: Tke
    }[t];
    if (s)
      r = s(e);
    else
      throw new Error(`Unsupported output type ${t}`);
    return (0, wj().default)(r).code;
  }
  i(xke, "_default");
});

// ../node_modules/gensync/index.js
var Cs = y((Jst, $j) => {
  "use strict";
  var Fj = Symbol.for("gensync:v1:start"), Lj = Symbol.for("gensync:v1:suspend"), Pke = "GENSYNC_EXPECTED_START", Ake = "GENSYNC_EXPECTED_SU\
SPEND", Bj = "GENSYNC_OPTIONS_ERROR", kj = "GENSYNC_RACE_NONEMPTY", Cke = "GENSYNC_ERRBACK_NO_CALLBACK";
  $j.exports = Object.assign(
    /* @__PURE__ */ i(function(t) {
      let r = t;
      return typeof t != "function" ? r = Dke(t) : r = Ike(t), Object.assign(r, wke(r));
    }, "gensync"),
    {
      all: X1({
        name: "all",
        arity: 1,
        sync: /* @__PURE__ */ i(function(e) {
          return Array.from(e[0]).map((r) => z1(r));
        }, "sync"),
        async: /* @__PURE__ */ i(function(e, t, r) {
          let s = Array.from(e[0]);
          if (s.length === 0) {
            Promise.resolve().then(() => t([]));
            return;
          }
          let n = 0, a = s.map(() => {
          });
          s.forEach((o, l) => {
            Ah(
              o,
              (u) => {
                a[l] = u, n += 1, n === a.length && t(a);
              },
              r
            );
          });
        }, "async")
      }),
      race: X1({
        name: "race",
        arity: 1,
        sync: /* @__PURE__ */ i(function(e) {
          let t = Array.from(e[0]);
          if (t.length === 0)
            throw oo("Must race at least 1 item", kj);
          return z1(t[0]);
        }, "sync"),
        async: /* @__PURE__ */ i(function(e, t, r) {
          let s = Array.from(e[0]);
          if (s.length === 0)
            throw oo("Must race at least 1 item", kj);
          for (let n of s)
            Ah(n, t, r);
        }, "async")
      })
    }
  );
  function wke(e) {
    return {
      sync: /* @__PURE__ */ i(function(...r) {
        return z1(e.apply(this, r));
      }, "sync"),
      async: /* @__PURE__ */ i(function(...r) {
        return new Promise((s, n) => {
          Ah(e.apply(this, r), s, n);
        });
      }, "async"),
      errback: /* @__PURE__ */ i(function(...r) {
        let s = r.pop();
        if (typeof s != "function")
          throw oo(
            "Asynchronous function called without callback",
            Cke
          );
        let n;
        try {
          n = e.apply(this, r);
        } catch (a) {
          s(a);
          return;
        }
        Ah(n, (a) => s(void 0, a), (a) => s(a));
      }, "errback")
    };
  }
  i(wke, "makeFunctionAPI");
  function Hc(e, t, r, s) {
    if (typeof r === e || s && typeof r > "u")
      return;
    let n;
    throw s ? n = `Expected opts.${t} to be either a ${e}, or undefined.` : n = `Expected opts.${t} to be a ${e}.`, oo(n, Bj);
  }
  i(Hc, "assertTypeof");
  function oo(e, t) {
    return Object.assign(new Error(e), { code: t });
  }
  i(oo, "makeError");
  function Dke({ name: e, arity: t, sync: r, async: s, errback: n }) {
    if (Hc(
      "string",
      "name",
      e,
      !0
      /* allowUndefined */
    ), Hc(
      "number",
      "arity",
      t,
      !0
      /* allowUndefined */
    ), Hc("function", "sync", r), Hc(
      "function",
      "async",
      s,
      !0
      /* allowUndefined */
    ), Hc(
      "function",
      "errback",
      n,
      !0
      /* allowUndefined */
    ), s && n)
      throw oo(
        "Expected one of either opts.async or opts.errback, but got _both_.",
        Bj
      );
    if (typeof e != "string") {
      let a;
      n && n.name && n.name !== "errback" && (a = n.name), s && s.name && s.name !== "async" && (a = s.name.replace(/Async$/, "")), r && r.name &&
      r.name !== "sync" && (a = r.name.replace(/Sync$/, "")), typeof a == "string" && (e = a);
    }
    return typeof t != "number" && (t = r.length), X1({
      name: e,
      arity: t,
      sync: /* @__PURE__ */ i(function(a) {
        return r.apply(this, a);
      }, "sync"),
      async: /* @__PURE__ */ i(function(a, o, l) {
        s ? s.apply(this, a).then(o, l) : n ? n.call(this, ...a, (u, c) => {
          u == null ? o(c) : l(u);
        }) : o(r.apply(this, a));
      }, "async")
    });
  }
  i(Dke, "newGenerator");
  function Ike(e) {
    return qj(e.name, e.length, function(...t) {
      return e.apply(this, t);
    });
  }
  i(Ike, "wrapGenerator");
  function X1({ name: e, arity: t, sync: r, async: s }) {
    return qj(e, t, function* (...n) {
      let a = yield Fj;
      if (!a)
        return r.call(this, n);
      let o;
      try {
        s.call(
          this,
          n,
          (l) => {
            o || (o = { value: l }, a());
          },
          (l) => {
            o || (o = { err: l }, a());
          }
        );
      } catch (l) {
        o = { err: l }, a();
      }
      if (yield Lj, o.hasOwnProperty("err"))
        throw o.err;
      return o.value;
    });
  }
  i(X1, "buildOperation");
  function z1(e) {
    let t;
    for (; !({ value: t } = e.next()).done; )
      Mj(t, e);
    return t;
  }
  i(z1, "evaluateSync");
  function Ah(e, t, r) {
    (/* @__PURE__ */ i(function s() {
      try {
        let n;
        for (; !({ value: n } = e.next()).done; ) {
          Mj(n, e);
          let a = !0, o = !1, l = e.next(() => {
            a ? o = !0 : s();
          });
          if (a = !1, _ke(l, e), !o)
            return;
        }
        return t(n);
      } catch (n) {
        return r(n);
      }
    }, "step"))();
  }
  i(Ah, "evaluateAsync");
  function Mj(e, t) {
    e !== Fj && jj(
      t,
      oo(
        `Got unexpected yielded value in gensync generator: ${JSON.stringify(
          e
        )}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,
        Pke
      )
    );
  }
  i(Mj, "assertStart");
  function _ke({ value: e, done: t }, r) {
    !t && e === Lj || jj(
      r,
      oo(
        t ? "Unexpected generator completion. If you get this, it is probably a gensync bug." : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(
          e
        )}. If you get this, it is probably a gensync bug.`,
        Ake
      )
    );
  }
  i(_ke, "assertSuspend");
  function jj(e, t) {
    throw e.throw && e.throw(t), t;
  }
  i(jj, "throwError");
  function qj(e, t, r) {
    if (typeof e == "string") {
      let s = Object.getOwnPropertyDescriptor(r, "name");
      (!s || s.configurable) && Object.defineProperty(
        r,
        "name",
        Object.assign(s || {}, {
          configurable: !0,
          value: e
        })
      );
    }
    if (typeof t == "number") {
      let s = Object.getOwnPropertyDescriptor(r, "length");
      (!s || s.configurable) && Object.defineProperty(
        r,
        "length",
        Object.assign(s || {}, {
          configurable: !0,
          value: t
        })
      );
    }
    return r;
  }
  i(qj, "setFunctionMetadata");
});

// ../node_modules/@babel/core/lib/gensync-utils/async.js
var xl = y((mn) => {
  "use strict";
  Object.defineProperty(mn, "__esModule", {
    value: !0
  });
  mn.forwardAsync = Rke;
  mn.isAsync = void 0;
  mn.isThenable = Hj;
  mn.maybeAsync = Oke;
  mn.waitFor = mn.onFirstPause = void 0;
  function ma() {
    let e = Cs();
    return ma = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(ma, "_gensync");
  function Uj(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(Uj, "asyncGeneratorStep");
  function Wj(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          Uj(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          Uj(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i(Wj, "_asyncToGenerator");
  var Vj = ma()(function* (e) {
    return yield* e;
  }), Zst = mn.isAsync = ma()({
    sync: /* @__PURE__ */ i(() => !1, "sync"),
    errback: /* @__PURE__ */ i((e) => e(null, !0), "errback")
  });
  function Oke(e, t) {
    return ma()({
      sync(...r) {
        let s = e.apply(this, r);
        if (Hj(s)) throw new Error(t);
        return s;
      },
      async(...r) {
        return Promise.resolve(e.apply(this, r));
      }
    });
  }
  i(Oke, "maybeAsync");
  var Nke = ma()({
    sync: /* @__PURE__ */ i((e) => e("sync"), "sync"),
    async: function() {
      var e = Wj(function* (t) {
        return t("async");
      });
      return /* @__PURE__ */ i(function(r) {
        return e.apply(this, arguments);
      }, "async");
    }()
  });
  function Rke(e, t) {
    let r = ma()(e);
    return Nke((s) => {
      let n = r[s];
      return t(n);
    });
  }
  i(Rke, "forwardAsync");
  var ent = mn.onFirstPause = ma()({
    name: "onFirstPause",
    arity: 2,
    sync: /* @__PURE__ */ i(function(e) {
      return Vj.sync(e);
    }, "sync"),
    errback: /* @__PURE__ */ i(function(e, t, r) {
      let s = !1;
      Vj.errback(e, (n, a) => {
        s = !0, r(n, a);
      }), s || t();
    }, "errback")
  }), tnt = mn.waitFor = ma()({
    sync: /* @__PURE__ */ i((e) => e, "sync"),
    async: function() {
      var e = Wj(function* (t) {
        return t;
      });
      return /* @__PURE__ */ i(function(r) {
        return e.apply(this, arguments);
      }, "async");
    }()
  });
  function Hj(e) {
    return !!e && (typeof e == "object" || typeof e == "function") && !!e.then && typeof e.then == "function";
  }
  i(Hj, "isThenable");
});

// ../node_modules/@babel/core/lib/config/util.js
var wh = y((Ch) => {
  "use strict";
  Object.defineProperty(Ch, "__esModule", {
    value: !0
  });
  Ch.isIterableIterator = Lke;
  Ch.mergeOptions = kke;
  function kke(e, t) {
    for (let r of Object.keys(t))
      if ((r === "parserOpts" || r === "generatorOpts" || r === "assumptions") && t[r]) {
        let s = t[r], n = e[r] || (e[r] = {});
        Fke(n, s);
      } else {
        let s = t[r];
        s !== void 0 && (e[r] = s);
      }
  }
  i(kke, "mergeOptions");
  function Fke(e, t) {
    for (let r of Object.keys(t)) {
      let s = t[r];
      s !== void 0 && (e[r] = s);
    }
  }
  i(Fke, "mergeDefaultFields");
  function Lke(e) {
    return !!e && typeof e.next == "function" && typeof e[Symbol.iterator] == "function";
  }
  i(Lke, "isIterableIterator");
});

// ../node_modules/@babel/core/lib/config/caching.js
var uo = y((lo) => {
  "use strict";
  Object.defineProperty(lo, "__esModule", {
    value: !0
  });
  lo.assertSimpleType = Dh;
  lo.makeStrongCache = zj;
  lo.makeStrongCacheSync = qke;
  lo.makeWeakCache = Xj;
  lo.makeWeakCacheSync = jke;
  function Kj() {
    let e = Cs();
    return Kj = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(Kj, "_gensync");
  var Pl = xl(), Bke = wh(), Yj = /* @__PURE__ */ i((e) => Kj()(e).sync, "synchronize");
  function* Mke() {
    return !0;
  }
  i(Mke, "genTrue");
  function Xj(e) {
    return Jj(WeakMap, e);
  }
  i(Xj, "makeWeakCache");
  function jke(e) {
    return Yj(Xj(e));
  }
  i(jke, "makeWeakCacheSync");
  function zj(e) {
    return Jj(Map, e);
  }
  i(zj, "makeStrongCache");
  function qke(e) {
    return Yj(zj(e));
  }
  i(qke, "makeStrongCacheSync");
  function Jj(e, t) {
    let r = new e(), s = new e(), n = new e();
    return /* @__PURE__ */ i(function* (o, l) {
      let u = yield* (0, Pl.isAsync)(), c = u ? s : r, f = yield* $ke(u, c, n, o, l);
      if (f.valid) return f.value;
      let p = new J1(l), d = t(o, p), m, b;
      return (0, Bke.isIterableIterator)(d) ? b = yield* (0, Pl.onFirstPause)(d, () => {
        m = Uke(p, n, o);
      }) : b = d, Qj(c, p, o, b), m && (n.delete(o), m.release(b)), b;
    }, "cachedFunction");
  }
  i(Jj, "makeCachedFunction");
  function* Gj(e, t, r) {
    let s = e.get(t);
    if (s) {
      for (let {
        value: n,
        valid: a
      } of s)
        if (yield* a(r)) return {
          valid: !0,
          value: n
        };
    }
    return {
      valid: !1,
      value: null
    };
  }
  i(Gj, "getCachedValue");
  function* $ke(e, t, r, s, n) {
    let a = yield* Gj(t, s, n);
    if (a.valid)
      return a;
    if (e) {
      let o = yield* Gj(r, s, n);
      if (o.valid)
        return {
          valid: !0,
          value: yield* (0, Pl.waitFor)(o.value.promise)
        };
    }
    return {
      valid: !1,
      value: null
    };
  }
  i($ke, "getCachedValueOrWait");
  function Uke(e, t, r) {
    let s = new Q1();
    return Qj(t, e, r, s), s;
  }
  i(Uke, "setupAsyncLocks");
  function Qj(e, t, r, s) {
    t.configured() || t.forever();
    let n = e.get(r);
    switch (t.deactivate(), t.mode()) {
      case "forever":
        n = [{
          value: s,
          valid: Mke
        }], e.set(r, n);
        break;
      case "invalidate":
        n = [{
          value: s,
          valid: t.validator()
        }], e.set(r, n);
        break;
      case "valid":
        n ? n.push({
          value: s,
          valid: t.validator()
        }) : (n = [{
          value: s,
          valid: t.validator()
        }], e.set(r, n));
    }
  }
  i(Qj, "updateFunctionCache");
  var J1 = class {
    static {
      i(this, "CacheConfigurator");
    }
    constructor(t) {
      this._active = !0, this._never = !1, this._forever = !1, this._invalidate = !1, this._configured = !1, this._pairs = [], this._data = void 0,
      this._data = t;
    }
    simple() {
      return Vke(this);
    }
    mode() {
      return this._never ? "never" : this._forever ? "forever" : this._invalidate ? "invalidate" : "valid";
    }
    forever() {
      if (!this._active)
        throw new Error("Cannot change caching after evaluation has completed.");
      if (this._never)
        throw new Error("Caching has already been configured with .never()");
      this._forever = !0, this._configured = !0;
    }
    never() {
      if (!this._active)
        throw new Error("Cannot change caching after evaluation has completed.");
      if (this._forever)
        throw new Error("Caching has already been configured with .forever()");
      this._never = !0, this._configured = !0;
    }
    using(t) {
      if (!this._active)
        throw new Error("Cannot change caching after evaluation has completed.");
      if (this._never || this._forever)
        throw new Error("Caching has already been configured with .never or .forever()");
      this._configured = !0;
      let r = t(this._data), s = (0, Pl.maybeAsync)(t, "You appear to be using an async cache handler, but Babel has been called synchronous\
ly");
      return (0, Pl.isThenable)(r) ? r.then((n) => (this._pairs.push([n, s]), n)) : (this._pairs.push([r, s]), r);
    }
    invalidate(t) {
      return this._invalidate = !0, this.using(t);
    }
    validator() {
      let t = this._pairs;
      return function* (r) {
        for (let [s, n] of t)
          if (s !== (yield* n(r))) return !1;
        return !0;
      };
    }
    deactivate() {
      this._active = !1;
    }
    configured() {
      return this._configured;
    }
  };
  function Vke(e) {
    function t(r) {
      if (typeof r == "boolean") {
        r ? e.forever() : e.never();
        return;
      }
      return e.using(() => Dh(r()));
    }
    return i(t, "cacheFn"), t.forever = () => e.forever(), t.never = () => e.never(), t.using = (r) => e.using(() => Dh(r())), t.invalidate =
    (r) => e.invalidate(() => Dh(r())), t;
  }
  i(Vke, "makeSimpleConfigurator");
  function Dh(e) {
    if ((0, Pl.isThenable)(e))
      throw new Error("You appear to be using an async cache handler, which your current version of Babel does not support. We may add suppo\
rt for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synchron\
ously handle your caching logic.");
    if (e != null && typeof e != "string" && typeof e != "boolean" && typeof e != "number")
      throw new Error("Cache keys must be either string, boolean, number, null, or undefined.");
    return e;
  }
  i(Dh, "assertSimpleType");
  var Q1 = class {
    static {
      i(this, "Lock");
    }
    constructor() {
      this.released = !1, this.promise = void 0, this._resolve = void 0, this.promise = new Promise((t) => {
        this._resolve = t;
      });
    }
    release(t) {
      this.released = !0, this._resolve(t);
    }
  };
});

// ../node_modules/@babel/core/lib/gensync-utils/fs.js
var Ih = y((Al) => {
  "use strict";
  Object.defineProperty(Al, "__esModule", {
    value: !0
  });
  Al.stat = Al.readFile = void 0;
  function Gc() {
    let e = Q("fs");
    return Gc = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs"), e;
  }
  i(Gc, "_fs");
  function Z1() {
    let e = Cs();
    return Z1 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(Z1, "_gensync");
  var lnt = Al.readFile = Z1()({
    sync: Gc().readFileSync,
    errback: Gc().readFile
  }), unt = Al.stat = Z1()({
    sync: Gc().statSync,
    errback: Gc().stat
  });
});

// ../node_modules/@babel/core/lib/config/files/utils.js
var rT = y((tT) => {
  "use strict";
  Object.defineProperty(tT, "__esModule", {
    value: !0
  });
  tT.makeStaticFileCache = Gke;
  var Wke = uo(), Hke = Ih();
  function eT() {
    let e = Q("fs");
    return eT = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs2"), e;
  }
  i(eT, "_fs2");
  function Gke(e) {
    return (0, Wke.makeStrongCache)(function* (t, r) {
      return r.invalidate(() => Kke(t)) === null ? null : e(t, yield* Hke.readFile(t, "utf8"));
    });
  }
  i(Gke, "makeStaticFileCache");
  function Kke(e) {
    if (!eT().existsSync(e)) return null;
    try {
      return +eT().statSync(e).mtime;
    } catch (t) {
      if (t.code !== "ENOENT" && t.code !== "ENOTDIR") throw t;
    }
    return null;
  }
  i(Kke, "fileMtime");
});

// ../node_modules/@babel/core/lib/errors/rewrite-stack-trace.js
var Si = y((Cl) => {
  "use strict";
  Object.defineProperty(Cl, "__esModule", {
    value: !0
  });
  Cl.beginHiddenCallStack = Jke;
  Cl.endHiddenCallStack = Qke;
  Cl.expectedError = zke;
  Cl.injectVirtualStackFrame = Xke;
  var Zj, e4 = Function.call.bind(Error.prototype.toString), Oh = !!Error.captureStackTrace && ((Zj = Object.getOwnPropertyDescriptor(Error,
  "stackTraceLimit")) == null ? void 0 : Zj.writable) === !0, t4 = "startHiding - secret - don't use this - v1", r4 = "stopHiding - secret -\
 don't use this - v1", s4 = /* @__PURE__ */ new WeakSet(), _h = /* @__PURE__ */ new WeakMap();
  function Yke(e) {
    return /* @__PURE__ */ Object.create({
      isNative: /* @__PURE__ */ i(() => !1, "isNative"),
      isConstructor: /* @__PURE__ */ i(() => !1, "isConstructor"),
      isToplevel: /* @__PURE__ */ i(() => !0, "isToplevel"),
      getFileName: /* @__PURE__ */ i(() => e, "getFileName"),
      getLineNumber: /* @__PURE__ */ i(() => {
      }, "getLineNumber"),
      getColumnNumber: /* @__PURE__ */ i(() => {
      }, "getColumnNumber"),
      getFunctionName: /* @__PURE__ */ i(() => {
      }, "getFunctionName"),
      getMethodName: /* @__PURE__ */ i(() => {
      }, "getMethodName"),
      getTypeName: /* @__PURE__ */ i(() => {
      }, "getTypeName"),
      toString: /* @__PURE__ */ i(() => e, "toString")
    });
  }
  i(Yke, "CallSite");
  function Xke(e, t) {
    if (!Oh) return;
    let r = _h.get(e);
    return r || _h.set(e, r = []), r.push(Yke(t)), e;
  }
  i(Xke, "injectVirtualStackFrame");
  function zke(e) {
    if (Oh)
      return s4.add(e), e;
  }
  i(zke, "expectedError");
  function Jke(e) {
    return Oh ? Object.defineProperty(function(...t) {
      return n4(), e(...t);
    }, "name", {
      value: r4
    }) : e;
  }
  i(Jke, "beginHiddenCallStack");
  function Qke(e) {
    return Oh ? Object.defineProperty(function(...t) {
      return e(...t);
    }, "name", {
      value: t4
    }) : e;
  }
  i(Qke, "endHiddenCallStack");
  function n4() {
    n4 = /* @__PURE__ */ i(() => {
    }, "setupPrepareStackTrace");
    let {
      prepareStackTrace: e = Zke
    } = Error, t = 50;
    Error.stackTraceLimit && (Error.stackTraceLimit = Math.max(Error.stackTraceLimit, t)), Error.prepareStackTrace = /* @__PURE__ */ i(function(s, n) {
      let a = [], l = s4.has(s) ? "hiding" : "unknown";
      for (let u = 0; u < n.length; u++) {
        let c = n[u].getFunctionName();
        if (c === t4)
          l = "hiding";
        else if (c === r4) {
          if (l === "hiding")
            l = "showing", _h.has(s) && a.unshift(..._h.get(s));
          else if (l === "unknown") {
            a = n;
            break;
          }
        } else l !== "hiding" && a.push(n[u]);
      }
      return e(s, a);
    }, "stackTraceRewriter");
  }
  i(n4, "setupPrepareStackTrace");
  function Zke(e, t) {
    return t.length === 0 ? e4(e) : `${e4(e)}
    at ${t.join(`
    at `)}`;
  }
  i(Zke, "defaultPrepareStackTrace");
});

// ../node_modules/@babel/core/lib/errors/config-error.js
var co = y((Nh) => {
  "use strict";
  Object.defineProperty(Nh, "__esModule", {
    value: !0
  });
  Nh.default = void 0;
  var i4 = Si(), sT = class extends Error {
    static {
      i(this, "ConfigError");
    }
    constructor(t, r) {
      super(t), (0, i4.expectedError)(this), r && (0, i4.injectVirtualStackFrame)(this, r);
    }
  };
  Nh.default = sT;
});

// ../node_modules/@babel/core/lib/config/files/package.js
var a4 = y((iT) => {
  "use strict";
  Object.defineProperty(iT, "__esModule", {
    value: !0
  });
  iT.findPackageData = sFe;
  function wl() {
    let e = Q("path");
    return wl = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(wl, "_path");
  var eFe = rT(), nT = co(), tFe = "package.json", rFe = (0, eFe.makeStaticFileCache)((e, t) => {
    let r;
    try {
      r = JSON.parse(t);
    } catch (s) {
      throw new nT.default(`Error while parsing JSON - ${s.message}`, e);
    }
    if (!r) throw new Error(`${e}: No config detected`);
    if (typeof r != "object")
      throw new nT.default(`Config returned typeof ${typeof r}`, e);
    if (Array.isArray(r))
      throw new nT.default("Expected config object but found array", e);
    return {
      filepath: e,
      dirname: wl().dirname(e),
      options: r
    };
  });
  function* sFe(e) {
    let t = null, r = [], s = !0, n = wl().dirname(e);
    for (; !t && wl().basename(n) !== "node_modules"; ) {
      r.push(n), t = yield* rFe(wl().join(n, tFe));
      let a = wl().dirname(n);
      if (n === a) {
        s = !1;
        break;
      }
      n = a;
    }
    return {
      filepath: e,
      directories: r,
      pkg: t,
      isPackage: s
    };
  }
  i(sFe, "findPackageData");
});

// ../node_modules/json5/lib/unicode.js
var o4 = y((vnt, Rh) => {
  Rh.exports.Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  Rh.exports.ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
  Rh.exports.ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
});

// ../node_modules/json5/lib/util.js
var oT = y((Snt, l4) => {
  var aT = o4();
  l4.exports = {
    isSpaceSeparator(e) {
      return typeof e == "string" && aT.Space_Separator.test(e);
    },
    isIdStartChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e === "$" || e === "_" || aT.ID_Start.test(e));
    },
    isIdContinueChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e >= "0" && e <= "9" || e === "$" || e === "_" || e ===
      "\u200C" || e === "\u200D" || aT.ID_Continue.test(e));
    },
    isDigit(e) {
      return typeof e == "string" && /[0-9]/.test(e);
    },
    isHexDigit(e) {
      return typeof e == "string" && /[0-9A-Fa-f]/.test(e);
    }
  };
});

// ../node_modules/json5/lib/parse.js
var d4 = y((Tnt, p4) => {
  var Dr = oT(), uT, ps, xi, Fh, ya, yn, Ir, pT, Yc;
  p4.exports = /* @__PURE__ */ i(function(t, r) {
    uT = String(t), ps = "start", xi = [], Fh = 0, ya = 1, yn = 0, Ir = void 0, pT = void 0, Yc = void 0;
    do
      Ir = nFe(), oFe[ps]();
    while (Ir.type !== "eof");
    return typeof r == "function" ? cT({ "": Yc }, "", r) : Yc;
  }, "parse");
  function cT(e, t, r) {
    let s = e[t];
    if (s != null && typeof s == "object")
      if (Array.isArray(s))
        for (let n = 0; n < s.length; n++) {
          let a = String(n), o = cT(s, a, r);
          o === void 0 ? delete s[a] : Object.defineProperty(s, a, {
            value: o,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
      else
        for (let n in s) {
          let a = cT(s, n, r);
          a === void 0 ? delete s[n] : Object.defineProperty(s, n, {
            value: a,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
    return r.call(e, t, s);
  }
  i(cT, "internalize");
  var Je, Ke, Kc, Ti, ct;
  function nFe() {
    for (Je = "default", Ke = "", Kc = !1, Ti = 1; ; ) {
      ct = Pi();
      let e = c4[Je]();
      if (e)
        return e;
    }
  }
  i(nFe, "lex");
  function Pi() {
    if (uT[Fh])
      return String.fromCodePoint(uT.codePointAt(Fh));
  }
  i(Pi, "peek");
  function Z() {
    let e = Pi();
    return e === `
` ? (ya++, yn = 0) : e ? yn += e.length : yn++, e && (Fh += e.length), e;
  }
  i(Z, "read");
  var c4 = {
    default() {
      switch (ct) {
        case "	":
        case "\v":
        case "\f":
        case " ":
        case "\xA0":
        case "\uFEFF":
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          Z();
          return;
        case "/":
          Z(), Je = "comment";
          return;
        case void 0:
          return Z(), Gt("eof");
      }
      if (Dr.isSpaceSeparator(ct)) {
        Z();
        return;
      }
      return c4[ps]();
    },
    comment() {
      switch (ct) {
        case "*":
          Z(), Je = "multiLineComment";
          return;
        case "/":
          Z(), Je = "singleLineComment";
          return;
      }
      throw Kt(Z());
    },
    multiLineComment() {
      switch (ct) {
        case "*":
          Z(), Je = "multiLineCommentAsterisk";
          return;
        case void 0:
          throw Kt(Z());
      }
      Z();
    },
    multiLineCommentAsterisk() {
      switch (ct) {
        case "*":
          Z();
          return;
        case "/":
          Z(), Je = "default";
          return;
        case void 0:
          throw Kt(Z());
      }
      Z(), Je = "multiLineComment";
    },
    singleLineComment() {
      switch (ct) {
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          Z(), Je = "default";
          return;
        case void 0:
          return Z(), Gt("eof");
      }
      Z();
    },
    value() {
      switch (ct) {
        case "{":
        case "[":
          return Gt("punctuator", Z());
        case "n":
          return Z(), fo("ull"), Gt("null", null);
        case "t":
          return Z(), fo("rue"), Gt("boolean", !0);
        case "f":
          return Z(), fo("alse"), Gt("boolean", !1);
        case "-":
        case "+":
          Z() === "-" && (Ti = -1), Je = "sign";
          return;
        case ".":
          Ke = Z(), Je = "decimalPointLeading";
          return;
        case "0":
          Ke = Z(), Je = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          Ke = Z(), Je = "decimalInteger";
          return;
        case "I":
          return Z(), fo("nfinity"), Gt("numeric", 1 / 0);
        case "N":
          return Z(), fo("aN"), Gt("numeric", NaN);
        case '"':
        case "'":
          Kc = Z() === '"', Ke = "", Je = "string";
          return;
      }
      throw Kt(Z());
    },
    identifierNameStartEscape() {
      if (ct !== "u")
        throw Kt(Z());
      Z();
      let e = fT();
      switch (e) {
        case "$":
        case "_":
          break;
        default:
          if (!Dr.isIdStartChar(e))
            throw u4();
          break;
      }
      Ke += e, Je = "identifierName";
    },
    identifierName() {
      switch (ct) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          Ke += Z();
          return;
        case "\\":
          Z(), Je = "identifierNameEscape";
          return;
      }
      if (Dr.isIdContinueChar(ct)) {
        Ke += Z();
        return;
      }
      return Gt("identifier", Ke);
    },
    identifierNameEscape() {
      if (ct !== "u")
        throw Kt(Z());
      Z();
      let e = fT();
      switch (e) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          break;
        default:
          if (!Dr.isIdContinueChar(e))
            throw u4();
          break;
      }
      Ke += e, Je = "identifierName";
    },
    sign() {
      switch (ct) {
        case ".":
          Ke = Z(), Je = "decimalPointLeading";
          return;
        case "0":
          Ke = Z(), Je = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          Ke = Z(), Je = "decimalInteger";
          return;
        case "I":
          return Z(), fo("nfinity"), Gt("numeric", Ti * (1 / 0));
        case "N":
          return Z(), fo("aN"), Gt("numeric", NaN);
      }
      throw Kt(Z());
    },
    zero() {
      switch (ct) {
        case ".":
          Ke += Z(), Je = "decimalPoint";
          return;
        case "e":
        case "E":
          Ke += Z(), Je = "decimalExponent";
          return;
        case "x":
        case "X":
          Ke += Z(), Je = "hexadecimal";
          return;
      }
      return Gt("numeric", Ti * 0);
    },
    decimalInteger() {
      switch (ct) {
        case ".":
          Ke += Z(), Je = "decimalPoint";
          return;
        case "e":
        case "E":
          Ke += Z(), Je = "decimalExponent";
          return;
      }
      if (Dr.isDigit(ct)) {
        Ke += Z();
        return;
      }
      return Gt("numeric", Ti * Number(Ke));
    },
    decimalPointLeading() {
      if (Dr.isDigit(ct)) {
        Ke += Z(), Je = "decimalFraction";
        return;
      }
      throw Kt(Z());
    },
    decimalPoint() {
      switch (ct) {
        case "e":
        case "E":
          Ke += Z(), Je = "decimalExponent";
          return;
      }
      if (Dr.isDigit(ct)) {
        Ke += Z(), Je = "decimalFraction";
        return;
      }
      return Gt("numeric", Ti * Number(Ke));
    },
    decimalFraction() {
      switch (ct) {
        case "e":
        case "E":
          Ke += Z(), Je = "decimalExponent";
          return;
      }
      if (Dr.isDigit(ct)) {
        Ke += Z();
        return;
      }
      return Gt("numeric", Ti * Number(Ke));
    },
    decimalExponent() {
      switch (ct) {
        case "+":
        case "-":
          Ke += Z(), Je = "decimalExponentSign";
          return;
      }
      if (Dr.isDigit(ct)) {
        Ke += Z(), Je = "decimalExponentInteger";
        return;
      }
      throw Kt(Z());
    },
    decimalExponentSign() {
      if (Dr.isDigit(ct)) {
        Ke += Z(), Je = "decimalExponentInteger";
        return;
      }
      throw Kt(Z());
    },
    decimalExponentInteger() {
      if (Dr.isDigit(ct)) {
        Ke += Z();
        return;
      }
      return Gt("numeric", Ti * Number(Ke));
    },
    hexadecimal() {
      if (Dr.isHexDigit(ct)) {
        Ke += Z(), Je = "hexadecimalInteger";
        return;
      }
      throw Kt(Z());
    },
    hexadecimalInteger() {
      if (Dr.isHexDigit(ct)) {
        Ke += Z();
        return;
      }
      return Gt("numeric", Ti * Number(Ke));
    },
    string() {
      switch (ct) {
        case "\\":
          Z(), Ke += iFe();
          return;
        case '"':
          if (Kc)
            return Z(), Gt("string", Ke);
          Ke += Z();
          return;
        case "'":
          if (!Kc)
            return Z(), Gt("string", Ke);
          Ke += Z();
          return;
        case `
`:
        case "\r":
          throw Kt(Z());
        case "\u2028":
        case "\u2029":
          lFe(ct);
          break;
        case void 0:
          throw Kt(Z());
      }
      Ke += Z();
    },
    start() {
      switch (ct) {
        case "{":
        case "[":
          return Gt("punctuator", Z());
      }
      Je = "value";
    },
    beforePropertyName() {
      switch (ct) {
        case "$":
        case "_":
          Ke = Z(), Je = "identifierName";
          return;
        case "\\":
          Z(), Je = "identifierNameStartEscape";
          return;
        case "}":
          return Gt("punctuator", Z());
        case '"':
        case "'":
          Kc = Z() === '"', Je = "string";
          return;
      }
      if (Dr.isIdStartChar(ct)) {
        Ke += Z(), Je = "identifierName";
        return;
      }
      throw Kt(Z());
    },
    afterPropertyName() {
      if (ct === ":")
        return Gt("punctuator", Z());
      throw Kt(Z());
    },
    beforePropertyValue() {
      Je = "value";
    },
    afterPropertyValue() {
      switch (ct) {
        case ",":
        case "}":
          return Gt("punctuator", Z());
      }
      throw Kt(Z());
    },
    beforeArrayValue() {
      if (ct === "]")
        return Gt("punctuator", Z());
      Je = "value";
    },
    afterArrayValue() {
      switch (ct) {
        case ",":
        case "]":
          return Gt("punctuator", Z());
      }
      throw Kt(Z());
    },
    end() {
      throw Kt(Z());
    }
  };
  function Gt(e, t) {
    return {
      type: e,
      value: t,
      line: ya,
      column: yn
    };
  }
  i(Gt, "newToken");
  function fo(e) {
    for (let t of e) {
      if (Pi() !== t)
        throw Kt(Z());
      Z();
    }
  }
  i(fo, "literal");
  function iFe() {
    switch (Pi()) {
      case "b":
        return Z(), "\b";
      case "f":
        return Z(), "\f";
      case "n":
        return Z(), `
`;
      case "r":
        return Z(), "\r";
      case "t":
        return Z(), "	";
      case "v":
        return Z(), "\v";
      case "0":
        if (Z(), Dr.isDigit(Pi()))
          throw Kt(Z());
        return "\0";
      case "x":
        return Z(), aFe();
      case "u":
        return Z(), fT();
      case `
`:
      case "\u2028":
      case "\u2029":
        return Z(), "";
      case "\r":
        return Z(), Pi() === `
` && Z(), "";
      case "1":
      case "2":
      case "3":
      case "4":
      case "5":
      case "6":
      case "7":
      case "8":
      case "9":
        throw Kt(Z());
      case void 0:
        throw Kt(Z());
    }
    return Z();
  }
  i(iFe, "escape");
  function aFe() {
    let e = "", t = Pi();
    if (!Dr.isHexDigit(t) || (e += Z(), t = Pi(), !Dr.isHexDigit(t)))
      throw Kt(Z());
    return e += Z(), String.fromCodePoint(parseInt(e, 16));
  }
  i(aFe, "hexEscape");
  function fT() {
    let e = "", t = 4;
    for (; t-- > 0; ) {
      let r = Pi();
      if (!Dr.isHexDigit(r))
        throw Kt(Z());
      e += Z();
    }
    return String.fromCodePoint(parseInt(e, 16));
  }
  i(fT, "unicodeEscape");
  var oFe = {
    start() {
      if (Ir.type === "eof")
        throw po();
      lT();
    },
    beforePropertyName() {
      switch (Ir.type) {
        case "identifier":
        case "string":
          pT = Ir.value, ps = "afterPropertyName";
          return;
        case "punctuator":
          kh();
          return;
        case "eof":
          throw po();
      }
    },
    afterPropertyName() {
      if (Ir.type === "eof")
        throw po();
      ps = "beforePropertyValue";
    },
    beforePropertyValue() {
      if (Ir.type === "eof")
        throw po();
      lT();
    },
    beforeArrayValue() {
      if (Ir.type === "eof")
        throw po();
      if (Ir.type === "punctuator" && Ir.value === "]") {
        kh();
        return;
      }
      lT();
    },
    afterPropertyValue() {
      if (Ir.type === "eof")
        throw po();
      switch (Ir.value) {
        case ",":
          ps = "beforePropertyName";
          return;
        case "}":
          kh();
      }
    },
    afterArrayValue() {
      if (Ir.type === "eof")
        throw po();
      switch (Ir.value) {
        case ",":
          ps = "beforeArrayValue";
          return;
        case "]":
          kh();
      }
    },
    end() {
    }
  };
  function lT() {
    let e;
    switch (Ir.type) {
      case "punctuator":
        switch (Ir.value) {
          case "{":
            e = {};
            break;
          case "[":
            e = [];
            break;
        }
        break;
      case "null":
      case "boolean":
      case "numeric":
      case "string":
        e = Ir.value;
        break;
    }
    if (Yc === void 0)
      Yc = e;
    else {
      let t = xi[xi.length - 1];
      Array.isArray(t) ? t.push(e) : Object.defineProperty(t, pT, {
        value: e,
        writable: !0,
        enumerable: !0,
        configurable: !0
      });
    }
    if (e !== null && typeof e == "object")
      xi.push(e), Array.isArray(e) ? ps = "beforeArrayValue" : ps = "beforePropertyName";
    else {
      let t = xi[xi.length - 1];
      t == null ? ps = "end" : Array.isArray(t) ? ps = "afterArrayValue" : ps = "afterPropertyValue";
    }
  }
  i(lT, "push");
  function kh() {
    xi.pop();
    let e = xi[xi.length - 1];
    e == null ? ps = "end" : Array.isArray(e) ? ps = "afterArrayValue" : ps = "afterPropertyValue";
  }
  i(kh, "pop");
  function Kt(e) {
    return Lh(e === void 0 ? `JSON5: invalid end of input at ${ya}:${yn}` : `JSON5: invalid character '${f4(e)}' at ${ya}:${yn}`);
  }
  i(Kt, "invalidChar");
  function po() {
    return Lh(`JSON5: invalid end of input at ${ya}:${yn}`);
  }
  i(po, "invalidEOF");
  function u4() {
    return yn -= 5, Lh(`JSON5: invalid identifier character at ${ya}:${yn}`);
  }
  i(u4, "invalidIdentifier");
  function lFe(e) {
    console.warn(`JSON5: '${f4(e)}' in strings is not valid ECMAScript; consider escaping`);
  }
  i(lFe, "separatorChar");
  function f4(e) {
    let t = {
      "'": "\\'",
      '"': '\\"',
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\v": "\\v",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    if (t[e])
      return t[e];
    if (e < " ") {
      let r = e.charCodeAt(0).toString(16);
      return "\\x" + ("00" + r).substring(r.length);
    }
    return e;
  }
  i(f4, "formatChar");
  function Lh(e) {
    let t = new SyntaxError(e);
    return t.lineNumber = ya, t.columnNumber = yn, t;
  }
  i(Lh, "syntaxError");
});

// ../node_modules/json5/lib/stringify.js
var m4 = y((Pnt, h4) => {
  var dT = oT();
  h4.exports = /* @__PURE__ */ i(function(t, r, s) {
    let n = [], a = "", o, l, u = "", c;
    if (r != null && typeof r == "object" && !Array.isArray(r) && (s = r.space, c = r.quote, r = r.replacer), typeof r == "function")
      l = r;
    else if (Array.isArray(r)) {
      o = [];
      for (let h of r) {
        let g;
        typeof h == "string" ? g = h : (typeof h == "number" || h instanceof String || h instanceof Number) && (g = String(h)), g !== void 0 &&
        o.indexOf(g) < 0 && o.push(g);
      }
    }
    return s instanceof Number ? s = Number(s) : s instanceof String && (s = String(s)), typeof s == "number" ? s > 0 && (s = Math.min(10, Math.
    floor(s)), u = "          ".substr(0, s)) : typeof s == "string" && (u = s.substr(0, 10)), f("", { "": t });
    function f(h, g) {
      let E = g[h];
      switch (E != null && (typeof E.toJSON5 == "function" ? E = E.toJSON5(h) : typeof E.toJSON == "function" && (E = E.toJSON(h))), l && (E =
      l.call(g, h, E)), E instanceof Number ? E = Number(E) : E instanceof String ? E = String(E) : E instanceof Boolean && (E = E.valueOf()),
      E) {
        case null:
          return "null";
        case !0:
          return "true";
        case !1:
          return "false";
      }
      if (typeof E == "string")
        return p(E, !1);
      if (typeof E == "number")
        return String(E);
      if (typeof E == "object")
        return Array.isArray(E) ? b(E) : d(E);
    }
    i(f, "serializeProperty");
    function p(h) {
      let g = {
        "'": 0.1,
        '"': 0.2
      }, E = {
        "'": "\\'",
        '"': '\\"',
        "\\": "\\\\",
        "\b": "\\b",
        "\f": "\\f",
        "\n": "\\n",
        "\r": "\\r",
        "	": "\\t",
        "\v": "\\v",
        "\0": "\\0",
        "\u2028": "\\u2028",
        "\u2029": "\\u2029"
      }, D = "";
      for (let N = 0; N < h.length; N++) {
        let I = h[N];
        switch (I) {
          case "'":
          case '"':
            g[I]++, D += I;
            continue;
          case "\0":
            if (dT.isDigit(h[N + 1])) {
              D += "\\x00";
              continue;
            }
        }
        if (E[I]) {
          D += E[I];
          continue;
        }
        if (I < " ") {
          let M = I.charCodeAt(0).toString(16);
          D += "\\x" + ("00" + M).substring(M.length);
          continue;
        }
        D += I;
      }
      let C = c || Object.keys(g).reduce((N, I) => g[N] < g[I] ? N : I);
      return D = D.replace(new RegExp(C, "g"), E[C]), C + D + C;
    }
    i(p, "quoteString");
    function d(h) {
      if (n.indexOf(h) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      n.push(h);
      let g = a;
      a = a + u;
      let E = o || Object.keys(h), D = [];
      for (let N of E) {
        let I = f(N, h);
        if (I !== void 0) {
          let M = m(N) + ":";
          u !== "" && (M += " "), M += I, D.push(M);
        }
      }
      let C;
      if (D.length === 0)
        C = "{}";
      else {
        let N;
        if (u === "")
          N = D.join(","), C = "{" + N + "}";
        else {
          let I = `,
` + a;
          N = D.join(I), C = `{
` + a + N + `,
` + g + "}";
        }
      }
      return n.pop(), a = g, C;
    }
    i(d, "serializeObject");
    function m(h) {
      if (h.length === 0)
        return p(h, !0);
      let g = String.fromCodePoint(h.codePointAt(0));
      if (!dT.isIdStartChar(g))
        return p(h, !0);
      for (let E = g.length; E < h.length; E++)
        if (!dT.isIdContinueChar(String.fromCodePoint(h.codePointAt(E))))
          return p(h, !0);
      return h;
    }
    i(m, "serializeKey");
    function b(h) {
      if (n.indexOf(h) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      n.push(h);
      let g = a;
      a = a + u;
      let E = [];
      for (let C = 0; C < h.length; C++) {
        let N = f(String(C), h);
        E.push(N !== void 0 ? N : "null");
      }
      let D;
      if (E.length === 0)
        D = "[]";
      else if (u === "")
        D = "[" + E.join(",") + "]";
      else {
        let C = `,
` + a, N = E.join(C);
        D = `[
` + a + N + `,
` + g + "]";
      }
      return n.pop(), a = g, D;
    }
    i(b, "serializeArray");
  }, "stringify");
});

// ../node_modules/json5/lib/index.js
var g4 = y((Cnt, y4) => {
  var uFe = d4(), cFe = m4(), fFe = {
    parse: uFe,
    stringify: cFe
  };
  y4.exports = fFe;
});

// ../node_modules/@babel/core/lib/config/helpers/config-api.js
var hT = y((Xc) => {
  "use strict";
  Object.defineProperty(Xc, "__esModule", {
    value: !0
  });
  Xc.makeConfigAPI = v4;
  Xc.makePluginAPI = pFe;
  Xc.makePresetAPI = S4;
  function E4() {
    let e = bh();
    return E4 = /* @__PURE__ */ i(function() {
      return e;
    }, "_semver"), e;
  }
  i(E4, "_semver");
  var Bh = mr(), b4 = uo();
  function v4(e) {
    let t = /* @__PURE__ */ i((s) => e.using((n) => typeof s > "u" ? n.envName : typeof s == "function" ? (0, b4.assertSimpleType)(s(n.envName)) :
    (Array.isArray(s) ? s : [s]).some((a) => {
      if (typeof a != "string")
        throw new Error("Unexpected non-string value");
      return a === n.envName;
    })), "env"), r = /* @__PURE__ */ i((s) => e.using((n) => (0, b4.assertSimpleType)(s(n.caller))), "caller");
    return {
      version: Bh.version,
      cache: e.simple(),
      env: t,
      async: /* @__PURE__ */ i(() => !1, "async"),
      caller: r,
      assertVersion: dFe
    };
  }
  i(v4, "makeConfigAPI");
  function S4(e, t) {
    let r = /* @__PURE__ */ i(() => JSON.parse(e.using((n) => JSON.stringify(n.targets))), "targets"), s = /* @__PURE__ */ i((n) => {
      t.push(n);
    }, "addExternalDependency");
    return Object.assign({}, v4(e), {
      targets: r,
      addExternalDependency: s
    });
  }
  i(S4, "makePresetAPI");
  function pFe(e, t) {
    let r = /* @__PURE__ */ i((s) => e.using((n) => n.assumptions[s]), "assumption");
    return Object.assign({}, S4(e, t), {
      assumption: r
    });
  }
  i(pFe, "makePluginAPI");
  function dFe(e) {
    if (typeof e == "number") {
      if (!Number.isInteger(e))
        throw new Error("Expected string or integer value.");
      e = `^${e}.0.0-0`;
    }
    if (typeof e != "string")
      throw new Error("Expected string or integer value.");
    if (e === "*" || E4().satisfies(Bh.version, e)) return;
    let t = Error.stackTraceLimit;
    typeof t == "number" && t < 25 && (Error.stackTraceLimit = 25);
    let r = new Error(`Requires Babel "${e}", but was loaded with "${Bh.version}". If you are sure you have a compatible version of @babel/c\
ore, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the f\
irst entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`);
    throw typeof t == "number" && (Error.stackTraceLimit = t), Object.assign(r, {
      code: "BABEL_VERSION_UNSUPPORTED",
      version: Bh.version,
      range: e
    });
  }
  i(dFe, "assertVersion");
});

// ../node_modules/@babel/core/lib/config/helpers/deep-array.js
var jh = y((Mh) => {
  "use strict";
  Object.defineProperty(Mh, "__esModule", {
    value: !0
  });
  Mh.finalize = hFe;
  Mh.flattenToSet = mFe;
  function hFe(e) {
    return Object.freeze(e);
  }
  i(hFe, "finalize");
  function mFe(e) {
    let t = /* @__PURE__ */ new Set(), r = [e];
    for (; r.length > 0; )
      for (let s of r.pop())
        Array.isArray(s) ? r.push(s) : t.add(s);
    return t;
  }
  i(mFe, "flattenToSet");
});

// ../node_modules/@babel/core/lib/config/plugin.js
var $h = y((qh) => {
  "use strict";
  Object.defineProperty(qh, "__esModule", {
    value: !0
  });
  qh.default = void 0;
  var yFe = jh(), mT = class {
    static {
      i(this, "Plugin");
    }
    constructor(t, r, s, n = (0, yFe.finalize)([])) {
      this.key = void 0, this.manipulateOptions = void 0, this.post = void 0, this.pre = void 0, this.visitor = void 0, this.parserOverride =
      void 0, this.generatorOverride = void 0, this.options = void 0, this.externalDependencies = void 0, this.key = t.name || s, this.manipulateOptions =
      t.manipulateOptions, this.post = t.post, this.pre = t.pre, this.visitor = t.visitor || {}, this.parserOverride = t.parserOverride, this.
      generatorOverride = t.generatorOverride, this.options = r, this.externalDependencies = n;
    }
  };
  qh.default = mT;
});

// ../node_modules/@babel/core/lib/gensync-utils/functional.js
var x4 = y((yT) => {
  "use strict";
  Object.defineProperty(yT, "__esModule", {
    value: !0
  });
  yT.once = gFe;
  var T4 = xl();
  function gFe(e) {
    let t, r, s = !1;
    return function* () {
      if (!t) {
        if (r)
          return s = !0, yield* (0, T4.waitFor)(r);
        if (yield* (0, T4.isAsync)()) {
          let n, a;
          r = new Promise((o, l) => {
            n = o, a = l;
          });
          try {
            t = {
              ok: !0,
              value: yield* e()
            }, r = null, s && n(t.value);
          } catch (o) {
            t = {
              ok: !1,
              value: o
            }, r = null, s && a(o);
          }
        } else
          try {
            t = {
              ok: !0,
              value: yield* e()
            };
          } catch (n) {
            t = {
              ok: !1,
              value: n
            };
          }
      }
      if (t.ok) return t.value;
      throw t.value;
    };
  }
  i(gFe, "once");
});

// ../node_modules/node-releases/data/processed/envs.json
var P4 = y((Fnt, bFe) => {
  bFe.exports = [{ name: "nodejs", version: "0.2.0", date: "2011-08-26", lts: !1, security: !1, v8: "2.3.8.0" }, { name: "nodejs", version: "\
0.3.0", date: "2011-08-26", lts: !1, security: !1, v8: "2.5.1.0" }, { name: "nodejs", version: "0.4.0", date: "2011-08-26", lts: !1, security: !1,
  v8: "3.1.2.0" }, { name: "nodejs", version: "0.5.0", date: "2011-08-26", lts: !1, security: !1, v8: "3.1.8.25" }, { name: "nodejs", version: "\
0.6.0", date: "2011-11-04", lts: !1, security: !1, v8: "3.6.6.6" }, { name: "nodejs", version: "0.7.0", date: "2012-01-17", lts: !1, security: !1,
  v8: "3.8.6.0" }, { name: "nodejs", version: "0.8.0", date: "2012-06-22", lts: !1, security: !1, v8: "3.11.10.10" }, { name: "nodejs", version: "\
0.9.0", date: "2012-07-20", lts: !1, security: !1, v8: "3.11.10.15" }, { name: "nodejs", version: "0.10.0", date: "2013-03-11", lts: !1, security: !1,
  v8: "3.14.5.8" }, { name: "nodejs", version: "0.11.0", date: "2013-03-28", lts: !1, security: !1, v8: "3.17.13.0" }, { name: "nodejs", version: "\
0.12.0", date: "2015-02-06", lts: !1, security: !1, v8: "3.28.73.0" }, { name: "nodejs", version: "4.0.0", date: "2015-09-08", lts: !1, security: !1,
  v8: "4.5.103.30" }, { name: "nodejs", version: "4.1.0", date: "2015-09-17", lts: !1, security: !1, v8: "4.5.103.33" }, { name: "nodejs", version: "\
4.2.0", date: "2015-10-12", lts: "Argon", security: !1, v8: "4.5.103.35" }, { name: "nodejs", version: "4.3.0", date: "2016-02-09", lts: "Ar\
gon", security: !1, v8: "4.5.103.35" }, { name: "nodejs", version: "4.4.0", date: "2016-03-08", lts: "Argon", security: !1, v8: "4.5.103.35" },
  { name: "nodejs", version: "4.5.0", date: "2016-08-16", lts: "Argon", security: !1, v8: "4.5.103.37" }, { name: "nodejs", version: "4.6.0",
  date: "2016-09-27", lts: "Argon", security: !0, v8: "4.5.103.37" }, { name: "nodejs", version: "4.7.0", date: "2016-12-06", lts: "Argon", security: !1,
  v8: "4.5.103.43" }, { name: "nodejs", version: "4.8.0", date: "2017-02-21", lts: "Argon", security: !1, v8: "4.5.103.45" }, { name: "nodej\
s", version: "4.9.0", date: "2018-03-28", lts: "Argon", security: !0, v8: "4.5.103.53" }, { name: "nodejs", version: "5.0.0", date: "2015-10\
-29", lts: !1, security: !1, v8: "4.6.85.28" }, { name: "nodejs", version: "5.1.0", date: "2015-11-17", lts: !1, security: !1, v8: "4.6.85.3\
1" }, { name: "nodejs", version: "5.2.0", date: "2015-12-09", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "5.3.0", date: "\
2015-12-15", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "5.4.0", date: "2016-01-06", lts: !1, security: !1, v8: "4\
.6.85.31" }, { name: "nodejs", version: "5.5.0", date: "2016-01-21", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "5\
.6.0", date: "2016-02-09", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "5.7.0", date: "2016-02-23", lts: !1, security: !1,
  v8: "4.6.85.31" }, { name: "nodejs", version: "5.8.0", date: "2016-03-09", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "\
5.9.0", date: "2016-03-16", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "5.10.0", date: "2016-04-01", lts: !1, security: !1,
  v8: "4.6.85.31" }, { name: "nodejs", version: "5.11.0", date: "2016-04-21", lts: !1, security: !1, v8: "4.6.85.31" }, { name: "nodejs", version: "\
5.12.0", date: "2016-06-23", lts: !1, security: !1, v8: "4.6.85.32" }, { name: "nodejs", version: "6.0.0", date: "2016-04-26", lts: !1, security: !1,
  v8: "5.0.71.35" }, { name: "nodejs", version: "6.1.0", date: "2016-05-05", lts: !1, security: !1, v8: "5.0.71.35" }, { name: "nodejs", version: "\
6.2.0", date: "2016-05-17", lts: !1, security: !1, v8: "5.0.71.47" }, { name: "nodejs", version: "6.3.0", date: "2016-07-06", lts: !1, security: !1,
  v8: "5.0.71.52" }, { name: "nodejs", version: "6.4.0", date: "2016-08-12", lts: !1, security: !1, v8: "5.0.71.60" }, { name: "nodejs", version: "\
6.5.0", date: "2016-08-26", lts: !1, security: !1, v8: "5.1.281.81" }, { name: "nodejs", version: "6.6.0", date: "2016-09-14", lts: !1, security: !1,
  v8: "5.1.281.83" }, { name: "nodejs", version: "6.7.0", date: "2016-09-27", lts: !1, security: !0, v8: "5.1.281.83" }, { name: "nodejs", version: "\
6.8.0", date: "2016-10-12", lts: !1, security: !1, v8: "5.1.281.84" }, { name: "nodejs", version: "6.9.0", date: "2016-10-18", lts: "Boron",
  security: !1, v8: "5.1.281.84" }, { name: "nodejs", version: "6.10.0", date: "2017-02-21", lts: "Boron", security: !1, v8: "5.1.281.93" },
  { name: "nodejs", version: "6.11.0", date: "2017-06-06", lts: "Boron", security: !1, v8: "5.1.281.102" }, { name: "nodejs", version: "6.12\
.0", date: "2017-11-06", lts: "Boron", security: !1, v8: "5.1.281.108" }, { name: "nodejs", version: "6.13.0", date: "2018-02-10", lts: "Bor\
on", security: !1, v8: "5.1.281.111" }, { name: "nodejs", version: "6.14.0", date: "2018-03-28", lts: "Boron", security: !0, v8: "5.1.281.11\
1" }, { name: "nodejs", version: "6.15.0", date: "2018-11-27", lts: "Boron", security: !0, v8: "5.1.281.111" }, { name: "nodejs", version: "\
6.16.0", date: "2018-12-26", lts: "Boron", security: !1, v8: "5.1.281.111" }, { name: "nodejs", version: "6.17.0", date: "2019-02-28", lts: "\
Boron", security: !0, v8: "5.1.281.111" }, { name: "nodejs", version: "7.0.0", date: "2016-10-25", lts: !1, security: !1, v8: "5.4.500.36" },
  { name: "nodejs", version: "7.1.0", date: "2016-11-08", lts: !1, security: !1, v8: "5.4.500.36" }, { name: "nodejs", version: "7.2.0", date: "\
2016-11-22", lts: !1, security: !1, v8: "5.4.500.43" }, { name: "nodejs", version: "7.3.0", date: "2016-12-20", lts: !1, security: !1, v8: "\
5.4.500.45" }, { name: "nodejs", version: "7.4.0", date: "2017-01-04", lts: !1, security: !1, v8: "5.4.500.45" }, { name: "nodejs", version: "\
7.5.0", date: "2017-01-31", lts: !1, security: !1, v8: "5.4.500.48" }, { name: "nodejs", version: "7.6.0", date: "2017-02-21", lts: !1, security: !1,
  v8: "5.5.372.40" }, { name: "nodejs", version: "7.7.0", date: "2017-02-28", lts: !1, security: !1, v8: "5.5.372.41" }, { name: "nodejs", version: "\
7.8.0", date: "2017-03-29", lts: !1, security: !1, v8: "5.5.372.43" }, { name: "nodejs", version: "7.9.0", date: "2017-04-11", lts: !1, security: !1,
  v8: "5.5.372.43" }, { name: "nodejs", version: "7.10.0", date: "2017-05-02", lts: !1, security: !1, v8: "5.5.372.43" }, { name: "nodejs", version: "\
8.0.0", date: "2017-05-30", lts: !1, security: !1, v8: "5.8.283.41" }, { name: "nodejs", version: "8.1.0", date: "2017-06-08", lts: !1, security: !1,
  v8: "5.8.283.41" }, { name: "nodejs", version: "8.2.0", date: "2017-07-19", lts: !1, security: !1, v8: "5.8.283.41" }, { name: "nodejs", version: "\
8.3.0", date: "2017-08-08", lts: !1, security: !1, v8: "6.0.286.52" }, { name: "nodejs", version: "8.4.0", date: "2017-08-15", lts: !1, security: !1,
  v8: "6.0.286.52" }, { name: "nodejs", version: "8.5.0", date: "2017-09-12", lts: !1, security: !1, v8: "6.0.287.53" }, { name: "nodejs", version: "\
8.6.0", date: "2017-09-26", lts: !1, security: !1, v8: "6.0.287.53" }, { name: "nodejs", version: "8.7.0", date: "2017-10-11", lts: !1, security: !1,
  v8: "6.1.534.42" }, { name: "nodejs", version: "8.8.0", date: "2017-10-24", lts: !1, security: !1, v8: "6.1.534.42" }, { name: "nodejs", version: "\
8.9.0", date: "2017-10-31", lts: "Carbon", security: !1, v8: "6.1.534.46" }, { name: "nodejs", version: "8.10.0", date: "2018-03-06", lts: "\
Carbon", security: !1, v8: "6.2.414.50" }, { name: "nodejs", version: "8.11.0", date: "2018-03-28", lts: "Carbon", security: !0, v8: "6.2.41\
4.50" }, { name: "nodejs", version: "8.12.0", date: "2018-09-10", lts: "Carbon", security: !1, v8: "6.2.414.66" }, { name: "nodejs", version: "\
8.13.0", date: "2018-11-20", lts: "Carbon", security: !1, v8: "6.2.414.72" }, { name: "nodejs", version: "8.14.0", date: "2018-11-27", lts: "\
Carbon", security: !0, v8: "6.2.414.72" }, { name: "nodejs", version: "8.15.0", date: "2018-12-26", lts: "Carbon", security: !1, v8: "6.2.41\
4.75" }, { name: "nodejs", version: "8.16.0", date: "2019-04-16", lts: "Carbon", security: !1, v8: "6.2.414.77" }, { name: "nodejs", version: "\
8.17.0", date: "2019-12-17", lts: "Carbon", security: !0, v8: "6.2.414.78" }, { name: "nodejs", version: "9.0.0", date: "2017-10-31", lts: !1,
  security: !1, v8: "6.2.414.32" }, { name: "nodejs", version: "9.1.0", date: "2017-11-07", lts: !1, security: !1, v8: "6.2.414.32" }, { name: "\
nodejs", version: "9.2.0", date: "2017-11-14", lts: !1, security: !1, v8: "6.2.414.44" }, { name: "nodejs", version: "9.3.0", date: "2017-12\
-12", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "9.4.0", date: "2018-01-10", lts: !1, security: !1, v8: "6.2.414\
.46" }, { name: "nodejs", version: "9.5.0", date: "2018-01-31", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "9.6.0",
  date: "2018-02-21", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "9.7.0", date: "2018-03-01", lts: !1, security: !1,
  v8: "6.2.414.46" }, { name: "nodejs", version: "9.8.0", date: "2018-03-07", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "\
9.9.0", date: "2018-03-21", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "9.10.0", date: "2018-03-28", lts: !1, security: !0,
  v8: "6.2.414.46" }, { name: "nodejs", version: "9.11.0", date: "2018-04-04", lts: !1, security: !1, v8: "6.2.414.46" }, { name: "nodejs", version: "\
10.0.0", date: "2018-04-24", lts: !1, security: !1, v8: "6.6.346.24" }, { name: "nodejs", version: "10.1.0", date: "2018-05-08", lts: !1, security: !1,
  v8: "6.6.346.27" }, { name: "nodejs", version: "10.2.0", date: "2018-05-23", lts: !1, security: !1, v8: "6.6.346.32" }, { name: "nodejs", version: "\
10.3.0", date: "2018-05-29", lts: !1, security: !1, v8: "6.6.346.32" }, { name: "nodejs", version: "10.4.0", date: "2018-06-06", lts: !1, security: !1,
  v8: "6.7.288.43" }, { name: "nodejs", version: "10.5.0", date: "2018-06-20", lts: !1, security: !1, v8: "6.7.288.46" }, { name: "nodejs", version: "\
10.6.0", date: "2018-07-04", lts: !1, security: !1, v8: "6.7.288.46" }, { name: "nodejs", version: "10.7.0", date: "2018-07-18", lts: !1, security: !1,
  v8: "6.7.288.49" }, { name: "nodejs", version: "10.8.0", date: "2018-08-01", lts: !1, security: !1, v8: "6.7.288.49" }, { name: "nodejs", version: "\
10.9.0", date: "2018-08-15", lts: !1, security: !1, v8: "6.8.275.24" }, { name: "nodejs", version: "10.10.0", date: "2018-09-06", lts: !1, security: !1,
  v8: "6.8.275.30" }, { name: "nodejs", version: "10.11.0", date: "2018-09-19", lts: !1, security: !1, v8: "6.8.275.32" }, { name: "nodejs",
  version: "10.12.0", date: "2018-10-10", lts: !1, security: !1, v8: "6.8.275.32" }, { name: "nodejs", version: "10.13.0", date: "2018-10-30",
  lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "nodejs", version: "10.14.0", date: "2018-11-27", lts: "Dubnium", security: !0, v8: "\
6.8.275.32" }, { name: "nodejs", version: "10.15.0", date: "2018-12-26", lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "nodejs",
  version: "10.16.0", date: "2019-05-28", lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "nodejs", version: "10.17.0", date: "201\
9-10-22", lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "nodejs", version: "10.18.0", date: "2019-12-17", lts: "Dubnium", security: !0,
  v8: "6.8.275.32" }, { name: "nodejs", version: "10.19.0", date: "2020-02-05", lts: "Dubnium", security: !0, v8: "6.8.275.32" }, { name: "n\
odejs", version: "10.20.0", date: "2020-03-26", lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "nodejs", version: "10.21.0", date: "\
2020-06-02", lts: "Dubnium", security: !0, v8: "6.8.275.32" }, { name: "nodejs", version: "10.22.0", date: "2020-07-21", lts: "Dubnium", security: !1,
  v8: "6.8.275.32" }, { name: "nodejs", version: "10.23.0", date: "2020-10-27", lts: "Dubnium", security: !1, v8: "6.8.275.32" }, { name: "n\
odejs", version: "10.24.0", date: "2021-02-23", lts: "Dubnium", security: !0, v8: "6.8.275.32" }, { name: "nodejs", version: "11.0.0", date: "\
2018-10-23", lts: !1, security: !1, v8: "7.0.276.28" }, { name: "nodejs", version: "11.1.0", date: "2018-10-30", lts: !1, security: !1, v8: "\
7.0.276.32" }, { name: "nodejs", version: "11.2.0", date: "2018-11-15", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "\
11.3.0", date: "2018-11-27", lts: !1, security: !0, v8: "7.0.276.38" }, { name: "nodejs", version: "11.4.0", date: "2018-12-07", lts: !1, security: !1,
  v8: "7.0.276.38" }, { name: "nodejs", version: "11.5.0", date: "2018-12-18", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "\
11.6.0", date: "2018-12-26", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "11.7.0", date: "2019-01-17", lts: !1, security: !1,
  v8: "7.0.276.38" }, { name: "nodejs", version: "11.8.0", date: "2019-01-24", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "\
11.9.0", date: "2019-01-30", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "11.10.0", date: "2019-02-14", lts: !1, security: !1,
  v8: "7.0.276.38" }, { name: "nodejs", version: "11.11.0", date: "2019-03-05", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs",
  version: "11.12.0", date: "2019-03-14", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "11.13.0", date: "2019-03-28",
  lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "11.14.0", date: "2019-04-10", lts: !1, security: !1, v8: "7.0.276.3\
8" }, { name: "nodejs", version: "11.15.0", date: "2019-04-30", lts: !1, security: !1, v8: "7.0.276.38" }, { name: "nodejs", version: "12.0.\
0", date: "2019-04-23", lts: !1, security: !1, v8: "7.4.288.21" }, { name: "nodejs", version: "12.1.0", date: "2019-04-29", lts: !1, security: !1,
  v8: "7.4.288.21" }, { name: "nodejs", version: "12.2.0", date: "2019-05-07", lts: !1, security: !1, v8: "7.4.288.21" }, { name: "nodejs", version: "\
12.3.0", date: "2019-05-21", lts: !1, security: !1, v8: "7.4.288.27" }, { name: "nodejs", version: "12.4.0", date: "2019-06-04", lts: !1, security: !1,
  v8: "7.4.288.27" }, { name: "nodejs", version: "12.5.0", date: "2019-06-26", lts: !1, security: !1, v8: "7.5.288.22" }, { name: "nodejs", version: "\
12.6.0", date: "2019-07-03", lts: !1, security: !1, v8: "7.5.288.22" }, { name: "nodejs", version: "12.7.0", date: "2019-07-23", lts: !1, security: !1,
  v8: "7.5.288.22" }, { name: "nodejs", version: "12.8.0", date: "2019-08-06", lts: !1, security: !1, v8: "7.5.288.22" }, { name: "nodejs", version: "\
12.9.0", date: "2019-08-20", lts: !1, security: !1, v8: "7.6.303.29" }, { name: "nodejs", version: "12.10.0", date: "2019-09-04", lts: !1, security: !1,
  v8: "7.6.303.29" }, { name: "nodejs", version: "12.11.0", date: "2019-09-25", lts: !1, security: !1, v8: "7.7.299.11" }, { name: "nodejs",
  version: "12.12.0", date: "2019-10-11", lts: !1, security: !1, v8: "7.7.299.13" }, { name: "nodejs", version: "12.13.0", date: "2019-10-21",
  lts: "Erbium", security: !1, v8: "7.7.299.13" }, { name: "nodejs", version: "12.14.0", date: "2019-12-17", lts: "Erbium", security: !0, v8: "\
7.7.299.13" }, { name: "nodejs", version: "12.15.0", date: "2020-02-05", lts: "Erbium", security: !0, v8: "7.7.299.13" }, { name: "nodejs", version: "\
12.16.0", date: "2020-02-11", lts: "Erbium", security: !1, v8: "7.8.279.23" }, { name: "nodejs", version: "12.17.0", date: "2020-05-26", lts: "\
Erbium", security: !1, v8: "7.8.279.23" }, { name: "nodejs", version: "12.18.0", date: "2020-06-02", lts: "Erbium", security: !0, v8: "7.8.2\
79.23" }, { name: "nodejs", version: "12.19.0", date: "2020-10-06", lts: "Erbium", security: !1, v8: "7.8.279.23" }, { name: "nodejs", version: "\
12.20.0", date: "2020-11-24", lts: "Erbium", security: !1, v8: "7.8.279.23" }, { name: "nodejs", version: "12.21.0", date: "2021-02-23", lts: "\
Erbium", security: !0, v8: "7.8.279.23" }, { name: "nodejs", version: "12.22.0", date: "2021-03-30", lts: "Erbium", security: !1, v8: "7.8.2\
79.23" }, { name: "nodejs", version: "13.0.0", date: "2019-10-22", lts: !1, security: !1, v8: "7.8.279.17" }, { name: "nodejs", version: "13\
.1.0", date: "2019-11-05", lts: !1, security: !1, v8: "7.8.279.17" }, { name: "nodejs", version: "13.2.0", date: "2019-11-21", lts: !1, security: !1,
  v8: "7.9.317.23" }, { name: "nodejs", version: "13.3.0", date: "2019-12-03", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "\
13.4.0", date: "2019-12-17", lts: !1, security: !0, v8: "7.9.317.25" }, { name: "nodejs", version: "13.5.0", date: "2019-12-18", lts: !1, security: !1,
  v8: "7.9.317.25" }, { name: "nodejs", version: "13.6.0", date: "2020-01-07", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "\
13.7.0", date: "2020-01-21", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "13.8.0", date: "2020-02-05", lts: !1, security: !0,
  v8: "7.9.317.25" }, { name: "nodejs", version: "13.9.0", date: "2020-02-18", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "\
13.10.0", date: "2020-03-04", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "13.11.0", date: "2020-03-12", lts: !1, security: !1,
  v8: "7.9.317.25" }, { name: "nodejs", version: "13.12.0", date: "2020-03-26", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs",
  version: "13.13.0", date: "2020-04-14", lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "13.14.0", date: "2020-04-29",
  lts: !1, security: !1, v8: "7.9.317.25" }, { name: "nodejs", version: "14.0.0", date: "2020-04-21", lts: !1, security: !1, v8: "8.1.307.30" },
  { name: "nodejs", version: "14.1.0", date: "2020-04-29", lts: !1, security: !1, v8: "8.1.307.31" }, { name: "nodejs", version: "14.2.0", date: "\
2020-05-05", lts: !1, security: !1, v8: "8.1.307.31" }, { name: "nodejs", version: "14.3.0", date: "2020-05-19", lts: !1, security: !1, v8: "\
8.1.307.31" }, { name: "nodejs", version: "14.4.0", date: "2020-06-02", lts: !1, security: !0, v8: "8.1.307.31" }, { name: "nodejs", version: "\
14.5.0", date: "2020-06-30", lts: !1, security: !1, v8: "8.3.110.9" }, { name: "nodejs", version: "14.6.0", date: "2020-07-20", lts: !1, security: !1,
  v8: "8.4.371.19" }, { name: "nodejs", version: "14.7.0", date: "2020-07-29", lts: !1, security: !1, v8: "8.4.371.19" }, { name: "nodejs", version: "\
14.8.0", date: "2020-08-11", lts: !1, security: !1, v8: "8.4.371.19" }, { name: "nodejs", version: "14.9.0", date: "2020-08-27", lts: !1, security: !1,
  v8: "8.4.371.19" }, { name: "nodejs", version: "14.10.0", date: "2020-09-08", lts: !1, security: !1, v8: "8.4.371.19" }, { name: "nodejs",
  version: "14.11.0", date: "2020-09-15", lts: !1, security: !0, v8: "8.4.371.19" }, { name: "nodejs", version: "14.12.0", date: "2020-09-22",
  lts: !1, security: !1, v8: "8.4.371.19" }, { name: "nodejs", version: "14.13.0", date: "2020-09-29", lts: !1, security: !1, v8: "8.4.371.1\
9" }, { name: "nodejs", version: "14.14.0", date: "2020-10-15", lts: !1, security: !1, v8: "8.4.371.19" }, { name: "nodejs", version: "14.15\
.0", date: "2020-10-27", lts: "Fermium", security: !1, v8: "8.4.371.19" }, { name: "nodejs", version: "14.16.0", date: "2021-02-23", lts: "F\
ermium", security: !0, v8: "8.4.371.19" }, { name: "nodejs", version: "14.17.0", date: "2021-05-11", lts: "Fermium", security: !1, v8: "8.4.\
371.23" }, { name: "nodejs", version: "14.18.0", date: "2021-09-28", lts: "Fermium", security: !1, v8: "8.4.371.23" }, { name: "nodejs", version: "\
14.19.0", date: "2022-02-01", lts: "Fermium", security: !1, v8: "8.4.371.23" }, { name: "nodejs", version: "14.20.0", date: "2022-07-07", lts: "\
Fermium", security: !0, v8: "8.4.371.23" }, { name: "nodejs", version: "14.21.0", date: "2022-11-01", lts: "Fermium", security: !1, v8: "8.4\
.371.23" }, { name: "nodejs", version: "15.0.0", date: "2020-10-20", lts: !1, security: !1, v8: "8.6.395.16" }, { name: "nodejs", version: "\
15.1.0", date: "2020-11-04", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "15.2.0", date: "2020-11-10", lts: !1, security: !1,
  v8: "8.6.395.17" }, { name: "nodejs", version: "15.3.0", date: "2020-11-24", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "\
15.4.0", date: "2020-12-09", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "15.5.0", date: "2020-12-22", lts: !1, security: !1,
  v8: "8.6.395.17" }, { name: "nodejs", version: "15.6.0", date: "2021-01-14", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "\
15.7.0", date: "2021-01-25", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "15.8.0", date: "2021-02-02", lts: !1, security: !1,
  v8: "8.6.395.17" }, { name: "nodejs", version: "15.9.0", date: "2021-02-18", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "\
15.10.0", date: "2021-02-23", lts: !1, security: !0, v8: "8.6.395.17" }, { name: "nodejs", version: "15.11.0", date: "2021-03-03", lts: !1, security: !1,
  v8: "8.6.395.17" }, { name: "nodejs", version: "15.12.0", date: "2021-03-17", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs",
  version: "15.13.0", date: "2021-03-31", lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "15.14.0", date: "2021-04-06",
  lts: !1, security: !1, v8: "8.6.395.17" }, { name: "nodejs", version: "16.0.0", date: "2021-04-20", lts: !1, security: !1, v8: "9.0.257.17" },
  { name: "nodejs", version: "16.1.0", date: "2021-05-04", lts: !1, security: !1, v8: "9.0.257.24" }, { name: "nodejs", version: "16.2.0", date: "\
2021-05-19", lts: !1, security: !1, v8: "9.0.257.25" }, { name: "nodejs", version: "16.3.0", date: "2021-06-03", lts: !1, security: !1, v8: "\
9.0.257.25" }, { name: "nodejs", version: "16.4.0", date: "2021-06-23", lts: !1, security: !1, v8: "9.1.269.36" }, { name: "nodejs", version: "\
16.5.0", date: "2021-07-14", lts: !1, security: !1, v8: "9.1.269.38" }, { name: "nodejs", version: "16.6.0", date: "2021-07-29", lts: !1, security: !0,
  v8: "9.2.230.21" }, { name: "nodejs", version: "16.7.0", date: "2021-08-18", lts: !1, security: !1, v8: "9.2.230.21" }, { name: "nodejs", version: "\
16.8.0", date: "2021-08-25", lts: !1, security: !1, v8: "9.2.230.21" }, { name: "nodejs", version: "16.9.0", date: "2021-09-07", lts: !1, security: !1,
  v8: "9.3.345.16" }, { name: "nodejs", version: "16.10.0", date: "2021-09-22", lts: !1, security: !1, v8: "9.3.345.19" }, { name: "nodejs",
  version: "16.11.0", date: "2021-10-08", lts: !1, security: !1, v8: "9.4.146.19" }, { name: "nodejs", version: "16.12.0", date: "2021-10-20",
  lts: !1, security: !1, v8: "9.4.146.19" }, { name: "nodejs", version: "16.13.0", date: "2021-10-26", lts: "Gallium", security: !1, v8: "9.\
4.146.19" }, { name: "nodejs", version: "16.14.0", date: "2022-02-08", lts: "Gallium", security: !1, v8: "9.4.146.24" }, { name: "nodejs", version: "\
16.15.0", date: "2022-04-26", lts: "Gallium", security: !1, v8: "9.4.146.24" }, { name: "nodejs", version: "16.16.0", date: "2022-07-07", lts: "\
Gallium", security: !0, v8: "9.4.146.24" }, { name: "nodejs", version: "16.17.0", date: "2022-08-16", lts: "Gallium", security: !1, v8: "9.4\
.146.26" }, { name: "nodejs", version: "16.18.0", date: "2022-10-12", lts: "Gallium", security: !1, v8: "9.4.146.26" }, { name: "nodejs", version: "\
16.19.0", date: "2022-12-13", lts: "Gallium", security: !1, v8: "9.4.146.26" }, { name: "nodejs", version: "16.20.0", date: "2023-03-28", lts: "\
Gallium", security: !1, v8: "9.4.146.26" }, { name: "nodejs", version: "17.0.0", date: "2021-10-19", lts: !1, security: !1, v8: "9.5.172.21" },
  { name: "nodejs", version: "17.1.0", date: "2021-11-09", lts: !1, security: !1, v8: "9.5.172.25" }, { name: "nodejs", version: "17.2.0", date: "\
2021-11-30", lts: !1, security: !1, v8: "9.6.180.14" }, { name: "nodejs", version: "17.3.0", date: "2021-12-17", lts: !1, security: !1, v8: "\
9.6.180.15" }, { name: "nodejs", version: "17.4.0", date: "2022-01-18", lts: !1, security: !1, v8: "9.6.180.15" }, { name: "nodejs", version: "\
17.5.0", date: "2022-02-10", lts: !1, security: !1, v8: "9.6.180.15" }, { name: "nodejs", version: "17.6.0", date: "2022-02-22", lts: !1, security: !1,
  v8: "9.6.180.15" }, { name: "nodejs", version: "17.7.0", date: "2022-03-09", lts: !1, security: !1, v8: "9.6.180.15" }, { name: "nodejs", version: "\
17.8.0", date: "2022-03-22", lts: !1, security: !1, v8: "9.6.180.15" }, { name: "nodejs", version: "17.9.0", date: "2022-04-07", lts: !1, security: !1,
  v8: "9.6.180.15" }, { name: "nodejs", version: "18.0.0", date: "2022-04-18", lts: !1, security: !1, v8: "10.1.124.8" }, { name: "nodejs", version: "\
18.1.0", date: "2022-05-03", lts: !1, security: !1, v8: "10.1.124.8" }, { name: "nodejs", version: "18.2.0", date: "2022-05-17", lts: !1, security: !1,
  v8: "10.1.124.8" }, { name: "nodejs", version: "18.3.0", date: "2022-06-02", lts: !1, security: !1, v8: "10.2.154.4" }, { name: "nodejs", version: "\
18.4.0", date: "2022-06-16", lts: !1, security: !1, v8: "10.2.154.4" }, { name: "nodejs", version: "18.5.0", date: "2022-07-06", lts: !1, security: !0,
  v8: "10.2.154.4" }, { name: "nodejs", version: "18.6.0", date: "2022-07-13", lts: !1, security: !1, v8: "10.2.154.13" }, { name: "nodejs",
  version: "18.7.0", date: "2022-07-26", lts: !1, security: !1, v8: "10.2.154.13" }, { name: "nodejs", version: "18.8.0", date: "2022-08-24",
  lts: !1, security: !1, v8: "10.2.154.13" }, { name: "nodejs", version: "18.9.0", date: "2022-09-07", lts: !1, security: !1, v8: "10.2.154.\
15" }, { name: "nodejs", version: "18.10.0", date: "2022-09-28", lts: !1, security: !1, v8: "10.2.154.15" }, { name: "nodejs", version: "18.\
11.0", date: "2022-10-13", lts: !1, security: !1, v8: "10.2.154.15" }, { name: "nodejs", version: "18.12.0", date: "2022-10-25", lts: "Hydro\
gen", security: !1, v8: "10.2.154.15" }, { name: "nodejs", version: "18.13.0", date: "2023-01-05", lts: "Hydrogen", security: !1, v8: "10.2.\
154.23" }, { name: "nodejs", version: "18.14.0", date: "2023-02-01", lts: "Hydrogen", security: !1, v8: "10.2.154.23" }, { name: "nodejs", version: "\
18.15.0", date: "2023-03-05", lts: "Hydrogen", security: !1, v8: "10.2.154.26" }, { name: "nodejs", version: "18.16.0", date: "2023-04-12", lts: "\
Hydrogen", security: !1, v8: "10.2.154.26" }, { name: "nodejs", version: "18.17.0", date: "2023-07-18", lts: "Hydrogen", security: !1, v8: "\
10.2.154.26" }, { name: "nodejs", version: "18.18.0", date: "2023-09-18", lts: "Hydrogen", security: !1, v8: "10.2.154.26" }, { name: "nodej\
s", version: "18.19.0", date: "2023-11-29", lts: "Hydrogen", security: !1, v8: "10.2.154.26" }, { name: "nodejs", version: "19.0.0", date: "\
2022-10-17", lts: !1, security: !1, v8: "10.7.193.13" }, { name: "nodejs", version: "19.1.0", date: "2022-11-14", lts: !1, security: !1, v8: "\
10.7.193.20" }, { name: "nodejs", version: "19.2.0", date: "2022-11-29", lts: !1, security: !1, v8: "10.8.168.20" }, { name: "nodejs", version: "\
19.3.0", date: "2022-12-14", lts: !1, security: !1, v8: "10.8.168.21" }, { name: "nodejs", version: "19.4.0", date: "2023-01-05", lts: !1, security: !1,
  v8: "10.8.168.25" }, { name: "nodejs", version: "19.5.0", date: "2023-01-24", lts: !1, security: !1, v8: "10.8.168.25" }, { name: "nodejs",
  version: "19.6.0", date: "2023-02-01", lts: !1, security: !1, v8: "10.8.168.25" }, { name: "nodejs", version: "19.7.0", date: "2023-02-21",
  lts: !1, security: !1, v8: "10.8.168.25" }, { name: "nodejs", version: "19.8.0", date: "2023-03-14", lts: !1, security: !1, v8: "10.8.168.\
25" }, { name: "nodejs", version: "19.9.0", date: "2023-04-10", lts: !1, security: !1, v8: "10.8.168.25" }, { name: "nodejs", version: "20.0\
.0", date: "2023-04-17", lts: !1, security: !1, v8: "11.3.244.4" }, { name: "nodejs", version: "20.1.0", date: "2023-05-03", lts: !1, security: !1,
  v8: "11.3.244.8" }, { name: "nodejs", version: "20.2.0", date: "2023-05-16", lts: !1, security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "\
20.3.0", date: "2023-06-08", lts: !1, security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "20.4.0", date: "2023-07-04", lts: !1, security: !1,
  v8: "11.3.244.8" }, { name: "nodejs", version: "20.5.0", date: "2023-07-19", lts: !1, security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "\
20.6.0", date: "2023-08-23", lts: !1, security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "20.7.0", date: "2023-09-18", lts: !1, security: !1,
  v8: "11.3.244.8" }, { name: "nodejs", version: "20.8.0", date: "2023-09-28", lts: !1, security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "\
20.9.0", date: "2023-10-24", lts: "Iron", security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "20.10.0", date: "2023-11-22", lts: "\
Iron", security: !1, v8: "11.3.244.8" }, { name: "nodejs", version: "21.0.0", date: "2023-10-17", lts: !1, security: !1, v8: "11.8.172.13" },
  { name: "nodejs", version: "21.1.0", date: "2023-10-24", lts: !1, security: !1, v8: "11.8.172.15" }, { name: "nodejs", version: "21.2.0", date: "\
2023-11-14", lts: !1, security: !1, v8: "11.8.172.17" }, { name: "nodejs", version: "21.3.0", date: "2023-11-30", lts: !1, security: !1, v8: "\
11.8.172.17" }];
});

// ../node_modules/caniuse-lite/data/browsers.js
var C4 = y((Lnt, A4) => {
  A4.exports = { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "\
op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" };
});

// ../node_modules/caniuse-lite/dist/unpacker/browsers.js
var Uh = y((Bnt, w4) => {
  w4.exports.browsers = C4();
});

// ../node_modules/caniuse-lite/data/browserVersions.js
var I4 = y((Mnt, D4) => {
  D4.exports = { 0: "113", 1: "114", 2: "115", 3: "116", 4: "117", 5: "118", 6: "119", 7: "120", 8: "121", 9: "5", A: "10", B: "11", C: "12",
  D: "7", E: "8", F: "9", G: "15", H: "80", I: "122", J: "4", K: "6", L: "13", M: "14", N: "16", O: "17", P: "18", Q: "79", R: "81", S: "83",
  T: "84", U: "85", V: "86", W: "87", X: "88", Y: "89", Z: "90", a: "91", b: "92", c: "93", d: "94", e: "95", f: "96", g: "97", h: "98", i: "\
99", j: "100", k: "101", l: "102", m: "103", n: "104", o: "105", p: "106", q: "107", r: "108", s: "20", t: "21", u: "22", v: "23", w: "109",
  x: "110", y: "111", z: "112", AB: "19", BB: "24", CB: "25", DB: "26", EB: "27", FB: "28", GB: "29", HB: "30", IB: "31", JB: "32", KB: "33",
  LB: "34", MB: "35", NB: "36", OB: "37", PB: "38", QB: "39", RB: "40", SB: "41", TB: "42", UB: "43", VB: "44", WB: "45", XB: "46", YB: "47",
  ZB: "48", aB: "49", bB: "50", cB: "51", dB: "52", eB: "53", fB: "54", gB: "55", hB: "56", iB: "57", jB: "58", kB: "60", lB: "62", mB: "63",
  nB: "64", oB: "65", pB: "66", qB: "67", rB: "68", sB: "69", tB: "70", uB: "71", vB: "72", wB: "73", xB: "74", yB: "75", zB: "76", "0B": "7\
7", "1B": "78", "2B": "123", "3B": "11.1", "4B": "12.1", "5B": "15.5", "6B": "16.0", "7B": "17.0", "8B": "3", "9B": "59", AC: "61", BC: "82",
  CC: "124", DC: "125", EC: "3.2", FC: "10.1", GC: "15.2-15.3", HC: "15.4", IC: "16.1", JC: "16.2", KC: "16.3", LC: "16.4", MC: "16.5", NC: "\
17.1", OC: "17.2", PC: "17.3", QC: "17.4", RC: "11.5", SC: "4.2-4.3", TC: "5.5", UC: "2", VC: "126", WC: "3.5", XC: "3.6", YC: "3.1", ZC: "5\
.1", aC: "6.1", bC: "7.1", cC: "9.1", dC: "13.1", eC: "14.1", fC: "15.1", gC: "15.6", hC: "16.6", iC: "TP", jC: "9.5-9.6", kC: "10.0-10.1", lC: "\
10.5", mC: "10.6", nC: "11.6", oC: "4.0-4.1", pC: "5.0-5.1", qC: "6.0-6.1", rC: "7.0-7.1", sC: "8.1-8.4", tC: "9.0-9.2", uC: "9.3", vC: "10.\
0-10.2", wC: "10.3", xC: "11.0-11.2", yC: "11.3-11.4", zC: "12.0-12.1", "0C": "12.2-12.5", "1C": "13.0-13.1", "2C": "13.2", "3C": "13.3", "4\
C": "13.4-13.7", "5C": "14.0-14.4", "6C": "14.5-14.8", "7C": "15.0-15.1", "8C": "15.6-15.8", "9C": "16.6-16.7", AD: "all", BD: "2.1", CD: "2\
.2", DD: "2.3", ED: "4.1", FD: "4.4", GD: "4.4.3-4.4.4", HD: "5.0-5.4", ID: "6.2-6.4", JD: "7.2-7.4", KD: "8.2", LD: "9.2", MD: "11.1-11.2",
  ND: "12.0", OD: "13.0", PD: "14.0", QD: "15.0", RD: "18.0", SD: "19.0", TD: "14.9", UD: "13.52", VD: "2.5", WD: "3.0-3.1" };
});

// ../node_modules/caniuse-lite/dist/unpacker/browserVersions.js
var gT = y((jnt, _4) => {
  _4.exports.browserVersions = I4();
});

// ../node_modules/caniuse-lite/data/agents.js
var N4 = y((qnt, O4) => {
  O4.exports = { A: { A: { K: 0, D: 0, E: 0.0155495, F: 0.0466486, A: 0, B: 0.450937, TC: 0 }, B: "ms", C: ["", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "TC", "K", "D", "E", "F", "A", "B", "", "", ""], E: "IE", F: { TC: 962323200, K: 998870400, D: 1161129600, E: 1237420800, F: 1300060800,
  A: 1346716800, B: 1381968e3 } }, B: { A: { 0: 0.015204, 1: 0.019005, 2: 0.011403, 3: 0.011403, 4: 0.015204, 5: 0.022806, 6: 0.133035, 7: 0.277473,
  8: 3.58054, C: 3801e-6, L: 0, M: 3801e-6, G: 3801e-6, N: 0, O: 7602e-6, P: 0.011403, Q: 0, H: 0, R: 0, S: 0, T: 0, U: 0, V: 0, W: 0.053214,
  X: 0, Y: 0, Z: 0, a: 0, b: 0.011403, c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0.011403, j: 0, k: 0, l: 0, m: 0, n: 0, o: 0, p: 3801e-6, q: 7602e-6,
  r: 7602e-6, w: 0.068418, x: 7602e-6, y: 7602e-6, z: 7602e-6, I: 0.551145 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "L", "M", "G", "N", "O", "\
P", "Q", "H", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "\
q", "r", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "I", "", "", ""], E: "Edge", F: { 0: 1683158400, 1: 1685664e3, 2: 1689897600,
  3: 1692576e3, 4: 1694649600, 5: 1697155200, 6: 1698969600, 7: 1701993600, 8: 1706227200, C: 1438128e3, L: 1447286400, M: 1470096e3, G: 1491868800,
  N: 1508198400, O: 1525046400, P: 1542067200, Q: 1579046400, H: 1581033600, R: 1586736e3, S: 1590019200, T: 1594857600, U: 1598486400, V: 1602201600,
  W: 1605830400, X: 161136e4, Y: 1614816e3, Z: 1618358400, a: 1622073600, b: 1626912e3, c: 1630627200, d: 1632441600, e: 1634774400, f: 1637539200,
  g: 1641427200, h: 1643932800, i: 1646265600, j: 1649635200, k: 1651190400, l: 1653955200, m: 1655942400, n: 1659657600, o: 1661990400, p: 1664755200,
  q: 1666915200, r: 1670198400, w: 1673481600, x: 1675900800, y: 1678665600, z: 1680825600, I: 1708732800 }, D: { C: "ms", L: "ms", M: "ms",
  G: "ms", N: "ms", O: "ms", P: "ms" } }, C: { A: { 0: 7602e-6, 1: 7602e-6, 2: 0.429513, 3: 3801e-6, 4: 0.011403, 5: 0.095025, 6: 0.110229, 7: 0.106428,
  8: 0.064617, 9: 0, UC: 0, "8B": 0, J: 3801e-6, K: 0, D: 0, E: 0, F: 0, A: 0, B: 0.034209, C: 0.019005, L: 0, M: 0, G: 0, N: 0, O: 0, P: 0,
  AB: 0, s: 0, t: 0, u: 0, v: 0, BB: 0, CB: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 0, PB: 0, QB: 0,
  RB: 0, SB: 0, TB: 0, UB: 7602e-6, VB: 7602e-6, WB: 3801e-6, XB: 0, YB: 0, ZB: 0, aB: 0, bB: 7602e-6, cB: 0, dB: 0.053214, eB: 7602e-6, fB: 7602e-6,
  gB: 3801e-6, hB: 0.019005, iB: 0, jB: 0, "9B": 3801e-6, kB: 0, AC: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0, tB: 0, uB: 0,
  vB: 3801e-6, wB: 0, xB: 0, yB: 0, zB: 0, "0B": 0, "1B": 0.015204, Q: 0, H: 0, R: 0, BC: 0, S: 0, T: 0, U: 0, V: 0, W: 0, X: 0.011403, Y: 0,
  Z: 0, a: 7602e-6, b: 0, c: 0, d: 3801e-6, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 3801e-6, l: 0.022806, m: 0.030408, n: 0, o: 3801e-6, p: 0,
  q: 3801e-6, r: 3801e-6, w: 7602e-6, x: 3801e-6, y: 0, z: 3801e-6, I: 1.1593, "2B": 0.349692, CC: 0, DC: 0, VC: 0, WC: 0, XC: 0 }, B: "moz",
  C: ["UC", "8B", "WC", "XC", "J", "9", "K", "D", "E", "F", "A", "B", "C", "L", "M", "G", "N", "O", "P", "AB", "s", "t", "u", "v", "BB", "CB",
  "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "\
aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "9B", "kB", "AC", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB",
  "wB", "xB", "yB", "zB", "0B", "1B", "Q", "H", "R", "BC", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "\
i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "I", "2B", "CC", "DC", "VC"],
  E: "Firefox", F: { 0: 1683590400, 1: 1686009600, 2: 1688428800, 3: 1690848e3, 4: 1693267200, 5: 1695686400, 6: 1698105600, 7: 1700524800, 8: 1702944e3,
  9: 1308614400, UC: 1161648e3, "8B": 1213660800, WC: 124632e4, XC: 1264032e3, J: 1300752e3, K: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400,
  A: 1324339200, B: 1327968e3, C: 1331596800, L: 1335225600, M: 1338854400, G: 1342483200, N: 1346112e3, O: 1349740800, P: 1353628800, AB: 1357603200,
  s: 1361232e3, t: 1364860800, u: 1368489600, v: 1372118400, BB: 1375747200, CB: 1379376e3, DB: 1386633600, EB: 1391472e3, FB: 1395100800, GB: 1398729600,
  HB: 1402358400, IB: 1405987200, JB: 1409616e3, KB: 1413244800, LB: 1417392e3, MB: 1421107200, NB: 1424736e3, OB: 1428278400, PB: 1431475200,
  QB: 1435881600, RB: 1439251200, SB: 144288e4, TB: 1446508800, UB: 1450137600, VB: 1453852800, WB: 1457395200, XB: 1461628800, YB: 1465257600,
  ZB: 1470096e3, aB: 1474329600, bB: 1479168e3, cB: 1485216e3, dB: 1488844800, eB: 149256e4, fB: 1497312e3, gB: 1502150400, hB: 1506556800, iB: 1510617600,
  jB: 1516665600, "9B": 1520985600, kB: 1525824e3, AC: 1529971200, lB: 1536105600, mB: 1540252800, nB: 1544486400, oB: 154872e4, pB: 1552953600,
  qB: 1558396800, rB: 1562630400, sB: 1567468800, tB: 1571788800, uB: 1575331200, vB: 1578355200, wB: 1581379200, xB: 1583798400, yB: 1586304e3,
  zB: 1588636800, "0B": 1591056e3, "1B": 1593475200, Q: 1595894400, H: 1598313600, R: 1600732800, BC: 1603152e3, S: 1605571200, T: 1607990400,
  U: 1611619200, V: 1614038400, W: 1616457600, X: 1618790400, Y: 1622505600, Z: 1626134400, a: 1628553600, b: 1630972800, c: 1633392e3, d: 1635811200,
  e: 1638835200, f: 1641859200, g: 1644364800, h: 1646697600, i: 1649116800, j: 1651536e3, k: 1653955200, l: 1656374400, m: 1658793600, n: 1661212800,
  o: 1663632e3, p: 1666051200, q: 1668470400, r: 1670889600, w: 1673913600, x: 1676332800, y: 1678752e3, z: 1681171200, I: 1705968e3, "2B": 1708387200,
  CC: null, DC: null, VC: null } }, D: { A: { 0: 0.106428, 1: 0.102627, 2: 0.057015, 3: 0.250866, 4: 0.155841, 5: 0.273672, 6: 1.10229, 7: 2.08675,
  8: 13.6988, 9: 0, J: 0, K: 0, D: 0, E: 0, F: 0, A: 0, B: 0, C: 0, L: 0, M: 0, G: 0, N: 0, O: 0, P: 0, AB: 0, s: 0, t: 0, u: 0, v: 0, BB: 0,
  CB: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 3801e-6, MB: 0, NB: 0, OB: 0, PB: 0.015204, QB: 0, RB: 0, SB: 0, TB: 0,
  UB: 0, VB: 0, WB: 0, XB: 0, YB: 7602e-6, ZB: 0.030408, aB: 0.026607, bB: 0.011403, cB: 0, dB: 0, eB: 3801e-6, fB: 3801e-6, gB: 3801e-6, hB: 0.011403,
  iB: 7602e-6, jB: 0, "9B": 0, kB: 0.019005, AC: 0.011403, lB: 0, mB: 3801e-6, nB: 0, oB: 3801e-6, pB: 0.026607, qB: 3801e-6, rB: 3801e-6, sB: 0.034209,
  tB: 0.049413, uB: 7602e-6, vB: 3801e-6, wB: 7602e-6, xB: 7602e-6, yB: 7602e-6, zB: 7602e-6, "0B": 0.011403, "1B": 0.015204, Q: 0.11403, H: 0.015204,
  R: 0.030408, S: 0.03801, T: 7602e-6, U: 0.022806, V: 0.03801, W: 0.079821, X: 0.019005, Y: 0.019005, Z: 0.015204, a: 0.057015, b: 0.026607,
  c: 0.049413, d: 0.045612, e: 0.011403, f: 0.011403, g: 0.019005, h: 0.072219, i: 0.034209, j: 0.030408, k: 0.041811, l: 0.034209, m: 0.144438,
  n: 0.03801, o: 0.030408, p: 0.041811, q: 0.034209, r: 0.060816, w: 1.62303, x: 0.049413, y: 0.057015, z: 0.053214, I: 1.87769, "2B": 0.019005,
  CC: 3801e-6, DC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "J", "9", "K", "D", "E", "F", "A", "B", "C", "L", "M", "G", "N", "O", "P", "\
AB", "s", "t", "u", "v", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "\
UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "9B", "kB", "AC", "lB", "mB", "nB", "oB", "pB",
  "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "yB", "zB", "0B", "1B", "Q", "H", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "\
c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "\
8", "I", "2B", "CC", "DC"], E: "Chrome", F: { 0: 1682985600, 1: 1685404800, 2: 1689724800, 3: 1692057600, 4: 1694476800, 5: 1696896e3, 6: 1698710400,
  7: 1701993600, 8: 1705968e3, 9: 1274745600, J: 1264377600, K: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400,
  C: 1307404800, L: 1312243200, M: 1316131200, G: 1316131200, N: 1319500800, O: 1323734400, P: 1328659200, AB: 1332892800, s: 133704e4, t: 1340668800,
  u: 1343692800, v: 1348531200, BB: 1352246400, CB: 1357862400, DB: 1361404800, EB: 1364428800, FB: 1369094400, GB: 1374105600, HB: 1376956800,
  IB: 1384214400, JB: 1389657600, KB: 1392940800, LB: 1397001600, MB: 1400544e3, NB: 1405468800, OB: 1409011200, PB: 141264e4, QB: 1416268800,
  RB: 1421798400, SB: 1425513600, TB: 1429401600, UB: 143208e4, VB: 1437523200, WB: 1441152e3, XB: 1444780800, YB: 1449014400, ZB: 1453248e3,
  aB: 1456963200, bB: 1460592e3, cB: 1464134400, dB: 1469059200, eB: 1472601600, fB: 1476230400, gB: 1480550400, hB: 1485302400, iB: 1489017600,
  jB: 149256e4, "9B": 1496707200, kB: 1500940800, AC: 1504569600, lB: 1508198400, mB: 1512518400, nB: 1516752e3, oB: 1520294400, pB: 1523923200,
  qB: 1527552e3, rB: 1532390400, sB: 1536019200, tB: 1539648e3, uB: 1543968e3, vB: 154872e4, wB: 1552348800, xB: 1555977600, yB: 1559606400,
  zB: 1564444800, "0B": 1568073600, "1B": 1571702400, Q: 1575936e3, H: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600,
  V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, b: 1626739200, c: 1630368e3, d: 1632268800, e: 1634601600,
  f: 1637020800, g: 1641340800, h: 1643673600, i: 1646092800, j: 1648512e3, k: 1650931200, l: 1653350400, m: 1655769600, n: 1659398400, o: 1661817600,
  p: 1664236800, q: 1666656e3, r: 166968e4, w: 1673308800, x: 1675728e3, y: 1678147200, z: 1680566400, I: 1708387200, "2B": null, CC: null, DC: null } },
  E: { A: { 9: 0, J: 0, K: 0, D: 0, E: 3801e-6, F: 3801e-6, A: 0, B: 0, C: 0, L: 7602e-6, M: 0.03801, G: 7602e-6, YC: 0, EC: 0, ZC: 0, aC: 0,
  bC: 0, cC: 7602e-6, FC: 0, "3B": 0.011403, "4B": 0.015204, dC: 0.072219, eC: 0.106428, fC: 0.030408, GC: 0.011403, HC: 0.026607, "5B": 0.041811,
  gC: 0.273672, "6B": 0.030408, IC: 0.060816, JC: 0.053214, KC: 0.125433, LC: 0.049413, MC: 0.083622, hC: 0.440916, "7B": 0.07602, NC: 0.243264,
  OC: 0.919842, PC: 0.475125, QC: 0.011403, iC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "YC", "EC", "J",
  "9", "ZC", "K", "aC", "D", "bC", "E", "F", "cC", "A", "FC", "B", "3B", "C", "4B", "L", "dC", "M", "eC", "G", "fC", "GC", "HC", "5B", "gC",
  "6B", "IC", "JC", "KC", "LC", "MC", "hC", "7B", "NC", "OC", "PC", "QC", "iC", "", ""], E: "Safari", F: { 9: 1275868800, YC: 1205798400, EC: 1226534400,
  J: 1244419200, ZC: 131112e4, K: 1343174400, aC: 13824e5, D: 13824e5, bC: 1410998400, E: 1413417600, F: 1443657600, cC: 1458518400, A: 1474329600,
  FC: 1490572800, B: 1505779200, "3B": 1522281600, C: 1537142400, "4B": 1553472e3, L: 1568851200, dC: 1585008e3, M: 1600214400, eC: 1619395200,
  G: 1632096e3, fC: 1635292800, GC: 1639353600, HC: 1647216e3, "5B": 1652745600, gC: 1658275200, "6B": 1662940800, IC: 1666569600, JC: 1670889600,
  KC: 1674432e3, LC: 1679875200, MC: 1684368e3, hC: 1690156800, "7B": 1695686400, NC: 1698192e3, OC: 1702252800, PC: 1705881600, QC: 1709596800,
  iC: null } }, F: { A: { F: 0, B: 0, C: 0, G: 0, N: 0, O: 0, P: 0, AB: 0, s: 0, t: 0, u: 0, v: 0, BB: 0, CB: 0, DB: 0, EB: 0, FB: 3801e-6, GB: 0,
  HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 3801e-6, OB: 0, PB: 0, QB: 0, RB: 3801e-6, SB: 0, TB: 0, UB: 0, VB: 0, WB: 0, XB: 0.015204, YB: 0,
  ZB: 0, aB: 0, bB: 0, cB: 0, dB: 0, eB: 0, fB: 0, gB: 0, hB: 0, iB: 0, jB: 0, kB: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0,
  tB: 0, uB: 0, vB: 0, wB: 0, xB: 0, yB: 0, zB: 0, "0B": 0, "1B": 0, Q: 0, H: 0, R: 0, BC: 0, S: 0, T: 0, U: 0, V: 0, W: 0, X: 0, Y: 0, Z: 0,
  a: 0, b: 0, c: 0, d: 0, e: 0.045612, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0.049413, m: 0, n: 0, o: 7602e-6, p: 0.661374, q: 0, r: 0, jC: 0,
  kC: 0, lC: 0, mC: 0, "3B": 0, RC: 0, nC: 0, "4B": 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "F", "jC", "kC", "lC", "mC", "B", "3B", "RC", "nC", "C", "4B", "G", "N", "O", "P", "AB", "s", "t", "u", "v", "BB", "CB", "\
DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB",
  "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "tB", "uB", "vB", "wB", "xB", "\
yB", "zB", "0B", "1B", "Q", "H", "R", "BC", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "\
l", "m", "n", "o", "p", "q", "r", "", "", ""], E: "Opera", F: { F: 1150761600, jC: 1223424e3, kC: 1251763200, lC: 1267488e3, mC: 1277942400,
  B: 1292457600, "3B": 1302566400, RC: 1309219200, nC: 1323129600, C: 1323129600, "4B": 1352073600, G: 1372723200, N: 1377561600, O: 1381104e3,
  P: 1386288e3, AB: 1390867200, s: 1393891200, t: 1399334400, u: 1401753600, v: 1405987200, BB: 1409616e3, CB: 1413331200, DB: 1417132800, EB: 1422316800,
  FB: 1425945600, GB: 1430179200, HB: 1433808e3, IB: 1438646400, JB: 1442448e3, KB: 1445904e3, LB: 1449100800, MB: 1454371200, NB: 1457308800,
  OB: 146232e4, PB: 1465344e3, QB: 1470096e3, RB: 1474329600, SB: 1477267200, TB: 1481587200, UB: 1486425600, VB: 1490054400, WB: 1494374400,
  XB: 1498003200, YB: 1502236800, ZB: 1506470400, aB: 1510099200, bB: 1515024e3, cB: 1517961600, dB: 1521676800, eB: 1525910400, fB: 1530144e3,
  gB: 1534982400, hB: 1537833600, iB: 1543363200, jB: 1548201600, kB: 1554768e3, lB: 1561593600, mB: 1566259200, nB: 1570406400, oB: 1573689600,
  pB: 1578441600, qB: 1583971200, rB: 1587513600, sB: 1592956800, tB: 1595894400, uB: 1600128e3, vB: 1603238400, wB: 161352e4, xB: 1612224e3,
  yB: 1616544e3, zB: 1619568e3, "0B": 1623715200, "1B": 1627948800, Q: 1631577600, H: 1633392e3, R: 1635984e3, BC: 1638403200, S: 1642550400,
  T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600, b: 1668816e3, c: 1668643200,
  d: 1671062400, e: 1675209600, f: 1677024e3, g: 1679529600, h: 1681948800, i: 1684195200, j: 1687219200, k: 1690329600, l: 1692748800, m: 1696204800,
  n: 169992e4, o: 169992e4, p: 1702944e3, q: 1707264e3, r: 1710115200 }, D: { F: "o", B: "o", C: "o", jC: "o", kC: "o", lC: "o", mC: "o", "3\
B": "o", RC: "o", nC: "o", "4B": "o" } }, G: { A: { E: 0, EC: 0, oC: 0, SC: 293537e-8, pC: 293537e-8, qC: 880612e-8, rC: 0.0102738, sC: 146769e-8,
  tC: 733843e-8, uC: 0.0352245, vC: 587075e-8, wC: 0.0587075, xC: 0.0264184, yC: 0.0190799, zC: 0.0102738, "0C": 0.265651, "1C": 440306e-8, "\
2C": 0.0425629, "3C": 0.0132092, "4C": 0.0572398, "5C": 0.121818, "6C": 0.15851, "7C": 0.0675136, GC: 0.0792551, HC: 0.0895289, "5B": 0.118883,
  "8C": 0.978947, "6B": 0.25391, IC: 0.540109, JC: 0.250974, KC: 0.457918, LC: 0.102738, MC: 0.214282, "9C": 1.65702, "7B": 0.237765, NC: 0.725037,
  OC: 5.42163, PC: 2.54497, QC: 0.0733843 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "EC", "oC", "SC", "\
pC", "qC", "rC", "E", "sC", "tC", "uC", "vC", "wC", "xC", "yC", "zC", "0C", "1C", "2C", "3C", "4C", "5C", "6C", "7C", "GC", "HC", "5B", "8C",
  "6B", "IC", "JC", "KC", "LC", "MC", "9C", "7B", "NC", "OC", "PC", "QC", "", "", ""], E: "Safari on iOS", F: { EC: 1270252800, oC: 1283904e3,
  SC: 1299628800, pC: 1331078400, qC: 1359331200, rC: 1394409600, E: 1410912e3, sC: 1413763200, tC: 1442361600, uC: 1458518400, vC: 1473724800,
  wC: 1490572800, xC: 1505779200, yC: 1522281600, zC: 1537142400, "0C": 1553472e3, "1C": 1568851200, "2C": 1572220800, "3C": 1580169600, "4C": 1585008e3,
  "5C": 1600214400, "6C": 1619395200, "7C": 1632096e3, GC: 1639353600, HC: 1647216e3, "5B": 1652659200, "8C": 1658275200, "6B": 1662940800, IC: 1666569600,
  JC: 1670889600, KC: 1674432e3, LC: 1679875200, MC: 1684368e3, "9C": 1690156800, "7B": 1694995200, NC: 1698192e3, OC: 1702252800, PC: 1705881600,
  QC: 1709596800 } }, H: { A: { AD: 0.09 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AD", "", "", ""],
  E: "Opera Mini", F: { AD: 1426464e3 } }, I: { A: { "8B": 0, J: 582612e-10, I: 0.580223, BD: 0, CD: 582612e-10, DD: 0, ED: 582612e-10, SC: 349567e-9,
  FD: 0, GD: 139827e-8 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "BD", "CD", "DD", "8B", "J", "ED", "SC", "FD", "GD", "I", "", "",
  ""], E: "Android Browser", F: { BD: 1256515200, CD: 1274313600, DD: 1291593600, "8B": 1298332800, J: 1318896e3, ED: 1341792e3, SC: 1374624e3,
  FD: 1386547200, GD: 1401667200, I: 1709078400 } }, J: { A: { D: 0, A: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "D", "A", "", "", ""], E: "Blackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, H: 1.23017,
  "3B": 0, RC: 0, "4B": 0 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "3B", "RC", "C", "4B", "H", "", "", ""],
  E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, "3B": 1314835200, RC: 1318291200, C: 1330300800, "4B": 1349740800, H: 1709769600 }, D: {
  H: "webkit" } }, L: { A: { I: 42.4244 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "I", "", "",
  ""], E: "Chrome for Android", F: { I: 1709078400 } }, M: { A: { "2B": 0.291306 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "2B", "", "", ""], E: "Firefox for Android", F: { "2B": 1708387200 } }, N: { A: { A: 0, B: 0 }, B: "ms", C: ["",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "", "", ""], E: "IE Mobile", F: { A: 1340150400, B: 1353456e3 } },
  O: { A: { "5B": 0.818136 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "5B", "", "", ""], E: "\
UC Browser for Android", F: { "5B": 1710115200 }, D: { "5B": "webkit" } }, P: { A: { J: 0.13981, s: 0.0322639, t: 0.0752824, u: 0.0860371, v: 2.04338,
  HD: 0.0107546, ID: 0, JD: 0.0537732, KD: 0, LD: 0, FC: 0, MD: 0.0107546, ND: 0, OD: 0.0107546, PD: 0, QD: 0, "6B": 0.0107546, "7B": 0.0322639,
  RD: 0.0215093, SD: 0.0430185 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "J", "HD", "ID", "JD", "KD", "LD", "FC", "MD", "ND", "OD", "PD", "QD", "6B", "7B", "RD", "SD",
  "s", "t", "u", "v", "", "", ""], E: "Samsung Internet", F: { J: 1461024e3, HD: 1481846400, ID: 1509408e3, JD: 1528329600, KD: 1546128e3, LD: 1554163200,
  FC: 1567900800, MD: 1582588800, ND: 1593475200, OD: 1605657600, PD: 1618531200, QD: 1629072e3, "6B": 1640736e3, "7B": 1651708800, RD: 1659657600,
  SD: 1667260800, s: 1677369600, t: 1684454400, u: 1689292800, v: 1697587200 } }, Q: { A: { TD: 0.241722 }, B: "webkit", C: ["", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "TD", "", "", ""], E: "QQ Browser", F: { TD: 1710288e3 } }, R: { A: { UD: 0 }, B: "\
webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "UD", "", "", ""], E: "Baidu Browser", F: { UD: 1710201600 } },
  S: { A: { VD: 0.086772, WD: 0 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "VD", "WD", "", "", ""],
  E: "KaiOS Browser", F: { VD: 1527811200, WD: 1631664e3 } } };
});

// ../node_modules/caniuse-lite/dist/unpacker/agents.js
var L4 = y(($nt, F4) => {
  "use strict";
  var EFe = Uh().browsers, bT = gT().browserVersions, R4 = N4();
  function k4(e) {
    return Object.keys(e).reduce((t, r) => (t[bT[r]] = e[r], t), {});
  }
  i(k4, "unpackBrowserVersions");
  F4.exports.agents = Object.keys(R4).reduce((e, t) => {
    let r = R4[t];
    return e[EFe[t]] = Object.keys(r).reduce((s, n) => (n === "A" ? s.usage_global = k4(r[n]) : n === "C" ? s.versions = r[n].reduce((a, o) => (o ===
    "" ? a.push(null) : a.push(bT[o]), a), []) : n === "D" ? s.prefix_exceptions = k4(r[n]) : n === "E" ? s.browser = r[n] : n === "F" ? s.release_date =
    Object.keys(r[n]).reduce(
      (a, o) => (a[bT[o]] = r[n][o], a),
      {}
    ) : s.prefix = r[n], s), {}), e;
  }, {});
});

// ../node_modules/node-releases/data/release-schedule/release-schedule.json
var B4 = y((Vnt, vFe) => {
  vFe.exports = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "\
2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Arg\
on" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "\
2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "\
2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "\
2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Du\
bnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "\
2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "\
2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "\
2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2023-09-11", codename: "Ga\
llium" }, v17: { start: "2021-10-19", maintenance: "2022-04-01", end: "2022-06-01" }, v18: { start: "2022-04-19", lts: "2022-10-25", maintenance: "\
2023-10-18", end: "2025-04-30", codename: "Hydrogen" }, v19: { start: "2022-10-18", maintenance: "2023-04-01", end: "2023-06-01" }, v20: { start: "\
2023-04-18", lts: "2023-10-24", maintenance: "2024-10-22", end: "2026-04-30", codename: "Iron" }, v21: { start: "2023-10-17", maintenance: "\
2024-04-01", end: "2024-06-01" }, v22: { start: "2024-04-23", lts: "2024-10-29", maintenance: "2025-10-21", end: "2027-04-30", codename: "" },
  v23: { start: "2024-10-15", maintenance: "2025-04-01", end: "2025-06-01" }, v24: { start: "2025-04-22", lts: "2025-10-28", maintenance: "2\
026-10-20", end: "2028-04-30", codename: "" } };
});

// ../node_modules/electron-to-chromium/versions.js
var j4 = y((Wnt, M4) => {
  M4.exports = {
    "0.20": "39",
    "0.21": "41",
    "0.22": "41",
    "0.23": "41",
    "0.24": "41",
    "0.25": "42",
    "0.26": "42",
    "0.27": "43",
    "0.28": "43",
    "0.29": "43",
    "0.30": "44",
    "0.31": "45",
    "0.32": "45",
    "0.33": "45",
    "0.34": "45",
    "0.35": "45",
    "0.36": "47",
    "0.37": "49",
    "1.0": "49",
    "1.1": "50",
    "1.2": "51",
    "1.3": "52",
    "1.4": "53",
    "1.5": "54",
    "1.6": "56",
    "1.7": "58",
    "1.8": "59",
    "2.0": "61",
    "2.1": "61",
    "3.0": "66",
    "3.1": "66",
    "4.0": "69",
    "4.1": "69",
    "4.2": "69",
    "5.0": "73",
    "6.0": "76",
    "6.1": "76",
    "7.0": "78",
    "7.1": "78",
    "7.2": "78",
    "7.3": "78",
    "8.0": "80",
    "8.1": "80",
    "8.2": "80",
    "8.3": "80",
    "8.4": "80",
    "8.5": "80",
    "9.0": "83",
    "9.1": "83",
    "9.2": "83",
    "9.3": "83",
    "9.4": "83",
    "10.0": "85",
    "10.1": "85",
    "10.2": "85",
    "10.3": "85",
    "10.4": "85",
    "11.0": "87",
    "11.1": "87",
    "11.2": "87",
    "11.3": "87",
    "11.4": "87",
    "11.5": "87",
    "12.0": "89",
    "12.1": "89",
    "12.2": "89",
    "13.0": "91",
    "13.1": "91",
    "13.2": "91",
    "13.3": "91",
    "13.4": "91",
    "13.5": "91",
    "13.6": "91",
    "14.0": "93",
    "14.1": "93",
    "14.2": "93",
    "15.0": "94",
    "15.1": "94",
    "15.2": "94",
    "15.3": "94",
    "15.4": "94",
    "15.5": "94",
    "16.0": "96",
    "16.1": "96",
    "16.2": "96",
    "17.0": "98",
    "17.1": "98",
    "17.2": "98",
    "17.3": "98",
    "17.4": "98",
    "18.0": "100",
    "18.1": "100",
    "18.2": "100",
    "18.3": "100",
    "19.0": "102",
    "19.1": "102",
    "20.0": "104",
    "20.1": "104",
    "20.2": "104",
    "20.3": "104",
    "21.0": "106",
    "21.1": "106",
    "21.2": "106",
    "21.3": "106",
    "21.4": "106",
    "22.0": "108",
    "22.1": "108",
    "22.2": "108",
    "22.3": "108",
    "23.0": "110",
    "23.1": "110",
    "23.2": "110",
    "23.3": "110",
    "24.0": "112",
    "24.1": "112",
    "24.2": "112",
    "24.3": "112",
    "24.4": "112",
    "24.5": "112",
    "24.6": "112",
    "24.7": "112",
    "24.8": "112",
    "25.0": "114",
    "25.1": "114",
    "25.2": "114",
    "25.3": "114",
    "25.4": "114",
    "25.5": "114",
    "25.6": "114",
    "25.7": "114",
    "25.8": "114",
    "25.9": "114",
    "26.0": "116",
    "26.1": "116",
    "26.2": "116",
    "26.3": "116",
    "26.4": "116",
    "26.5": "116",
    "26.6": "116",
    "27.0": "118",
    "27.1": "118",
    "27.2": "118",
    "27.3": "118",
    "28.0": "120",
    "28.1": "120",
    "28.2": "120",
    "29.0": "122",
    "29.1": "122",
    "30.0": "124"
  };
});

// ../node_modules/browserslist/error.js
var vT = y((Hnt, q4) => {
  function ET(e) {
    this.name = "BrowserslistError", this.message = e, this.browserslist = !0, Error.captureStackTrace && Error.captureStackTrace(this, ET);
  }
  i(ET, "BrowserslistError");
  ET.prototype = Error.prototype;
  q4.exports = ET;
});

// ../node_modules/browserslist/parse.js
var H4 = y((Knt, W4) => {
  var $4 = /^\s+and\s+(.*)/i, U4 = /^(?:,\s*|\s+or\s+)(.*)/i;
  function V4(e) {
    return Array.isArray(e) ? e.reduce(function(t, r) {
      return t.concat(V4(r));
    }, []) : [e];
  }
  i(V4, "flatten");
  function SFe(e, t) {
    for (var r = 1, s = e.length; r <= s; r++) {
      var n = e.substr(-r, r);
      if (t(n, r, s))
        return e.slice(0, -r);
    }
    return "";
  }
  i(SFe, "find");
  function ST(e, t) {
    var r = { query: t };
    t.indexOf("not ") === 0 && (r.not = !0, t = t.slice(4));
    for (var s in e) {
      var n = e[s], a = t.match(n.regexp);
      if (a) {
        r.type = s;
        for (var o = 0; o < n.matches.length; o++)
          r[n.matches[o]] = a[o + 1];
        return r;
      }
    }
    return r.type = "unknown", r;
  }
  i(ST, "matchQuery");
  function TFe(e, t, r) {
    var s;
    return SFe(t, function(n, a, o) {
      return $4.test(n) ? (s = ST(e, n.match($4)[1]), s.compose = "and", r.unshift(s), !0) : U4.test(n) ? (s = ST(e, n.match(U4)[1]), s.compose =
      "or", r.unshift(s), !0) : a === o ? (s = ST(e, n.trim()), s.compose = "or", r.unshift(s), !0) : !1;
    });
  }
  i(TFe, "matchBlock");
  W4.exports = /* @__PURE__ */ i(function(t, r) {
    return Array.isArray(r) || (r = [r]), V4(
      r.map(function(s) {
        var n = [];
        do
          s = TFe(t, s, n);
        while (s);
        return n;
      })
    );
  }, "parse");
});

// ../node_modules/caniuse-lite/dist/lib/statuses.js
var K4 = y((Xnt, G4) => {
  G4.exports = {
    1: "ls",
    // WHATWG Living Standard
    2: "rec",
    // W3C Recommendation
    3: "pr",
    // W3C Proposed Recommendation
    4: "cr",
    // W3C Candidate Recommendation
    5: "wd",
    // W3C Working Draft
    6: "other",
    // Non-W3C, but reputable
    7: "unoff"
    // Unofficial, Editor's Draft or W3C "Note"
  };
});

// ../node_modules/caniuse-lite/dist/lib/supported.js
var X4 = y((znt, Y4) => {
  Y4.exports = {
    y: 1,
    n: 2,
    a: 4,
    p: 8,
    u: 16,
    x: 32,
    d: 64
  };
});

// ../node_modules/caniuse-lite/dist/unpacker/feature.js
var Q4 = y((Jnt, TT) => {
  "use strict";
  var xFe = K4(), z4 = X4(), PFe = Uh().browsers, AFe = gT().browserVersions, CFe = Math.log(2);
  function wFe(e) {
    let t = Object.keys(z4).reduce((n, a) => (e & z4[a] && n.push(a), n), []), r = e >> 7, s = [];
    for (; r; ) {
      let n = Math.floor(Math.log(r) / CFe) + 1;
      s.unshift(`#${n}`), r -= Math.pow(2, n - 1);
    }
    return t.concat(s).join(" ");
  }
  i(wFe, "unpackSupport");
  function J4(e) {
    let t = {
      status: xFe[e.B],
      title: e.C,
      shown: e.D
    };
    return t.stats = Object.keys(e.A).reduce((r, s) => {
      let n = e.A[s];
      return r[PFe[s]] = Object.keys(n).reduce(
        (a, o) => {
          let l = n[o].split(" "), u = wFe(o);
          return l.forEach((c) => a[AFe[c]] = u), a;
        },
        {}
      ), r;
    }, {}), t;
  }
  i(J4, "unpackFeature");
  TT.exports = J4;
  TT.exports.default = J4;
});

// ../node_modules/caniuse-lite/dist/unpacker/region.js
var e8 = y((Znt, xT) => {
  "use strict";
  var DFe = Uh().browsers;
  function Z4(e) {
    return Object.keys(e).reduce((t, r) => {
      let s = e[r];
      return t[DFe[r]] = Object.keys(s).reduce((n, a) => {
        let o = s[a];
        return a === "_" ? o.split(" ").forEach((l) => n[l] = null) : n[a] = o, n;
      }, {}), t;
    }, {});
  }
  i(Z4, "unpackRegion");
  xT.exports = Z4;
  xT.exports.default = Z4;
});

// ../node_modules/browserslist/node.js
var o8 = y((tit, ho) => {
  var IFe = Q4().default, _Fe = e8().default, ws = Q("path"), Dl = Q("fs"), Vr = vT(), t8 = /^\s*\[(.+)]\s*$/, OFe = /^browserslist-config-/,
  NFe = /@[^/]+(?:\/[^/]+)?\/browserslist-config(?:-|$|\/)/, RFe = 6 * 30 * 24 * 60 * 60 * 1e3, r8 = "Browserslist config should be a string\
 or an array of strings with browser queries", PT = !1, Hh = {}, Vh = {};
  function s8(e) {
    var t = " Use `dangerousExtend` option to disable.";
    if (!OFe.test(e) && !NFe.test(e))
      throw new Vr(
        "Browserslist config needs `browserslist-config-` prefix. " + t
      );
    if (e.replace(/^@[^/]+\//, "").indexOf(".") !== -1)
      throw new Vr(
        "`.` not allowed in Browserslist config name. " + t
      );
    if (e.indexOf("node_modules") !== -1)
      throw new Vr(
        "`node_modules` not allowed in Browserslist config." + t
      );
  }
  i(s8, "checkExtend");
  function Un(e) {
    if (e in Hh)
      return Hh[e];
    var t = Dl.existsSync(e) && Dl.statSync(e).isFile();
    return process.env.BROWSERSLIST_DISABLE_CACHE || (Hh[e] = t), t;
  }
  i(Un, "isFile");
  function n8(e, t) {
    var r = Un(e) ? ws.dirname(e) : e, s = ws.resolve(r);
    do {
      if (!kFe(s)) break;
      var n = t(s);
      if (typeof n < "u") return n;
    } while (s !== (s = ws.dirname(s)));
  }
  i(n8, "eachParent");
  function kFe(e) {
    if (!process.env.BROWSERSLIST_ROOT_PATH) return !0;
    var t = ws.resolve(process.env.BROWSERSLIST_ROOT_PATH);
    return ws.relative(t, e).substring(0, 2) !== "..";
  }
  i(kFe, "pathInRoot");
  function FFe(e) {
    if (Array.isArray(e)) {
      for (var t = 0; t < e.length; t++)
        if (typeof e[t] != "string")
          throw new Vr(r8);
    } else if (typeof e != "string")
      throw new Vr(r8);
  }
  i(FFe, "check");
  function Wh(e, t) {
    if (typeof e != "object") return e;
    var r;
    if (typeof t.env == "string" ? r = t.env : process.env.BROWSERSLIST_ENV ? r = process.env.BROWSERSLIST_ENV : process.env.NODE_ENV ? r = process.
    env.NODE_ENV : r = "production", t.throwOnMissing && r && r !== "defaults" && !e[r])
      throw new Vr(
        "Missing config for Browserslist environment `" + r + "`"
      );
    return e[r] || e.defaults;
  }
  i(Wh, "pickEnv");
  function i8(e) {
    var t = JSON.parse(
      Dl.readFileSync(e).toString().replace(/^\uFEFF/m, "")
    );
    if (t.browserlist && !t.browserslist)
      throw new Vr(
        "`browserlist` key instead of `browserslist` in " + e
      );
    var r = t.browserslist;
    (Array.isArray(r) || typeof r == "string") && (r = { defaults: r });
    for (var s in r)
      FFe(r[s]);
    return r;
  }
  i(i8, "parsePackage");
  function LFe(e) {
    var t = 0;
    for (var r in e) {
      var s = e[r].releaseDate || {};
      for (var n in s)
        t < s[n] && (t = s[n]);
    }
    return t * 1e3;
  }
  i(LFe, "latestReleaseTime");
  function a8(e, t) {
    if (e || (e = {}), t && "dataByBrowser" in t && (t = t.dataByBrowser), typeof t == "object") {
      var r = {};
      for (var s in t) {
        var n = Object.keys(t[s]);
        if (n.length === 1 && e[s] && e[s].versions.length === 1) {
          var a = e[s].versions[0];
          r[s] = {}, r[s][a] = t[s][n[0]];
        } else
          r[s] = t[s];
      }
      return r;
    }
  }
  i(a8, "normalizeStats");
  function BFe(e, t) {
    for (var r in e) {
      var s = e[r];
      if ("0" in s) {
        var n = t[r].versions;
        s[n[n.length - 1]] = s[0], delete s[0];
      }
    }
  }
  i(BFe, "normalizeUsageData");
  ho.exports = {
    loadQueries: /* @__PURE__ */ i(function(t, r) {
      !t.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND && s8(r);
      var s = Q(Q.resolve(r, { paths: [".", t.path] }));
      if (s) {
        if (Array.isArray(s))
          return s;
        if (typeof s == "object")
          return s.defaults || (s.defaults = []), Wh(s, t, r);
      }
      throw new Vr(
        "`" + r + "` config exports not an array of queries or an object of envs"
      );
    }, "loadQueries"),
    loadStat: /* @__PURE__ */ i(function(t, r, s) {
      !t.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND && s8(r);
      var n = Q(Q.resolve(
        ws.join(r, "browserslist-stats.json"),
        { paths: ["."] }
      ));
      return a8(s, n);
    }, "loadStat"),
    getStat: /* @__PURE__ */ i(function(t, r) {
      var s;
      if (t.stats ? s = t.stats : process.env.BROWSERSLIST_STATS ? s = process.env.BROWSERSLIST_STATS : t.path && ws.resolve && Dl.existsSync &&
      (s = n8(t.path, function(n) {
        var a = ws.join(n, "browserslist-stats.json");
        return Un(a) ? a : void 0;
      })), typeof s == "string")
        try {
          s = JSON.parse(Dl.readFileSync(s));
        } catch {
          throw new Vr("Can't read " + s);
        }
      return a8(r, s);
    }, "getStat"),
    loadConfig: /* @__PURE__ */ i(function(t) {
      if (process.env.BROWSERSLIST)
        return process.env.BROWSERSLIST;
      if (t.config || process.env.BROWSERSLIST_CONFIG) {
        var r = t.config || process.env.BROWSERSLIST_CONFIG;
        return ws.basename(r) === "package.json" ? Wh(i8(r), t) : Wh(ho.exports.readConfig(r), t);
      } else return t.path ? Wh(ho.exports.findConfig(t.path), t) : void 0;
    }, "loadConfig"),
    loadCountry: /* @__PURE__ */ i(function(t, r, s) {
      var n = r.replace(/[^\w-]/g, "");
      if (!t[n]) {
        var a;
        try {
          a = Q("caniuse-lite/data/regions/" + n + ".js");
        } catch {
          throw new Vr("Unknown region name `" + n + "`.");
        }
        var o = _Fe(a);
        BFe(o, s), t[r] = {};
        for (var l in o)
          for (var u in o[l])
            t[r][l + " " + u] = o[l][u];
      }
    }, "loadCountry"),
    loadFeature: /* @__PURE__ */ i(function(t, r) {
      if (r = r.replace(/[^\w-]/g, ""), !t[r]) {
        var s;
        try {
          s = Q("caniuse-lite/data/features/" + r + ".js");
        } catch {
          throw new Vr("Unknown feature name `" + r + "`.");
        }
        var n = IFe(s).stats;
        t[r] = {};
        for (var a in n) {
          t[r][a] = {};
          for (var o in n[a])
            t[r][a][o] = n[a][o];
        }
      }
    }, "loadFeature"),
    parseConfig: /* @__PURE__ */ i(function(t) {
      var r = { defaults: [] }, s = ["defaults"];
      return t.toString().replace(/#[^\n]*/g, "").split(/\n|,/).map(function(n) {
        return n.trim();
      }).filter(function(n) {
        return n !== "";
      }).forEach(function(n) {
        t8.test(n) ? (s = n.match(t8)[1].trim().split(" "), s.forEach(function(a) {
          if (r[a])
            throw new Vr(
              "Duplicate section " + a + " in Browserslist config"
            );
          r[a] = [];
        })) : s.forEach(function(a) {
          r[a].push(n);
        });
      }), r;
    }, "parseConfig"),
    readConfig: /* @__PURE__ */ i(function(t) {
      if (!Un(t))
        throw new Vr("Can't read " + t + " config");
      return ho.exports.parseConfig(Dl.readFileSync(t));
    }, "readConfig"),
    findConfig: /* @__PURE__ */ i(function(t) {
      t = ws.resolve(t);
      var r = [], s = n8(t, function(n) {
        if (n in Vh)
          return Vh[n];
        r.push(n);
        var a = ws.join(n, "browserslist"), o = ws.join(n, "package.json"), l = ws.join(n, ".browserslistrc"), u;
        if (Un(o))
          try {
            u = i8(o);
          } catch (c) {
            if (c.name === "BrowserslistError") throw c;
            console.warn(
              "[Browserslist] Could not parse " + o + ". Ignoring it."
            );
          }
        if (Un(a) && u)
          throw new Vr(
            n + " contains both browserslist and package.json with browsers"
          );
        if (Un(l) && u)
          throw new Vr(
            n + " contains both .browserslistrc and package.json with browsers"
          );
        if (Un(a) && Un(l))
          throw new Vr(
            n + " contains both .browserslistrc and browserslist"
          );
        return Un(a) ? ho.exports.readConfig(a) : Un(l) ? ho.exports.readConfig(l) : u;
      });
      return process.env.BROWSERSLIST_DISABLE_CACHE || r.forEach(function(n) {
        Vh[n] = s;
      }), s;
    }, "findConfig"),
    clearCaches: /* @__PURE__ */ i(function() {
      PT = !1, Hh = {}, Vh = {}, this.cache = {};
    }, "clearCaches"),
    oldDataWarning: /* @__PURE__ */ i(function(t) {
      if (!PT && (PT = !0, !process.env.BROWSERSLIST_IGNORE_OLD_DATA)) {
        var r = LFe(t), s = Date.now() - RFe;
        r !== 0 && r < s && console.warn(
          `Browserslist: caniuse-lite is outdated. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme`
        );
      }
    }, "oldDataWarning"),
    currentNode: /* @__PURE__ */ i(function() {
      return "node " + process.versions.node;
    }, "currentNode"),
    env: process.env
  };
});

// ../node_modules/browserslist/index.js
var A8 = y((sit, P8) => {
  var MFe = P4(), Ai = L4().agents, AT = B4(), Jh = Q("path"), gn = j4(), vs = vT(), y8 = H4(), Wr = o8(), jFe = 365.259641 * 24 * 60 * 60 *
  1e3, g8 = "37", qFe = 14;
  function b8(e, t) {
    return (e + ".").indexOf(t + ".") === 0;
  }
  i(b8, "isVersionsMatch");
  function $Fe(e) {
    var t = e.slice(1);
    return we.nodeVersions.some(function(r) {
      return b8(r, t);
    });
  }
  i($Fe, "isEolReleased");
  function l8(e) {
    return e.filter(function(t) {
      return typeof t == "string";
    });
  }
  i(l8, "normalize");
  function Gh(e) {
    var t = e;
    return e.split(".").length === 3 && (t = e.split(".").slice(0, -1).join(".")), t;
  }
  i(Gh, "normalizeElectron");
  function ga(e) {
    return /* @__PURE__ */ i(function(r) {
      return e + " " + r;
    }, "mapName");
  }
  i(ga, "nameMapper");
  function IT(e) {
    return parseInt(e.split(".")[0]);
  }
  i(IT, "getMajor");
  function Kh(e, t) {
    if (e.length === 0) return [];
    var r = E8(e.map(IT)), s = r[r.length - t];
    if (!s)
      return e;
    for (var n = [], a = e.length - 1; a >= 0 && !(s > IT(e[a])); a--)
      n.unshift(e[a]);
    return n;
  }
  i(Kh, "getMajorVersions");
  function E8(e) {
    for (var t = [], r = 0; r < e.length; r++)
      t.indexOf(e[r]) === -1 && t.push(e[r]);
    return t;
  }
  i(E8, "uniq");
  function Qh(e, t, r) {
    for (var s in r)
      e[t + " " + s] = r[s];
  }
  i(Qh, "fillUsage");
  function u8(e, t) {
    return t = parseFloat(t), e === ">" ? function(r) {
      return parseFloat(r) > t;
    } : e === ">=" ? function(r) {
      return parseFloat(r) >= t;
    } : e === "<" ? function(r) {
      return parseFloat(r) < t;
    } : function(r) {
      return parseFloat(r) <= t;
    };
  }
  i(u8, "generateFilter");
  function UFe(e, t) {
    return t = t.split(".").map(ba), t[1] = t[1] || 0, t[2] = t[2] || 0, e === ">" ? function(r) {
      return r = r.split(".").map(ba), zc(r, t) > 0;
    } : e === ">=" ? function(r) {
      return r = r.split(".").map(ba), zc(r, t) >= 0;
    } : e === "<" ? function(r) {
      return r = r.split(".").map(ba), zc(t, r) > 0;
    } : function(r) {
      return r = r.split(".").map(ba), zc(t, r) >= 0;
    };
  }
  i(UFe, "generateSemverFilter");
  function ba(e) {
    return parseInt(e);
  }
  i(ba, "parseSimpleInt");
  function zh(e, t) {
    return e < t ? -1 : e > t ? 1 : 0;
  }
  i(zh, "compare");
  function zc(e, t) {
    return zh(parseInt(e[0]), parseInt(t[0])) || zh(parseInt(e[1] || "0"), parseInt(t[1] || "0")) || zh(parseInt(e[2] || "0"), parseInt(t[2] ||
    "0"));
  }
  i(zc, "compareSemver");
  function c8(e, t) {
    switch (t = t.split(".").map(ba), typeof t[1] > "u" && (t[1] = "x"), e) {
      case "<=":
        return function(r) {
          return r = r.split(".").map(ba), f8(r, t) <= 0;
        };
      case ">=":
      default:
        return function(r) {
          return r = r.split(".").map(ba), f8(r, t) >= 0;
        };
    }
  }
  i(c8, "semverFilterLoose");
  function f8(e, t) {
    return e[0] !== t[0] ? e[0] < t[0] ? -1 : 1 : t[1] === "x" ? 0 : e[1] !== t[1] ? e[1] < t[1] ? -1 : 1 : 0;
  }
  i(f8, "compareSemverLoose");
  function VFe(e, t) {
    return e.versions.indexOf(t) !== -1 ? t : we.versionAliases[e.name][t] ? we.versionAliases[e.name][t] : !1;
  }
  i(VFe, "resolveVersion");
  function Yh(e, t) {
    var r = VFe(e, t);
    return r || (e.versions.length === 1 ? e.versions[0] : !1);
  }
  i(Yh, "normalizeVersion");
  function v8(e, t) {
    return e = e / 1e3, Object.keys(Ai).reduce(function(r, s) {
      var n = Ea(s, t);
      if (!n) return r;
      var a = Object.keys(n.releaseDate).filter(function(o) {
        var l = n.releaseDate[o];
        return l !== null && l >= e;
      });
      return r.concat(a.map(ga(n.name)));
    }, []);
  }
  i(v8, "filterByYear");
  function p8(e) {
    return {
      name: e.name,
      versions: e.versions,
      released: e.released,
      releaseDate: e.releaseDate
    };
  }
  i(p8, "cloneData");
  function Ea(e, t) {
    if (e = e.toLowerCase(), e = we.aliases[e] || e, t.mobileToDesktop && we.desktopNames[e]) {
      var r = we.data[we.desktopNames[e]];
      if (e === "android")
        return HFe(p8(we.data[e]), r);
      var s = p8(r);
      return s.name = e, s;
    }
    return we.data[e];
  }
  i(Ea, "byName");
  function d8(e, t) {
    var r = t.indexOf(g8);
    return e.filter(function(s) {
      return /^(?:[2-4]\.|[34]$)/.test(s);
    }).concat(t.slice(r));
  }
  i(d8, "normalizeAndroidVersions");
  function WFe(e) {
    var t = {};
    for (var r in e)
      t[r] = e[r];
    return t;
  }
  i(WFe, "copyObject");
  function HFe(e, t) {
    return e.released = d8(e.released, t.released), e.versions = d8(e.versions, t.versions), e.releaseDate = WFe(e.releaseDate), e.released.
    forEach(function(r) {
      e.releaseDate[r] === void 0 && (e.releaseDate[r] = t.releaseDate[r]);
    }), e;
  }
  i(HFe, "normalizeAndroidData");
  function Il(e, t) {
    var r = Ea(e, t);
    if (!r) throw new vs("Unknown browser " + e);
    return r;
  }
  i(Il, "checkName");
  function GFe(e) {
    return new vs(
      "Unknown browser query `" + e + "`. Maybe you are using old Browserslist or made typo in query."
    );
  }
  i(GFe, "unknownQuery");
  function Xh(e, t, r, s) {
    var n = 1;
    switch (t) {
      case "android":
        if (s.mobileToDesktop) return e;
        var a = we.data.chrome.released;
        n = a.length - a.indexOf(g8);
        break;
      case "op_mob":
        var o = we.data.op_mob.released.slice(-1)[0];
        n = IT(o) - qFe + 1;
        break;
      default:
        return e;
    }
    return r <= n ? e.slice(-1) : e.slice(n - 1 - r);
  }
  i(Xh, "filterJumps");
  function h8(e, t) {
    return typeof e == "string" && (e.indexOf("y") >= 0 || t && e.indexOf("a") >= 0);
  }
  i(h8, "isSupported");
  function _l(e, t) {
    return y8(_T, e).reduce(function(r, s, n) {
      if (s.not && n === 0)
        throw new vs(
          "Write any browsers query (for instance, `defaults`) before `" + s.query + "`"
        );
      var a = _T[s.type], o = a.select.call(we, t, s).map(function(u) {
        var c = u.split(" ");
        return c[1] === "0" ? c[0] + " " + Ea(c[0], t).versions[0] : u;
      });
      if (s.compose === "and")
        return s.not ? r.filter(function(u) {
          return o.indexOf(u) === -1;
        }) : r.filter(function(u) {
          return o.indexOf(u) !== -1;
        });
      if (s.not) {
        var l = {};
        return o.forEach(function(u) {
          l[u] = !0;
        }), r.filter(function(u) {
          return !l[u];
        });
      }
      return r.concat(o);
    }, []);
  }
  i(_l, "resolve");
  function S8(e) {
    return typeof e > "u" && (e = {}), typeof e.path > "u" && (e.path = Jh.resolve ? Jh.resolve(".") : "."), e;
  }
  i(S8, "prepareOpts");
  function T8(e, t) {
    if (typeof e > "u" || e === null) {
      var r = we.loadConfig(t);
      r ? e = r : e = we.defaults;
    }
    return e;
  }
  i(T8, "prepareQueries");
  function x8(e) {
    if (!(typeof e == "string" || Array.isArray(e)))
      throw new vs(
        "Browser queries must be an array or string. Got " + typeof e + "."
      );
  }
  i(x8, "checkQueries");
  var CT = {};
  function we(e, t) {
    t = S8(t), e = T8(e, t), x8(e);
    var r = {
      ignoreUnknownVersions: t.ignoreUnknownVersions,
      dangerousExtend: t.dangerousExtend,
      mobileToDesktop: t.mobileToDesktop,
      path: t.path,
      env: t.env
    };
    Wr.oldDataWarning(we.data);
    var s = Wr.getStat(t, we.data);
    if (s) {
      r.customUsage = {};
      for (var n in s)
        Qh(r.customUsage, n, s[n]);
    }
    var a = JSON.stringify([e, r]);
    if (CT[a]) return CT[a];
    var o = E8(_l(e, r)).sort(function(l, u) {
      if (l = l.split(" "), u = u.split(" "), l[0] === u[0]) {
        var c = l[1].split("-")[0], f = u[1].split("-")[0];
        return zc(f.split("."), c.split("."));
      } else
        return zh(l[0], u[0]);
    });
    return Wr.env.BROWSERSLIST_DISABLE_CACHE || (CT[a] = o), o;
  }
  i(we, "browserslist");
  we.parse = function(e, t) {
    return t = S8(t), e = T8(e, t), x8(e), y8(_T, e);
  };
  we.cache = {};
  we.data = {};
  we.usage = {
    global: {},
    custom: null
  };
  we.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"];
  we.aliases = {
    fx: "firefox",
    ff: "firefox",
    ios: "ios_saf",
    explorer: "ie",
    blackberry: "bb",
    explorermobile: "ie_mob",
    operamini: "op_mini",
    operamobile: "op_mob",
    chromeandroid: "and_chr",
    firefoxandroid: "and_ff",
    ucandroid: "and_uc",
    qqandroid: "and_qq"
  };
  we.desktopNames = {
    and_chr: "chrome",
    and_ff: "firefox",
    ie_mob: "ie",
    android: "chrome"
    // has extra processing logic
  };
  we.versionAliases = {};
  we.clearCaches = Wr.clearCaches;
  we.parseConfig = Wr.parseConfig;
  we.readConfig = Wr.readConfig;
  we.findConfig = Wr.findConfig;
  we.loadConfig = Wr.loadConfig;
  we.coverage = function(e, t) {
    var r;
    if (typeof t > "u")
      r = we.usage.global;
    else if (t === "my stats") {
      var s = {};
      s.path = Jh.resolve ? Jh.resolve(".") : ".";
      var n = Wr.getStat(s);
      if (!n)
        throw new vs("Custom usage statistics was not provided");
      r = {};
      for (var a in n)
        Qh(r, a, n[a]);
    } else if (typeof t == "string")
      t.length > 2 ? t = t.toLowerCase() : t = t.toUpperCase(), Wr.loadCountry(we.usage, t, we.data), r = we.usage[t];
    else {
      "dataByBrowser" in t && (t = t.dataByBrowser), r = {};
      for (var o in t)
        for (var l in t[o])
          r[o + " " + l] = t[o][l];
    }
    return e.reduce(function(u, c) {
      var f = r[c];
      return f === void 0 && (f = r[c.replace(/ \S+$/, " 0")]), u + (f || 0);
    }, 0);
  };
  function wT(e, t) {
    var r = we.nodeVersions.filter(function(s) {
      return b8(s, t.version);
    });
    if (r.length === 0) {
      if (e.ignoreUnknownVersions)
        return [];
      throw new vs(
        "Unknown version " + t.version + " of Node.js"
      );
    }
    return ["node " + r[r.length - 1]];
  }
  i(wT, "nodeQuery");
  function DT(e, t) {
    var r = parseInt(t.year), s = parseInt(t.month || "01") - 1, n = parseInt(t.day || "01");
    return v8(Date.UTC(r, s, n, 0, 0, 0), e);
  }
  i(DT, "sinceQuery");
  function m8(e, t) {
    var r = parseFloat(t.coverage), s = we.usage.global;
    if (t.place)
      if (t.place.match(/^my\s+stats$/i)) {
        if (!e.customUsage)
          throw new vs("Custom usage statistics was not provided");
        s = e.customUsage;
      } else {
        var n;
        t.place.length === 2 ? n = t.place.toUpperCase() : n = t.place.toLowerCase(), Wr.loadCountry(we.usage, n, we.data), s = we.usage[n];
      }
    for (var a = Object.keys(s).sort(function(f, p) {
      return s[p] - s[f];
    }), o = 0, l = [], u, c = 0; c < a.length && (u = a[c], !(s[u] === 0 || (o += s[u], l.push(u), o >= r))); c++)
      ;
    return l;
  }
  i(m8, "coverQuery");
  var _T = {
    last_major_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return Object.keys(Ai).reduce(function(r, s) {
          var n = Ea(s, e);
          if (!n) return r;
          var a = Kh(n.released, t.versions);
          return a = a.map(ga(n.name)), a = Xh(a, n.name, t.versions, e), r.concat(a);
        }, []);
      }, "select")
    },
    last_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return Object.keys(Ai).reduce(function(r, s) {
          var n = Ea(s, e);
          if (!n) return r;
          var a = n.released.slice(-t.versions);
          return a = a.map(ga(n.name)), a = Xh(a, n.name, t.versions, e), r.concat(a);
        }, []);
      }, "select")
    },
    last_electron_major_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Kh(Object.keys(gn), t.versions);
        return r.map(function(s) {
          return "chrome " + gn[s];
        });
      }, "select")
    },
    last_node_major_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return Kh(we.nodeVersions, t.versions).map(
          function(r) {
            return "node " + r;
          }
        );
      }, "select")
    },
    last_browser_major_versions: {
      matches: ["versions", "browser"],
      regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Il(t.browser, e), s = Kh(r.released, t.versions), n = s.map(ga(r.name));
        return n = Xh(n, r.name, t.versions, e), n;
      }, "select")
    },
    last_electron_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return Object.keys(gn).slice(-t.versions).map(function(r) {
          return "chrome " + gn[r];
        });
      }, "select")
    },
    last_node_versions: {
      matches: ["versions"],
      regexp: /^last\s+(\d+)\s+node\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return we.nodeVersions.slice(-t.versions).map(function(r) {
          return "node " + r;
        });
      }, "select")
    },
    last_browser_versions: {
      matches: ["versions", "browser"],
      regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Il(t.browser, e), s = r.released.slice(-t.versions).map(ga(r.name));
        return s = Xh(s, r.name, t.versions, e), s;
      }, "select")
    },
    unreleased_versions: {
      matches: [],
      regexp: /^unreleased\s+versions$/i,
      select: /* @__PURE__ */ i(function(e) {
        return Object.keys(Ai).reduce(function(t, r) {
          var s = Ea(r, e);
          if (!s) return t;
          var n = s.versions.filter(function(a) {
            return s.released.indexOf(a) === -1;
          });
          return n = n.map(ga(s.name)), t.concat(n);
        }, []);
      }, "select")
    },
    unreleased_electron_versions: {
      matches: [],
      regexp: /^unreleased\s+electron\s+versions?$/i,
      select: /* @__PURE__ */ i(function() {
        return [];
      }, "select")
    },
    unreleased_browser_versions: {
      matches: ["browser"],
      regexp: /^unreleased\s+(\w+)\s+versions?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Il(t.browser, e);
        return r.versions.filter(function(s) {
          return r.released.indexOf(s) === -1;
        }).map(ga(r.name));
      }, "select")
    },
    last_years: {
      matches: ["years"],
      regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return v8(Date.now() - jFe * t.years, e);
      }, "select")
    },
    since_y: {
      matches: ["year"],
      regexp: /^since (\d+)$/i,
      select: DT
    },
    since_y_m: {
      matches: ["year", "month"],
      regexp: /^since (\d+)-(\d+)$/i,
      select: DT
    },
    since_y_m_d: {
      matches: ["year", "month", "day"],
      regexp: /^since (\d+)-(\d+)-(\d+)$/i,
      select: DT
    },
    popularity: {
      matches: ["sign", "popularity"],
      regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = parseFloat(t.popularity), s = we.usage.global;
        return Object.keys(s).reduce(function(n, a) {
          return t.sign === ">" ? s[a] > r && n.push(a) : t.sign === "<" ? s[a] < r && n.push(a) : t.sign === "<=" ? s[a] <= r && n.push(a) :
          s[a] >= r && n.push(a), n;
        }, []);
      }, "select")
    },
    popularity_in_my_stats: {
      matches: ["sign", "popularity"],
      regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = parseFloat(t.popularity);
        if (!e.customUsage)
          throw new vs("Custom usage statistics was not provided");
        var s = e.customUsage;
        return Object.keys(s).reduce(function(n, a) {
          var o = s[a];
          return o == null || (t.sign === ">" ? o > r && n.push(a) : t.sign === "<" ? o < r && n.push(a) : t.sign === "<=" ? o <= r && n.push(
          a) : o >= r && n.push(a)), n;
        }, []);
      }, "select")
    },
    popularity_in_config_stats: {
      matches: ["sign", "popularity", "config"],
      regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = parseFloat(t.popularity), s = Wr.loadStat(e, t.config, we.data);
        if (s) {
          e.customUsage = {};
          for (var n in s)
            Qh(e.customUsage, n, s[n]);
        }
        if (!e.customUsage)
          throw new vs("Custom usage statistics was not provided");
        var a = e.customUsage;
        return Object.keys(a).reduce(function(o, l) {
          var u = a[l];
          return u == null || (t.sign === ">" ? u > r && o.push(l) : t.sign === "<" ? u < r && o.push(l) : t.sign === "<=" ? u <= r && o.push(
          l) : u >= r && o.push(l)), o;
        }, []);
      }, "select")
    },
    popularity_in_place: {
      matches: ["sign", "popularity", "place"],
      regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = parseFloat(t.popularity), s = t.place;
        s.length === 2 ? s = s.toUpperCase() : s = s.toLowerCase(), Wr.loadCountry(we.usage, s, we.data);
        var n = we.usage[s];
        return Object.keys(n).reduce(function(a, o) {
          var l = n[o];
          return l == null || (t.sign === ">" ? l > r && a.push(o) : t.sign === "<" ? l < r && a.push(o) : t.sign === "<=" ? l <= r && a.push(
          o) : l >= r && a.push(o)), a;
        }, []);
      }, "select")
    },
    cover: {
      matches: ["coverage"],
      regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
      select: m8
    },
    cover_in: {
      matches: ["coverage", "place"],
      regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
      select: m8
    },
    supports: {
      matches: ["supportType", "feature"],
      regexp: /^(?:(fully|partially)\s+)?supports\s+([\w-]+)$/,
      select: /* @__PURE__ */ i(function(e, t) {
        Wr.loadFeature(we.cache, t.feature);
        var r = t.supportType !== "fully", s = we.cache[t.feature], n = [];
        for (var a in s) {
          var o = Ea(a, e), l = e.mobileToDesktop && a in we.desktopNames && h8(s[a][o.released.slice(-1)[0]], r);
          o.versions.forEach(function(u) {
            var c = s[a][u];
            c === void 0 && l && (c = s[we.desktopNames[a]][u]), h8(c, r) && n.push(a + " " + u);
          });
        }
        return n;
      }, "select")
    },
    electron_range: {
      matches: ["from", "to"],
      regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Gh(t.from), s = Gh(t.to), n = parseFloat(t.from), a = parseFloat(t.to);
        if (!gn[r])
          throw new vs("Unknown version " + n + " of electron");
        if (!gn[s])
          throw new vs("Unknown version " + a + " of electron");
        return Object.keys(gn).filter(function(o) {
          var l = parseFloat(o);
          return l >= n && l <= a;
        }).map(function(o) {
          return "chrome " + gn[o];
        });
      }, "select")
    },
    node_range: {
      matches: ["from", "to"],
      regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return we.nodeVersions.filter(c8(">=", t.from)).filter(c8("<=", t.to)).map(function(r) {
          return "node " + r;
        });
      }, "select")
    },
    browser_range: {
      matches: ["browser", "from", "to"],
      regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Il(t.browser, e), s = parseFloat(Yh(r, t.from) || t.from), n = parseFloat(Yh(r, t.to) || t.to);
        function a(o) {
          var l = parseFloat(o);
          return l >= s && l <= n;
        }
        return i(a, "filter"), r.released.filter(a).map(ga(r.name));
      }, "select")
    },
    electron_ray: {
      matches: ["sign", "version"],
      regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Gh(t.version);
        return Object.keys(gn).filter(u8(t.sign, r)).map(function(s) {
          return "chrome " + gn[s];
        });
      }, "select")
    },
    node_ray: {
      matches: ["sign", "version"],
      regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return we.nodeVersions.filter(UFe(t.sign, t.version)).map(function(r) {
          return "node " + r;
        });
      }, "select")
    },
    browser_ray: {
      matches: ["browser", "sign", "version"],
      regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = t.version, s = Il(t.browser, e), n = we.versionAliases[s.name][r];
        return n && (r = n), s.released.filter(u8(t.sign, r)).map(function(a) {
          return s.name + " " + a;
        });
      }, "select")
    },
    firefox_esr: {
      matches: [],
      regexp: /^(firefox|ff|fx)\s+esr$/i,
      select: /* @__PURE__ */ i(function() {
        return ["firefox 115"];
      }, "select")
    },
    opera_mini_all: {
      matches: [],
      regexp: /(operamini|op_mini)\s+all/i,
      select: /* @__PURE__ */ i(function() {
        return ["op_mini all"];
      }, "select")
    },
    electron_version: {
      matches: ["version"],
      regexp: /^electron\s+([\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = Gh(t.version), s = gn[r];
        if (!s)
          throw new vs(
            "Unknown version " + t.version + " of electron"
          );
        return ["chrome " + s];
      }, "select")
    },
    node_major_version: {
      matches: ["version"],
      regexp: /^node\s+(\d+)$/i,
      select: wT
    },
    node_minor_version: {
      matches: ["version"],
      regexp: /^node\s+(\d+\.\d+)$/i,
      select: wT
    },
    node_patch_version: {
      matches: ["version"],
      regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
      select: wT
    },
    current_node: {
      matches: [],
      regexp: /^current\s+node$/i,
      select: /* @__PURE__ */ i(function(e) {
        return [Wr.currentNode(_l, e)];
      }, "select")
    },
    maintained_node: {
      matches: [],
      regexp: /^maintained\s+node\s+versions$/i,
      select: /* @__PURE__ */ i(function(e) {
        var t = Date.now(), r = Object.keys(AT).filter(function(s) {
          return t < Date.parse(AT[s].end) && t > Date.parse(AT[s].start) && $Fe(s);
        }).map(function(s) {
          return "node " + s.slice(1);
        });
        return _l(r, e);
      }, "select")
    },
    phantomjs_1_9: {
      matches: [],
      regexp: /^phantomjs\s+1.9$/i,
      select: /* @__PURE__ */ i(function() {
        return ["safari 5"];
      }, "select")
    },
    phantomjs_2_1: {
      matches: [],
      regexp: /^phantomjs\s+2.1$/i,
      select: /* @__PURE__ */ i(function() {
        return ["safari 6"];
      }, "select")
    },
    browser_version: {
      matches: ["browser", "version"],
      regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        var r = t.version;
        /^tp$/i.test(r) && (r = "TP");
        var s = Il(t.browser, e), n = Yh(s, r);
        if (n)
          r = n;
        else if (r.indexOf(".") === -1 ? n = r + ".0" : n = r.replace(/\.0$/, ""), n = Yh(s, n), n)
          r = n;
        else {
          if (e.ignoreUnknownVersions)
            return [];
          throw new vs(
            "Unknown version " + r + " of " + t.browser
          );
        }
        return [s.name + " " + r];
      }, "select")
    },
    browserslist_config: {
      matches: [],
      regexp: /^browserslist config$/i,
      select: /* @__PURE__ */ i(function(e) {
        return we(void 0, e);
      }, "select")
    },
    extends: {
      matches: ["config"],
      regexp: /^extends (.+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        return _l(Wr.loadQueries(e, t.config), e);
      }, "select")
    },
    defaults: {
      matches: [],
      regexp: /^defaults$/i,
      select: /* @__PURE__ */ i(function(e) {
        return _l(we.defaults, e);
      }, "select")
    },
    dead: {
      matches: [],
      regexp: /^dead$/i,
      select: /* @__PURE__ */ i(function(e) {
        var t = [
          "Baidu >= 0",
          "ie <= 11",
          "ie_mob <= 11",
          "bb <= 10",
          "op_mob <= 12.1",
          "samsung 4"
        ];
        return _l(t, e);
      }, "select")
    },
    unknown: {
      matches: [],
      regexp: /^(\w+)$/i,
      select: /* @__PURE__ */ i(function(e, t) {
        throw Ea(t.query, e) ? new vs(
          "Specify versions in Browserslist query for browser " + t.query
        ) : GFe(t.query);
      }, "select")
    }
  };
  (function() {
    for (var e in Ai) {
      var t = Ai[e];
      we.data[e] = {
        name: e,
        versions: l8(Ai[e].versions),
        released: l8(Ai[e].versions.slice(0, -3)),
        releaseDate: Ai[e].release_date
      }, Qh(we.usage.global, e, t.usage_global), we.versionAliases[e] = {};
      for (var r = 0; r < t.versions.length; r++) {
        var s = t.versions[r];
        if (s && s.indexOf("-") !== -1)
          for (var n = s.split("-"), a = 0; a < n.length; a++)
            we.versionAliases[e][n[a]] = s;
      }
    }
    we.nodeVersions = MFe.map(function(o) {
      return o.version;
    });
  })();
  P8.exports = we;
});

// ../node_modules/@babel/helper-validator-option/lib/find-suggestion.js
var NT = y((OT) => {
  "use strict";
  Object.defineProperty(OT, "__esModule", {
    value: !0
  });
  OT.findSuggestion = YFe;
  var {
    min: C8
  } = Math;
  function KFe(e, t) {
    let r = [], s = [], n, a, o = e.length, l = t.length;
    if (!o)
      return l;
    if (!l)
      return o;
    for (a = 0; a <= l; a++)
      r[a] = a;
    for (n = 1; n <= o; n++) {
      for (s = [n], a = 1; a <= l; a++)
        s[a] = e[n - 1] === t[a - 1] ? r[a - 1] : C8(r[a - 1], r[a], s[a - 1]) + 1;
      r = s;
    }
    return s[l];
  }
  i(KFe, "levenshtein");
  function YFe(e, t) {
    let r = t.map((s) => KFe(s, e));
    return t[r.indexOf(C8(...r))];
  }
  i(YFe, "findSuggestion");
});

// ../node_modules/@babel/helper-validator-option/lib/validator.js
var w8 = y((Zh) => {
  "use strict";
  Object.defineProperty(Zh, "__esModule", {
    value: !0
  });
  Zh.OptionValidator = void 0;
  var XFe = NT(), RT = class {
    static {
      i(this, "OptionValidator");
    }
    constructor(t) {
      this.descriptor = t;
    }
    validateTopLevelOptions(t, r) {
      let s = Object.keys(r);
      for (let n of Object.keys(t))
        if (!s.includes(n))
          throw new Error(this.formatMessage(`'${n}' is not a valid top-level option.
- Did you mean '${(0, XFe.findSuggestion)(n, s)}'?`));
    }
    validateBooleanOption(t, r, s) {
      return r === void 0 ? s : (this.invariant(typeof r == "boolean", `'${t}' option must be a boolean.`), r);
    }
    validateStringOption(t, r, s) {
      return r === void 0 ? s : (this.invariant(typeof r == "string", `'${t}' option must be a string.`), r);
    }
    invariant(t, r) {
      if (!t)
        throw new Error(this.formatMessage(r));
    }
    formatMessage(t) {
      return `${this.descriptor}: ${t}`;
    }
  };
  Zh.OptionValidator = RT;
});

// ../node_modules/@babel/helper-validator-option/lib/index.js
var tm = y((em) => {
  "use strict";
  Object.defineProperty(em, "__esModule", {
    value: !0
  });
  Object.defineProperty(em, "OptionValidator", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return zFe.OptionValidator;
    }, "get")
  });
  Object.defineProperty(em, "findSuggestion", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return JFe.findSuggestion;
    }, "get")
  });
  var zFe = w8(), JFe = NT();
});

// ../node_modules/@babel/compat-data/data/native-modules.json
var D8 = y((fit, QFe) => {
  QFe.exports = {
    "es6.module": {
      chrome: "61",
      and_chr: "61",
      edge: "16",
      firefox: "60",
      and_ff: "60",
      node: "13.2.0",
      opera: "48",
      op_mob: "45",
      safari: "10.1",
      ios: "10.3",
      samsung: "8.2",
      android: "61",
      electron: "2.0",
      ios_saf: "10.3"
    }
  };
});

// ../node_modules/@babel/compat-data/native-modules.js
var _8 = y((pit, I8) => {
  I8.exports = D8();
});

// ../node_modules/@babel/helper-compilation-targets/node_modules/yallist/iterator.js
var N8 = y((dit, O8) => {
  "use strict";
  O8.exports = function(e) {
    e.prototype[Symbol.iterator] = function* () {
      for (let t = this.head; t; t = t.next)
        yield t.value;
    };
  };
});

// ../node_modules/@babel/helper-compilation-targets/node_modules/yallist/yallist.js
var k8 = y((hit, R8) => {
  "use strict";
  R8.exports = xt;
  xt.Node = mo;
  xt.create = xt;
  function xt(e) {
    var t = this;
    if (t instanceof xt || (t = new xt()), t.tail = null, t.head = null, t.length = 0, e && typeof e.forEach == "function")
      e.forEach(function(n) {
        t.push(n);
      });
    else if (arguments.length > 0)
      for (var r = 0, s = arguments.length; r < s; r++)
        t.push(arguments[r]);
    return t;
  }
  i(xt, "Yallist");
  xt.prototype.removeNode = function(e) {
    if (e.list !== this)
      throw new Error("removing node which does not belong to this list");
    var t = e.next, r = e.prev;
    return t && (t.prev = r), r && (r.next = t), e === this.head && (this.head = t), e === this.tail && (this.tail = r), e.list.length--, e.
    next = null, e.prev = null, e.list = null, t;
  };
  xt.prototype.unshiftNode = function(e) {
    if (e !== this.head) {
      e.list && e.list.removeNode(e);
      var t = this.head;
      e.list = this, e.next = t, t && (t.prev = e), this.head = e, this.tail || (this.tail = e), this.length++;
    }
  };
  xt.prototype.pushNode = function(e) {
    if (e !== this.tail) {
      e.list && e.list.removeNode(e);
      var t = this.tail;
      e.list = this, e.prev = t, t && (t.next = e), this.tail = e, this.head || (this.head = e), this.length++;
    }
  };
  xt.prototype.push = function() {
    for (var e = 0, t = arguments.length; e < t; e++)
      eLe(this, arguments[e]);
    return this.length;
  };
  xt.prototype.unshift = function() {
    for (var e = 0, t = arguments.length; e < t; e++)
      tLe(this, arguments[e]);
    return this.length;
  };
  xt.prototype.pop = function() {
    if (this.tail) {
      var e = this.tail.value;
      return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e;
    }
  };
  xt.prototype.shift = function() {
    if (this.head) {
      var e = this.head.value;
      return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e;
    }
  };
  xt.prototype.forEach = function(e, t) {
    t = t || this;
    for (var r = this.head, s = 0; r !== null; s++)
      e.call(t, r.value, s, this), r = r.next;
  };
  xt.prototype.forEachReverse = function(e, t) {
    t = t || this;
    for (var r = this.tail, s = this.length - 1; r !== null; s--)
      e.call(t, r.value, s, this), r = r.prev;
  };
  xt.prototype.get = function(e) {
    for (var t = 0, r = this.head; r !== null && t < e; t++)
      r = r.next;
    if (t === e && r !== null)
      return r.value;
  };
  xt.prototype.getReverse = function(e) {
    for (var t = 0, r = this.tail; r !== null && t < e; t++)
      r = r.prev;
    if (t === e && r !== null)
      return r.value;
  };
  xt.prototype.map = function(e, t) {
    t = t || this;
    for (var r = new xt(), s = this.head; s !== null; )
      r.push(e.call(t, s.value, this)), s = s.next;
    return r;
  };
  xt.prototype.mapReverse = function(e, t) {
    t = t || this;
    for (var r = new xt(), s = this.tail; s !== null; )
      r.push(e.call(t, s.value, this)), s = s.prev;
    return r;
  };
  xt.prototype.reduce = function(e, t) {
    var r, s = this.head;
    if (arguments.length > 1)
      r = t;
    else if (this.head)
      s = this.head.next, r = this.head.value;
    else
      throw new TypeError("Reduce of empty list with no initial value");
    for (var n = 0; s !== null; n++)
      r = e(r, s.value, n), s = s.next;
    return r;
  };
  xt.prototype.reduceReverse = function(e, t) {
    var r, s = this.tail;
    if (arguments.length > 1)
      r = t;
    else if (this.tail)
      s = this.tail.prev, r = this.tail.value;
    else
      throw new TypeError("Reduce of empty list with no initial value");
    for (var n = this.length - 1; s !== null; n--)
      r = e(r, s.value, n), s = s.prev;
    return r;
  };
  xt.prototype.toArray = function() {
    for (var e = new Array(this.length), t = 0, r = this.head; r !== null; t++)
      e[t] = r.value, r = r.next;
    return e;
  };
  xt.prototype.toArrayReverse = function() {
    for (var e = new Array(this.length), t = 0, r = this.tail; r !== null; t++)
      e[t] = r.value, r = r.prev;
    return e;
  };
  xt.prototype.slice = function(e, t) {
    t = t || this.length, t < 0 && (t += this.length), e = e || 0, e < 0 && (e += this.length);
    var r = new xt();
    if (t < e || t < 0)
      return r;
    e < 0 && (e = 0), t > this.length && (t = this.length);
    for (var s = 0, n = this.head; n !== null && s < e; s++)
      n = n.next;
    for (; n !== null && s < t; s++, n = n.next)
      r.push(n.value);
    return r;
  };
  xt.prototype.sliceReverse = function(e, t) {
    t = t || this.length, t < 0 && (t += this.length), e = e || 0, e < 0 && (e += this.length);
    var r = new xt();
    if (t < e || t < 0)
      return r;
    e < 0 && (e = 0), t > this.length && (t = this.length);
    for (var s = this.length, n = this.tail; n !== null && s > t; s--)
      n = n.prev;
    for (; n !== null && s > e; s--, n = n.prev)
      r.push(n.value);
    return r;
  };
  xt.prototype.splice = function(e, t) {
    e > this.length && (e = this.length - 1), e < 0 && (e = this.length + e);
    for (var r = 0, s = this.head; s !== null && r < e; r++)
      s = s.next;
    for (var n = [], r = 0; s && r < t; r++)
      n.push(s.value), s = this.removeNode(s);
    s === null && (s = this.tail), s !== this.head && s !== this.tail && (s = s.prev);
    for (var r = 2; r < arguments.length; r++)
      s = ZFe(this, s, arguments[r]);
    return n;
  };
  xt.prototype.reverse = function() {
    for (var e = this.head, t = this.tail, r = e; r !== null; r = r.prev) {
      var s = r.prev;
      r.prev = r.next, r.next = s;
    }
    return this.head = t, this.tail = e, this;
  };
  function ZFe(e, t, r) {
    var s = t === e.head ? new mo(r, null, t, e) : new mo(r, t, t.next, e);
    return s.next === null && (e.tail = s), s.prev === null && (e.head = s), e.length++, s;
  }
  i(ZFe, "insert");
  function eLe(e, t) {
    e.tail = new mo(t, e.tail, null, e), e.head || (e.head = e.tail), e.length++;
  }
  i(eLe, "push");
  function tLe(e, t) {
    e.head = new mo(t, null, e.head, e), e.tail || (e.tail = e.head), e.length++;
  }
  i(tLe, "unshift");
  function mo(e, t, r, s) {
    if (!(this instanceof mo))
      return new mo(e, t, r, s);
    this.list = s, this.value = e, t ? (t.next = this, this.prev = t) : this.prev = null, r ? (r.prev = this, this.next = r) : this.next = null;
  }
  i(mo, "Node");
  try {
    N8()(xt);
  } catch {
  }
});

// ../node_modules/@babel/helper-compilation-targets/node_modules/lru-cache/index.js
var j8 = y((yit, M8) => {
  "use strict";
  var rLe = k8(), yo = Symbol("max"), wi = Symbol("length"), Ol = Symbol("lengthCalculator"), Qc = Symbol("allowStale"), go = Symbol("maxAge"),
  Ci = Symbol("dispose"), F8 = Symbol("noDisposeOnSet"), _r = Symbol("lruList"), bn = Symbol("cache"), B8 = Symbol("updateAgeOnGet"), kT = /* @__PURE__ */ i(
  () => 1, "naiveLength"), LT = class {
    static {
      i(this, "LRUCache");
    }
    constructor(t) {
      if (typeof t == "number" && (t = { max: t }), t || (t = {}), t.max && (typeof t.max != "number" || t.max < 0))
        throw new TypeError("max must be a non-negative number");
      let r = this[yo] = t.max || 1 / 0, s = t.length || kT;
      if (this[Ol] = typeof s != "function" ? kT : s, this[Qc] = t.stale || !1, t.maxAge && typeof t.maxAge != "number")
        throw new TypeError("maxAge must be a number");
      this[go] = t.maxAge || 0, this[Ci] = t.dispose, this[F8] = t.noDisposeOnSet || !1, this[B8] = t.updateAgeOnGet || !1, this.reset();
    }
    // resize the cache when the max changes.
    set max(t) {
      if (typeof t != "number" || t < 0)
        throw new TypeError("max must be a non-negative number");
      this[yo] = t || 1 / 0, Jc(this);
    }
    get max() {
      return this[yo];
    }
    set allowStale(t) {
      this[Qc] = !!t;
    }
    get allowStale() {
      return this[Qc];
    }
    set maxAge(t) {
      if (typeof t != "number")
        throw new TypeError("maxAge must be a non-negative number");
      this[go] = t, Jc(this);
    }
    get maxAge() {
      return this[go];
    }
    // resize the cache when the lengthCalculator changes.
    set lengthCalculator(t) {
      typeof t != "function" && (t = kT), t !== this[Ol] && (this[Ol] = t, this[wi] = 0, this[_r].forEach((r) => {
        r.length = this[Ol](r.value, r.key), this[wi] += r.length;
      })), Jc(this);
    }
    get lengthCalculator() {
      return this[Ol];
    }
    get length() {
      return this[wi];
    }
    get itemCount() {
      return this[_r].length;
    }
    rforEach(t, r) {
      r = r || this;
      for (let s = this[_r].tail; s !== null; ) {
        let n = s.prev;
        L8(this, t, s, r), s = n;
      }
    }
    forEach(t, r) {
      r = r || this;
      for (let s = this[_r].head; s !== null; ) {
        let n = s.next;
        L8(this, t, s, r), s = n;
      }
    }
    keys() {
      return this[_r].toArray().map((t) => t.key);
    }
    values() {
      return this[_r].toArray().map((t) => t.value);
    }
    reset() {
      this[Ci] && this[_r] && this[_r].length && this[_r].forEach((t) => this[Ci](t.key, t.value)), this[bn] = /* @__PURE__ */ new Map(), this[_r] =
      new rLe(), this[wi] = 0;
    }
    dump() {
      return this[_r].map((t) => rm(this, t) ? !1 : {
        k: t.key,
        v: t.value,
        e: t.now + (t.maxAge || 0)
      }).toArray().filter((t) => t);
    }
    dumpLru() {
      return this[_r];
    }
    set(t, r, s) {
      if (s = s || this[go], s && typeof s != "number")
        throw new TypeError("maxAge must be a number");
      let n = s ? Date.now() : 0, a = this[Ol](r, t);
      if (this[bn].has(t)) {
        if (a > this[yo])
          return Nl(this, this[bn].get(t)), !1;
        let u = this[bn].get(t).value;
        return this[Ci] && (this[F8] || this[Ci](t, u.value)), u.now = n, u.maxAge = s, u.value = r, this[wi] += a - u.length, u.length = a,
        this.get(t), Jc(this), !0;
      }
      let o = new BT(t, r, a, n, s);
      return o.length > this[yo] ? (this[Ci] && this[Ci](t, r), !1) : (this[wi] += o.length, this[_r].unshift(o), this[bn].set(t, this[_r].head),
      Jc(this), !0);
    }
    has(t) {
      if (!this[bn].has(t)) return !1;
      let r = this[bn].get(t).value;
      return !rm(this, r);
    }
    get(t) {
      return FT(this, t, !0);
    }
    peek(t) {
      return FT(this, t, !1);
    }
    pop() {
      let t = this[_r].tail;
      return t ? (Nl(this, t), t.value) : null;
    }
    del(t) {
      Nl(this, this[bn].get(t));
    }
    load(t) {
      this.reset();
      let r = Date.now();
      for (let s = t.length - 1; s >= 0; s--) {
        let n = t[s], a = n.e || 0;
        if (a === 0)
          this.set(n.k, n.v);
        else {
          let o = a - r;
          o > 0 && this.set(n.k, n.v, o);
        }
      }
    }
    prune() {
      this[bn].forEach((t, r) => FT(this, r, !1));
    }
  }, FT = /* @__PURE__ */ i((e, t, r) => {
    let s = e[bn].get(t);
    if (s) {
      let n = s.value;
      if (rm(e, n)) {
        if (Nl(e, s), !e[Qc])
          return;
      } else
        r && (e[B8] && (s.value.now = Date.now()), e[_r].unshiftNode(s));
      return n.value;
    }
  }, "get"), rm = /* @__PURE__ */ i((e, t) => {
    if (!t || !t.maxAge && !e[go])
      return !1;
    let r = Date.now() - t.now;
    return t.maxAge ? r > t.maxAge : e[go] && r > e[go];
  }, "isStale"), Jc = /* @__PURE__ */ i((e) => {
    if (e[wi] > e[yo])
      for (let t = e[_r].tail; e[wi] > e[yo] && t !== null; ) {
        let r = t.prev;
        Nl(e, t), t = r;
      }
  }, "trim"), Nl = /* @__PURE__ */ i((e, t) => {
    if (t) {
      let r = t.value;
      e[Ci] && e[Ci](r.key, r.value), e[wi] -= r.length, e[bn].delete(r.key), e[_r].removeNode(t);
    }
  }, "del"), BT = class {
    static {
      i(this, "Entry");
    }
    constructor(t, r, s, n, a) {
      this.key = t, this.value = r, this.length = s, this.now = n, this.maxAge = a || 0;
    }
  }, L8 = /* @__PURE__ */ i((e, t, r, s) => {
    let n = r.value;
    rm(e, n) && (Nl(e, r), e[Qc] || (n = void 0)), n && t.call(s, n.value, n.key, e);
  }, "forEachStep");
  M8.exports = LT;
});

// ../node_modules/@babel/helper-compilation-targets/node_modules/semver/semver.js
var rf = y((Ue, W8) => {
  Ue = W8.exports = Qe;
  var _t;
  typeof process == "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? _t = /* @__PURE__ */ i(
  function() {
    var e = Array.prototype.slice.call(arguments, 0);
    e.unshift("SEMVER"), console.log.apply(console, e);
  }, "debug") : _t = /* @__PURE__ */ i(function() {
  }, "debug");
  Ue.SEMVER_SPEC_VERSION = "2.0.0";
  var Zc = 256, sm = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
  9007199254740991, MT = 16, sLe = Zc - 6, Rl = Ue.re = [], It = Ue.safeRe = [], te = Ue.src = [], G = Ue.tokens = {}, U8 = 0;
  function it(e) {
    G[e] = U8++;
  }
  i(it, "tok");
  var qT = "[a-zA-Z0-9-]", jT = [
    ["\\s", 1],
    ["\\d", Zc],
    [qT, sLe]
  ];
  function tf(e) {
    for (var t = 0; t < jT.length; t++) {
      var r = jT[t][0], s = jT[t][1];
      e = e.split(r + "*").join(r + "{0," + s + "}").split(r + "+").join(r + "{1," + s + "}");
    }
    return e;
  }
  i(tf, "makeSafeRe");
  it("NUMERICIDENTIFIER");
  te[G.NUMERICIDENTIFIER] = "0|[1-9]\\d*";
  it("NUMERICIDENTIFIERLOOSE");
  te[G.NUMERICIDENTIFIERLOOSE] = "\\d+";
  it("NONNUMERICIDENTIFIER");
  te[G.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-]" + qT + "*";
  it("MAINVERSION");
  te[G.MAINVERSION] = "(" + te[G.NUMERICIDENTIFIER] + ")\\.(" + te[G.NUMERICIDENTIFIER] + ")\\.(" + te[G.NUMERICIDENTIFIER] + ")";
  it("MAINVERSIONLOOSE");
  te[G.MAINVERSIONLOOSE] = "(" + te[G.NUMERICIDENTIFIERLOOSE] + ")\\.(" + te[G.NUMERICIDENTIFIERLOOSE] + ")\\.(" + te[G.NUMERICIDENTIFIERLOOSE] +
  ")";
  it("PRERELEASEIDENTIFIER");
  te[G.PRERELEASEIDENTIFIER] = "(?:" + te[G.NUMERICIDENTIFIER] + "|" + te[G.NONNUMERICIDENTIFIER] + ")";
  it("PRERELEASEIDENTIFIERLOOSE");
  te[G.PRERELEASEIDENTIFIERLOOSE] = "(?:" + te[G.NUMERICIDENTIFIERLOOSE] + "|" + te[G.NONNUMERICIDENTIFIER] + ")";
  it("PRERELEASE");
  te[G.PRERELEASE] = "(?:-(" + te[G.PRERELEASEIDENTIFIER] + "(?:\\." + te[G.PRERELEASEIDENTIFIER] + ")*))";
  it("PRERELEASELOOSE");
  te[G.PRERELEASELOOSE] = "(?:-?(" + te[G.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + te[G.PRERELEASEIDENTIFIERLOOSE] + ")*))";
  it("BUILDIDENTIFIER");
  te[G.BUILDIDENTIFIER] = qT + "+";
  it("BUILD");
  te[G.BUILD] = "(?:\\+(" + te[G.BUILDIDENTIFIER] + "(?:\\." + te[G.BUILDIDENTIFIER] + ")*))";
  it("FULL");
  it("FULLPLAIN");
  te[G.FULLPLAIN] = "v?" + te[G.MAINVERSION] + te[G.PRERELEASE] + "?" + te[G.BUILD] + "?";
  te[G.FULL] = "^" + te[G.FULLPLAIN] + "$";
  it("LOOSEPLAIN");
  te[G.LOOSEPLAIN] = "[v=\\s]*" + te[G.MAINVERSIONLOOSE] + te[G.PRERELEASELOOSE] + "?" + te[G.BUILD] + "?";
  it("LOOSE");
  te[G.LOOSE] = "^" + te[G.LOOSEPLAIN] + "$";
  it("GTLT");
  te[G.GTLT] = "((?:<|>)?=?)";
  it("XRANGEIDENTIFIERLOOSE");
  te[G.XRANGEIDENTIFIERLOOSE] = te[G.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*";
  it("XRANGEIDENTIFIER");
  te[G.XRANGEIDENTIFIER] = te[G.NUMERICIDENTIFIER] + "|x|X|\\*";
  it("XRANGEPLAIN");
  te[G.XRANGEPLAIN] = "[v=\\s]*(" + te[G.XRANGEIDENTIFIER] + ")(?:\\.(" + te[G.XRANGEIDENTIFIER] + ")(?:\\.(" + te[G.XRANGEIDENTIFIER] + ")(\
?:" + te[G.PRERELEASE] + ")?" + te[G.BUILD] + "?)?)?";
  it("XRANGEPLAINLOOSE");
  te[G.XRANGEPLAINLOOSE] = "[v=\\s]*(" + te[G.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + te[G.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + te[G.XRANGEIDENTIFIERLOOSE] +
  ")(?:" + te[G.PRERELEASELOOSE] + ")?" + te[G.BUILD] + "?)?)?";
  it("XRANGE");
  te[G.XRANGE] = "^" + te[G.GTLT] + "\\s*" + te[G.XRANGEPLAIN] + "$";
  it("XRANGELOOSE");
  te[G.XRANGELOOSE] = "^" + te[G.GTLT] + "\\s*" + te[G.XRANGEPLAINLOOSE] + "$";
  it("COERCE");
  te[G.COERCE] = "(^|[^\\d])(\\d{1," + MT + "})(?:\\.(\\d{1," + MT + "}))?(?:\\.(\\d{1," + MT + "}))?(?:$|[^\\d])";
  it("COERCERTL");
  Rl[G.COERCERTL] = new RegExp(te[G.COERCE], "g");
  It[G.COERCERTL] = new RegExp(tf(te[G.COERCE]), "g");
  it("LONETILDE");
  te[G.LONETILDE] = "(?:~>?)";
  it("TILDETRIM");
  te[G.TILDETRIM] = "(\\s*)" + te[G.LONETILDE] + "\\s+";
  Rl[G.TILDETRIM] = new RegExp(te[G.TILDETRIM], "g");
  It[G.TILDETRIM] = new RegExp(tf(te[G.TILDETRIM]), "g");
  var nLe = "$1~";
  it("TILDE");
  te[G.TILDE] = "^" + te[G.LONETILDE] + te[G.XRANGEPLAIN] + "$";
  it("TILDELOOSE");
  te[G.TILDELOOSE] = "^" + te[G.LONETILDE] + te[G.XRANGEPLAINLOOSE] + "$";
  it("LONECARET");
  te[G.LONECARET] = "(?:\\^)";
  it("CARETTRIM");
  te[G.CARETTRIM] = "(\\s*)" + te[G.LONECARET] + "\\s+";
  Rl[G.CARETTRIM] = new RegExp(te[G.CARETTRIM], "g");
  It[G.CARETTRIM] = new RegExp(tf(te[G.CARETTRIM]), "g");
  var iLe = "$1^";
  it("CARET");
  te[G.CARET] = "^" + te[G.LONECARET] + te[G.XRANGEPLAIN] + "$";
  it("CARETLOOSE");
  te[G.CARETLOOSE] = "^" + te[G.LONECARET] + te[G.XRANGEPLAINLOOSE] + "$";
  it("COMPARATORLOOSE");
  te[G.COMPARATORLOOSE] = "^" + te[G.GTLT] + "\\s*(" + te[G.LOOSEPLAIN] + ")$|^$";
  it("COMPARATOR");
  te[G.COMPARATOR] = "^" + te[G.GTLT] + "\\s*(" + te[G.FULLPLAIN] + ")$|^$";
  it("COMPARATORTRIM");
  te[G.COMPARATORTRIM] = "(\\s*)" + te[G.GTLT] + "\\s*(" + te[G.LOOSEPLAIN] + "|" + te[G.XRANGEPLAIN] + ")";
  Rl[G.COMPARATORTRIM] = new RegExp(te[G.COMPARATORTRIM], "g");
  It[G.COMPARATORTRIM] = new RegExp(tf(te[G.COMPARATORTRIM]), "g");
  var aLe = "$1$2$3";
  it("HYPHENRANGE");
  te[G.HYPHENRANGE] = "^\\s*(" + te[G.XRANGEPLAIN] + ")\\s+-\\s+(" + te[G.XRANGEPLAIN] + ")\\s*$";
  it("HYPHENRANGELOOSE");
  te[G.HYPHENRANGELOOSE] = "^\\s*(" + te[G.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + te[G.XRANGEPLAINLOOSE] + ")\\s*$";
  it("STAR");
  te[G.STAR] = "(<|>)?=?\\s*\\*";
  for (Vn = 0; Vn < U8; Vn++)
    _t(Vn, te[Vn]), Rl[Vn] || (Rl[Vn] = new RegExp(te[Vn]), It[Vn] = new RegExp(tf(te[Vn])));
  var Vn;
  Ue.parse = Eo;
  function Eo(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Qe)
      return e;
    if (typeof e != "string" || e.length > Zc)
      return null;
    var r = t.loose ? It[G.LOOSE] : It[G.FULL];
    if (!r.test(e))
      return null;
    try {
      return new Qe(e, t);
    } catch {
      return null;
    }
  }
  i(Eo, "parse");
  Ue.valid = oLe;
  function oLe(e, t) {
    var r = Eo(e, t);
    return r ? r.version : null;
  }
  i(oLe, "valid");
  Ue.clean = lLe;
  function lLe(e, t) {
    var r = Eo(e.trim().replace(/^[=v]+/, ""), t);
    return r ? r.version : null;
  }
  i(lLe, "clean");
  Ue.SemVer = Qe;
  function Qe(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Qe) {
      if (e.loose === t.loose)
        return e;
      e = e.version;
    } else if (typeof e != "string")
      throw new TypeError("Invalid Version: " + e);
    if (e.length > Zc)
      throw new TypeError("version is longer than " + Zc + " characters");
    if (!(this instanceof Qe))
      return new Qe(e, t);
    _t("SemVer", e, t), this.options = t, this.loose = !!t.loose;
    var r = e.trim().match(t.loose ? It[G.LOOSE] : It[G.FULL]);
    if (!r)
      throw new TypeError("Invalid Version: " + e);
    if (this.raw = e, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > sm || this.major < 0)
      throw new TypeError("Invalid major version");
    if (this.minor > sm || this.minor < 0)
      throw new TypeError("Invalid minor version");
    if (this.patch > sm || this.patch < 0)
      throw new TypeError("Invalid patch version");
    r[4] ? this.prerelease = r[4].split(".").map(function(s) {
      if (/^[0-9]+$/.test(s)) {
        var n = +s;
        if (n >= 0 && n < sm)
          return n;
      }
      return s;
    }) : this.prerelease = [], this.build = r[5] ? r[5].split(".") : [], this.format();
  }
  i(Qe, "SemVer");
  Qe.prototype.format = function() {
    return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.
    join(".")), this.version;
  };
  Qe.prototype.toString = function() {
    return this.version;
  };
  Qe.prototype.compare = function(e) {
    return _t("SemVer.compare", this.version, this.options, e), e instanceof Qe || (e = new Qe(e, this.options)), this.compareMain(e) || this.
    comparePre(e);
  };
  Qe.prototype.compareMain = function(e) {
    return e instanceof Qe || (e = new Qe(e, this.options)), bo(this.major, e.major) || bo(this.minor, e.minor) || bo(this.patch, e.patch);
  };
  Qe.prototype.comparePre = function(e) {
    if (e instanceof Qe || (e = new Qe(e, this.options)), this.prerelease.length && !e.prerelease.length)
      return -1;
    if (!this.prerelease.length && e.prerelease.length)
      return 1;
    if (!this.prerelease.length && !e.prerelease.length)
      return 0;
    var t = 0;
    do {
      var r = this.prerelease[t], s = e.prerelease[t];
      if (_t("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return bo(r, s);
    } while (++t);
  };
  Qe.prototype.compareBuild = function(e) {
    e instanceof Qe || (e = new Qe(e, this.options));
    var t = 0;
    do {
      var r = this.build[t], s = e.build[t];
      if (_t("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return bo(r, s);
    } while (++t);
  };
  Qe.prototype.inc = function(e, t) {
    switch (e) {
      case "premajor":
        this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t);
        break;
      case "preminor":
        this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t);
        break;
      case "prepatch":
        this.prerelease.length = 0, this.inc("patch", t), this.inc("pre", t);
        break;
      case "prerelease":
        this.prerelease.length === 0 && this.inc("patch", t), this.inc("pre", t);
        break;
      case "major":
        (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease =
        [];
        break;
      case "minor":
        (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = [];
        break;
      case "patch":
        this.prerelease.length === 0 && this.patch++, this.prerelease = [];
        break;
      case "pre":
        if (this.prerelease.length === 0)
          this.prerelease = [0];
        else {
          for (var r = this.prerelease.length; --r >= 0; )
            typeof this.prerelease[r] == "number" && (this.prerelease[r]++, r = -2);
          r === -1 && this.prerelease.push(0);
        }
        t && (this.prerelease[0] === t ? isNaN(this.prerelease[1]) && (this.prerelease = [t, 0]) : this.prerelease = [t, 0]);
        break;
      default:
        throw new Error("invalid increment argument: " + e);
    }
    return this.format(), this.raw = this.version, this;
  };
  Ue.inc = uLe;
  function uLe(e, t, r, s) {
    typeof r == "string" && (s = r, r = void 0);
    try {
      return new Qe(e, r).inc(t, s).version;
    } catch {
      return null;
    }
  }
  i(uLe, "inc");
  Ue.diff = cLe;
  function cLe(e, t) {
    if ($T(e, t))
      return null;
    var r = Eo(e), s = Eo(t), n = "";
    if (r.prerelease.length || s.prerelease.length) {
      n = "pre";
      var a = "prerelease";
    }
    for (var o in r)
      if ((o === "major" || o === "minor" || o === "patch") && r[o] !== s[o])
        return n + o;
    return a;
  }
  i(cLe, "diff");
  Ue.compareIdentifiers = bo;
  var q8 = /^[0-9]+$/;
  function bo(e, t) {
    var r = q8.test(e), s = q8.test(t);
    return r && s && (e = +e, t = +t), e === t ? 0 : r && !s ? -1 : s && !r ? 1 : e < t ? -1 : 1;
  }
  i(bo, "compareIdentifiers");
  Ue.rcompareIdentifiers = fLe;
  function fLe(e, t) {
    return bo(t, e);
  }
  i(fLe, "rcompareIdentifiers");
  Ue.major = pLe;
  function pLe(e, t) {
    return new Qe(e, t).major;
  }
  i(pLe, "major");
  Ue.minor = dLe;
  function dLe(e, t) {
    return new Qe(e, t).minor;
  }
  i(dLe, "minor");
  Ue.patch = hLe;
  function hLe(e, t) {
    return new Qe(e, t).patch;
  }
  i(hLe, "patch");
  Ue.compare = Di;
  function Di(e, t, r) {
    return new Qe(e, r).compare(new Qe(t, r));
  }
  i(Di, "compare");
  Ue.compareLoose = mLe;
  function mLe(e, t) {
    return Di(e, t, !0);
  }
  i(mLe, "compareLoose");
  Ue.compareBuild = yLe;
  function yLe(e, t, r) {
    var s = new Qe(e, r), n = new Qe(t, r);
    return s.compare(n) || s.compareBuild(n);
  }
  i(yLe, "compareBuild");
  Ue.rcompare = gLe;
  function gLe(e, t, r) {
    return Di(t, e, r);
  }
  i(gLe, "rcompare");
  Ue.sort = bLe;
  function bLe(e, t) {
    return e.sort(function(r, s) {
      return Ue.compareBuild(r, s, t);
    });
  }
  i(bLe, "sort");
  Ue.rsort = ELe;
  function ELe(e, t) {
    return e.sort(function(r, s) {
      return Ue.compareBuild(s, r, t);
    });
  }
  i(ELe, "rsort");
  Ue.gt = ef;
  function ef(e, t, r) {
    return Di(e, t, r) > 0;
  }
  i(ef, "gt");
  Ue.lt = nm;
  function nm(e, t, r) {
    return Di(e, t, r) < 0;
  }
  i(nm, "lt");
  Ue.eq = $T;
  function $T(e, t, r) {
    return Di(e, t, r) === 0;
  }
  i($T, "eq");
  Ue.neq = V8;
  function V8(e, t, r) {
    return Di(e, t, r) !== 0;
  }
  i(V8, "neq");
  Ue.gte = UT;
  function UT(e, t, r) {
    return Di(e, t, r) >= 0;
  }
  i(UT, "gte");
  Ue.lte = VT;
  function VT(e, t, r) {
    return Di(e, t, r) <= 0;
  }
  i(VT, "lte");
  Ue.cmp = im;
  function im(e, t, r, s) {
    switch (t) {
      case "===":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e === r;
      case "!==":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e !== r;
      case "":
      case "=":
      case "==":
        return $T(e, r, s);
      case "!=":
        return V8(e, r, s);
      case ">":
        return ef(e, r, s);
      case ">=":
        return UT(e, r, s);
      case "<":
        return nm(e, r, s);
      case "<=":
        return VT(e, r, s);
      default:
        throw new TypeError("Invalid operator: " + t);
    }
  }
  i(im, "cmp");
  Ue.Comparator = Hs;
  function Hs(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Hs) {
      if (e.loose === !!t.loose)
        return e;
      e = e.value;
    }
    if (!(this instanceof Hs))
      return new Hs(e, t);
    e = e.trim().split(/\s+/).join(" "), _t("comparator", e, t), this.options = t, this.loose = !!t.loose, this.parse(e), this.semver === kl ?
    this.value = "" : this.value = this.operator + this.semver.version, _t("comp", this);
  }
  i(Hs, "Comparator");
  var kl = {};
  Hs.prototype.parse = function(e) {
    var t = this.options.loose ? It[G.COMPARATORLOOSE] : It[G.COMPARATOR], r = e.match(t);
    if (!r)
      throw new TypeError("Invalid comparator: " + e);
    this.operator = r[1] !== void 0 ? r[1] : "", this.operator === "=" && (this.operator = ""), r[2] ? this.semver = new Qe(r[2], this.options.
    loose) : this.semver = kl;
  };
  Hs.prototype.toString = function() {
    return this.value;
  };
  Hs.prototype.test = function(e) {
    if (_t("Comparator.test", e, this.options.loose), this.semver === kl || e === kl)
      return !0;
    if (typeof e == "string")
      try {
        e = new Qe(e, this.options);
      } catch {
        return !1;
      }
    return im(e, this.operator, this.semver, this.options);
  };
  Hs.prototype.intersects = function(e, t) {
    if (!(e instanceof Hs))
      throw new TypeError("a Comparator is required");
    (!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    });
    var r;
    if (this.operator === "")
      return this.value === "" ? !0 : (r = new lr(e.value, t), am(this.value, r, t));
    if (e.operator === "")
      return e.value === "" ? !0 : (r = new lr(this.value, t), am(e.semver, r, t));
    var s = (this.operator === ">=" || this.operator === ">") && (e.operator === ">=" || e.operator === ">"), n = (this.operator === "<=" ||
    this.operator === "<") && (e.operator === "<=" || e.operator === "<"), a = this.semver.version === e.semver.version, o = (this.operator ===
    ">=" || this.operator === "<=") && (e.operator === ">=" || e.operator === "<="), l = im(this.semver, "<", e.semver, t) && (this.operator ===
    ">=" || this.operator === ">") && (e.operator === "<=" || e.operator === "<"), u = im(this.semver, ">", e.semver, t) && (this.operator ===
    "<=" || this.operator === "<") && (e.operator === ">=" || e.operator === ">");
    return s || n || a && o || l || u;
  };
  Ue.Range = lr;
  function lr(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof lr)
      return e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease ? e : new lr(e.raw, t);
    if (e instanceof Hs)
      return new lr(e.value, t);
    if (!(this instanceof lr))
      return new lr(e, t);
    if (this.options = t, this.loose = !!t.loose, this.includePrerelease = !!t.includePrerelease, this.raw = e.trim().split(/\s+/).join(" "),
    this.set = this.raw.split("||").map(function(r) {
      return this.parseRange(r.trim());
    }, this).filter(function(r) {
      return r.length;
    }), !this.set.length)
      throw new TypeError("Invalid SemVer Range: " + this.raw);
    this.format();
  }
  i(lr, "Range");
  lr.prototype.format = function() {
    return this.range = this.set.map(function(e) {
      return e.join(" ").trim();
    }).join("||").trim(), this.range;
  };
  lr.prototype.toString = function() {
    return this.range;
  };
  lr.prototype.parseRange = function(e) {
    var t = this.options.loose, r = t ? It[G.HYPHENRANGELOOSE] : It[G.HYPHENRANGE];
    e = e.replace(r, ILe), _t("hyphen replace", e), e = e.replace(It[G.COMPARATORTRIM], aLe), _t("comparator trim", e, It[G.COMPARATORTRIM]),
    e = e.replace(It[G.TILDETRIM], nLe), e = e.replace(It[G.CARETTRIM], iLe), e = e.split(/\s+/).join(" ");
    var s = t ? It[G.COMPARATORLOOSE] : It[G.COMPARATOR], n = e.split(" ").map(function(a) {
      return SLe(a, this.options);
    }, this).join(" ").split(/\s+/);
    return this.options.loose && (n = n.filter(function(a) {
      return !!a.match(s);
    })), n = n.map(function(a) {
      return new Hs(a, this.options);
    }, this), n;
  };
  lr.prototype.intersects = function(e, t) {
    if (!(e instanceof lr))
      throw new TypeError("a Range is required");
    return this.set.some(function(r) {
      return $8(r, t) && e.set.some(function(s) {
        return $8(s, t) && r.every(function(n) {
          return s.every(function(a) {
            return n.intersects(a, t);
          });
        });
      });
    });
  };
  function $8(e, t) {
    for (var r = !0, s = e.slice(), n = s.pop(); r && s.length; )
      r = s.every(function(a) {
        return n.intersects(a, t);
      }), n = s.pop();
    return r;
  }
  i($8, "isSatisfiable");
  Ue.toComparators = vLe;
  function vLe(e, t) {
    return new lr(e, t).set.map(function(r) {
      return r.map(function(s) {
        return s.value;
      }).join(" ").trim().split(" ");
    });
  }
  i(vLe, "toComparators");
  function SLe(e, t) {
    return _t("comp", e, t), e = PLe(e, t), _t("caret", e), e = TLe(e, t), _t("tildes", e), e = CLe(e, t), _t("xrange", e), e = DLe(e, t), _t(
    "stars", e), e;
  }
  i(SLe, "parseComparator");
  function ds(e) {
    return !e || e.toLowerCase() === "x" || e === "*";
  }
  i(ds, "isX");
  function TLe(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return xLe(r, t);
    }).join(" ");
  }
  i(TLe, "replaceTildes");
  function xLe(e, t) {
    var r = t.loose ? It[G.TILDELOOSE] : It[G.TILDE];
    return e.replace(r, function(s, n, a, o, l) {
      _t("tilde", e, s, n, a, o, l);
      var u;
      return ds(n) ? u = "" : ds(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : ds(o) ? u = ">=" + n + "." + a + ".0 <" + n + "." + (+a +
      1) + ".0" : l ? (_t("replaceTilde pr", l), u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + (+a + 1) + ".0") : u = ">=" +
      n + "." + a + "." + o + " <" + n + "." + (+a + 1) + ".0", _t("tilde return", u), u;
    });
  }
  i(xLe, "replaceTilde");
  function PLe(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return ALe(r, t);
    }).join(" ");
  }
  i(PLe, "replaceCarets");
  function ALe(e, t) {
    _t("caret", e, t);
    var r = t.loose ? It[G.CARETLOOSE] : It[G.CARET];
    return e.replace(r, function(s, n, a, o, l) {
      _t("caret", e, s, n, a, o, l);
      var u;
      return ds(n) ? u = "" : ds(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : ds(o) ? n === "0" ? u = ">=" + n + "." + a + ".0 <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + ".0 <" + (+n + 1) + ".0.0" : l ? (_t("replaceCaret pr", l), n === "0" ? a === "0" ? u =
      ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + (+n + 1) + ".0.0") : (_t("no pr"), n === "0" ? a === "0" ?
      u = ">=" + n + "." + a + "." + o + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + " <" + n + "." + (+a + 1) +
      ".0" : u = ">=" + n + "." + a + "." + o + " <" + (+n + 1) + ".0.0"), _t("caret return", u), u;
    });
  }
  i(ALe, "replaceCaret");
  function CLe(e, t) {
    return _t("replaceXRanges", e, t), e.split(/\s+/).map(function(r) {
      return wLe(r, t);
    }).join(" ");
  }
  i(CLe, "replaceXRanges");
  function wLe(e, t) {
    e = e.trim();
    var r = t.loose ? It[G.XRANGELOOSE] : It[G.XRANGE];
    return e.replace(r, function(s, n, a, o, l, u) {
      _t("xRange", e, s, n, a, o, l, u);
      var c = ds(a), f = c || ds(o), p = f || ds(l), d = p;
      return n === "=" && d && (n = ""), u = t.includePrerelease ? "-0" : "", c ? n === ">" || n === "<" ? s = "<0.0.0-0" : s = "*" : n && d ?
      (f && (o = 0), l = 0, n === ">" ? (n = ">=", f ? (a = +a + 1, o = 0, l = 0) : (o = +o + 1, l = 0)) : n === "<=" && (n = "<", f ? a = +a +
      1 : o = +o + 1), s = n + a + "." + o + "." + l + u) : f ? s = ">=" + a + ".0.0" + u + " <" + (+a + 1) + ".0.0" + u : p && (s = ">=" + a +
      "." + o + ".0" + u + " <" + a + "." + (+o + 1) + ".0" + u), _t("xRange return", s), s;
    });
  }
  i(wLe, "replaceXRange");
  function DLe(e, t) {
    return _t("replaceStars", e, t), e.trim().replace(It[G.STAR], "");
  }
  i(DLe, "replaceStars");
  function ILe(e, t, r, s, n, a, o, l, u, c, f, p, d) {
    return ds(r) ? t = "" : ds(s) ? t = ">=" + r + ".0.0" : ds(n) ? t = ">=" + r + "." + s + ".0" : t = ">=" + t, ds(u) ? l = "" : ds(c) ? l =
    "<" + (+u + 1) + ".0.0" : ds(f) ? l = "<" + u + "." + (+c + 1) + ".0" : p ? l = "<=" + u + "." + c + "." + f + "-" + p : l = "<=" + l, (t +
    " " + l).trim();
  }
  i(ILe, "hyphenReplace");
  lr.prototype.test = function(e) {
    if (!e)
      return !1;
    if (typeof e == "string")
      try {
        e = new Qe(e, this.options);
      } catch {
        return !1;
      }
    for (var t = 0; t < this.set.length; t++)
      if (_Le(this.set[t], e, this.options))
        return !0;
    return !1;
  };
  function _Le(e, t, r) {
    for (var s = 0; s < e.length; s++)
      if (!e[s].test(t))
        return !1;
    if (t.prerelease.length && !r.includePrerelease) {
      for (s = 0; s < e.length; s++)
        if (_t(e[s].semver), e[s].semver !== kl && e[s].semver.prerelease.length > 0) {
          var n = e[s].semver;
          if (n.major === t.major && n.minor === t.minor && n.patch === t.patch)
            return !0;
        }
      return !1;
    }
    return !0;
  }
  i(_Le, "testSet");
  Ue.satisfies = am;
  function am(e, t, r) {
    try {
      t = new lr(t, r);
    } catch {
      return !1;
    }
    return t.test(e);
  }
  i(am, "satisfies");
  Ue.maxSatisfying = OLe;
  function OLe(e, t, r) {
    var s = null, n = null;
    try {
      var a = new lr(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === -1) && (s = o, n = new Qe(s, r));
    }), s;
  }
  i(OLe, "maxSatisfying");
  Ue.minSatisfying = NLe;
  function NLe(e, t, r) {
    var s = null, n = null;
    try {
      var a = new lr(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === 1) && (s = o, n = new Qe(s, r));
    }), s;
  }
  i(NLe, "minSatisfying");
  Ue.minVersion = RLe;
  function RLe(e, t) {
    e = new lr(e, t);
    var r = new Qe("0.0.0");
    if (e.test(r) || (r = new Qe("0.0.0-0"), e.test(r)))
      return r;
    r = null;
    for (var s = 0; s < e.set.length; ++s) {
      var n = e.set[s];
      n.forEach(function(a) {
        var o = new Qe(a.semver.version);
        switch (a.operator) {
          case ">":
            o.prerelease.length === 0 ? o.patch++ : o.prerelease.push(0), o.raw = o.format();
          case "":
          case ">=":
            (!r || ef(r, o)) && (r = o);
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: " + a.operator);
        }
      });
    }
    return r && e.test(r) ? r : null;
  }
  i(RLe, "minVersion");
  Ue.validRange = kLe;
  function kLe(e, t) {
    try {
      return new lr(e, t).range || "*";
    } catch {
      return null;
    }
  }
  i(kLe, "validRange");
  Ue.ltr = FLe;
  function FLe(e, t, r) {
    return WT(e, t, "<", r);
  }
  i(FLe, "ltr");
  Ue.gtr = LLe;
  function LLe(e, t, r) {
    return WT(e, t, ">", r);
  }
  i(LLe, "gtr");
  Ue.outside = WT;
  function WT(e, t, r, s) {
    e = new Qe(e, s), t = new lr(t, s);
    var n, a, o, l, u;
    switch (r) {
      case ">":
        n = ef, a = VT, o = nm, l = ">", u = ">=";
        break;
      case "<":
        n = nm, a = UT, o = ef, l = "<", u = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (am(e, t, s))
      return !1;
    for (var c = 0; c < t.set.length; ++c) {
      var f = t.set[c], p = null, d = null;
      if (f.forEach(function(m) {
        m.semver === kl && (m = new Hs(">=0.0.0")), p = p || m, d = d || m, n(m.semver, p.semver, s) ? p = m : o(m.semver, d.semver, s) && (d =
        m);
      }), p.operator === l || p.operator === u || (!d.operator || d.operator === l) && a(e, d.semver))
        return !1;
      if (d.operator === u && o(e, d.semver))
        return !1;
    }
    return !0;
  }
  i(WT, "outside");
  Ue.prerelease = BLe;
  function BLe(e, t) {
    var r = Eo(e, t);
    return r && r.prerelease.length ? r.prerelease : null;
  }
  i(BLe, "prerelease");
  Ue.intersects = MLe;
  function MLe(e, t, r) {
    return e = new lr(e, r), t = new lr(t, r), e.intersects(t);
  }
  i(MLe, "intersects");
  Ue.coerce = jLe;
  function jLe(e, t) {
    if (e instanceof Qe)
      return e;
    if (typeof e == "number" && (e = String(e)), typeof e != "string")
      return null;
    t = t || {};
    var r = null;
    if (!t.rtl)
      r = e.match(It[G.COERCE]);
    else {
      for (var s; (s = It[G.COERCERTL].exec(e)) && (!r || r.index + r[0].length !== e.length); )
        (!r || s.index + s[0].length !== r.index + r[0].length) && (r = s), It[G.COERCERTL].lastIndex = s.index + s[1].length + s[2].length;
      It[G.COERCERTL].lastIndex = -1;
    }
    return r === null ? null : Eo(r[2] + "." + (r[3] || "0") + "." + (r[4] || "0"), t);
  }
  i(jLe, "coerce");
});

// ../node_modules/@babel/helper-compilation-targets/lib/targets.js
var om = y((Fl) => {
  "use strict";
  Object.defineProperty(Fl, "__esModule", {
    value: !0
  });
  Fl.unreleasedLabels = Fl.browserNameMap = void 0;
  var Eit = Fl.unreleasedLabels = {
    safari: "tp"
  }, vit = Fl.browserNameMap = {
    and_chr: "chrome",
    and_ff: "firefox",
    android: "android",
    chrome: "chrome",
    edge: "edge",
    firefox: "firefox",
    ie: "ie",
    ie_mob: "ie",
    ios_saf: "ios",
    node: "node",
    deno: "deno",
    op_mob: "opera_mobile",
    opera: "opera",
    safari: "safari",
    samsung: "samsung"
  };
});

// ../node_modules/@babel/helper-compilation-targets/lib/utils.js
var lm = y((va) => {
  "use strict";
  Object.defineProperty(va, "__esModule", {
    value: !0
  });
  va.getHighestUnreleased = HLe;
  va.getLowestImplementedVersion = GLe;
  va.getLowestUnreleased = Y8;
  va.isUnreleasedVersion = WLe;
  va.semverMin = K8;
  va.semverify = VLe;
  var H8 = rf(), qLe = tm(), G8 = om(), $Le = /^(\d+|\d+.\d+)$/, ULe = new qLe.OptionValidator("@babel/helper-compilation-targets");
  function K8(e, t) {
    return e && H8.lt(e, t) ? e : t;
  }
  i(K8, "semverMin");
  function VLe(e) {
    if (typeof e == "string" && H8.valid(e))
      return e;
    ULe.invariant(typeof e == "number" || typeof e == "string" && $Le.test(e), `'${e}' is not a valid version`), e = e.toString();
    let t = 0, r = 0;
    for (; (t = e.indexOf(".", t + 1)) > 0; )
      r++;
    return e + ".0".repeat(2 - r);
  }
  i(VLe, "semverify");
  function WLe(e, t) {
    let r = G8.unreleasedLabels[t];
    return !!r && r === e.toString().toLowerCase();
  }
  i(WLe, "isUnreleasedVersion");
  function Y8(e, t, r) {
    let s = G8.unreleasedLabels[r];
    return e === s ? t : t === s ? e : K8(e, t);
  }
  i(Y8, "getLowestUnreleased");
  function HLe(e, t, r) {
    return Y8(e, t, r) === e ? t : e;
  }
  i(HLe, "getHighestUnreleased");
  function GLe(e, t) {
    let r = e[t];
    return !r && t === "android" ? e.chrome : r;
  }
  i(GLe, "getLowestImplementedVersion");
});

// ../node_modules/@babel/helper-compilation-targets/lib/options.js
var X8 = y((um) => {
  "use strict";
  Object.defineProperty(um, "__esModule", {
    value: !0
  });
  um.TargetNames = void 0;
  var Pit = um.TargetNames = {
    node: "node",
    deno: "deno",
    chrome: "chrome",
    opera: "opera",
    edge: "edge",
    firefox: "firefox",
    safari: "safari",
    ie: "ie",
    ios: "ios",
    android: "android",
    electron: "electron",
    samsung: "samsung",
    rhino: "rhino",
    opera_mobile: "opera_mobile"
  };
});

// ../node_modules/@babel/helper-compilation-targets/lib/pretty.js
var HT = y((cm) => {
  "use strict";
  Object.defineProperty(cm, "__esModule", {
    value: !0
  });
  cm.prettifyTargets = XLe;
  cm.prettifyVersion = z8;
  var KLe = rf(), YLe = om();
  function z8(e) {
    if (typeof e != "string")
      return e;
    let {
      major: t,
      minor: r,
      patch: s
    } = KLe.parse(e), n = [t];
    return (r || s) && n.push(r), s && n.push(s), n.join(".");
  }
  i(z8, "prettifyVersion");
  function XLe(e) {
    return Object.keys(e).reduce((t, r) => {
      let s = e[r], n = YLe.unreleasedLabels[r];
      return typeof s == "string" && n !== s && (s = z8(s)), t[r] = s, t;
    }, {});
  }
  i(XLe, "prettifyTargets");
});

// ../node_modules/@babel/helper-compilation-targets/lib/debug.js
var Q8 = y((GT) => {
  "use strict";
  Object.defineProperty(GT, "__esModule", {
    value: !0
  });
  GT.getInclusionReasons = JLe;
  var zLe = rf(), J8 = HT(), fm = lm();
  function JLe(e, t, r) {
    let s = r[e] || {};
    return Object.keys(t).reduce((n, a) => {
      let o = (0, fm.getLowestImplementedVersion)(s, a), l = t[a];
      if (!o)
        n[a] = (0, J8.prettifyVersion)(l);
      else {
        let u = (0, fm.isUnreleasedVersion)(o, a);
        !(0, fm.isUnreleasedVersion)(l, a) && (u || zLe.lt(l.toString(), (0, fm.semverify)(o))) && (n[a] = (0, J8.prettifyVersion)(l));
      }
      return n;
    }, {});
  }
  i(JLe, "getInclusionReasons");
});

// ../node_modules/@babel/compat-data/data/plugins.json
var Z8 = y((_it, QLe) => {
  QLe.exports = {
    "transform-unicode-sets-regex": {
      chrome: "112",
      opera: "98",
      edge: "112",
      firefox: "116",
      safari: "tp",
      node: "20",
      deno: "1.32",
      opera_mobile: "75",
      electron: "24.0"
    },
    "bugfix/transform-v8-static-class-fields-redefine-readonly": {
      chrome: "98",
      opera: "84",
      edge: "98",
      firefox: "95",
      safari: "15",
      node: "12",
      deno: "1.18",
      ios: "15",
      samsung: "11",
      opera_mobile: "52",
      electron: "17.0"
    },
    "bugfix/transform-firefox-class-in-computed-class-key": {
      chrome: "74",
      opera: "62",
      edge: "79",
      safari: "14.1",
      node: "12",
      deno: "1",
      ios: "14.5",
      samsung: "11",
      opera_mobile: "53",
      electron: "6.0"
    },
    "transform-class-static-block": {
      chrome: "94",
      opera: "80",
      edge: "94",
      firefox: "93",
      safari: "16.4",
      node: "16.11",
      deno: "1.14",
      ios: "16.4",
      samsung: "17",
      opera_mobile: "66",
      electron: "15.0"
    },
    "proposal-class-static-block": {
      chrome: "94",
      opera: "80",
      edge: "94",
      firefox: "93",
      safari: "16.4",
      node: "16.11",
      deno: "1.14",
      ios: "16.4",
      samsung: "17",
      opera_mobile: "66",
      electron: "15.0"
    },
    "transform-private-property-in-object": {
      chrome: "91",
      opera: "77",
      edge: "91",
      firefox: "90",
      safari: "15",
      node: "16.9",
      deno: "1.9",
      ios: "15",
      samsung: "16",
      opera_mobile: "64",
      electron: "13.0"
    },
    "proposal-private-property-in-object": {
      chrome: "91",
      opera: "77",
      edge: "91",
      firefox: "90",
      safari: "15",
      node: "16.9",
      deno: "1.9",
      ios: "15",
      samsung: "16",
      opera_mobile: "64",
      electron: "13.0"
    },
    "transform-class-properties": {
      chrome: "74",
      opera: "62",
      edge: "79",
      firefox: "90",
      safari: "14.1",
      node: "12",
      deno: "1",
      ios: "14.5",
      samsung: "11",
      opera_mobile: "53",
      electron: "6.0"
    },
    "proposal-class-properties": {
      chrome: "74",
      opera: "62",
      edge: "79",
      firefox: "90",
      safari: "14.1",
      node: "12",
      deno: "1",
      ios: "14.5",
      samsung: "11",
      opera_mobile: "53",
      electron: "6.0"
    },
    "transform-private-methods": {
      chrome: "84",
      opera: "70",
      edge: "84",
      firefox: "90",
      safari: "15",
      node: "14.6",
      deno: "1",
      ios: "15",
      samsung: "14",
      opera_mobile: "60",
      electron: "10.0"
    },
    "proposal-private-methods": {
      chrome: "84",
      opera: "70",
      edge: "84",
      firefox: "90",
      safari: "15",
      node: "14.6",
      deno: "1",
      ios: "15",
      samsung: "14",
      opera_mobile: "60",
      electron: "10.0"
    },
    "transform-numeric-separator": {
      chrome: "75",
      opera: "62",
      edge: "79",
      firefox: "70",
      safari: "13",
      node: "12.5",
      deno: "1",
      ios: "13",
      samsung: "11",
      rhino: "1.7.14",
      opera_mobile: "54",
      electron: "6.0"
    },
    "proposal-numeric-separator": {
      chrome: "75",
      opera: "62",
      edge: "79",
      firefox: "70",
      safari: "13",
      node: "12.5",
      deno: "1",
      ios: "13",
      samsung: "11",
      rhino: "1.7.14",
      opera_mobile: "54",
      electron: "6.0"
    },
    "transform-logical-assignment-operators": {
      chrome: "85",
      opera: "71",
      edge: "85",
      firefox: "79",
      safari: "14",
      node: "15",
      deno: "1.2",
      ios: "14",
      samsung: "14",
      opera_mobile: "60",
      electron: "10.0"
    },
    "proposal-logical-assignment-operators": {
      chrome: "85",
      opera: "71",
      edge: "85",
      firefox: "79",
      safari: "14",
      node: "15",
      deno: "1.2",
      ios: "14",
      samsung: "14",
      opera_mobile: "60",
      electron: "10.0"
    },
    "transform-nullish-coalescing-operator": {
      chrome: "80",
      opera: "67",
      edge: "80",
      firefox: "72",
      safari: "13.1",
      node: "14",
      deno: "1",
      ios: "13.4",
      samsung: "13",
      opera_mobile: "57",
      electron: "8.0"
    },
    "proposal-nullish-coalescing-operator": {
      chrome: "80",
      opera: "67",
      edge: "80",
      firefox: "72",
      safari: "13.1",
      node: "14",
      deno: "1",
      ios: "13.4",
      samsung: "13",
      opera_mobile: "57",
      electron: "8.0"
    },
    "transform-optional-chaining": {
      chrome: "91",
      opera: "77",
      edge: "91",
      firefox: "74",
      safari: "13.1",
      node: "16.9",
      deno: "1.9",
      ios: "13.4",
      samsung: "16",
      opera_mobile: "64",
      electron: "13.0"
    },
    "proposal-optional-chaining": {
      chrome: "91",
      opera: "77",
      edge: "91",
      firefox: "74",
      safari: "13.1",
      node: "16.9",
      deno: "1.9",
      ios: "13.4",
      samsung: "16",
      opera_mobile: "64",
      electron: "13.0"
    },
    "transform-json-strings": {
      chrome: "66",
      opera: "53",
      edge: "79",
      firefox: "62",
      safari: "12",
      node: "10",
      deno: "1",
      ios: "12",
      samsung: "9",
      rhino: "1.7.14",
      opera_mobile: "47",
      electron: "3.0"
    },
    "proposal-json-strings": {
      chrome: "66",
      opera: "53",
      edge: "79",
      firefox: "62",
      safari: "12",
      node: "10",
      deno: "1",
      ios: "12",
      samsung: "9",
      rhino: "1.7.14",
      opera_mobile: "47",
      electron: "3.0"
    },
    "transform-optional-catch-binding": {
      chrome: "66",
      opera: "53",
      edge: "79",
      firefox: "58",
      safari: "11.1",
      node: "10",
      deno: "1",
      ios: "11.3",
      samsung: "9",
      opera_mobile: "47",
      electron: "3.0"
    },
    "proposal-optional-catch-binding": {
      chrome: "66",
      opera: "53",
      edge: "79",
      firefox: "58",
      safari: "11.1",
      node: "10",
      deno: "1",
      ios: "11.3",
      samsung: "9",
      opera_mobile: "47",
      electron: "3.0"
    },
    "transform-parameters": {
      chrome: "49",
      opera: "36",
      edge: "18",
      firefox: "53",
      safari: "16.3",
      node: "6",
      deno: "1",
      ios: "16.3",
      samsung: "5",
      opera_mobile: "36",
      electron: "0.37"
    },
    "transform-async-generator-functions": {
      chrome: "63",
      opera: "50",
      edge: "79",
      firefox: "57",
      safari: "12",
      node: "10",
      deno: "1",
      ios: "12",
      samsung: "8",
      opera_mobile: "46",
      electron: "3.0"
    },
    "proposal-async-generator-functions": {
      chrome: "63",
      opera: "50",
      edge: "79",
      firefox: "57",
      safari: "12",
      node: "10",
      deno: "1",
      ios: "12",
      samsung: "8",
      opera_mobile: "46",
      electron: "3.0"
    },
    "transform-object-rest-spread": {
      chrome: "60",
      opera: "47",
      edge: "79",
      firefox: "55",
      safari: "11.1",
      node: "8.3",
      deno: "1",
      ios: "11.3",
      samsung: "8",
      opera_mobile: "44",
      electron: "2.0"
    },
    "proposal-object-rest-spread": {
      chrome: "60",
      opera: "47",
      edge: "79",
      firefox: "55",
      safari: "11.1",
      node: "8.3",
      deno: "1",
      ios: "11.3",
      samsung: "8",
      opera_mobile: "44",
      electron: "2.0"
    },
    "transform-dotall-regex": {
      chrome: "62",
      opera: "49",
      edge: "79",
      firefox: "78",
      safari: "11.1",
      node: "8.10",
      deno: "1",
      ios: "11.3",
      samsung: "8",
      opera_mobile: "46",
      electron: "3.0"
    },
    "transform-unicode-property-regex": {
      chrome: "64",
      opera: "51",
      edge: "79",
      firefox: "78",
      safari: "11.1",
      node: "10",
      deno: "1",
      ios: "11.3",
      samsung: "9",
      opera_mobile: "47",
      electron: "3.0"
    },
    "proposal-unicode-property-regex": {
      chrome: "64",
      opera: "51",
      edge: "79",
      firefox: "78",
      safari: "11.1",
      node: "10",
      deno: "1",
      ios: "11.3",
      samsung: "9",
      opera_mobile: "47",
      electron: "3.0"
    },
    "transform-named-capturing-groups-regex": {
      chrome: "64",
      opera: "51",
      edge: "79",
      firefox: "78",
      safari: "11.1",
      node: "10",
      deno: "1",
      ios: "11.3",
      samsung: "9",
      opera_mobile: "47",
      electron: "3.0"
    },
    "transform-async-to-generator": {
      chrome: "55",
      opera: "42",
      edge: "15",
      firefox: "52",
      safari: "11",
      node: "7.6",
      deno: "1",
      ios: "11",
      samsung: "6",
      opera_mobile: "42",
      electron: "1.6"
    },
    "transform-exponentiation-operator": {
      chrome: "52",
      opera: "39",
      edge: "14",
      firefox: "52",
      safari: "10.1",
      node: "7",
      deno: "1",
      ios: "10.3",
      samsung: "6",
      rhino: "1.7.14",
      opera_mobile: "41",
      electron: "1.3"
    },
    "transform-template-literals": {
      chrome: "41",
      opera: "28",
      edge: "13",
      firefox: "34",
      safari: "13",
      node: "4",
      deno: "1",
      ios: "13",
      samsung: "3.4",
      opera_mobile: "28",
      electron: "0.21"
    },
    "transform-literals": {
      chrome: "44",
      opera: "31",
      edge: "12",
      firefox: "53",
      safari: "9",
      node: "4",
      deno: "1",
      ios: "9",
      samsung: "4",
      opera_mobile: "32",
      electron: "0.30"
    },
    "transform-function-name": {
      chrome: "51",
      opera: "38",
      edge: "79",
      firefox: "53",
      safari: "10",
      node: "6.5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "41",
      electron: "1.2"
    },
    "transform-arrow-functions": {
      chrome: "47",
      opera: "34",
      edge: "13",
      firefox: "43",
      safari: "10",
      node: "6",
      deno: "1",
      ios: "10",
      samsung: "5",
      rhino: "1.7.13",
      opera_mobile: "34",
      electron: "0.36"
    },
    "transform-block-scoped-functions": {
      chrome: "41",
      opera: "28",
      edge: "12",
      firefox: "46",
      safari: "10",
      node: "4",
      deno: "1",
      ie: "11",
      ios: "10",
      samsung: "3.4",
      opera_mobile: "28",
      electron: "0.21"
    },
    "transform-classes": {
      chrome: "46",
      opera: "33",
      edge: "13",
      firefox: "45",
      safari: "10",
      node: "5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "33",
      electron: "0.36"
    },
    "transform-object-super": {
      chrome: "46",
      opera: "33",
      edge: "13",
      firefox: "45",
      safari: "10",
      node: "5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "33",
      electron: "0.36"
    },
    "transform-shorthand-properties": {
      chrome: "43",
      opera: "30",
      edge: "12",
      firefox: "33",
      safari: "9",
      node: "4",
      deno: "1",
      ios: "9",
      samsung: "4",
      rhino: "1.7.14",
      opera_mobile: "30",
      electron: "0.27"
    },
    "transform-duplicate-keys": {
      chrome: "42",
      opera: "29",
      edge: "12",
      firefox: "34",
      safari: "9",
      node: "4",
      deno: "1",
      ios: "9",
      samsung: "3.4",
      opera_mobile: "29",
      electron: "0.25"
    },
    "transform-computed-properties": {
      chrome: "44",
      opera: "31",
      edge: "12",
      firefox: "34",
      safari: "7.1",
      node: "4",
      deno: "1",
      ios: "8",
      samsung: "4",
      opera_mobile: "32",
      electron: "0.30"
    },
    "transform-for-of": {
      chrome: "51",
      opera: "38",
      edge: "15",
      firefox: "53",
      safari: "10",
      node: "6.5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "41",
      electron: "1.2"
    },
    "transform-sticky-regex": {
      chrome: "49",
      opera: "36",
      edge: "13",
      firefox: "3",
      safari: "10",
      node: "6",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "36",
      electron: "0.37"
    },
    "transform-unicode-escapes": {
      chrome: "44",
      opera: "31",
      edge: "12",
      firefox: "53",
      safari: "9",
      node: "4",
      deno: "1",
      ios: "9",
      samsung: "4",
      opera_mobile: "32",
      electron: "0.30"
    },
    "transform-unicode-regex": {
      chrome: "50",
      opera: "37",
      edge: "13",
      firefox: "46",
      safari: "12",
      node: "6",
      deno: "1",
      ios: "12",
      samsung: "5",
      opera_mobile: "37",
      electron: "1.1"
    },
    "transform-spread": {
      chrome: "46",
      opera: "33",
      edge: "13",
      firefox: "45",
      safari: "10",
      node: "5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "33",
      electron: "0.36"
    },
    "transform-destructuring": {
      chrome: "51",
      opera: "38",
      edge: "15",
      firefox: "53",
      safari: "10",
      node: "6.5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "41",
      electron: "1.2"
    },
    "transform-block-scoping": {
      chrome: "50",
      opera: "37",
      edge: "14",
      firefox: "53",
      safari: "11",
      node: "6",
      deno: "1",
      ios: "11",
      samsung: "5",
      opera_mobile: "37",
      electron: "1.1"
    },
    "transform-typeof-symbol": {
      chrome: "38",
      opera: "25",
      edge: "12",
      firefox: "36",
      safari: "9",
      node: "0.12",
      deno: "1",
      ios: "9",
      samsung: "3",
      rhino: "1.7.13",
      opera_mobile: "25",
      electron: "0.20"
    },
    "transform-new-target": {
      chrome: "46",
      opera: "33",
      edge: "14",
      firefox: "41",
      safari: "10",
      node: "5",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "33",
      electron: "0.36"
    },
    "transform-regenerator": {
      chrome: "50",
      opera: "37",
      edge: "13",
      firefox: "53",
      safari: "10",
      node: "6",
      deno: "1",
      ios: "10",
      samsung: "5",
      opera_mobile: "37",
      electron: "1.1"
    },
    "transform-member-expression-literals": {
      chrome: "7",
      opera: "12",
      edge: "12",
      firefox: "2",
      safari: "5.1",
      node: "0.4",
      deno: "1",
      ie: "9",
      android: "4",
      ios: "6",
      phantom: "1.9",
      samsung: "1",
      rhino: "1.7.13",
      opera_mobile: "12",
      electron: "0.20"
    },
    "transform-property-literals": {
      chrome: "7",
      opera: "12",
      edge: "12",
      firefox: "2",
      safari: "5.1",
      node: "0.4",
      deno: "1",
      ie: "9",
      android: "4",
      ios: "6",
      phantom: "1.9",
      samsung: "1",
      rhino: "1.7.13",
      opera_mobile: "12",
      electron: "0.20"
    },
    "transform-reserved-words": {
      chrome: "13",
      opera: "10.50",
      edge: "12",
      firefox: "2",
      safari: "3.1",
      node: "0.6",
      deno: "1",
      ie: "9",
      android: "4.4",
      ios: "6",
      phantom: "1.9",
      samsung: "1",
      rhino: "1.7.13",
      opera_mobile: "10.1",
      electron: "0.20"
    },
    "transform-export-namespace-from": {
      chrome: "72",
      deno: "1.0",
      edge: "79",
      firefox: "80",
      node: "13.2",
      opera: "60",
      opera_mobile: "51",
      safari: "14.1",
      ios: "14.5",
      samsung: "11.0",
      android: "72",
      electron: "5.0"
    },
    "proposal-export-namespace-from": {
      chrome: "72",
      deno: "1.0",
      edge: "79",
      firefox: "80",
      node: "13.2",
      opera: "60",
      opera_mobile: "51",
      safari: "14.1",
      ios: "14.5",
      samsung: "11.0",
      android: "72",
      electron: "5.0"
    }
  };
});

// ../node_modules/@babel/compat-data/plugins.js
var t6 = y((Oit, e6) => {
  e6.exports = Z8();
});

// ../node_modules/@babel/helper-compilation-targets/lib/filter-items.js
var i6 = y((sf) => {
  "use strict";
  Object.defineProperty(sf, "__esModule", {
    value: !0
  });
  sf.default = e3e;
  sf.isRequired = n6;
  sf.targetsSupported = s6;
  var r6 = rf(), ZLe = t6(), pm = lm();
  function s6(e, t) {
    let r = Object.keys(e);
    return r.length === 0 ? !1 : r.filter((n) => {
      let a = (0, pm.getLowestImplementedVersion)(t, n);
      if (!a)
        return !0;
      let o = e[n];
      if ((0, pm.isUnreleasedVersion)(o, n))
        return !1;
      if ((0, pm.isUnreleasedVersion)(a, n))
        return !0;
      if (!r6.valid(o.toString()))
        throw new Error(`Invalid version passed for target "${n}": "${o}". Versions must be in semver format (major.minor.patch)`);
      return r6.gt((0, pm.semverify)(a), o.toString());
    }).length === 0;
  }
  i(s6, "targetsSupported");
  function n6(e, t, {
    compatData: r = ZLe,
    includes: s,
    excludes: n
  } = {}) {
    return n != null && n.has(e) ? !1 : s != null && s.has(e) ? !0 : !s6(t, r[e]);
  }
  i(n6, "isRequired");
  function e3e(e, t, r, s, n, a, o) {
    let l = /* @__PURE__ */ new Set(), u = {
      compatData: e,
      includes: t,
      excludes: r
    };
    for (let c in e)
      if (n6(c, s, u))
        l.add(c);
      else if (o) {
        let f = o.get(c);
        f && l.add(f);
      }
    return n?.forEach((c) => !r.has(c) && l.add(c)), a?.forEach((c) => !t.has(c) && l.delete(c)), l;
  }
  i(e3e, "filterItems");
});

// ../node_modules/@babel/helper-compilation-targets/lib/index.js
var zT = y((Wn) => {
  "use strict";
  Object.defineProperty(Wn, "__esModule", {
    value: !0
  });
  Object.defineProperty(Wn, "TargetNames", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return YT.TargetNames;
    }, "get")
  });
  Wn.default = h3e;
  Object.defineProperty(Wn, "filterItems", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return c6.default;
    }, "get")
  });
  Object.defineProperty(Wn, "getInclusionReasons", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return n3e.getInclusionReasons;
    }, "get")
  });
  Wn.isBrowsersQueryValid = f6;
  Object.defineProperty(Wn, "isRequired", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return c6.isRequired;
    }, "get")
  });
  Object.defineProperty(Wn, "prettifyTargets", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return s3e.prettifyTargets;
    }, "get")
  });
  Object.defineProperty(Wn, "unreleasedLabels", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return u6.unreleasedLabels;
    }, "get")
  });
  var o6 = A8(), l6 = tm(), t3e = _8(), r3e = j8(), En = lm(), u6 = om(), YT = X8(), s3e = HT(), n3e = Q8(), c6 = i6(), KT = t3e["es6.module"],
  XT = new l6.OptionValidator("@babel/helper-compilation-targets");
  function i3e(e) {
    let t = Object.keys(YT.TargetNames);
    for (let r of Object.keys(e))
      if (!(r in YT.TargetNames))
        throw new Error(XT.formatMessage(`'${r}' is not a valid target
- Did you mean '${(0, l6.findSuggestion)(r, t)}'?`));
    return e;
  }
  i(i3e, "validateTargetNames");
  function f6(e) {
    return typeof e == "string" || Array.isArray(e) && e.every((t) => typeof t == "string");
  }
  i(f6, "isBrowsersQueryValid");
  function a3e(e) {
    return XT.invariant(e === void 0 || f6(e), `'${String(e)}' is not a valid browserslist query`), e;
  }
  i(a3e, "validateBrowsers");
  function o3e(e) {
    return e.reduce((t, r) => {
      let [s, n] = r.split(" "), a = u6.browserNameMap[s];
      if (!a)
        return t;
      try {
        let o = n.split("-")[0].toLowerCase(), l = (0, En.isUnreleasedVersion)(o, a);
        if (!t[a])
          return t[a] = l ? o : (0, En.semverify)(o), t;
        let u = t[a], c = (0, En.isUnreleasedVersion)(u, a);
        if (c && l)
          t[a] = (0, En.getLowestUnreleased)(u, o, a);
        else if (c)
          t[a] = (0, En.semverify)(o);
        else if (!c && !l) {
          let f = (0, En.semverify)(o);
          t[a] = (0, En.semverMin)(u, f);
        }
      } catch {
      }
      return t;
    }, {});
  }
  i(o3e, "getLowestVersions");
  function l3e(e) {
    e.length && (console.warn(`Warning, the following targets are using a decimal version:
`), e.forEach(({
      target: t,
      value: r
    }) => console.warn(`  ${t}: ${r}`)), console.warn(`
We recommend using a string for minor/patch versions to avoid numbers like 6.10
getting parsed as 6.1, which can lead to unexpected behavior.
`));
  }
  i(l3e, "outputDecimalWarning");
  function p6(e, t) {
    try {
      return (0, En.semverify)(t);
    } catch {
      throw new Error(XT.formatMessage(`'${t}' is not a valid value for 'targets.${e}'.`));
    }
  }
  i(p6, "semverifyTarget");
  function u3e(e) {
    return ["node", e === !0 || e === "current" ? process.versions.node : p6("node", e)];
  }
  i(u3e, "nodeTargetParser");
  function c3e(e, t) {
    let r = (0, En.isUnreleasedVersion)(t, e) ? t.toLowerCase() : p6(e, t);
    return [e, r];
  }
  i(c3e, "defaultTargetParser");
  function f3e(e) {
    let t = Object.assign({}, e);
    return delete t.esmodules, delete t.browsers, t;
  }
  i(f3e, "generateTargets");
  function p3e(e, t) {
    let r = o6(e, {
      mobileToDesktop: !0,
      env: t
    });
    return o3e(r);
  }
  i(p3e, "resolveTargets");
  var a6 = new r3e({
    max: 64
  });
  function d3e(e, t) {
    let r = typeof e == "string" ? e : e.join() + t, s = a6.get(r);
    return s || (s = p3e(e, t), a6.set(r, s)), Object.assign({}, s);
  }
  i(d3e, "resolveTargetsCached");
  function h3e(e = {}, t = {}) {
    var r, s;
    let {
      browsers: n,
      esmodules: a
    } = e, {
      configPath: o = "."
    } = t;
    a3e(n);
    let l = f3e(e), u = i3e(l), f = !!n || Object.keys(u).length > 0, p = !t.ignoreBrowserslistConfig && !f;
    if (!n && p && (n = o6.loadConfig({
      config: t.configFile,
      path: o,
      env: t.browserslistEnv
    }), n == null && (n = [])), a && (a !== "intersect" || !((r = n) != null && r.length)) && (n = Object.keys(KT).map((b) => `${b} >= ${KT[b]}`).
    join(", "), a = !1), (s = n) != null && s.length) {
      let b = d3e(n, t.browserslistEnv);
      if (a === "intersect")
        for (let h of Object.keys(b))
          if (h !== "deno" && h !== "ie") {
            let g = KT[h === "opera_mobile" ? "op_mob" : h];
            if (g) {
              let E = b[h];
              b[h] = (0, En.getHighestUnreleased)(E, (0, En.semverify)(g), h);
            } else
              delete b[h];
          } else
            delete b[h];
      u = Object.assign(b, u);
    }
    let d = {}, m = [];
    for (let b of Object.keys(u).sort()) {
      let h = u[b];
      typeof h == "number" && h % 1 !== 0 && m.push({
        target: b,
        value: h
      });
      let [g, E] = b === "node" ? u3e(h) : c3e(b, h);
      E && (d[g] = E);
    }
    return l3e(m), d;
  }
  i(h3e, "getTargets");
});

// ../node_modules/@babel/core/lib/config/resolve-targets.js
var JT = y((dm) => {
  "use strict";
  Object.defineProperty(dm, "__esModule", {
    value: !0
  });
  dm.resolveBrowserslistConfigFile = m3e;
  dm.resolveTargets = y3e;
  function d6() {
    let e = Q("path");
    return d6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(d6, "_path");
  function h6() {
    let e = zT();
    return h6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_helperCompilationTargets"), e;
  }
  i(h6, "_helperCompilationTargets");
  function m3e(e, t) {
    return d6().resolve(t, e);
  }
  i(m3e, "resolveBrowserslistConfigFile");
  function y3e(e, t) {
    let r = e.targets, s;
    typeof r == "string" || Array.isArray(r) ? s = {
      browsers: r
    } : r && ("esmodules" in r ? s = Object.assign({}, r, {
      esmodules: "intersect"
    }) : s = r);
    let {
      browserslistConfigFile: n
    } = e, a, o = !1;
    return typeof n == "string" ? a = n : o = n === !1, (0, h6().default)(s, {
      ignoreBrowserslistConfig: o,
      configFile: a,
      configPath: t,
      browserslistEnv: e.browserslistEnv
    });
  }
  i(y3e, "resolveTargets");
});

// ../node_modules/@babel/core/lib/config/config-descriptors.js
var QT = y((af) => {
  "use strict";
  Object.defineProperty(af, "__esModule", {
    value: !0
  });
  af.createCachedDescriptors = v3e;
  af.createDescriptor = P6;
  af.createUncachedDescriptors = S3e;
  function b6() {
    let e = Cs();
    return b6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(b6, "_gensync");
  var m6 = x4(), y6 = lf(), g3e = of(), nf = uo(), b3e = JT();
  function E3e(e, t) {
    var r, s, n, a;
    return e.name === t.name && e.value === t.value && e.options === t.options && e.dirname === t.dirname && e.alias === t.alias && e.ownPass ===
    t.ownPass && ((r = e.file) == null ? void 0 : r.request) === ((s = t.file) == null ? void 0 : s.request) && ((n = e.file) == null ? void 0 :
    n.resolved) === ((a = t.file) == null ? void 0 : a.resolved);
  }
  i(E3e, "isEqualDescriptor");
  function* g6(e) {
    return e;
  }
  i(g6, "handlerOf");
  function E6(e, t) {
    return typeof e.browserslistConfigFile == "string" && (e.browserslistConfigFile = (0, b3e.resolveBrowserslistConfigFile)(e.browserslistConfigFile,
    t)), e;
  }
  i(E6, "optionsWithResolvedBrowserslistConfigFile");
  function v3e(e, t, r) {
    let {
      plugins: s,
      presets: n,
      passPerPreset: a
    } = t;
    return {
      options: E6(t, e),
      plugins: s ? () => A3e(s, e)(r) : () => g6([]),
      presets: n ? () => x3e(n, e)(r)(!!a) : () => g6([])
    };
  }
  i(v3e, "createCachedDescriptors");
  function S3e(e, t, r) {
    return {
      options: E6(t, e),
      plugins: (0, m6.once)(() => T6(t.plugins || [], e, r)),
      presets: (0, m6.once)(() => S6(t.presets || [], e, r, !!t.passPerPreset))
    };
  }
  i(S3e, "createUncachedDescriptors");
  var T3e = /* @__PURE__ */ new WeakMap(), x3e = (0, nf.makeWeakCacheSync)((e, t) => {
    let r = t.using((s) => s);
    return (0, nf.makeStrongCacheSync)((s) => (0, nf.makeStrongCache)(function* (n) {
      return (yield* S6(e, r, s, n)).map((o) => v6(T3e, o));
    }));
  }), P3e = /* @__PURE__ */ new WeakMap(), A3e = (0, nf.makeWeakCacheSync)((e, t) => {
    let r = t.using((s) => s);
    return (0, nf.makeStrongCache)(function* (s) {
      return (yield* T6(e, r, s)).map((a) => v6(P3e, a));
    });
  }), C3e = {};
  function v6(e, t) {
    let {
      value: r,
      options: s = C3e
    } = t;
    if (s === !1) return t;
    let n = e.get(r);
    n || (n = /* @__PURE__ */ new WeakMap(), e.set(r, n));
    let a = n.get(s);
    if (a || (a = [], n.set(s, a)), a.indexOf(t) === -1) {
      let o = a.filter((l) => E3e(l, t));
      if (o.length > 0)
        return o[0];
      a.push(t);
    }
    return t;
  }
  i(v6, "loadCachedDescriptor");
  function* S6(e, t, r, s) {
    return yield* x6("preset", e, t, r, s);
  }
  i(S6, "createPresetDescriptors");
  function* T6(e, t, r) {
    return yield* x6("plugin", e, t, r);
  }
  i(T6, "createPluginDescriptors");
  function* x6(e, t, r, s, n) {
    let a = yield* b6().all(t.map((o, l) => P6(o, r, {
      type: e,
      alias: `${s}$${l}`,
      ownPass: !!n
    })));
    return w3e(a), a;
  }
  i(x6, "createDescriptors");
  function* P6(e, t, {
    type: r,
    alias: s,
    ownPass: n
  }) {
    let a = (0, g3e.getItemDescriptor)(e);
    if (a)
      return a;
    let o, l, u = e;
    Array.isArray(u) && (u.length === 3 ? [u, l, o] = u : [u, l] = u);
    let c, f = null;
    if (typeof u == "string") {
      if (typeof r != "string")
        throw new Error("To resolve a string-based item, the type of item must be given");
      let p = r === "plugin" ? y6.loadPlugin : y6.loadPreset, d = u;
      ({
        filepath: f,
        value: u
      } = yield* p(u, t)), c = {
        request: d,
        resolved: f
      };
    }
    if (!u)
      throw new Error(`Unexpected falsy value: ${String(u)}`);
    if (typeof u == "object" && u.__esModule)
      if (u.default)
        u = u.default;
      else
        throw new Error("Must export a default export when using ES6 modules.");
    if (typeof u != "object" && typeof u != "function")
      throw new Error(`Unsupported format: ${typeof u}. Expected an object or a function.`);
    if (f !== null && typeof u == "object" && u)
      throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${f}`);
    return {
      name: o,
      alias: f || s,
      value: u,
      options: l,
      dirname: t,
      ownPass: n,
      file: c
    };
  }
  i(P6, "createDescriptor");
  function w3e(e) {
    let t = /* @__PURE__ */ new Map();
    for (let r of e) {
      if (typeof r.value != "function") continue;
      let s = t.get(r.value);
      if (s || (s = /* @__PURE__ */ new Set(), t.set(r.value, s)), s.has(r.name)) {
        let n = e.filter((a) => a.value === r.value);
        throw new Error(["Duplicate plugin/preset detected.", "If you'd like to use two separate instances of a plugin,", "they need separat\
e names, e.g.", "", "  plugins: [", "    ['some-plugin', {}],", "    ['some-plugin', {}, 'some unique name'],", "  ]", "", "Duplicates detec\
ted are:", `${JSON.stringify(n, null, 2)}`].join(`
`));
      }
      s.add(r.name);
    }
  }
  i(w3e, "assertNoDuplicates");
});

// ../node_modules/@babel/core/lib/config/item.js
var of = y((uf) => {
  "use strict";
  Object.defineProperty(uf, "__esModule", {
    value: !0
  });
  uf.createConfigItem = I3e;
  uf.createItemFromDescriptor = C6;
  uf.getItemDescriptor = _3e;
  function A6() {
    let e = Q("path");
    return A6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(A6, "_path");
  var D3e = QT();
  function C6(e) {
    return new hm(e);
  }
  i(C6, "createItemFromDescriptor");
  function* I3e(e, {
    dirname: t = ".",
    type: r
  } = {}) {
    let s = yield* (0, D3e.createDescriptor)(e, A6().resolve(t), {
      type: r,
      alias: "programmatic item"
    });
    return C6(s);
  }
  i(I3e, "createConfigItem");
  var ZT = Symbol.for("@babel/core@7 - ConfigItem");
  function _3e(e) {
    if (e != null && e[ZT])
      return e._descriptor;
  }
  i(_3e, "getItemDescriptor");
  var hm = class {
    static {
      i(this, "ConfigItem");
    }
    constructor(t) {
      this._descriptor = void 0, this[ZT] = !0, this.value = void 0, this.options = void 0, this.dirname = void 0, this.name = void 0, this.
      file = void 0, this._descriptor = t, Object.defineProperty(this, "_descriptor", {
        enumerable: !1
      }), Object.defineProperty(this, ZT, {
        enumerable: !1
      }), this.value = this._descriptor.value, this.options = this._descriptor.options, this.dirname = this._descriptor.dirname, this.name =
      this._descriptor.name, this.file = this._descriptor.file ? {
        request: this._descriptor.file.request,
        resolved: this._descriptor.file.resolved
      } : void 0, Object.freeze(this);
    }
  };
  Object.freeze(hm.prototype);
});

// ../node_modules/@babel/core/lib/config/validation/removed.js
var w6 = y((mm) => {
  "use strict";
  Object.defineProperty(mm, "__esModule", {
    value: !0
  });
  mm.default = void 0;
  var Uit = mm.default = {
    auxiliaryComment: {
      message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"
    },
    blacklist: {
      message: "Put the specific transforms you want in the `plugins` option"
    },
    breakConfig: {
      message: "This is not a necessary option in Babel 6"
    },
    experimental: {
      message: "Put the specific transforms you want in the `plugins` option"
    },
    externalHelpers: {
      message: "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/"
    },
    extra: {
      message: ""
    },
    jsxPragma: {
      message: "use the `pragma` option in the `react-jsx` plugin. Check out http://babeljs.io/docs/plugins/transform-react-jsx/"
    },
    loose: {
      message: "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option."
    },
    metadataUsedHelpers: {
      message: "Not required anymore as this is enabled by default"
    },
    modules: {
      message: "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules"
    },
    nonStandard: {
      message: "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.i\
o/docs/plugins/preset-react/"
    },
    optional: {
      message: "Put the specific transforms you want in the `plugins` option"
    },
    sourceMapName: {
      message: "The `sourceMapName` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file\
` themselves."
    },
    stage: {
      message: "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"
    },
    whitelist: {
      message: "Put the specific transforms you want in the `plugins` option"
    },
    resolveModuleSource: {
      version: 6,
      message: "Use `babel-plugin-module-resolver@3`'s 'resolvePath' options"
    },
    metadata: {
      version: 6,
      message: "Generated plugin metadata is always included in the output result"
    },
    sourceMapTarget: {
      version: 6,
      message: "The `sourceMapTarget` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.fi\
le` themselves."
    }
  };
});

// ../node_modules/@babel/core/lib/config/validation/option-assertions.js
var rx = y((pr) => {
  "use strict";
  Object.defineProperty(pr, "__esModule", {
    value: !0
  });
  pr.access = Ds;
  pr.assertArray = tx;
  pr.assertAssumptions = X3e;
  pr.assertBabelrcSearch = W3e;
  pr.assertBoolean = ex;
  pr.assertCallerMetadata = L3e;
  pr.assertCompact = k3e;
  pr.assertConfigApplicableTest = U3e;
  pr.assertConfigFileSearch = V3e;
  pr.assertFunction = j3e;
  pr.assertIgnoreList = q3e;
  pr.assertInputSourceMap = B3e;
  pr.assertObject = _6;
  pr.assertPluginList = H3e;
  pr.assertRootMode = N3e;
  pr.assertSourceMaps = R3e;
  pr.assertSourceType = F3e;
  pr.assertString = M3e;
  pr.assertTargets = K3e;
  pr.msg = ft;
  function cf() {
    let e = zT();
    return cf = /* @__PURE__ */ i(function() {
      return e;
    }, "_helperCompilationTargets"), e;
  }
  i(cf, "_helperCompilationTargets");
  var O3e = ff();
  function ft(e) {
    switch (e.type) {
      case "root":
        return "";
      case "env":
        return `${ft(e.parent)}.env["${e.name}"]`;
      case "overrides":
        return `${ft(e.parent)}.overrides[${e.index}]`;
      case "option":
        return `${ft(e.parent)}.${e.name}`;
      case "access":
        return `${ft(e.parent)}[${JSON.stringify(e.name)}]`;
      default:
        throw new Error(`Assertion failure: Unknown type ${e.type}`);
    }
  }
  i(ft, "msg");
  function Ds(e, t) {
    return {
      type: "access",
      name: t,
      parent: e
    };
  }
  i(Ds, "access");
  function N3e(e, t) {
    if (t !== void 0 && t !== "root" && t !== "upward" && t !== "upward-optional")
      throw new Error(`${ft(e)} must be a "root", "upward", "upward-optional" or undefined`);
    return t;
  }
  i(N3e, "assertRootMode");
  function R3e(e, t) {
    if (t !== void 0 && typeof t != "boolean" && t !== "inline" && t !== "both")
      throw new Error(`${ft(e)} must be a boolean, "inline", "both", or undefined`);
    return t;
  }
  i(R3e, "assertSourceMaps");
  function k3e(e, t) {
    if (t !== void 0 && typeof t != "boolean" && t !== "auto")
      throw new Error(`${ft(e)} must be a boolean, "auto", or undefined`);
    return t;
  }
  i(k3e, "assertCompact");
  function F3e(e, t) {
    if (t !== void 0 && t !== "module" && t !== "script" && t !== "unambiguous")
      throw new Error(`${ft(e)} must be "module", "script", "unambiguous", or undefined`);
    return t;
  }
  i(F3e, "assertSourceType");
  function L3e(e, t) {
    let r = _6(e, t);
    if (r) {
      if (typeof r.name != "string")
        throw new Error(`${ft(e)} set but does not contain "name" property string`);
      for (let s of Object.keys(r)) {
        let n = Ds(e, s), a = r[s];
        if (a != null && typeof a != "boolean" && typeof a != "string" && typeof a != "number")
          throw new Error(`${ft(n)} must be null, undefined, a boolean, a string, or a number.`);
      }
    }
    return t;
  }
  i(L3e, "assertCallerMetadata");
  function B3e(e, t) {
    if (t !== void 0 && typeof t != "boolean" && (typeof t != "object" || !t))
      throw new Error(`${ft(e)} must be a boolean, object, or undefined`);
    return t;
  }
  i(B3e, "assertInputSourceMap");
  function M3e(e, t) {
    if (t !== void 0 && typeof t != "string")
      throw new Error(`${ft(e)} must be a string, or undefined`);
    return t;
  }
  i(M3e, "assertString");
  function j3e(e, t) {
    if (t !== void 0 && typeof t != "function")
      throw new Error(`${ft(e)} must be a function, or undefined`);
    return t;
  }
  i(j3e, "assertFunction");
  function ex(e, t) {
    if (t !== void 0 && typeof t != "boolean")
      throw new Error(`${ft(e)} must be a boolean, or undefined`);
    return t;
  }
  i(ex, "assertBoolean");
  function _6(e, t) {
    if (t !== void 0 && (typeof t != "object" || Array.isArray(t) || !t))
      throw new Error(`${ft(e)} must be an object, or undefined`);
    return t;
  }
  i(_6, "assertObject");
  function tx(e, t) {
    if (t != null && !Array.isArray(t))
      throw new Error(`${ft(e)} must be an array, or undefined`);
    return t;
  }
  i(tx, "assertArray");
  function q3e(e, t) {
    let r = tx(e, t);
    return r?.forEach((s, n) => $3e(Ds(e, n), s)), r;
  }
  i(q3e, "assertIgnoreList");
  function $3e(e, t) {
    if (typeof t != "string" && typeof t != "function" && !(t instanceof RegExp))
      throw new Error(`${ft(e)} must be an array of string/Function/RegExp values, or undefined`);
    return t;
  }
  i($3e, "assertIgnoreItem");
  function U3e(e, t) {
    if (t === void 0)
      return t;
    if (Array.isArray(t))
      t.forEach((r, s) => {
        if (!ym(r))
          throw new Error(`${ft(Ds(e, s))} must be a string/Function/RegExp.`);
      });
    else if (!ym(t))
      throw new Error(`${ft(e)} must be a string/Function/RegExp, or an array of those`);
    return t;
  }
  i(U3e, "assertConfigApplicableTest");
  function ym(e) {
    return typeof e == "string" || typeof e == "function" || e instanceof RegExp;
  }
  i(ym, "checkValidTest");
  function V3e(e, t) {
    if (t !== void 0 && typeof t != "boolean" && typeof t != "string")
      throw new Error(`${ft(e)} must be a undefined, a boolean, a string, got ${JSON.stringify(t)}`);
    return t;
  }
  i(V3e, "assertConfigFileSearch");
  function W3e(e, t) {
    if (t === void 0 || typeof t == "boolean")
      return t;
    if (Array.isArray(t))
      t.forEach((r, s) => {
        if (!ym(r))
          throw new Error(`${ft(Ds(e, s))} must be a string/Function/RegExp.`);
      });
    else if (!ym(t))
      throw new Error(`${ft(e)} must be a undefined, a boolean, a string/Function/RegExp or an array of those, got ${JSON.stringify(t)}`);
    return t;
  }
  i(W3e, "assertBabelrcSearch");
  function H3e(e, t) {
    let r = tx(e, t);
    return r && r.forEach((s, n) => G3e(Ds(e, n), s)), r;
  }
  i(H3e, "assertPluginList");
  function G3e(e, t) {
    if (Array.isArray(t)) {
      if (t.length === 0)
        throw new Error(`${ft(e)} must include an object`);
      if (t.length > 3)
        throw new Error(`${ft(e)} may only be a two-tuple or three-tuple`);
      if (D6(Ds(e, 0), t[0]), t.length > 1) {
        let r = t[1];
        if (r !== void 0 && r !== !1 && (typeof r != "object" || Array.isArray(r) || r === null))
          throw new Error(`${ft(Ds(e, 1))} must be an object, false, or undefined`);
      }
      if (t.length === 3) {
        let r = t[2];
        if (r !== void 0 && typeof r != "string")
          throw new Error(`${ft(Ds(e, 2))} must be a string, or undefined`);
      }
    } else
      D6(e, t);
    return t;
  }
  i(G3e, "assertPluginItem");
  function D6(e, t) {
    if ((typeof t != "object" || !t) && typeof t != "string" && typeof t != "function")
      throw new Error(`${ft(e)} must be a string, object, function`);
    return t;
  }
  i(D6, "assertPluginTarget");
  function K3e(e, t) {
    if ((0, cf().isBrowsersQueryValid)(t)) return t;
    if (typeof t != "object" || !t || Array.isArray(t))
      throw new Error(`${ft(e)} must be a string, an array of strings or an object`);
    let r = Ds(e, "browsers"), s = Ds(e, "esmodules");
    I6(r, t.browsers), ex(s, t.esmodules);
    for (let n of Object.keys(t)) {
      let a = t[n], o = Ds(e, n);
      if (n === "esmodules") ex(o, a);
      else if (n === "browsers") I6(o, a);
      else if (hasOwnProperty.call(cf().TargetNames, n))
        Y3e(o, a);
      else {
        let l = Object.keys(cf().TargetNames).join(", ");
        throw new Error(`${ft(o)} is not a valid target. Supported targets are ${l}`);
      }
    }
    return t;
  }
  i(K3e, "assertTargets");
  function I6(e, t) {
    if (t !== void 0 && !(0, cf().isBrowsersQueryValid)(t))
      throw new Error(`${ft(e)} must be undefined, a string or an array of strings`);
  }
  i(I6, "assertBrowsersList");
  function Y3e(e, t) {
    if (!(typeof t == "number" && Math.round(t) === t) && typeof t != "string")
      throw new Error(`${ft(e)} must be a string or an integer number`);
  }
  i(Y3e, "assertBrowserVersion");
  function X3e(e, t) {
    if (t === void 0) return;
    if (typeof t != "object" || t === null)
      throw new Error(`${ft(e)} must be an object or undefined.`);
    let r = e;
    do
      r = r.parent;
    while (r.type !== "root");
    let s = r.source === "preset";
    for (let n of Object.keys(t)) {
      let a = Ds(e, n);
      if (!O3e.assumptionsNames.has(n))
        throw new Error(`${ft(a)} is not a supported assumption.`);
      if (typeof t[n] != "boolean")
        throw new Error(`${ft(a)} must be a boolean.`);
      if (s && t[n] === !1)
        throw new Error(`${ft(a)} cannot be set to 'false' inside presets.`);
    }
    return t;
  }
  i(X3e, "assertAssumptions");
});

// ../node_modules/@babel/core/lib/config/validation/options.js
var ff = y((Ll) => {
  "use strict";
  Object.defineProperty(Ll, "__esModule", {
    value: !0
  });
  Ll.assumptionsNames = void 0;
  Ll.checkNoUnwrappedItemOptionPairs = sBe;
  Ll.validate = Q3e;
  var O6 = w6(), Pe = rx(), z3e = co(), N6 = {
    cwd: Pe.assertString,
    root: Pe.assertString,
    rootMode: Pe.assertRootMode,
    configFile: Pe.assertConfigFileSearch,
    caller: Pe.assertCallerMetadata,
    filename: Pe.assertString,
    filenameRelative: Pe.assertString,
    code: Pe.assertBoolean,
    ast: Pe.assertBoolean,
    cloneInputAst: Pe.assertBoolean,
    envName: Pe.assertString
  }, R6 = {
    babelrc: Pe.assertBoolean,
    babelrcRoots: Pe.assertBabelrcSearch
  }, k6 = {
    extends: Pe.assertString,
    ignore: Pe.assertIgnoreList,
    only: Pe.assertIgnoreList,
    targets: Pe.assertTargets,
    browserslistConfigFile: Pe.assertConfigFileSearch,
    browserslistEnv: Pe.assertString
  }, F6 = {
    inputSourceMap: Pe.assertInputSourceMap,
    presets: Pe.assertPluginList,
    plugins: Pe.assertPluginList,
    passPerPreset: Pe.assertBoolean,
    assumptions: Pe.assertAssumptions,
    env: tBe,
    overrides: rBe,
    test: Pe.assertConfigApplicableTest,
    include: Pe.assertConfigApplicableTest,
    exclude: Pe.assertConfigApplicableTest,
    retainLines: Pe.assertBoolean,
    comments: Pe.assertBoolean,
    shouldPrintComment: Pe.assertFunction,
    compact: Pe.assertCompact,
    minified: Pe.assertBoolean,
    auxiliaryCommentBefore: Pe.assertString,
    auxiliaryCommentAfter: Pe.assertString,
    sourceType: Pe.assertSourceType,
    wrapPluginVisitorMethod: Pe.assertFunction,
    highlightCode: Pe.assertBoolean,
    sourceMaps: Pe.assertSourceMaps,
    sourceMap: Pe.assertSourceMaps,
    sourceFileName: Pe.assertString,
    sourceRoot: Pe.assertString,
    parserOpts: Pe.assertObject,
    generatorOpts: Pe.assertObject
  };
  Object.assign(F6, {
    getModuleId: Pe.assertFunction,
    moduleRoot: Pe.assertString,
    moduleIds: Pe.assertBoolean,
    moduleId: Pe.assertString
  });
  var J3e = ["arrayLikeIsIterable", "constantReexports", "constantSuper", "enumerableModuleMeta", "ignoreFunctionLength", "ignoreToPrimitive\
Hint", "iterableIsArray", "mutableTemplateObject", "noClassCalls", "noDocumentAll", "noIncompleteNsImportDetection", "noNewArrows", "noUnini\
tializedPrivateFieldAccess", "objectRestNoSymbols", "privateFieldsAsSymbols", "privateFieldsAsProperties", "pureGetters", "setClassMethods",
  "setComputedProperties", "setPublicClassFields", "setSpreadProperties", "skipForOfIteratorClosing", "superIsCallableConstructor"], Git = Ll.
  assumptionsNames = new Set(J3e);
  function L6(e) {
    return e.type === "root" ? e.source : L6(e.parent);
  }
  i(L6, "getSource");
  function Q3e(e, t, r) {
    try {
      return sx({
        type: "root",
        source: e
      }, t);
    } catch (s) {
      let n = new z3e.default(s.message, r);
      throw s.code && (n.code = s.code), n;
    }
  }
  i(Q3e, "validate");
  function sx(e, t) {
    let r = L6(e);
    return eBe(t), Object.keys(t).forEach((s) => {
      let n = {
        type: "option",
        name: s,
        parent: e
      };
      if (r === "preset" && k6[s])
        throw new Error(`${(0, Pe.msg)(n)} is not allowed in preset options`);
      if (r !== "arguments" && N6[s])
        throw new Error(`${(0, Pe.msg)(n)} is only allowed in root programmatic options`);
      if (r !== "arguments" && r !== "configfile" && R6[s])
        throw r === "babelrcfile" || r === "extendsfile" ? new Error(`${(0, Pe.msg)(n)} is not allowed in .babelrc or "extends"ed files, onl\
y in root programmatic options, or babel.config.js/config file options`) : new Error(`${(0, Pe.msg)(n)} is only allowed in root programmatic\
 options, or babel.config.js/config file options`);
      (F6[s] || k6[s] || R6[s] || N6[s] || Z3e)(n, t[s]);
    }), t;
  }
  i(sx, "validateNested");
  function Z3e(e) {
    let t = e.name;
    if (O6.default[t]) {
      let {
        message: r,
        version: s = 5
      } = O6.default[t];
      throw new Error(`Using removed Babel ${s} option: ${(0, Pe.msg)(e)} - ${r}`);
    } else {
      let r = new Error(`Unknown option: ${(0, Pe.msg)(e)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information ab\
out options.`);
      throw r.code = "BABEL_UNKNOWN_OPTION", r;
    }
  }
  i(Z3e, "throwUnknownError");
  function eBe(e) {
    if (hasOwnProperty.call(e, "sourceMap") && hasOwnProperty.call(e, "sourceMaps"))
      throw new Error(".sourceMap is an alias for .sourceMaps, cannot use both");
  }
  i(eBe, "assertNoDuplicateSourcemap");
  function tBe(e, t) {
    if (e.parent.type === "env")
      throw new Error(`${(0, Pe.msg)(e)} is not allowed inside of another .env block`);
    let r = e.parent, s = (0, Pe.assertObject)(e, t);
    if (s)
      for (let n of Object.keys(s)) {
        let a = (0, Pe.assertObject)((0, Pe.access)(e, n), s[n]);
        if (!a) continue;
        sx({
          type: "env",
          name: n,
          parent: r
        }, a);
      }
    return s;
  }
  i(tBe, "assertEnvSet");
  function rBe(e, t) {
    if (e.parent.type === "env")
      throw new Error(`${(0, Pe.msg)(e)} is not allowed inside an .env block`);
    if (e.parent.type === "overrides")
      throw new Error(`${(0, Pe.msg)(e)} is not allowed inside an .overrides block`);
    let r = e.parent, s = (0, Pe.assertArray)(e, t);
    if (s)
      for (let [n, a] of s.entries()) {
        let o = (0, Pe.access)(e, n), l = (0, Pe.assertObject)(o, a);
        if (!l) throw new Error(`${(0, Pe.msg)(o)} must be an object`);
        sx({
          type: "overrides",
          index: n,
          parent: r
        }, l);
      }
    return s;
  }
  i(rBe, "assertOverridesList");
  function sBe(e, t, r, s) {
    if (t === 0) return;
    let n = e[t - 1], a = e[t];
    n.file && n.options === void 0 && typeof a.value == "object" && (s.message += `
- Maybe you meant to use
"${r}s": [
  ["${n.file.request}", ${JSON.stringify(a.value, void 0, 2)}]
]
To be a valid ${r}, its name and options should be wrapped in a pair of brackets`);
  }
  i(sBe, "checkNoUnwrappedItemOptionPairs");
});

// ../node_modules/@babel/core/lib/config/pattern-to-regex.js
var lx = y((ox) => {
  "use strict";
  Object.defineProperty(ox, "__esModule", {
    value: !0
  });
  ox.default = aBe;
  function gm() {
    let e = Q("path");
    return gm = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(gm, "_path");
  var pf = `\\${gm().sep}`, nx = `(?:${pf}|$)`, ix = `[^${pf}]+`, ax = `(?:${ix}${pf})`, M6 = `(?:${ix}${nx})`, nBe = `${ax}*?`, iBe = `${ax}\
*?${M6}?`;
  function B6(e) {
    return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
  }
  i(B6, "escapeRegExp");
  function aBe(e, t) {
    let r = gm().resolve(t, e).split(gm().sep);
    return new RegExp(["^", ...r.map((s, n) => {
      let a = n === r.length - 1;
      return s === "**" ? a ? iBe : nBe : s === "*" ? a ? M6 : ax : s.indexOf("*.") === 0 ? ix + B6(s.slice(1)) + (a ? nx : pf) : B6(s) + (a ?
      nx : pf);
    })].join(""));
  }
  i(aBe, "pathToPattern");
});

// ../node_modules/@babel/core/lib/config/printer.js
var $6 = y((Bl) => {
  "use strict";
  Object.defineProperty(Bl, "__esModule", {
    value: !0
  });
  Bl.ConfigPrinter = Bl.ChainFormatter = void 0;
  function q6() {
    let e = Cs();
    return q6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(q6, "_gensync");
  var oBe = Bl.ChainFormatter = {
    Programmatic: 0,
    Config: 1
  }, ux = {
    title(e, t, r) {
      let s = "";
      return e === oBe.Programmatic ? (s = "programmatic options", t && (s += " from " + t)) : s = "config " + r, s;
    },
    loc(e, t) {
      let r = "";
      return e != null && (r += `.overrides[${e}]`), t != null && (r += `.env["${t}"]`), r;
    },
    *optionsAndDescriptors(e) {
      let t = Object.assign({}, e.options);
      delete t.overrides, delete t.env;
      let r = [...yield* e.plugins()];
      r.length && (t.plugins = r.map((n) => j6(n)));
      let s = [...yield* e.presets()];
      return s.length && (t.presets = [...s].map((n) => j6(n))), JSON.stringify(t, void 0, 2);
    }
  };
  function j6(e) {
    var t;
    let r = (t = e.file) == null ? void 0 : t.request;
    return r == null && (typeof e.value == "object" ? r = e.value : typeof e.value == "function" && (r = `[Function: ${e.value.toString().slice(
    0, 50)} ... ]`)), r == null && (r = "[Unknown]"), e.options === void 0 ? r : e.name == null ? [r, e.options] : [r, e.options, e.name];
  }
  i(j6, "descriptorToConfig");
  var cx = class e {
    static {
      i(this, "ConfigPrinter");
    }
    constructor() {
      this._stack = [];
    }
    configure(t, r, {
      callerName: s,
      filepath: n
    }) {
      return t ? (a, o, l) => {
        this._stack.push({
          type: r,
          callerName: s,
          filepath: n,
          content: a,
          index: o,
          envName: l
        });
      } : () => {
      };
    }
    static *format(t) {
      let r = ux.title(t.type, t.callerName, t.filepath), s = ux.loc(t.index, t.envName);
      s && (r += ` ${s}`);
      let n = yield* ux.optionsAndDescriptors(t.content);
      return `${r}
${n}`;
    }
    *output() {
      return this._stack.length === 0 ? "" : (yield* q6().all(this._stack.map((r) => e.format(r)))).join(`

`);
    }
  };
  Bl.ConfigPrinter = cx;
});

// ../node_modules/@babel/core/lib/config/config-chain.js
var vx = y((jl) => {
  "use strict";
  Object.defineProperty(jl, "__esModule", {
    value: !0
  });
  jl.buildPresetChain = cBe;
  jl.buildPresetChainWalker = void 0;
  jl.buildRootChain = yBe;
  function W6() {
    let e = Q("path");
    return W6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(W6, "_path");
  function H6() {
    let e = Ka();
    return H6 = /* @__PURE__ */ i(function() {
      return e;
    }, "_debug"), e;
  }
  i(H6, "_debug");
  var hx = ff(), G6 = lx(), hf = $6(), lBe = Si(), uBe = co(), df = lf(), xr = uo(), Gs = QT(), U6 = H6()("babel:config:config-chain");
  function* cBe(e, t) {
    let r = yield* fBe(e, t);
    return r ? {
      plugins: vm(r.plugins),
      presets: vm(r.presets),
      options: r.options.map((s) => K6(s)),
      files: /* @__PURE__ */ new Set()
    } : null;
  }
  i(cBe, "buildPresetChain");
  var fBe = jl.buildPresetChainWalker = Ex({
    root: /* @__PURE__ */ i((e) => pBe(e), "root"),
    env: /* @__PURE__ */ i((e, t) => dBe(e)(t), "env"),
    overrides: /* @__PURE__ */ i((e, t) => hBe(e)(t), "overrides"),
    overridesEnv: /* @__PURE__ */ i((e, t, r) => mBe(e)(t)(r), "overridesEnv"),
    createLogger: /* @__PURE__ */ i(() => () => {
    }, "createLogger")
  }), pBe = (0, xr.makeWeakCacheSync)((e) => mx(e, e.alias, Gs.createUncachedDescriptors)), dBe = (0, xr.makeWeakCacheSync)((e) => (0, xr.makeStrongCacheSync)(
  (t) => yx(e, e.alias, Gs.createUncachedDescriptors, t))), hBe = (0, xr.makeWeakCacheSync)((e) => (0, xr.makeStrongCacheSync)((t) => gx(e, e.
  alias, Gs.createUncachedDescriptors, t))), mBe = (0, xr.makeWeakCacheSync)((e) => (0, xr.makeStrongCacheSync)((t) => (0, xr.makeStrongCacheSync)(
  (r) => bx(e, e.alias, Gs.createUncachedDescriptors, t, r))));
  function* yBe(e, t) {
    let r, s, n = new hf.ConfigPrinter(), a = yield* SBe({
      options: e,
      dirname: t.cwd
    }, t, void 0, n);
    if (!a) return null;
    let o = yield* n.output(), l;
    typeof e.configFile == "string" ? l = yield* (0, df.loadConfig)(e.configFile, t.cwd, t.envName, t.caller) : e.configFile !== !1 && (l = yield* (0, df.
    findRootConfig)(t.root, t.envName, t.caller));
    let {
      babelrc: u,
      babelrcRoots: c
    } = e, f = t.cwd, p = Em(), d = new hf.ConfigPrinter();
    if (l) {
      let D = bBe(l), C = yield* px(D, t, void 0, d);
      if (!C) return null;
      r = yield* d.output(), u === void 0 && (u = D.options.babelrc), c === void 0 && (f = D.dirname, c = D.options.babelrcRoots), Ml(p, C);
    }
    let m, b, h = !1, g = Em();
    if ((u === !0 || u === void 0) && typeof t.filename == "string") {
      let D = yield* (0, df.findPackageData)(t.filename);
      if (D && gBe(t, D, c, f)) {
        if ({
          ignore: m,
          config: b
        } = yield* (0, df.findRelativeConfig)(D, t.envName, t.caller), m && g.files.add(m.filepath), m && Y6(t, m.ignore, null, m.dirname) &&
        (h = !0), b && !h) {
          let C = EBe(b), N = new hf.ConfigPrinter(), I = yield* px(C, t, void 0, N);
          I ? (s = yield* N.output(), Ml(g, I)) : h = !0;
        }
        b && h && g.files.add(b.filepath);
      }
    }
    t.showConfig && console.log(`Babel configs on "${t.filename}" (ascending priority):
` + [r, s, o].filter((D) => !!D).join(`

`) + `
-----End Babel configs-----`);
    let E = Ml(Ml(Ml(Em(), p), g), a);
    return {
      plugins: h ? [] : vm(E.plugins),
      presets: h ? [] : vm(E.presets),
      options: h ? [] : E.options.map((D) => K6(D)),
      fileHandling: h ? "ignored" : "transpile",
      ignore: m || void 0,
      babelrc: b || void 0,
      config: l || void 0,
      files: E.files
    };
  }
  i(yBe, "buildRootChain");
  function gBe(e, t, r, s) {
    if (typeof r == "boolean") return r;
    let n = e.root;
    if (r === void 0)
      return t.directories.indexOf(n) !== -1;
    let a = r;
    return Array.isArray(a) || (a = [a]), a = a.map((o) => typeof o == "string" ? W6().resolve(s, o) : o), a.length === 1 && a[0] === n ? t.
    directories.indexOf(n) !== -1 : a.some((o) => (typeof o == "string" && (o = (0, G6.default)(o, s)), t.directories.some((l) => X6(o, s, l,
    e))));
  }
  i(gBe, "babelrcLoadEnabled");
  var bBe = (0, xr.makeWeakCacheSync)((e) => ({
    filepath: e.filepath,
    dirname: e.dirname,
    options: (0, hx.validate)("configfile", e.options, e.filepath)
  })), EBe = (0, xr.makeWeakCacheSync)((e) => ({
    filepath: e.filepath,
    dirname: e.dirname,
    options: (0, hx.validate)("babelrcfile", e.options, e.filepath)
  })), vBe = (0, xr.makeWeakCacheSync)((e) => ({
    filepath: e.filepath,
    dirname: e.dirname,
    options: (0, hx.validate)("extendsfile", e.options, e.filepath)
  })), SBe = Ex({
    root: /* @__PURE__ */ i((e) => mx(e, "base", Gs.createCachedDescriptors), "root"),
    env: /* @__PURE__ */ i((e, t) => yx(e, "base", Gs.createCachedDescriptors, t), "env"),
    overrides: /* @__PURE__ */ i((e, t) => gx(e, "base", Gs.createCachedDescriptors, t), "overrides"),
    overridesEnv: /* @__PURE__ */ i((e, t, r) => bx(e, "base", Gs.createCachedDescriptors, t, r), "overridesEnv"),
    createLogger: /* @__PURE__ */ i((e, t, r) => DBe(e, t, r), "createLogger")
  }), TBe = Ex({
    root: /* @__PURE__ */ i((e) => xBe(e), "root"),
    env: /* @__PURE__ */ i((e, t) => PBe(e)(t), "env"),
    overrides: /* @__PURE__ */ i((e, t) => ABe(e)(t), "overrides"),
    overridesEnv: /* @__PURE__ */ i((e, t, r) => CBe(e)(t)(r), "overridesEnv"),
    createLogger: /* @__PURE__ */ i((e, t, r) => wBe(e.filepath, t, r), "createLogger")
  });
  function* px(e, t, r, s) {
    let n = yield* TBe(e, t, r, s);
    return n?.files.add(e.filepath), n;
  }
  i(px, "loadFileChain");
  var xBe = (0, xr.makeWeakCacheSync)((e) => mx(e, e.filepath, Gs.createUncachedDescriptors)), PBe = (0, xr.makeWeakCacheSync)((e) => (0, xr.
  makeStrongCacheSync)((t) => yx(e, e.filepath, Gs.createUncachedDescriptors, t))), ABe = (0, xr.makeWeakCacheSync)((e) => (0, xr.makeStrongCacheSync)(
  (t) => gx(e, e.filepath, Gs.createUncachedDescriptors, t))), CBe = (0, xr.makeWeakCacheSync)((e) => (0, xr.makeStrongCacheSync)((t) => (0, xr.
  makeStrongCacheSync)((r) => bx(e, e.filepath, Gs.createUncachedDescriptors, t, r))));
  function wBe(e, t, r) {
    return r ? r.configure(t.showConfig, hf.ChainFormatter.Config, {
      filepath: e
    }) : () => {
    };
  }
  i(wBe, "buildFileLogger");
  function mx({
    dirname: e,
    options: t
  }, r, s) {
    return s(e, t, r);
  }
  i(mx, "buildRootDescriptors");
  function DBe(e, t, r) {
    var s;
    return r ? r.configure(t.showConfig, hf.ChainFormatter.Programmatic, {
      callerName: (s = t.caller) == null ? void 0 : s.name
    }) : () => {
    };
  }
  i(DBe, "buildProgrammaticLogger");
  function yx({
    dirname: e,
    options: t
  }, r, s, n) {
    var a;
    let o = (a = t.env) == null ? void 0 : a[n];
    return o ? s(e, o, `${r}.env["${n}"]`) : null;
  }
  i(yx, "buildEnvDescriptors");
  function gx({
    dirname: e,
    options: t
  }, r, s, n) {
    var a;
    let o = (a = t.overrides) == null ? void 0 : a[n];
    if (!o) throw new Error("Assertion failure - missing override");
    return s(e, o, `${r}.overrides[${n}]`);
  }
  i(gx, "buildOverrideDescriptors");
  function bx({
    dirname: e,
    options: t
  }, r, s, n, a) {
    var o, l;
    let u = (o = t.overrides) == null ? void 0 : o[n];
    if (!u) throw new Error("Assertion failure - missing override");
    let c = (l = u.env) == null ? void 0 : l[a];
    return c ? s(e, c, `${r}.overrides[${n}].env["${a}"]`) : null;
  }
  i(bx, "buildOverrideEnvDescriptors");
  function Ex({
    root: e,
    env: t,
    overrides: r,
    overridesEnv: s,
    createLogger: n
  }) {
    return /* @__PURE__ */ i(function* (o, l, u = /* @__PURE__ */ new Set(), c) {
      let {
        dirname: f
      } = o, p = [], d = e(o);
      if (bm(d, f, l, o.filepath)) {
        p.push({
          config: d,
          envName: void 0,
          index: void 0
        });
        let h = t(o, l.envName);
        h && bm(h, f, l, o.filepath) && p.push({
          config: h,
          envName: l.envName,
          index: void 0
        }), (d.options.overrides || []).forEach((g, E) => {
          let D = r(o, E);
          if (bm(D, f, l, o.filepath)) {
            p.push({
              config: D,
              index: E,
              envName: void 0
            });
            let C = s(o, E, l.envName);
            C && bm(C, f, l, o.filepath) && p.push({
              config: C,
              index: E,
              envName: l.envName
            });
          }
        });
      }
      if (p.some(({
        config: {
          options: {
            ignore: h,
            only: g
          }
        }
      }) => Y6(l, h, g, f)))
        return null;
      let m = Em(), b = n(o, l, c);
      for (let {
        config: h,
        index: g,
        envName: E
      } of p) {
        if (!(yield* IBe(m, h.options, f, l, u, c)))
          return null;
        b(h, g, E), yield* _Be(m, h);
      }
      return m;
    }, "chainWalker");
  }
  i(Ex, "makeChainWalker");
  function* IBe(e, t, r, s, n, a) {
    if (t.extends === void 0) return !0;
    let o = yield* (0, df.loadConfig)(t.extends, r, s.envName, s.caller);
    if (n.has(o))
      throw new Error(`Configuration cycle detected loading ${o.filepath}.
File already loaded following the config chain:
` + Array.from(n, (u) => ` - ${u.filepath}`).join(`
`));
    n.add(o);
    let l = yield* px(vBe(o), s, n, a);
    return n.delete(o), l ? (Ml(e, l), !0) : !1;
  }
  i(IBe, "mergeExtendsChain");
  function Ml(e, t) {
    e.options.push(...t.options), e.plugins.push(...t.plugins), e.presets.push(...t.presets);
    for (let r of t.files)
      e.files.add(r);
    return e;
  }
  i(Ml, "mergeChain");
  function* _Be(e, {
    options: t,
    plugins: r,
    presets: s
  }) {
    return e.options.push(t), e.plugins.push(...yield* r()), e.presets.push(...yield* s()), e;
  }
  i(_Be, "mergeChainOpts");
  function Em() {
    return {
      options: [],
      presets: [],
      plugins: [],
      files: /* @__PURE__ */ new Set()
    };
  }
  i(Em, "emptyChain");
  function K6(e) {
    let t = Object.assign({}, e);
    return delete t.extends, delete t.env, delete t.overrides, delete t.plugins, delete t.presets, delete t.passPerPreset, delete t.ignore, delete t.
    only, delete t.test, delete t.include, delete t.exclude, hasOwnProperty.call(t, "sourceMap") && (t.sourceMaps = t.sourceMap, delete t.sourceMap),
    t;
  }
  i(K6, "normalizeOptions");
  function vm(e) {
    let t = /* @__PURE__ */ new Map(), r = [];
    for (let s of e)
      if (typeof s.value == "function") {
        let n = s.value, a = t.get(n);
        a || (a = /* @__PURE__ */ new Map(), t.set(n, a));
        let o = a.get(s.name);
        o ? o.value = s : (o = {
          value: s
        }, r.push(o), s.ownPass || a.set(s.name, o));
      } else
        r.push({
          value: s
        });
    return r.reduce((s, n) => (s.push(n.value), s), []);
  }
  i(vm, "dedupDescriptors");
  function bm({
    options: e
  }, t, r, s) {
    return (e.test === void 0 || fx(r, e.test, t, s)) && (e.include === void 0 || fx(r, e.include, t, s)) && (e.exclude === void 0 || !fx(r,
    e.exclude, t, s));
  }
  i(bm, "configIsApplicable");
  function fx(e, t, r, s) {
    let n = Array.isArray(t) ? t : [t];
    return dx(e, n, r, s);
  }
  i(fx, "configFieldIsApplicable");
  function V6(e, t) {
    return t instanceof RegExp ? String(t) : t;
  }
  i(V6, "ignoreListReplacer");
  function Y6(e, t, r, s) {
    if (t && dx(e, t, s)) {
      var n;
      let o = `No config is applied to "${(n = e.filename) != null ? n : "(unknown)"}" because it matches one of \`ignore: ${JSON.stringify(
      t, V6)}\` from "${s}"`;
      return U6(o), e.showConfig && console.log(o), !0;
    }
    if (r && !dx(e, r, s)) {
      var a;
      let o = `No config is applied to "${(a = e.filename) != null ? a : "(unknown)"}" because it fails to match one of \`only: ${JSON.stringify(
      r, V6)}\` from "${s}"`;
      return U6(o), e.showConfig && console.log(o), !0;
    }
    return !1;
  }
  i(Y6, "shouldIgnore");
  function dx(e, t, r, s) {
    return t.some((n) => X6(n, r, e.filename, e, s));
  }
  i(dx, "matchesPatterns");
  function X6(e, t, r, s, n) {
    if (typeof e == "function")
      return !!(0, lBe.endHiddenCallStack)(e)(r, {
        dirname: t,
        envName: s.envName,
        caller: s.caller
      });
    if (typeof r != "string")
      throw new uBe.default("Configuration contains string/RegExp pattern, but no filename was passed to Babel", n);
    return typeof e == "string" && (e = (0, G6.default)(e, t)), e.test(r);
  }
  i(X6, "matchPattern");
});

// ../node_modules/@babel/core/lib/config/validation/plugins.js
var z6 = y((Sx) => {
  "use strict";
  Object.defineProperty(Sx, "__esModule", {
    value: !0
  });
  Sx.validatePluginObject = kBe;
  var Ii = rx(), OBe = {
    name: Ii.assertString,
    manipulateOptions: Ii.assertFunction,
    pre: Ii.assertFunction,
    post: Ii.assertFunction,
    inherits: Ii.assertFunction,
    visitor: NBe,
    parserOverride: Ii.assertFunction,
    generatorOverride: Ii.assertFunction
  };
  function NBe(e, t) {
    let r = (0, Ii.assertObject)(e, t);
    if (r && (Object.keys(r).forEach((s) => {
      s !== "_exploded" && s !== "_verified" && RBe(s, r[s]);
    }), r.enter || r.exit))
      throw new Error(`${(0, Ii.msg)(e)} cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.`);
    return r;
  }
  i(NBe, "assertVisitorMap");
  function RBe(e, t) {
    if (t && typeof t == "object")
      Object.keys(t).forEach((r) => {
        if (r !== "enter" && r !== "exit")
          throw new Error(`.visitor["${e}"] may only have .enter and/or .exit handlers.`);
      });
    else if (typeof t != "function")
      throw new Error(`.visitor["${e}"] must be a function`);
  }
  i(RBe, "assertVisitorHandler");
  function kBe(e) {
    let t = {
      type: "root",
      source: "plugin"
    };
    return Object.keys(e).forEach((r) => {
      let s = OBe[r];
      if (s)
        s({
          type: "option",
          name: r,
          parent: t
        }, e[r]);
      else {
        let n = new Error(`.${r} is not a valid Plugin property`);
        throw n.code = "BABEL_UNKNOWN_PLUGIN_PROPERTY", n;
      }
    }), e;
  }
  i(kBe, "validatePluginObject");
});

// ../node_modules/@babel/core/lib/config/helpers/environment.js
var xx = y((Tx) => {
  "use strict";
  Object.defineProperty(Tx, "__esModule", {
    value: !0
  });
  Tx.getEnv = FBe;
  function FBe(e = "development") {
    return process.env.BABEL_ENV || process.env.NODE_ENV || e;
  }
  i(FBe, "getEnv");
});

// ../node_modules/@babel/core/lib/config/partial.js
var Px = y((Pm) => {
  "use strict";
  Object.defineProperty(Pm, "__esModule", {
    value: !0
  });
  Pm.default = Q6;
  Pm.loadPartialConfig = HBe;
  function Sm() {
    let e = Q("path");
    return Sm = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(Sm, "_path");
  var LBe = $h(), BBe = wh(), J6 = of(), MBe = vx(), jBe = xx(), qBe = ff(), Tm = lf(), $Be = JT(), UBe = ["showIgnoredFiles"];
  function VBe(e, t) {
    if (e == null) return {};
    var r = {}, s = Object.keys(e), n, a;
    for (a = 0; a < s.length; a++)
      n = s[a], !(t.indexOf(n) >= 0) && (r[n] = e[n]);
    return r;
  }
  i(VBe, "_objectWithoutPropertiesLoose");
  function WBe(e, t) {
    switch (t) {
      case "root":
        return e;
      case "upward-optional": {
        let r = (0, Tm.findConfigUpwards)(e);
        return r === null ? e : r;
      }
      case "upward": {
        let r = (0, Tm.findConfigUpwards)(e);
        if (r !== null) return r;
        throw Object.assign(new Error(`Babel was run with rootMode:"upward" but a root could not be found when searching upward from "${e}".\

One of the following config files must be in the directory tree: "${Tm.ROOT_CONFIG_FILENAMES.join(", ")}".`), {
          code: "BABEL_ROOT_NOT_FOUND",
          dirname: e
        });
      }
      default:
        throw new Error("Assertion failure - unknown rootMode value.");
    }
  }
  i(WBe, "resolveRootMode");
  function* Q6(e) {
    if (e != null && (typeof e != "object" || Array.isArray(e)))
      throw new Error("Babel options must be an object, null, or undefined");
    let t = e ? (0, qBe.validate)("arguments", e) : {}, {
      envName: r = (0, jBe.getEnv)(),
      cwd: s = ".",
      root: n = ".",
      rootMode: a = "root",
      caller: o,
      cloneInputAst: l = !0
    } = t, u = Sm().resolve(s), c = WBe(Sm().resolve(u, n), a), f = typeof t.filename == "string" ? Sm().resolve(s, t.filename) : void 0, p = yield* (0, Tm.
    resolveShowConfigPath)(u), d = {
      filename: f,
      cwd: u,
      root: c,
      envName: r,
      caller: o,
      showConfig: p === f
    }, m = yield* (0, MBe.buildRootChain)(t, d);
    if (!m) return null;
    let b = {
      assumptions: {}
    };
    return m.options.forEach((g) => {
      (0, BBe.mergeOptions)(b, g);
    }), {
      options: Object.assign({}, b, {
        targets: (0, $Be.resolveTargets)(b, c),
        cloneInputAst: l,
        babelrc: !1,
        configFile: !1,
        browserslistConfigFile: !1,
        passPerPreset: !1,
        envName: d.envName,
        cwd: d.cwd,
        root: d.root,
        rootMode: "root",
        filename: typeof d.filename == "string" ? d.filename : void 0,
        plugins: m.plugins.map((g) => (0, J6.createItemFromDescriptor)(g)),
        presets: m.presets.map((g) => (0, J6.createItemFromDescriptor)(g))
      }),
      context: d,
      fileHandling: m.fileHandling,
      ignore: m.ignore,
      babelrc: m.babelrc,
      config: m.config,
      files: m.files
    };
  }
  i(Q6, "loadPrivatePartialConfig");
  function* HBe(e) {
    let t = !1;
    if (typeof e == "object" && e !== null && !Array.isArray(e)) {
      var r = e;
      ({
        showIgnoredFiles: t
      } = r), e = VBe(r, UBe);
    }
    let s = yield* Q6(e);
    if (!s) return null;
    let {
      options: n,
      babelrc: a,
      ignore: o,
      config: l,
      fileHandling: u,
      files: c
    } = s;
    return u === "ignored" && !t ? null : ((n.plugins || []).forEach((f) => {
      if (f.value instanceof LBe.default)
        throw new Error("Passing cached plugin instances is not supported in babel.loadPartialConfig()");
    }), new xm(n, a ? a.filepath : void 0, o ? o.filepath : void 0, l ? l.filepath : void 0, u, c));
  }
  i(HBe, "loadPartialConfig");
  var xm = class {
    static {
      i(this, "PartialConfig");
    }
    constructor(t, r, s, n, a, o) {
      this.options = void 0, this.babelrc = void 0, this.babelignore = void 0, this.config = void 0, this.fileHandling = void 0, this.files =
      void 0, this.options = t, this.babelignore = s, this.babelrc = r, this.config = n, this.fileHandling = a, this.files = o, Object.freeze(
      this);
    }
    hasFilesystemConfig() {
      return this.babelrc !== void 0 || this.config !== void 0;
    }
  };
  Object.freeze(xm.prototype);
});

// ../node_modules/@babel/core/lib/config/full.js
var o5 = y((Am) => {
  "use strict";
  Object.defineProperty(Am, "__esModule", {
    value: !0
  });
  Am.default = void 0;
  function r5() {
    let e = Cs();
    return r5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(r5, "_gensync");
  var wx = xl(), Z6 = wh(), GBe = mr(), s5 = $h(), KBe = of(), YBe = vx(), _x = jh();
  function Dx() {
    let e = Bs();
    return Dx = /* @__PURE__ */ i(function() {
      return e;
    }, "_traverse"), e;
  }
  i(Dx, "_traverse");
  var Ox = uo(), Ix = ff(), XBe = z6(), n5 = hT(), zBe = Px(), JBe = co(), oat = Am.default = r5()(/* @__PURE__ */ i(function* (t) {
    var r;
    let s = yield* (0, zBe.default)(t);
    if (!s)
      return null;
    let {
      options: n,
      context: a,
      fileHandling: o
    } = s;
    if (o === "ignored")
      return null;
    let l = {}, {
      plugins: u,
      presets: c
    } = n;
    if (!u || !c)
      throw new Error("Assertion failure - plugins and presets exist");
    let f = Object.assign({}, a, {
      targets: n.targets
    }), p = /* @__PURE__ */ i((N) => {
      let I = (0, KBe.getItemDescriptor)(N);
      if (!I)
        throw new Error("Assertion failure - must be config item");
      return I;
    }, "toDescriptor"), d = c.map(p), m = u.map(p), b = [[]], h = [], g = [];
    if (yield* e5(a, /* @__PURE__ */ i(function* N(I, M) {
      let q = [];
      for (let W = 0; W < I.length; W++) {
        let Y = I[W];
        if (Y.options !== !1) {
          try {
            var V = yield* sMe(Y, f);
          } catch (j) {
            throw j.code === "BABEL_UNKNOWN_OPTION" && (0, Ix.checkNoUnwrappedItemOptionPairs)(I, W, "preset", j), j;
          }
          g.push(V.externalDependencies), Y.ownPass ? q.push({
            preset: V.chain,
            pass: []
          }) : q.unshift({
            preset: V.chain,
            pass: M
          });
        }
      }
      if (q.length > 0) {
        b.splice(1, 0, ...q.map((W) => W.pass).filter((W) => W !== M));
        for (let {
          preset: W,
          pass: Y
        } of q) {
          if (!W || (Y.push(...W.plugins), yield* N(W.presets, Y))) return !0;
          W.options.forEach((ae) => {
            (0, Z6.mergeOptions)(l, ae);
          });
        }
      }
    }, "recursePresetDescriptors"))(d, b[0])) return null;
    let D = l;
    (0, Z6.mergeOptions)(D, n);
    let C = Object.assign({}, f, {
      assumptions: (r = D.assumptions) != null ? r : {}
    });
    return yield* e5(a, /* @__PURE__ */ i(function* () {
      b[0].unshift(...m);
      for (let M of b) {
        let q = [];
        h.push(q);
        for (let V = 0; V < M.length; V++) {
          let W = M[V];
          if (W.options !== !1) {
            try {
              var I = yield* a5(W, C);
            } catch (Y) {
              throw Y.code === "BABEL_UNKNOWN_PLUGIN_PROPERTY" && (0, Ix.checkNoUnwrappedItemOptionPairs)(M, V, "plugin", Y), Y;
            }
            q.push(I), g.push(I.externalDependencies);
          }
        }
      }
    }, "loadPluginDescriptors"))(), D.plugins = h[0], D.presets = h.slice(1).filter((N) => N.length > 0).map((N) => ({
      plugins: N
    })), D.passPerPreset = D.presets.length > 0, {
      options: D,
      passes: h,
      externalDependencies: (0, _x.finalize)(g)
    };
  }, "loadFullConfig"));
  function e5(e, t) {
    return function* (r, s) {
      try {
        return yield* t(r, s);
      } catch (a) {
        if (!/^\[BABEL\]/.test(a.message)) {
          var n;
          a.message = `[BABEL] ${(n = e.filename) != null ? n : "unknown file"}: ${a.message}`;
        }
        throw a;
      }
    };
  }
  i(e5, "enhanceError");
  var i5 = /* @__PURE__ */ i((e) => (0, Ox.makeWeakCache)(function* ({
    value: t,
    options: r,
    dirname: s,
    alias: n
  }, a) {
    if (r === !1) throw new Error("Assertion failure");
    r = r || {};
    let o = [], l = t;
    if (typeof t == "function") {
      let u = (0, wx.maybeAsync)(t, "You appear to be using an async plugin/preset, but Babel has been called synchronously"), c = Object.assign(
      {}, GBe, e(a, o));
      try {
        l = yield* u(c, r, s);
      } catch (f) {
        throw n && (f.message += ` (While processing: ${JSON.stringify(n)})`), f;
      }
    }
    if (!l || typeof l != "object")
      throw new Error("Plugin/Preset did not return an object.");
    if ((0, wx.isThenable)(l))
      throw yield* [], new Error(`You appear to be using a promise as a plugin, which your current version of Babel does not support. If you\
're using a published plugin, you may need to upgrade your @babel/core version. As an alternative, you can prefix the promise with "await". \
(While processing: ${JSON.stringify(n)})`);
    if (o.length > 0 && (!a.configured() || a.mode() === "forever")) {
      let u = `A plugin/preset has external untracked dependencies (${o[0]}), but the cache `;
      throw a.configured() ? u += " has been configured to never be invalidated. " : u += "has not been configured to be invalidated when th\
e external dependencies change. ", u += `Plugins/presets should configure their cache to be invalidated when the external dependencies chang\
e, for example using \`api.cache.invalidate(() => statSync(filepath).mtimeMs)\` or \`api.cache.never()\`
(While processing: ${JSON.stringify(n)})`, new Error(u);
    }
    return {
      value: l,
      options: r,
      dirname: s,
      alias: n,
      externalDependencies: (0, _x.finalize)(o)
    };
  }), "makeDescriptorLoader"), QBe = i5(n5.makePluginAPI), ZBe = i5(n5.makePresetAPI), eMe = (0, Ox.makeWeakCache)(function* ({
    value: e,
    options: t,
    dirname: r,
    alias: s,
    externalDependencies: n
  }, a) {
    let o = (0, XBe.validatePluginObject)(e), l = Object.assign({}, o);
    if (l.visitor && (l.visitor = Dx().default.explode(Object.assign({}, l.visitor))), l.inherits) {
      let u = {
        name: void 0,
        alias: `${s}$inherits`,
        value: l.inherits,
        options: t,
        dirname: r
      }, c = yield* (0, wx.forwardAsync)(a5, (f) => a.invalidate((p) => f(u, p)));
      l.pre = Cx(c.pre, l.pre), l.post = Cx(c.post, l.post), l.manipulateOptions = Cx(c.manipulateOptions, l.manipulateOptions), l.visitor =
      Dx().default.visitors.merge([c.visitor || {}, l.visitor || {}]), c.externalDependencies.length > 0 && (n.length === 0 ? n = c.externalDependencies :
      n = (0, _x.finalize)([n, c.externalDependencies]));
    }
    return new s5.default(l, t, s, n);
  });
  function* a5(e, t) {
    if (e.value instanceof s5.default) {
      if (e.options)
        throw new Error("Passed options to an existing Plugin instance will not work.");
      return e.value;
    }
    return yield* eMe(yield* QBe(e, t), t);
  }
  i(a5, "loadPluginDescriptor");
  var Ax = /* @__PURE__ */ i((e) => e && typeof e != "function", "needsFilename"), t5 = /* @__PURE__ */ i((e, t) => {
    if (Ax(e.test) || Ax(e.include) || Ax(e.exclude)) {
      let r = t.name ? `"${t.name}"` : "/* your preset */";
      throw new JBe.default([`Preset ${r} requires a filename to be set when babel is called directly,`, "```", `babel.transformSync(code, {\
 filename: 'file.ts', presets: [${r}] });`, "```", "See https://babeljs.io/docs/en/options#filename for more information."].join(`
`));
    }
  }, "validateIfOptionNeedsFilename"), tMe = /* @__PURE__ */ i((e, t, r) => {
    if (!t.filename) {
      var s;
      let {
        options: n
      } = e;
      t5(n, r), (s = n.overrides) == null || s.forEach((a) => t5(a, r));
    }
  }, "validatePreset"), rMe = (0, Ox.makeWeakCacheSync)(({
    value: e,
    dirname: t,
    alias: r,
    externalDependencies: s
  }) => ({
    options: (0, Ix.validate)("preset", e),
    alias: r,
    dirname: t,
    externalDependencies: s
  }));
  function* sMe(e, t) {
    let r = rMe(yield* ZBe(e, t));
    return tMe(r, t, e), {
      chain: yield* (0, YBe.buildPresetChain)(r, t),
      externalDependencies: r.externalDependencies
    };
  }
  i(sMe, "loadPresetDescriptor");
  function Cx(e, t) {
    let r = [e, t].filter(Boolean);
    return r.length <= 1 ? r[0] : function(...s) {
      for (let n of r)
        n.apply(this, s);
    };
  }
  i(Cx, "chain");
});

// ../node_modules/@babel/core/lib/config/index.js
var ql = y((Ys) => {
  "use strict";
  Object.defineProperty(Ys, "__esModule", {
    value: !0
  });
  Ys.createConfigItem = pMe;
  Ys.createConfigItemAsync = fMe;
  Ys.createConfigItemSync = f5;
  Object.defineProperty(Ys, "default", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return l5.default;
    }, "get")
  });
  Ys.loadOptions = cMe;
  Ys.loadOptionsAsync = uMe;
  Ys.loadOptionsSync = c5;
  Ys.loadPartialConfig = oMe;
  Ys.loadPartialConfigAsync = aMe;
  Ys.loadPartialConfigSync = u5;
  function Im() {
    let e = Cs();
    return Im = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(Im, "_gensync");
  var l5 = o5(), nMe = Px(), iMe = of(), Ks = Si(), Cm = Im()(nMe.loadPartialConfig);
  function aMe(...e) {
    return (0, Ks.beginHiddenCallStack)(Cm.async)(...e);
  }
  i(aMe, "loadPartialConfigAsync");
  function u5(...e) {
    return (0, Ks.beginHiddenCallStack)(Cm.sync)(...e);
  }
  i(u5, "loadPartialConfigSync");
  function oMe(e, t) {
    if (t !== void 0)
      (0, Ks.beginHiddenCallStack)(Cm.errback)(e, t);
    else if (typeof e == "function")
      (0, Ks.beginHiddenCallStack)(Cm.errback)(void 0, e);
    else
      return u5(e);
  }
  i(oMe, "loadPartialConfig");
  function* lMe(e) {
    var t;
    let r = yield* (0, l5.default)(e);
    return (t = r?.options) != null ? t : null;
  }
  i(lMe, "loadOptionsImpl");
  var wm = Im()(lMe);
  function uMe(...e) {
    return (0, Ks.beginHiddenCallStack)(wm.async)(...e);
  }
  i(uMe, "loadOptionsAsync");
  function c5(...e) {
    return (0, Ks.beginHiddenCallStack)(wm.sync)(...e);
  }
  i(c5, "loadOptionsSync");
  function cMe(e, t) {
    if (t !== void 0)
      (0, Ks.beginHiddenCallStack)(wm.errback)(e, t);
    else if (typeof e == "function")
      (0, Ks.beginHiddenCallStack)(wm.errback)(void 0, e);
    else
      return c5(e);
  }
  i(cMe, "loadOptions");
  var Dm = Im()(iMe.createConfigItem);
  function fMe(...e) {
    return (0, Ks.beginHiddenCallStack)(Dm.async)(...e);
  }
  i(fMe, "createConfigItemAsync");
  function f5(...e) {
    return (0, Ks.beginHiddenCallStack)(Dm.sync)(...e);
  }
  i(f5, "createConfigItemSync");
  function pMe(e, t, r) {
    if (r !== void 0)
      (0, Ks.beginHiddenCallStack)(Dm.errback)(e, t, r);
    else if (typeof t == "function")
      (0, Ks.beginHiddenCallStack)(Dm.errback)(e, void 0, r);
    else
      return f5(e, t);
  }
  i(pMe, "createConfigItem");
});

// ../node_modules/@babel/core/lib/transformation/plugin-pass.js
var p5 = y((_m) => {
  "use strict";
  Object.defineProperty(_m, "__esModule", {
    value: !0
  });
  _m.default = void 0;
  var mf = class {
    static {
      i(this, "PluginPass");
    }
    constructor(t, r, s) {
      this._map = /* @__PURE__ */ new Map(), this.key = void 0, this.file = void 0, this.opts = void 0, this.cwd = void 0, this.filename = void 0,
      this.key = r, this.file = t, this.opts = s || {}, this.cwd = t.opts.cwd, this.filename = t.opts.filename;
    }
    set(t, r) {
      this._map.set(t, r);
    }
    get(t) {
      return this._map.get(t);
    }
    availableHelper(t, r) {
      return this.file.availableHelper(t, r);
    }
    addHelper(t) {
      return this.file.addHelper(t);
    }
    buildCodeFrameError(t, r, s) {
      return this.file.buildCodeFrameError(t, r, s);
    }
  };
  _m.default = mf;
  mf.prototype.getModuleName = /* @__PURE__ */ i(function() {
    return this.file.getModuleName();
  }, "getModuleName"), mf.prototype.addImport = /* @__PURE__ */ i(function() {
    this.file.addImport();
  }, "addImport");
});

// ../node_modules/@babel/core/lib/transformation/block-hoist-plugin.js
var g5 = y((Rx) => {
  "use strict";
  Object.defineProperty(Rx, "__esModule", {
    value: !0
  });
  Rx.default = hMe;
  function m5() {
    let e = Bs();
    return m5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_traverse"), e;
  }
  i(m5, "_traverse");
  var dMe = $h(), Nx, d5 = {
    name: "internal.blockHoist",
    visitor: {
      Block: {
        exit({
          node: e
        }) {
          e.body = h5(e.body);
        }
      },
      SwitchCase: {
        exit({
          node: e
        }) {
          e.consequent = h5(e.consequent);
        }
      }
    }
  };
  function h5(e) {
    let t = Math.pow(2, 30) - 1, r = !1;
    for (let s = 0; s < e.length; s++) {
      let n = e[s], a = y5(n);
      if (a > t) {
        r = !0;
        break;
      }
      t = a;
    }
    return r ? mMe(e.slice()) : e;
  }
  i(h5, "performHoisting");
  function hMe() {
    return Nx || (Nx = new dMe.default(Object.assign({}, d5, {
      visitor: m5().default.explode(d5.visitor)
    }), {})), Nx;
  }
  i(hMe, "loadBlockHoistPlugin");
  function y5(e) {
    let t = e?._blockHoist;
    return t == null ? 1 : t === !0 ? 2 : t;
  }
  i(y5, "priority");
  function mMe(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let n = 0; n < e.length; n++) {
      let a = e[n], o = y5(a);
      (t[o] || (t[o] = [])).push(a);
    }
    let r = Object.keys(t).map((n) => +n).sort((n, a) => a - n), s = 0;
    for (let n of r) {
      let a = t[n];
      for (let o of a)
        e[s++] = o;
    }
    return e;
  }
  i(mMe, "stableSort");
});

// ../node_modules/@babel/core/lib/transformation/normalize-opts.js
var Fx = y((kx) => {
  "use strict";
  Object.defineProperty(kx, "__esModule", {
    value: !0
  });
  kx.default = yMe;
  function Om() {
    let e = Q("path");
    return Om = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(Om, "_path");
  function yMe(e) {
    let {
      filename: t,
      cwd: r,
      filenameRelative: s = typeof t == "string" ? Om().relative(r, t) : "unknown",
      sourceType: n = "module",
      inputSourceMap: a,
      sourceMaps: o = !!a,
      sourceRoot: l = e.options.moduleRoot,
      sourceFileName: u = Om().basename(s),
      comments: c = !0,
      compact: f = "auto"
    } = e.options, p = e.options, d = Object.assign({}, p, {
      parserOpts: Object.assign({
        sourceType: Om().extname(s) === ".mjs" ? "module" : n,
        sourceFileName: t,
        plugins: []
      }, p.parserOpts),
      generatorOpts: Object.assign({
        filename: t,
        auxiliaryCommentBefore: p.auxiliaryCommentBefore,
        auxiliaryCommentAfter: p.auxiliaryCommentAfter,
        retainLines: p.retainLines,
        comments: c,
        shouldPrintComment: p.shouldPrintComment,
        compact: f,
        minified: p.minified,
        sourceMaps: o,
        sourceRoot: l,
        sourceFileName: u
      }, p.generatorOpts)
    });
    for (let m of e.passes)
      for (let b of m)
        b.manipulateOptions && b.manipulateOptions(d, d.parserOpts);
    return d;
  }
  i(yMe, "normalizeOptions");
});

// ../node_modules/convert-source-map/index.js
var Lx = y((dr) => {
  "use strict";
  Object.defineProperty(dr, "commentRegex", {
    get: /* @__PURE__ */ i(function() {
      return /^\s*?\/[\/\*][@#]\s+?sourceMappingURL=data:(((?:application|text)\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg;
    }, "getCommentRegex")
  });
  Object.defineProperty(dr, "mapFileCommentRegex", {
    get: /* @__PURE__ */ i(function() {
      return /(?:\/\/[@#][ \t]+?sourceMappingURL=([^\s'"`]+?)[ \t]*?$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^*]+?)[ \t]*?(?:\*\/){1}[ \t]*?$)/mg;
    }, "getMapFileCommentRegex")
  });
  var Nm;
  typeof Buffer < "u" ? typeof Buffer.from == "function" ? Nm = gMe : Nm = bMe : Nm = EMe;
  function gMe(e) {
    return Buffer.from(e, "base64").toString();
  }
  i(gMe, "decodeBase64WithBufferFrom");
  function bMe(e) {
    if (typeof value == "number")
      throw new TypeError("The value to decode must not be of type number.");
    return new Buffer(e, "base64").toString();
  }
  i(bMe, "decodeBase64WithNewBuffer");
  function EMe(e) {
    return decodeURIComponent(escape(atob(e)));
  }
  i(EMe, "decodeBase64WithAtob");
  function vMe(e) {
    return e.split(",").pop();
  }
  i(vMe, "stripComment");
  function SMe(e, t) {
    var r = dr.mapFileCommentRegex.exec(e), s = r[1] || r[2];
    try {
      var e = t(s);
      return e != null && typeof e.catch == "function" ? e.catch(n) : e;
    } catch (a) {
      n(a);
    }
    function n(a) {
      throw new Error("An error occurred while trying to read the map file at " + s + `
` + a.stack);
    }
    i(n, "throwError");
  }
  i(SMe, "readFromFileMap");
  function Hr(e, t) {
    t = t || {}, t.hasComment && (e = vMe(e)), t.encoding === "base64" ? e = Nm(e) : t.encoding === "uri" && (e = decodeURIComponent(e)), (t.
    isJSON || t.encoding) && (e = JSON.parse(e)), this.sourcemap = e;
  }
  i(Hr, "Converter");
  Hr.prototype.toJSON = function(e) {
    return JSON.stringify(this.sourcemap, null, e);
  };
  typeof Buffer < "u" ? typeof Buffer.from == "function" ? Hr.prototype.toBase64 = TMe : Hr.prototype.toBase64 = xMe : Hr.prototype.toBase64 =
  PMe;
  function TMe() {
    var e = this.toJSON();
    return Buffer.from(e, "utf8").toString("base64");
  }
  i(TMe, "encodeBase64WithBufferFrom");
  function xMe() {
    var e = this.toJSON();
    if (typeof e == "number")
      throw new TypeError("The json to encode must not be of type number.");
    return new Buffer(e, "utf8").toString("base64");
  }
  i(xMe, "encodeBase64WithNewBuffer");
  function PMe() {
    var e = this.toJSON();
    return btoa(unescape(encodeURIComponent(e)));
  }
  i(PMe, "encodeBase64WithBtoa");
  Hr.prototype.toURI = function() {
    var e = this.toJSON();
    return encodeURIComponent(e);
  };
  Hr.prototype.toComment = function(e) {
    var t, r, s;
    return e != null && e.encoding === "uri" ? (t = "", r = this.toURI()) : (t = ";base64", r = this.toBase64()), s = "sourceMappingURL=data\
:application/json;charset=utf-8" + t + "," + r, e != null && e.multiline ? "/*# " + s + " */" : "//# " + s;
  };
  Hr.prototype.toObject = function() {
    return JSON.parse(this.toJSON());
  };
  Hr.prototype.addProperty = function(e, t) {
    if (this.sourcemap.hasOwnProperty(e)) throw new Error('property "' + e + '" already exists on the sourcemap, use set property instead');
    return this.setProperty(e, t);
  };
  Hr.prototype.setProperty = function(e, t) {
    return this.sourcemap[e] = t, this;
  };
  Hr.prototype.getProperty = function(e) {
    return this.sourcemap[e];
  };
  dr.fromObject = function(e) {
    return new Hr(e);
  };
  dr.fromJSON = function(e) {
    return new Hr(e, { isJSON: !0 });
  };
  dr.fromURI = function(e) {
    return new Hr(e, { encoding: "uri" });
  };
  dr.fromBase64 = function(e) {
    return new Hr(e, { encoding: "base64" });
  };
  dr.fromComment = function(e) {
    var t, r;
    return e = e.replace(/^\/\*/g, "//").replace(/\*\/$/g, ""), t = dr.commentRegex.exec(e), r = t && t[4] || "uri", new Hr(e, { encoding: r,
    hasComment: !0 });
  };
  function b5(e) {
    return new Hr(e, { isJSON: !0 });
  }
  i(b5, "makeConverter");
  dr.fromMapFileComment = function(e, t) {
    if (typeof t == "string")
      throw new Error(
        "String directory paths are no longer supported with `fromMapFileComment`\nPlease review the Upgrading documentation at https://githu\
b.com/thlorenz/convert-source-map#upgrading"
      );
    var r = SMe(e, t);
    return r != null && typeof r.then == "function" ? r.then(b5) : b5(r);
  };
  dr.fromSource = function(e) {
    var t = e.match(dr.commentRegex);
    return t ? dr.fromComment(t.pop()) : null;
  };
  dr.fromMapFileSource = function(e, t) {
    if (typeof t == "string")
      throw new Error(
        "String directory paths are no longer supported with `fromMapFileSource`\nPlease review the Upgrading documentation at https://github\
.com/thlorenz/convert-source-map#upgrading"
      );
    var r = e.match(dr.mapFileCommentRegex);
    return r ? dr.fromMapFileComment(r.pop(), t) : null;
  };
  dr.removeComments = function(e) {
    return e.replace(dr.commentRegex, "");
  };
  dr.removeMapFileComments = function(e) {
    return e.replace(dr.mapFileCommentRegex, "");
  };
  dr.generateMapFileComment = function(e, t) {
    var r = "sourceMappingURL=" + e;
    return t && t.multiline ? "/*# " + r + " */" : "//# " + r;
  };
});

// ../node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js
var S5 = y((Bx) => {
  "use strict";
  Object.defineProperty(Bx, "__esModule", {
    value: !0
  });
  Bx.default = AMe;
  var v5 = {
    asyncDoExpressions: {
      syntax: {
        name: "@babel/plugin-syntax-async-do-expressions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-do-expressions"
      }
    },
    decimal: {
      syntax: {
        name: "@babel/plugin-syntax-decimal",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decimal"
      }
    },
    decorators: {
      syntax: {
        name: "@babel/plugin-syntax-decorators",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-decorators"
      },
      transform: {
        name: "@babel/plugin-proposal-decorators",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-decorators"
      }
    },
    doExpressions: {
      syntax: {
        name: "@babel/plugin-syntax-do-expressions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-do-expressions"
      },
      transform: {
        name: "@babel/plugin-proposal-do-expressions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-do-expressions"
      }
    },
    exportDefaultFrom: {
      syntax: {
        name: "@babel/plugin-syntax-export-default-from",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-default-from"
      },
      transform: {
        name: "@babel/plugin-proposal-export-default-from",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-export-default-from"
      }
    },
    flow: {
      syntax: {
        name: "@babel/plugin-syntax-flow",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-flow"
      },
      transform: {
        name: "@babel/preset-flow",
        url: "https://github.com/babel/babel/tree/main/packages/babel-preset-flow"
      }
    },
    functionBind: {
      syntax: {
        name: "@babel/plugin-syntax-function-bind",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-bind"
      },
      transform: {
        name: "@babel/plugin-proposal-function-bind",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-bind"
      }
    },
    functionSent: {
      syntax: {
        name: "@babel/plugin-syntax-function-sent",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-function-sent"
      },
      transform: {
        name: "@babel/plugin-proposal-function-sent",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-function-sent"
      }
    },
    jsx: {
      syntax: {
        name: "@babel/plugin-syntax-jsx",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx"
      },
      transform: {
        name: "@babel/preset-react",
        url: "https://github.com/babel/babel/tree/main/packages/babel-preset-react"
      }
    },
    importAttributes: {
      syntax: {
        name: "@babel/plugin-syntax-import-attributes",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-attributes"
      }
    },
    pipelineOperator: {
      syntax: {
        name: "@babel/plugin-syntax-pipeline-operator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-pipeline-operator"
      },
      transform: {
        name: "@babel/plugin-proposal-pipeline-operator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-pipeline-operator"
      }
    },
    recordAndTuple: {
      syntax: {
        name: "@babel/plugin-syntax-record-and-tuple",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-record-and-tuple"
      }
    },
    throwExpressions: {
      syntax: {
        name: "@babel/plugin-syntax-throw-expressions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-throw-expressions"
      },
      transform: {
        name: "@babel/plugin-proposal-throw-expressions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-proposal-throw-expressions"
      }
    },
    typescript: {
      syntax: {
        name: "@babel/plugin-syntax-typescript",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-typescript"
      },
      transform: {
        name: "@babel/preset-typescript",
        url: "https://github.com/babel/babel/tree/main/packages/babel-preset-typescript"
      }
    }
  };
  Object.assign(v5, {
    asyncGenerators: {
      syntax: {
        name: "@babel/plugin-syntax-async-generators",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-async-generators"
      },
      transform: {
        name: "@babel/plugin-transform-async-generator-functions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-async-generator-functions"
      }
    },
    classProperties: {
      syntax: {
        name: "@babel/plugin-syntax-class-properties",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"
      },
      transform: {
        name: "@babel/plugin-transform-class-properties",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties"
      }
    },
    classPrivateProperties: {
      syntax: {
        name: "@babel/plugin-syntax-class-properties",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"
      },
      transform: {
        name: "@babel/plugin-transform-class-properties",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties"
      }
    },
    classPrivateMethods: {
      syntax: {
        name: "@babel/plugin-syntax-class-properties",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-class-properties"
      },
      transform: {
        name: "@babel/plugin-transform-private-methods",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-methods"
      }
    },
    classStaticBlock: {
      syntax: {
        name: "@babel/plugin-syntax-class-static-block",
        url: "https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-syntax-class-static-block"
      },
      transform: {
        name: "@babel/plugin-transform-class-static-block",
        url: "https://github.com/babel/babel/tree/HEAD/packages/babel-plugin-transform-class-static-block"
      }
    },
    dynamicImport: {
      syntax: {
        name: "@babel/plugin-syntax-dynamic-import",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-dynamic-import"
      }
    },
    exportNamespaceFrom: {
      syntax: {
        name: "@babel/plugin-syntax-export-namespace-from",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-export-namespace-from"
      },
      transform: {
        name: "@babel/plugin-transform-export-namespace-from",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-export-namespace-from"
      }
    },
    importAssertions: {
      syntax: {
        name: "@babel/plugin-syntax-import-assertions",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-assertions"
      }
    },
    importMeta: {
      syntax: {
        name: "@babel/plugin-syntax-import-meta",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-import-meta"
      }
    },
    logicalAssignment: {
      syntax: {
        name: "@babel/plugin-syntax-logical-assignment-operators",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-logical-assignment-operators"
      },
      transform: {
        name: "@babel/plugin-transform-logical-assignment-operators",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-logical-assignment-operators"
      }
    },
    moduleStringNames: {
      syntax: {
        name: "@babel/plugin-syntax-module-string-names",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-module-string-names"
      }
    },
    numericSeparator: {
      syntax: {
        name: "@babel/plugin-syntax-numeric-separator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-numeric-separator"
      },
      transform: {
        name: "@babel/plugin-transform-numeric-separator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-numeric-separator"
      }
    },
    nullishCoalescingOperator: {
      syntax: {
        name: "@babel/plugin-syntax-nullish-coalescing-operator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-nullish-coalescing-operator"
      },
      transform: {
        name: "@babel/plugin-transform-nullish-coalescing-operator",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-nullish-coalescing-opearator"
      }
    },
    objectRestSpread: {
      syntax: {
        name: "@babel/plugin-syntax-object-rest-spread",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-object-rest-spread"
      },
      transform: {
        name: "@babel/plugin-transform-object-rest-spread",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-object-rest-spread"
      }
    },
    optionalCatchBinding: {
      syntax: {
        name: "@babel/plugin-syntax-optional-catch-binding",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-catch-binding"
      },
      transform: {
        name: "@babel/plugin-transform-optional-catch-binding",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-catch-binding"
      }
    },
    optionalChaining: {
      syntax: {
        name: "@babel/plugin-syntax-optional-chaining",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-optional-chaining"
      },
      transform: {
        name: "@babel/plugin-transform-optional-chaining",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-chaining"
      }
    },
    privateIn: {
      syntax: {
        name: "@babel/plugin-syntax-private-property-in-object",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-private-property-in-object"
      },
      transform: {
        name: "@babel/plugin-transform-private-property-in-object",
        url: "https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-private-property-in-object"
      }
    },
    regexpUnicodeSets: {
      syntax: {
        name: "@babel/plugin-syntax-unicode-sets-regex",
        url: "https://github.com/babel/babel/blob/main/packages/babel-plugin-syntax-unicode-sets-regex/README.md"
      },
      transform: {
        name: "@babel/plugin-transform-unicode-sets-regex",
        url: "https://github.com/babel/babel/blob/main/packages/babel-plugin-proposalunicode-sets-regex/README.md"
      }
    }
  });
  var E5 = /* @__PURE__ */ i(({
    name: e,
    url: t
  }) => `${e} (${t})`, "getNameURLCombination");
  function AMe(e, t, r, s) {
    let n = `Support for the experimental syntax '${e}' isn't currently enabled (${t.line}:${t.column + 1}):

` + r, a = v5[e];
    if (a) {
      let {
        syntax: l,
        transform: u
      } = a;
      if (l) {
        let c = E5(l);
        if (u) {
          let f = E5(u), p = u.name.startsWith("@babel/plugin") ? "plugins" : "presets";
          n += `

Add ${f} to the '${p}' section of your Babel config to enable transformation.
If you want to leave it as-is, add ${c} to the 'plugins' section to enable parsing.`;
        } else
          n += `

Add ${c} to the 'plugins' section of your Babel config to enable parsing.`;
      }
    }
    return n += `

If you already added the plugin for this syntax to your config, it's possible that your config isn't being loaded.
You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:
	npx cross-env BABEL_SHOW_CONFIG_FOR=${s === "unknown" ? "<name of the input file>" : s} <your build command>
See https://babeljs.io/docs/configuration#print-effective-configs for more info.
`, n;
  }
  i(AMe, "generateMissingPluginMessage");
});

// ../node_modules/@babel/core/lib/parser/index.js
var qx = y((jx) => {
  "use strict";
  Object.defineProperty(jx, "__esModule", {
    value: !0
  });
  jx.default = wMe;
  function Mx() {
    let e = to();
    return Mx = /* @__PURE__ */ i(function() {
      return e;
    }, "_parser"), e;
  }
  i(Mx, "_parser");
  function T5() {
    let e = pc();
    return T5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_codeFrame"), e;
  }
  i(T5, "_codeFrame");
  var CMe = S5();
  function* wMe(e, {
    parserOpts: t,
    highlightCode: r = !0,
    filename: s = "unknown"
  }, n) {
    try {
      let a = [];
      for (let o of e)
        for (let l of o) {
          let {
            parserOverride: u
          } = l;
          if (u) {
            let c = u(n, t, Mx().parse);
            c !== void 0 && a.push(c);
          }
        }
      if (a.length === 0)
        return (0, Mx().parse)(n, t);
      if (a.length === 1) {
        if (yield* [], typeof a[0].then == "function")
          throw new Error("You appear to be using an async parser plugin, which your current version of Babel does not support. If you're us\
ing a published plugin, you may need to upgrade your @babel/core version.");
        return a[0];
      }
      throw new Error("More than one plugin attempted to override parsing.");
    } catch (a) {
      a.code === "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" && (a.message += `
Consider renaming the file to '.mjs', or setting sourceType:module or sourceType:unambiguous in your Babel config for this file.`);
      let {
        loc: o,
        missingPlugin: l
      } = a;
      if (o) {
        let u = (0, T5().codeFrameColumns)(n, {
          start: {
            line: o.line,
            column: o.column + 1
          }
        }, {
          highlightCode: r
        });
        l ? a.message = `${s}: ` + (0, CMe.default)(l[0], o, u, s) : a.message = `${s}: ${a.message}

` + u, a.code = "BABEL_PARSE_ERROR";
      }
      throw a;
    }
  }
  i(wMe, "parser");
});

// ../node_modules/@babel/core/lib/transformation/util/clone-deep.js
var x5 = y((Ux) => {
  "use strict";
  Object.defineProperty(Ux, "__esModule", {
    value: !0
  });
  Ux.default = DMe;
  function $x(e, t) {
    if (e !== null) {
      if (t.has(e)) return t.get(e);
      let r;
      if (Array.isArray(e)) {
        r = new Array(e.length), t.set(e, r);
        for (let s = 0; s < e.length; s++)
          r[s] = typeof e[s] != "object" ? e[s] : $x(e[s], t);
      } else {
        r = {}, t.set(e, r);
        let s = Object.keys(e);
        for (let n = 0; n < s.length; n++) {
          let a = s[n];
          r[a] = typeof e[a] != "object" ? e[a] : $x(e[a], t);
        }
      }
      return r;
    }
    return e;
  }
  i($x, "deepClone");
  function DMe(e) {
    return typeof e != "object" ? e : $x(e, /* @__PURE__ */ new Map());
  }
  i(DMe, "_default");
});

// ../node_modules/@babel/core/lib/transformation/normalize-file.js
var I5 = y((Gx) => {
  "use strict";
  Object.defineProperty(Gx, "__esModule", {
    value: !0
  });
  Gx.default = FMe;
  function C5() {
    let e = Q("fs");
    return C5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs"), e;
  }
  i(C5, "_fs");
  function Hx() {
    let e = Q("path");
    return Hx = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(Hx, "_path");
  function w5() {
    let e = Ka();
    return w5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_debug"), e;
  }
  i(w5, "_debug");
  function D5() {
    let e = Re();
    return D5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_t"), e;
  }
  i(D5, "_t");
  function Rm() {
    let e = Lx();
    return Rm = /* @__PURE__ */ i(function() {
      return e;
    }, "_convertSourceMap"), e;
  }
  i(Rm, "_convertSourceMap");
  var IMe = Sh(), _Me = qx(), OMe = x5(), {
    file: NMe,
    traverseFast: RMe
  } = D5(), Vx = w5()("babel:transform:file"), kMe = /^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/,
  P5 = /^[@#][ \t]+sourceMappingURL=([^\s'"`]+)[ \t]*$/;
  function* FMe(e, t, r, s) {
    if (r = `${r || ""}`, s) {
      if (s.type === "Program")
        s = NMe(s, [], []);
      else if (s.type !== "File")
        throw new Error("AST root must be a Program or File node");
      t.cloneInputAst && (s = (0, OMe.default)(s));
    } else
      s = yield* (0, _Me.default)(e, t, r);
    let n = null;
    if (t.inputSourceMap !== !1) {
      if (typeof t.inputSourceMap == "object" && (n = Rm().fromObject(t.inputSourceMap)), !n) {
        let a = A5(kMe, s);
        if (a)
          try {
            n = Rm().fromComment("//" + a);
          } catch {
            Vx("discarding unknown inline input sourcemap");
          }
      }
      if (!n) {
        let a = A5(P5, s);
        if (typeof t.filename == "string" && a)
          try {
            let o = P5.exec(a), l = C5().readFileSync(Hx().resolve(Hx().dirname(t.filename), o[1]), "utf8");
            n = Rm().fromJSON(l);
          } catch (o) {
            Vx("discarding unknown file input sourcemap", o);
          }
        else a && Vx("discarding un-loadable file input sourcemap");
      }
    }
    return new IMe.default(t, {
      code: r,
      ast: s,
      inputMap: n
    });
  }
  i(FMe, "normalizeFile");
  function Wx(e, t, r) {
    return t && (t = t.filter(({
      value: s
    }) => e.test(s) ? (r = s, !1) : !0)), [t, r];
  }
  i(Wx, "extractCommentsFromList");
  function A5(e, t) {
    let r = null;
    return RMe(t, (s) => {
      [s.leadingComments, r] = Wx(e, s.leadingComments, r), [s.innerComments, r] = Wx(e, s.innerComments, r), [s.trailingComments, r] = Wx(e,
      s.trailingComments, r);
    }), r;
  }
  i(A5, "extractComments");
});

// ../node_modules/@ampproject/remapping/dist/remapping.umd.js
var _5 = y((Kx, Yx) => {
  (function(e, t) {
    typeof Kx == "object" && typeof Yx < "u" ? Yx.exports = t(nd(), nv()) : typeof define == "function" && define.amd ? define(["@jridgewell\
/trace-mapping", "@jridgewell/gen-mapping"], t) : (e = typeof globalThis < "u" ? globalThis : e || self, e.remapping = t(e.traceMapping, e.genMapping));
  })(Kx, function(e, t) {
    "use strict";
    let r = /* @__PURE__ */ n("", -1, -1, "", null, !1), s = [];
    function n(h, g, E, D, C, N) {
      return { source: h, line: g, column: E, name: D, content: C, ignore: N };
    }
    i(n, "SegmentObject");
    function a(h, g, E, D, C) {
      return {
        map: h,
        sources: g,
        source: E,
        content: D,
        ignore: C
      };
    }
    i(a, "Source");
    function o(h, g) {
      return a(h, g, "", null, !1);
    }
    i(o, "MapSource");
    function l(h, g, E) {
      return a(null, s, h, g, E);
    }
    i(l, "OriginalSource");
    function u(h) {
      let g = new t.GenMapping({ file: h.map.file }), { sources: E, map: D } = h, C = D.names, N = e.decodedMappings(D);
      for (let I = 0; I < N.length; I++) {
        let M = N[I];
        for (let q = 0; q < M.length; q++) {
          let V = M[q], W = V[0], Y = r;
          if (V.length !== 1) {
            let se = E[V[1]];
            if (Y = c(se, V[2], V[3], V.length === 5 ? C[V[4]] : ""), Y == null)
              continue;
          }
          let { column: j, line: ae, name: pe, content: Ie, source: F, ignore: L } = Y;
          t.maybeAddSegment(g, I, W, F, ae, j, pe), F && Ie != null && t.setSourceContent(g, F, Ie), L && t.setIgnore(g, F, !0);
        }
      }
      return g;
    }
    i(u, "traceMappings");
    function c(h, g, E, D) {
      if (!h.map)
        return n(h.source, g, E, D, h.content, h.ignore);
      let C = e.traceSegment(h.map, g, E);
      return C == null ? null : C.length === 1 ? r : c(h.sources[C[1]], C[2], C[3], C.length === 5 ? h.map.names[C[4]] : D);
    }
    i(c, "originalPositionFor");
    function f(h) {
      return Array.isArray(h) ? h : [h];
    }
    i(f, "asArray");
    function p(h, g) {
      let E = f(h).map((N) => new e.TraceMap(N, "")), D = E.pop();
      for (let N = 0; N < E.length; N++)
        if (E[N].sources.length > 1)
          throw new Error(`Transformation map ${N} must have exactly one source file.
Did you specify these with the most recent transformation maps first?`);
      let C = d(D, g, "", 0);
      for (let N = E.length - 1; N >= 0; N--)
        C = o(E[N], [C]);
      return C;
    }
    i(p, "buildSourceMapTree");
    function d(h, g, E, D) {
      let { resolvedSources: C, sourcesContent: N, ignoreList: I } = h, M = D + 1, q = C.map((V, W) => {
        let Y = {
          importer: E,
          depth: M,
          source: V || "",
          content: void 0,
          ignore: void 0
        }, j = g(Y.source, Y), { source: ae, content: pe, ignore: Ie } = Y;
        if (j)
          return d(new e.TraceMap(j, ae), g, ae, M);
        let F = pe !== void 0 ? pe : N ? N[W] : null, L = Ie !== void 0 ? Ie : I ? I.includes(W) : !1;
        return l(ae, F, L);
      });
      return o(h, q);
    }
    i(d, "build");
    class m {
      static {
        i(this, "SourceMap");
      }
      constructor(g, E) {
        let D = E.decodedMappings ? t.toDecodedMap(g) : t.toEncodedMap(g);
        this.version = D.version, this.file = D.file, this.mappings = D.mappings, this.names = D.names, this.ignoreList = D.ignoreList, this.
        sourceRoot = D.sourceRoot, this.sources = D.sources, E.excludeContent || (this.sourcesContent = D.sourcesContent);
      }
      toString() {
        return JSON.stringify(this);
      }
    }
    function b(h, g, E) {
      let D = typeof E == "object" ? E : { excludeContent: !!E, decodedMappings: !1 }, C = p(h, g);
      return new m(u(C), D);
    }
    return i(b, "remapping"), b;
  });
});

// ../node_modules/@babel/core/lib/transformation/file/merge-map.js
var R5 = y((Xx) => {
  "use strict";
  Object.defineProperty(Xx, "__esModule", {
    value: !0
  });
  Xx.default = LMe;
  function N5() {
    let e = _5();
    return N5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_remapping"), e;
  }
  i(N5, "_remapping");
  function LMe(e, t, r) {
    let s = r.replace(/\\/g, "/"), n = !1, a = N5()(O5(t), (o, l) => o === s && !n ? (n = !0, l.source = "", O5(e)) : null);
    return typeof e.sourceRoot == "string" && (a.sourceRoot = e.sourceRoot), Object.assign({}, a);
  }
  i(LMe, "mergeSourceMap");
  function O5(e) {
    return Object.assign({}, e, {
      sourceRoot: null
    });
  }
  i(O5, "rootless");
});

// ../node_modules/@babel/core/lib/transformation/file/generate.js
var F5 = y((Jx) => {
  "use strict";
  Object.defineProperty(Jx, "__esModule", {
    value: !0
  });
  Jx.default = MMe;
  function k5() {
    let e = Lx();
    return k5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_convertSourceMap"), e;
  }
  i(k5, "_convertSourceMap");
  function zx() {
    let e = gd();
    return zx = /* @__PURE__ */ i(function() {
      return e;
    }, "_generator"), e;
  }
  i(zx, "_generator");
  var BMe = R5();
  function MMe(e, t) {
    let {
      opts: r,
      ast: s,
      code: n,
      inputMap: a
    } = t, {
      generatorOpts: o
    } = r;
    o.inputSourceMap = a?.toObject();
    let l = [];
    for (let p of e)
      for (let d of p) {
        let {
          generatorOverride: m
        } = d;
        if (m) {
          let b = m(s, o, n, zx().default);
          b !== void 0 && l.push(b);
        }
      }
    let u;
    if (l.length === 0)
      u = (0, zx().default)(s, o, n);
    else if (l.length === 1) {
      if (u = l[0], typeof u.then == "function")
        throw new Error("You appear to be using an async codegen plugin, which your current version of Babel does not support. If you're usi\
ng a published plugin, you may need to upgrade your @babel/core version.");
    } else
      throw new Error("More than one plugin attempted to override codegen.");
    let {
      code: c,
      decodedMap: f = u.map
    } = u;
    return u.__mergedMap ? f = Object.assign({}, u.map) : f && (a ? f = (0, BMe.default)(a.toObject(), f, o.sourceFileName) : f = u.map), (r.
    sourceMaps === "inline" || r.sourceMaps === "both") && (c += `
` + k5().fromObject(f).toComment()), r.sourceMaps === "inline" && (f = null), {
      outputCode: c,
      outputMap: f
    };
  }
  i(MMe, "generateCode");
});

// ../node_modules/@babel/core/lib/transformation/index.js
var km = y((Zx) => {
  "use strict";
  Object.defineProperty(Zx, "__esModule", {
    value: !0
  });
  Zx.run = HMe;
  function Qx() {
    let e = Bs();
    return Qx = /* @__PURE__ */ i(function() {
      return e;
    }, "_traverse"), e;
  }
  i(Qx, "_traverse");
  var jMe = p5(), qMe = g5(), $Me = Fx(), UMe = I5(), VMe = F5(), WMe = jh();
  function* HMe(e, t, r) {
    let s = yield* (0, UMe.default)(e.passes, (0, $Me.default)(e), t, r), n = s.opts;
    try {
      yield* GMe(s, e.passes);
    } catch (c) {
      var a;
      throw c.message = `${(a = n.filename) != null ? a : "unknown file"}: ${c.message}`, c.code || (c.code = "BABEL_TRANSFORM_ERROR"), c;
    }
    let o, l;
    try {
      n.code !== !1 && ({
        outputCode: o,
        outputMap: l
      } = (0, VMe.default)(e.passes, s));
    } catch (c) {
      var u;
      throw c.message = `${(u = n.filename) != null ? u : "unknown file"}: ${c.message}`, c.code || (c.code = "BABEL_GENERATE_ERROR"), c;
    }
    return {
      metadata: s.metadata,
      options: n,
      ast: n.ast === !0 ? s.ast : null,
      code: o === void 0 ? null : o,
      map: l === void 0 ? null : l,
      sourceType: s.ast.program.sourceType,
      externalDependencies: (0, WMe.flattenToSet)(e.externalDependencies)
    };
  }
  i(HMe, "run");
  function* GMe(e, t) {
    for (let r of t) {
      let s = [], n = [], a = [];
      for (let l of r.concat([(0, qMe.default)()])) {
        let u = new jMe.default(e, l.key, l.options);
        s.push([l, u]), n.push(u), a.push(l.visitor);
      }
      for (let [l, u] of s) {
        let c = l.pre;
        if (c) {
          let f = c.call(u, e);
          if (yield* [], L5(f))
            throw new Error("You appear to be using an plugin with an async .pre, which your current version of Babel does not support. If y\
ou're using a published plugin, you may need to upgrade your @babel/core version.");
        }
      }
      let o = Qx().default.visitors.merge(a, n, e.opts.wrapPluginVisitorMethod);
      (0, Qx().default)(e.ast, o, e.scope);
      for (let [l, u] of s) {
        let c = l.post;
        if (c) {
          let f = c.call(u, e);
          if (yield* [], L5(f))
            throw new Error("You appear to be using an plugin with an async .post, which your current version of Babel does not support. If \
you're using a published plugin, you may need to upgrade your @babel/core version.");
        }
      }
    }
  }
  i(GMe, "transformFile");
  function L5(e) {
    return !!e && (typeof e == "object" || typeof e == "function") && !!e.then && typeof e.then == "function";
  }
  i(L5, "isThenable");
});

// ../node_modules/@babel/core/lib/transform-file.js
var tP = y((yf) => {
  "use strict";
  Object.defineProperty(yf, "__esModule", {
    value: !0
  });
  yf.transformFile = zMe;
  yf.transformFileAsync = QMe;
  yf.transformFileSync = JMe;
  function B5() {
    let e = Cs();
    return B5 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(B5, "_gensync");
  var KMe = ql(), YMe = km(), XMe = Ih(), eP = B5()(function* (e, t) {
    let r = Object.assign({}, t, {
      filename: e
    }), s = yield* (0, KMe.default)(r);
    if (s === null) return null;
    let n = yield* XMe.readFile(e, "utf8");
    return yield* (0, YMe.run)(s, n);
  });
  function zMe(...e) {
    eP.errback(...e);
  }
  i(zMe, "transformFile");
  function JMe(...e) {
    return eP.sync(...e);
  }
  i(JMe, "transformFileSync");
  function QMe(...e) {
    return eP.async(...e);
  }
  i(QMe, "transformFileAsync");
});

// ../node_modules/@babel/core/lib/config/files/import.cjs
var j5 = y((Bat, M5) => {
  M5.exports = /* @__PURE__ */ i(function(t) {
    return import(t);
  }, "import_");
});

// ../node_modules/@babel/preset-typescript/package.json
var q5 = y((jat, ZMe) => {
  ZMe.exports = {
    name: "@babel/preset-typescript",
    version: "7.24.1",
    description: "Babel preset for TypeScript.",
    repository: {
      type: "git",
      url: "https://github.com/babel/babel.git",
      directory: "packages/babel-preset-typescript"
    },
    license: "MIT",
    publishConfig: {
      access: "public"
    },
    main: "./lib/index.js",
    keywords: [
      "babel-preset",
      "typescript"
    ],
    dependencies: {
      "@babel/helper-plugin-utils": "^7.24.0",
      "@babel/helper-validator-option": "^7.23.5",
      "@babel/plugin-syntax-jsx": "^7.24.1",
      "@babel/plugin-transform-modules-commonjs": "^7.24.1",
      "@babel/plugin-transform-typescript": "^7.24.1"
    },
    peerDependencies: {
      "@babel/core": "^7.0.0-0"
    },
    devDependencies: {
      "@babel/core": "^7.24.1",
      "@babel/helper-plugin-test-runner": "^7.24.1"
    },
    homepage: "https://babel.dev/docs/en/next/babel-preset-typescript",
    bugs: "https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22area%3A%20typescript%22+is%3Aopen",
    engines: {
      node: ">=6.9.0"
    },
    author: "The Babel Team (https://babel.dev/team)",
    type: "commonjs"
  };
});

// ../node_modules/@babel/helper-plugin-utils/lib/index.js
var $l = y((gf) => {
  "use strict";
  Object.defineProperty(gf, "__esModule", {
    value: !0
  });
  gf.declare = $5;
  gf.declarePreset = void 0;
  var rP = {
    assertVersion: /* @__PURE__ */ i((e) => (t) => {
      tje(t, e.version);
    }, "assertVersion")
  };
  Object.assign(rP, {
    targets: /* @__PURE__ */ i(() => () => ({}), "targets"),
    assumption: /* @__PURE__ */ i(() => () => {
    }, "assumption")
  });
  function $5(e) {
    return (t, r, s) => {
      var n;
      let a;
      for (let l of Object.keys(rP)) {
        var o;
        t[l] || ((o = a) != null || (a = eje(t)), a[l] = rP[l](a));
      }
      return e((n = a) != null ? n : t, r || {}, s);
    };
  }
  i($5, "declare");
  var qat = gf.declarePreset = $5;
  function eje(e) {
    let t = null;
    return typeof e.version == "string" && /^7\./.test(e.version) && (t = Object.getPrototypeOf(e), t && (!hasOwnProperty.call(t, "version") ||
    !hasOwnProperty.call(t, "transform") || !hasOwnProperty.call(t, "template") || !hasOwnProperty.call(t, "types")) && (t = null)), Object.
    assign({}, t, e);
  }
  i(eje, "copyApiObject");
  function tje(e, t) {
    if (typeof e == "number") {
      if (!Number.isInteger(e))
        throw new Error("Expected string or integer value.");
      e = `^${e}.0.0-0`;
    }
    if (typeof e != "string")
      throw new Error("Expected string or integer value.");
    let r = Error.stackTraceLimit;
    typeof r == "number" && r < 25 && (Error.stackTraceLimit = 25);
    let s;
    throw t.slice(0, 2) === "7." ? s = new Error(`Requires Babel "^7.0.0-beta.41", but was loaded with "${t}". You'll need to update your @b\
abel/core version.`) : s = new Error(`Requires Babel "${e}", but was loaded with "${t}". If you are sure you have a compatible version of @b\
abel/core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for\
 the first entry that doesn't mention "@babel/core" or "babel-core" to see what is calling Babel.`), typeof r == "number" && (Error.stackTraceLimit =
    r), Object.assign(s, {
      code: "BABEL_VERSION_UNSUPPORTED",
      version: t,
      range: e
    });
  }
  i(tje, "throwVersionError");
});

// ../node_modules/@babel/plugin-syntax-typescript/lib/index.js
var U5 = y((Fm) => {
  "use strict";
  Object.defineProperty(Fm, "__esModule", {
    value: !0
  });
  Fm.default = void 0;
  var rje = $l();
  sP = /* @__PURE__ */ i(function(e, t) {
    let r = [];
    e.forEach((s, n) => {
      (Array.isArray(s) ? s[0] : s) === t && r.unshift(n);
    });
    for (let s of r)
      e.splice(s, 1);
  }, "removePlugin");
  var sP, Vat = Fm.default = (0, rje.declare)((e, t) => {
    e.assertVersion(7);
    let {
      disallowAmbiguousJSXLike: r,
      dts: s
    } = t;
    var {
      isTSX: n
    } = t;
    return {
      name: "syntax-typescript",
      manipulateOptions(a, o) {
        {
          let {
            plugins: l
          } = o;
          sP(l, "flow"), sP(l, "jsx"), l.push("objectRestSpread", "classProperties"), n && l.push("jsx");
        }
        o.plugins.push(["typescript", {
          disallowAmbiguousJSXLike: r,
          dts: s
        }]);
      }
    };
  });
});

// ../node_modules/@babel/helper-member-expression-to-functions/lib/index.js
var lP = y((oP) => {
  "use strict";
  Object.defineProperty(oP, "__esModule", { value: !0 });
  var sje = Re();
  function nje(e) {
    if (e && e.__esModule) return e;
    var t = /* @__PURE__ */ Object.create(null);
    return e && Object.keys(e).forEach(function(r) {
      if (r !== "default") {
        var s = Object.getOwnPropertyDescriptor(e, r);
        Object.defineProperty(t, r, s.get ? s : {
          enumerable: !0,
          get: /* @__PURE__ */ i(function() {
            return e[r];
          }, "get")
        });
      }
    }), t.default = e, Object.freeze(t);
  }
  i(nje, "_interopNamespace");
  var ije = /* @__PURE__ */ nje(sje);
  function iP(e) {
    let t = e, {
      node: r,
      parentPath: s
    } = t;
    if (s.isLogicalExpression()) {
      let {
        operator: n,
        right: a
      } = s.node;
      if (n === "&&" || n === "||" || n === "??" && r === a)
        return iP(s);
    }
    if (s.isSequenceExpression()) {
      let {
        expressions: n
      } = s.node;
      return n[n.length - 1] === r ? iP(s) : !0;
    }
    return s.isConditional({
      test: r
    }) || s.isUnaryExpression({
      operator: "!"
    }) || s.isLoop({
      test: r
    });
  }
  i(iP, "willPathCastToBoolean");
  var {
    LOGICAL_OPERATORS: aje,
    arrowFunctionExpression: V5,
    assignmentExpression: Ul,
    binaryExpression: vo,
    booleanLiteral: oje,
    callExpression: Mm,
    cloneNode: Xs,
    conditionalExpression: lje,
    identifier: Y5,
    isMemberExpression: uje,
    isOptionalCallExpression: cje,
    isOptionalMemberExpression: X5,
    isUpdateExpression: fje,
    logicalExpression: Bm,
    memberExpression: W5,
    nullLiteral: Lm,
    optionalCallExpression: pje,
    optionalMemberExpression: dje,
    sequenceExpression: nP,
    updateExpression: H5
  } = ije, aP = class {
    static {
      i(this, "AssignmentMemoiser");
    }
    constructor() {
      this._map = void 0, this._map = /* @__PURE__ */ new WeakMap();
    }
    has(t) {
      return this._map.has(t);
    }
    get(t) {
      if (!this.has(t)) return;
      let r = this._map.get(t), {
        value: s
      } = r;
      return r.count--, r.count === 0 ? Ul("=", s, t) : s;
    }
    set(t, r, s) {
      return this._map.set(t, {
        count: s,
        value: r
      });
    }
  };
  function G5(e, t) {
    let {
      node: r
    } = e;
    if (X5(r))
      return W5(t, r.property, r.computed);
    if (e.isOptionalCallExpression()) {
      let s = e.get("callee");
      if (e.node.optional && s.isOptionalMemberExpression()) {
        let n = s.node.object, a = e.scope.maybeGenerateMemoised(n);
        return s.get("object").replaceWith(Ul("=", a, n)), Mm(W5(t, Y5("call")), [a, ...e.node.arguments]);
      }
      return Mm(t, e.node.arguments);
    }
    return e.node;
  }
  i(G5, "toNonOptional");
  function hje(e) {
    for (; e && !e.isProgram(); ) {
      let {
        parentPath: t,
        container: r,
        listKey: s
      } = e, n = t.node;
      if (s) {
        if (r !== n[s])
          return !0;
      } else if (r !== n) return !0;
      e = t;
    }
    return !1;
  }
  i(hje, "isInDetachedTree");
  var mje = {
    memoise() {
    },
    handle(e, t) {
      let {
        node: r,
        parent: s,
        parentPath: n,
        scope: a
      } = e;
      if (e.isOptionalMemberExpression()) {
        if (hje(e)) return;
        let o = e.find(({
          node: q,
          parent: V
        }) => X5(V) ? V.optional || V.object !== q : cje(V) ? q !== e.node && V.optional || V.callee !== q : !0);
        if (a.path.isPattern()) {
          o.replaceWith(Mm(V5([], o.node), []));
          return;
        }
        let l = iP(o), u = o.parentPath;
        if (u.isUpdateExpression({
          argument: r
        }))
          throw e.buildCodeFrameError("can't handle update expression");
        let c = u.isAssignmentExpression({
          left: o.node
        }), f = u.isUnaryExpression({
          operator: "delete"
        });
        if (f && o.isOptionalMemberExpression() && o.get("property").isPrivateName())
          throw e.buildCodeFrameError("can't delete a private class element");
        let p = e;
        for (; ; ) {
          if (p.isOptionalMemberExpression()) {
            if (p.node.optional) break;
            p = p.get("object");
            continue;
          } else if (p.isOptionalCallExpression()) {
            if (p.node.optional) break;
            p = p.get("callee");
            continue;
          }
          throw new Error(`Internal error: unexpected ${p.node.type}`);
        }
        let d = p.isOptionalMemberExpression() ? p.node.object : p.node.callee, m = a.maybeGenerateMemoised(d), b = m ?? d, h = n.isOptionalCallExpression(
        {
          callee: r
        }), g = /* @__PURE__ */ i((q) => h, "isOptionalCall"), E = n.isCallExpression({
          callee: r
        });
        p.replaceWith(G5(p, b)), g() ? s.optional ? n.replaceWith(this.optionalCall(e, s.arguments)) : n.replaceWith(this.call(e, s.arguments)) :
        E ? e.replaceWith(this.boundGet(e)) : this.delete && n.isUnaryExpression({
          operator: "delete"
        }) ? n.replaceWith(this.delete(e)) : n.isAssignmentExpression() ? K5(this, e, n) : e.replaceWith(this.get(e));
        let D = e.node;
        for (let q = e; q !== o; ) {
          let V = q.parentPath;
          if (V === o && g() && s.optional) {
            D = V.node;
            break;
          }
          D = G5(V, D), q = V;
        }
        let C, N = o.parentPath;
        if (uje(D) && N.isOptionalCallExpression({
          callee: o.node,
          optional: !0
        })) {
          let {
            object: q
          } = D;
          C = e.scope.maybeGenerateMemoised(q), C && (D.object = Ul("=", C, q));
        }
        let I = o;
        (f || c) && (I = N, D = N.node);
        let M = m ? Ul("=", Xs(b), Xs(d)) : Xs(b);
        if (l) {
          let q;
          t ? q = vo("!=", M, Lm()) : q = Bm("&&", vo("!==", M, Lm()), vo("!==", Xs(b), a.buildUndefinedNode())), I.replaceWith(Bm("&&", q, D));
        } else {
          let q;
          t ? q = vo("==", M, Lm()) : q = Bm("||", vo("===", M, Lm()), vo("===", Xs(b), a.buildUndefinedNode())), I.replaceWith(lje(q, f ? oje(
          !0) : a.buildUndefinedNode(), D));
        }
        if (C) {
          let q = N.node;
          N.replaceWith(pje(dje(q.callee, Y5("call"), !1, !0), [Xs(C), ...q.arguments], !1));
        }
        return;
      }
      if (fje(s, {
        argument: r
      })) {
        if (this.simpleSet) {
          e.replaceWith(this.simpleSet(e));
          return;
        }
        let {
          operator: o,
          prefix: l
        } = s;
        this.memoise(e, 2);
        let u = a.generateUidIdentifierBasedOnNode(r);
        a.push({
          id: u
        });
        let c = [Ul("=", Xs(u), this.get(e))];
        if (l) {
          c.push(H5(o, Xs(u), l));
          let f = nP(c);
          n.replaceWith(this.set(e, f));
          return;
        } else {
          let f = a.generateUidIdentifierBasedOnNode(r);
          a.push({
            id: f
          }), c.push(Ul("=", Xs(f), H5(o, Xs(u), l)), Xs(u));
          let p = nP(c);
          n.replaceWith(nP([this.set(e, p), Xs(f)]));
          return;
        }
      }
      if (n.isAssignmentExpression({
        left: r
      })) {
        K5(this, e, n);
        return;
      }
      if (n.isCallExpression({
        callee: r
      })) {
        n.replaceWith(this.call(e, n.node.arguments));
        return;
      }
      if (n.isOptionalCallExpression({
        callee: r
      })) {
        if (a.path.isPattern()) {
          n.replaceWith(Mm(V5([], n.node), []));
          return;
        }
        n.replaceWith(this.optionalCall(e, n.node.arguments));
        return;
      }
      if (this.delete && n.isUnaryExpression({
        operator: "delete"
      })) {
        n.replaceWith(this.delete(e));
        return;
      }
      if (n.isForXStatement({
        left: r
      }) || n.isObjectProperty({
        value: r
      }) && n.parentPath.isObjectPattern() || n.isAssignmentPattern({
        left: r
      }) && n.parentPath.isObjectProperty({
        value: s
      }) && n.parentPath.parentPath.isObjectPattern() || n.isArrayPattern() || n.isAssignmentPattern({
        left: r
      }) && n.parentPath.isArrayPattern() || n.isRestElement()) {
        e.replaceWith(this.destructureSet(e));
        return;
      }
      n.isTaggedTemplateExpression() ? e.replaceWith(this.boundGet(e)) : e.replaceWith(this.get(e));
    }
  };
  function K5(e, t, r) {
    if (e.simpleSet) {
      t.replaceWith(e.simpleSet(t));
      return;
    }
    let {
      operator: s,
      right: n
    } = r.node;
    if (s === "=")
      r.replaceWith(e.set(t, n));
    else {
      let a = s.slice(0, -1);
      aje.includes(a) ? (e.memoise(t, 1), r.replaceWith(Bm(a, e.get(t), e.set(t, n)))) : (e.memoise(t, 2), r.replaceWith(e.set(t, vo(a, e.get(
      t), n))));
    }
  }
  i(K5, "handleAssignment");
  function yje(e, t, r) {
    e.traverse(t, Object.assign({}, mje, r, {
      memoiser: new aP()
    }));
  }
  i(yje, "memberExpressionToFunctions");
  oP.default = yje;
});

// ../node_modules/@babel/helper-optimise-call-expression/lib/index.js
var cP = y((uP) => {
  "use strict";
  Object.defineProperty(uP, "__esModule", {
    value: !0
  });
  uP.default = vje;
  var gje = Re(), {
    callExpression: z5,
    identifier: jm,
    isIdentifier: bje,
    isSpreadElement: Eje,
    memberExpression: J5,
    optionalCallExpression: Q5,
    optionalMemberExpression: Z5
  } = gje;
  function vje(e, t, r, s) {
    return r.length === 1 && Eje(r[0]) && bje(r[0].argument, {
      name: "arguments"
    }) ? s ? Q5(Z5(e, jm("apply"), !1, !0), [t, r[0].argument], !1) : z5(J5(e, jm("apply")), [t, r[0].argument]) : s ? Q5(Z5(e, jm("call"), !1,
    !0), [t, ...r], !1) : z5(J5(e, jm("call")), [t, ...r]);
  }
  i(vje, "optimiseCallExpression");
});

// ../node_modules/@babel/helper-replace-supers/lib/index.js
var Um = y((Wl) => {
  "use strict";
  Object.defineProperty(Wl, "__esModule", {
    value: !0
  });
  Wl.default = void 0;
  var r9 = ea(), Sje = lP(), $m = cP(), vf = mr(), {
    assignmentExpression: Tje,
    booleanLiteral: xje,
    callExpression: qm,
    cloneNode: vn,
    identifier: bf,
    memberExpression: Vl,
    sequenceExpression: fP,
    stringLiteral: Pje,
    thisExpression: Ef
  } = vf.types;
  {
    let e = ea();
    Wl.environmentVisitor = e.default, Wl.skipAllButComputedKey = e.skipAllButComputedKey;
  }
  function e9(e, t, r, s) {
    e = vn(e);
    let n = t || s ? e : Vl(e, bf("prototype"));
    return qm(r.addHelper("getPrototypeOf"), [n]);
  }
  i(e9, "getPrototypeOfExpression");
  var t9 = vf.traverse.visitors.merge([r9.default, {
    Super(e, t) {
      let {
        node: r,
        parentPath: s
      } = e;
      s.isMemberExpression({
        object: r
      }) && t.handle(s);
    }
  }]), Aje = vf.traverse.visitors.merge([r9.default, {
    Scopable(e, {
      refName: t
    }) {
      let r = e.scope.getOwnBinding(t);
      r && r.identifier.name === t && e.scope.rename(t);
    }
  }]), s9 = {
    memoise(e, t) {
      let {
        scope: r,
        node: s
      } = e, {
        computed: n,
        property: a
      } = s;
      if (!n)
        return;
      let o = r.maybeGenerateMemoised(a);
      o && this.memoiser.set(a, o, t);
    },
    prop(e) {
      let {
        computed: t,
        property: r
      } = e.node;
      return this.memoiser.has(r) ? vn(this.memoiser.get(r)) : t ? vn(r) : Pje(r.name);
    },
    get(e) {
      return this._get(e, this._getThisRefs());
    },
    _get(e, t) {
      let r = e9(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
      return qm(this.file.addHelper("get"), [t.needAccessFirst ? fP([t.this, r]) : r, this.prop(e), t.this]);
    },
    _getThisRefs() {
      return {
        needAccessFirst: this.isDerivedConstructor,
        this: Ef()
      };
    },
    set(e, t) {
      let r = this._getThisRefs(), s = e9(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
      return qm(this.file.addHelper("set"), [r.needAccessFirst ? fP([r.this, s]) : s, this.prop(e), t, r.this, xje(e.isInStrictMode())]);
    },
    destructureSet(e) {
      throw e.buildCodeFrameError("Destructuring to a super field is not supported yet.");
    },
    call(e, t) {
      let r = this._getThisRefs();
      return (0, $m.default)(this._get(e, r), vn(r.this), t, !1);
    },
    optionalCall(e, t) {
      let r = this._getThisRefs();
      return (0, $m.default)(this._get(e, r), vn(r.this), t, !0);
    },
    delete(e) {
      return e.node.computed ? fP([qm(this.file.addHelper("toPropertyKey"), [vn(e.node.property)]), vf.template.expression.ast`
          function () { throw new ReferenceError("'delete super[expr]' is invalid"); }()
        `]) : vf.template.expression.ast`
        function () { throw new ReferenceError("'delete super.prop' is invalid"); }()
      `;
    }
  }, Cje = Object.assign({}, s9, {
    prop(e) {
      let {
        property: t
      } = e.node;
      return this.memoiser.has(t) ? vn(this.memoiser.get(t)) : vn(t);
    },
    get(e) {
      let {
        isStatic: t,
        getSuperRef: r
      } = this, {
        computed: s
      } = e.node, n = this.prop(e), a;
      if (t) {
        var o;
        a = (o = r()) != null ? o : Vl(bf("Function"), bf("prototype"));
      } else {
        var l;
        a = Vl((l = r()) != null ? l : bf("Object"), bf("prototype"));
      }
      return Vl(a, n, s);
    },
    set(e, t) {
      let {
        computed: r
      } = e.node, s = this.prop(e);
      return Tje("=", Vl(Ef(), s, r), t);
    },
    destructureSet(e) {
      let {
        computed: t
      } = e.node, r = this.prop(e);
      return Vl(Ef(), r, t);
    },
    call(e, t) {
      return (0, $m.default)(this.get(e), Ef(), t, !1);
    },
    optionalCall(e, t) {
      return (0, $m.default)(this.get(e), Ef(), t, !0);
    }
  }), pP = class {
    static {
      i(this, "ReplaceSupers");
    }
    constructor(t) {
      var r;
      let s = t.methodPath;
      this.methodPath = s, this.isDerivedConstructor = s.isClassMethod({
        kind: "constructor"
      }) && !!t.superRef, this.isStatic = s.isObjectMethod() || s.node.static || (s.isStaticBlock == null ? void 0 : s.isStaticBlock()), this.
      isPrivateMethod = s.isPrivate() && s.isMethod(), this.file = t.file, this.constantSuper = (r = t.constantSuper) != null ? r : t.isLoose,
      this.opts = t;
    }
    getObjectRef() {
      return vn(this.opts.objectRef || this.opts.getObjectRef());
    }
    getSuperRef() {
      if (this.opts.superRef) return vn(this.opts.superRef);
      if (this.opts.getSuperRef)
        return vn(this.opts.getSuperRef());
    }
    replace() {
      let {
        methodPath: t
      } = this;
      this.opts.refToPreserve && t.traverse(Aje, {
        refName: this.opts.refToPreserve.name
      });
      let r = this.constantSuper ? Cje : s9;
      t9.shouldSkip = (s) => {
        if (s.parentPath === t && (s.parentKey === "decorators" || s.parentKey === "key"))
          return !0;
      }, (0, Sje.default)(t, t9, Object.assign({
        file: this.file,
        scope: this.methodPath.scope,
        isDerivedConstructor: this.isDerivedConstructor,
        isStatic: this.isStatic,
        isPrivateMethod: this.isPrivateMethod,
        getObjectRef: this.getObjectRef.bind(this),
        getSuperRef: this.getSuperRef.bind(this),
        boundGet: r.get
      }, r));
    }
  };
  Wl.default = pP;
});

// ../node_modules/@babel/helper-skip-transparent-expression-wrappers/lib/index.js
var hP = y((Sf) => {
  "use strict";
  Object.defineProperty(Sf, "__esModule", {
    value: !0
  });
  Sf.isTransparentExprWrapper = dP;
  Sf.skipTransparentExprWrapperNodes = Fje;
  Sf.skipTransparentExprWrappers = kje;
  var wje = Re(), {
    isParenthesizedExpression: Dje,
    isTSAsExpression: Ije,
    isTSNonNullExpression: _je,
    isTSSatisfiesExpression: Oje,
    isTSTypeAssertion: Nje,
    isTypeCastExpression: Rje
  } = wje;
  function dP(e) {
    return Ije(e) || Oje(e) || Nje(e) || _je(e) || Rje(e) || Dje(e);
  }
  i(dP, "isTransparentExprWrapper");
  function kje(e) {
    for (; dP(e.node); )
      e = e.get("expression");
    return e;
  }
  i(kje, "skipTransparentExprWrappers");
  function Fje(e) {
    for (; dP(e); )
      e = e.expression;
    return e;
  }
  i(Fje, "skipTransparentExprWrapperNodes");
});

// ../node_modules/@babel/helper-annotate-as-pure/lib/index.js
var yP = y((mP) => {
  "use strict";
  Object.defineProperty(mP, "__esModule", {
    value: !0
  });
  mP.default = qje;
  var Lje = Re(), {
    addComment: Bje
  } = Lje, Mje = "#__PURE__", jje = /* @__PURE__ */ i(({
    leadingComments: e
  }) => !!e && e.some((t) => /[@#]__PURE__/.test(t.value)), "isPureAnnotated");
  function qje(e) {
    let t = e.node || e;
    jje(t) || Bje(t, "leading", Mje);
  }
  i(qje, "annotateAsPure");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/typescript.js
var bP = y((gP) => {
  "use strict";
  Object.defineProperty(gP, "__esModule", {
    value: !0
  });
  gP.assertFieldTransformed = $je;
  function $je(e) {
    if (e.node.declare)
      throw e.buildCodeFrameError(`TypeScript 'declare' fields must first be transformed by @babel/plugin-transform-typescript.
If you have already enabled that plugin (or '@babel/preset-typescript'), make sure that it runs before any plugin related to additional clas\
s features:
 - @babel/plugin-transform-class-properties
 - @babel/plugin-transform-private-methods
 - @babel/plugin-proposal-decorators`);
  }
  i($je, "assertFieldTransformed");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/fields.js
var TP = y((Sa) => {
  "use strict";
  Object.defineProperty(Sa, "__esModule", {
    value: !0
  });
  Sa.buildCheckInRHS = Hm;
  Sa.buildFieldsInitNodes = f4e;
  Sa.buildPrivateNamesMap = Kje;
  Sa.buildPrivateNamesNodes = Yje;
  Sa.privateNameVisitorFactory = SP;
  Sa.transformPrivateNamesUsage = e4e;
  var R = mr(), Uje = Um(), l9 = ea(), Vje = lP(), n9 = cP(), Wje = yP(), Hje = hP(), Gje = bP();
  Gr = /* @__PURE__ */ i((e) => e.availableHelper("classPrivateFieldGet2"), "newHelpers");
  var Gr;
  function Kje(e, t, r, s) {
    let n = /* @__PURE__ */ new Map(), a;
    for (let l of r)
      if (l.isPrivate()) {
        let {
          name: u
        } = l.node.key.id, c = n.get(u);
        if (!c) {
          let f = !l.isProperty(), p = l.node.static, d = !1, m;
          if (!t && Gr(s) && f && !p) {
            var o;
            d = !!a, (o = a) != null || (a = l.scope.generateUidIdentifier(`${e}_brand`)), m = a;
          } else
            m = l.scope.generateUidIdentifier(u);
          c = {
            id: m,
            static: p,
            method: f,
            initAdded: d
          }, n.set(u, c);
        }
        if (l.isClassPrivateMethod())
          if (l.node.kind === "get") {
            let {
              body: f
            } = l.node.body, p;
            f.length === 1 && R.types.isReturnStatement(p = f[0]) && R.types.isCallExpression(p = p.argument) && p.arguments.length === 1 &&
            R.types.isThisExpression(p.arguments[0]) && R.types.isIdentifier(p = p.callee) ? (c.getId = R.types.cloneNode(p), c.getterDeclared =
            !0) : c.getId = l.scope.generateUidIdentifier(`get_${u}`);
          } else if (l.node.kind === "set") {
            let {
              params: f
            } = l.node, {
              body: p
            } = l.node.body, d;
            p.length === 1 && R.types.isExpressionStatement(d = p[0]) && R.types.isCallExpression(d = d.expression) && d.arguments.length ===
            2 && R.types.isThisExpression(d.arguments[0]) && R.types.isIdentifier(d.arguments[1], {
              name: f[0].name
            }) && R.types.isIdentifier(d = d.callee) ? (c.setId = R.types.cloneNode(d), c.setterDeclared = !0) : c.setId = l.scope.generateUidIdentifier(
            `set_${u}`);
          } else l.node.kind === "method" && (c.methodId = l.scope.generateUidIdentifier(u));
        n.set(u, c);
      }
    return n;
  }
  i(Kje, "buildPrivateNamesMap");
  function Yje(e, t, r, s) {
    let n = [], a = /* @__PURE__ */ new Set();
    for (let [o, l] of e) {
      let {
        static: u,
        method: c,
        getId: f,
        setId: p
      } = l, d = f || p, m = R.types.cloneNode(l.id), b;
      if (t)
        b = R.types.callExpression(s.addHelper("classPrivateFieldLooseKey"), [R.types.stringLiteral(o)]);
      else if (r)
        b = R.types.callExpression(R.types.identifier("Symbol"), [R.types.stringLiteral(o)]);
      else if (!u) {
        if (a.has(m.name)) continue;
        a.add(m.name), b = R.types.newExpression(R.types.identifier(c && (!d || Gr(s)) ? "WeakSet" : "WeakMap"), []);
      }
      b && (r || (0, Wje.default)(b), n.push(R.template.statement.ast`var ${m} = ${b}`));
    }
    return n;
  }
  i(Yje, "buildPrivateNamesNodes");
  function SP(e) {
    let t = R.traverse.visitors.merge([Object.assign({}, e), l9.default]), r = Object.assign({}, e, {
      Class(s) {
        let {
          privateNamesMap: n
        } = this, a = s.get("body.body"), o = new Map(n), l = [];
        for (let u of a) {
          if (!u.isPrivate()) continue;
          let {
            name: c
          } = u.node.key.id;
          o.delete(c), l.push(c);
        }
        l.length && (s.get("body").traverse(t, Object.assign({}, this, {
          redeclared: l
        })), s.traverse(r, Object.assign({}, this, {
          privateNamesMap: o
        })), s.skipKey("body"));
      }
    });
    return r;
  }
  i(SP, "privateNameVisitorFactory");
  var Xje = SP({
    PrivateName(e, {
      noDocumentAll: t
    }) {
      let {
        privateNamesMap: r,
        redeclared: s
      } = this, {
        node: n,
        parentPath: a
      } = e;
      if (!a.isMemberExpression({
        property: n
      }) && !a.isOptionalMemberExpression({
        property: n
      }))
        return;
      let {
        name: o
      } = n.id;
      r.has(o) && (s && s.includes(o) || this.handle(a, t));
    }
  });
  function u9(e, t, r) {
    for (; (s = t) != null && s.hasBinding(e) && !t.bindingIdentifierEquals(e, r); ) {
      var s;
      t.rename(e), t = t.parent;
    }
  }
  i(u9, "unshadow");
  function Hm(e, t, r) {
    return r || !(t.availableHelper != null && t.availableHelper("checkInRHS")) ? e : R.types.callExpression(t.addHelper("checkInRHS"), [e]);
  }
  i(Hm, "buildCheckInRHS");
  var zje = SP({
    BinaryExpression(e, {
      file: t
    }) {
      let {
        operator: r,
        left: s,
        right: n
      } = e.node;
      if (r !== "in" || !R.types.isPrivateName(s)) return;
      let {
        privateFieldsAsProperties: a,
        privateNamesMap: o,
        redeclared: l
      } = this, {
        name: u
      } = s.id;
      if (!o.has(u) || l && l.includes(u)) return;
      if (u9(this.classRef.name, e.scope, this.innerBinding), a) {
        let {
          id: p
        } = o.get(u);
        e.replaceWith(R.template.expression.ast`
        Object.prototype.hasOwnProperty.call(${Hm(n, t)}, ${R.types.cloneNode(p)})
      `);
        return;
      }
      let {
        id: c,
        static: f
      } = o.get(u);
      if (f) {
        e.replaceWith(R.template.expression.ast`${Hm(n, t)} === ${R.types.cloneNode(this.classRef)}`);
        return;
      }
      e.replaceWith(R.template.expression.ast`${R.types.cloneNode(c)}.has(${Hm(n, t)})`);
    }
  });
  function Vm(e, t) {
    return R.types.callExpression(e.addHelper("readOnlyError"), [R.types.stringLiteral(`#${t}`)]);
  }
  i(Vm, "readOnlyError");
  function Jje(e, t) {
    return e.availableHelper("writeOnlyError") ? R.types.callExpression(e.addHelper("writeOnlyError"), [R.types.stringLiteral(`#${t}`)]) : (console.
    warn("@babel/helpers is outdated, update it to silence this warning."), R.types.buildUndefinedNode());
  }
  i(Jje, "writeOnlyError");
  function EP(e, t) {
    return t ? e : R.types.memberExpression(e, R.types.identifier("_"));
  }
  i(EP, "buildStaticPrivateFieldAccess");
  var Qje = {
    memoise(e, t) {
      let {
        scope: r
      } = e, {
        object: s
      } = e.node, n = r.maybeGenerateMemoised(s);
      n && this.memoiser.set(s, n, t);
    },
    receiver(e) {
      let {
        object: t
      } = e.node;
      return this.memoiser.has(t) ? R.types.cloneNode(this.memoiser.get(t)) : R.types.cloneNode(t);
    },
    get(e) {
      let {
        classRef: t,
        privateNamesMap: r,
        file: s,
        innerBinding: n,
        noUninitializedPrivateFieldAccess: a
      } = this, {
        name: o
      } = e.node.property.id, {
        id: l,
        static: u,
        method: c,
        methodId: f,
        getId: p,
        setId: d
      } = r.get(o), m = p || d;
      if (u) {
        if (u9(t.name, e.scope, n), !Gr(s)) {
          let g = c && !m ? "classStaticPrivateMethodGet" : "classStaticPrivateFieldSpecGet";
          return R.types.callExpression(s.addHelper(g), [this.receiver(e), R.types.cloneNode(t), R.types.cloneNode(l)]);
        }
        let b = this.receiver(e), h = R.types.isIdentifier(b) && b.name === t.name;
        if (!c)
          return EP(h ? R.types.cloneNode(l) : R.types.callExpression(s.addHelper("assertClassBrand"), [R.types.cloneNode(t), b, R.types.cloneNode(
          l)]), a);
        if (p)
          return h ? R.types.callExpression(R.types.cloneNode(p), [b]) : R.types.callExpression(s.addHelper("classPrivateGetter"), [R.types.
          cloneNode(t), b, R.types.cloneNode(p)]);
        if (d) {
          let g = R.types.buildUndefinedNode();
          return h ? g : R.types.sequenceExpression([R.types.callExpression(s.addHelper("assertClassBrand"), [R.types.cloneNode(t), b]), g]);
        }
        return h ? R.types.cloneNode(l) : R.types.callExpression(s.addHelper("assertClassBrand"), [R.types.cloneNode(t), b, R.types.cloneNode(
        l)]);
      }
      return c ? m ? p ? Gr(s) ? R.types.callExpression(s.addHelper("classPrivateGetter"), [R.types.cloneNode(l), this.receiver(e), R.types.
      cloneNode(p)]) : R.types.callExpression(s.addHelper("classPrivateFieldGet"), [this.receiver(e), R.types.cloneNode(l)]) : R.types.sequenceExpression(
      [this.receiver(e), Jje(s, o)]) : Gr(s) ? R.types.callExpression(s.addHelper("assertClassBrand"), [R.types.cloneNode(l), this.receiver(
      e), R.types.cloneNode(f)]) : R.types.callExpression(s.addHelper("classPrivateMethodGet"), [this.receiver(e), R.types.cloneNode(l), R.types.
      cloneNode(f)]) : Gr(s) ? R.types.callExpression(s.addHelper("classPrivateFieldGet2"), [R.types.cloneNode(l), this.receiver(e)]) : R.types.
      callExpression(s.addHelper("classPrivateFieldGet"), [this.receiver(e), R.types.cloneNode(l)]);
    },
    boundGet(e) {
      return this.memoise(e, 1), R.types.callExpression(R.types.memberExpression(this.get(e), R.types.identifier("bind")), [this.receiver(e)]);
    },
    set(e, t) {
      let {
        classRef: r,
        privateNamesMap: s,
        file: n,
        noUninitializedPrivateFieldAccess: a
      } = this, {
        name: o
      } = e.node.property.id, {
        id: l,
        static: u,
        method: c,
        setId: f,
        getId: p
      } = s.get(o), d = p || f;
      if (u) {
        if (!Gr(n)) {
          let h = c && !d ? "classStaticPrivateMethodSet" : "classStaticPrivateFieldSpecSet";
          return R.types.callExpression(n.addHelper(h), [this.receiver(e), R.types.cloneNode(r), R.types.cloneNode(l), t]);
        }
        let m = this.receiver(e), b = R.types.isIdentifier(m) && m.name === r.name;
        if (c && !f) {
          let h = Vm(n, o);
          return b ? R.types.sequenceExpression([t, h]) : R.types.sequenceExpression([t, R.types.callExpression(n.addHelper("assertClassBran\
d"), [R.types.cloneNode(r), m]), Vm(n, o)]);
        }
        return f ? b ? R.types.callExpression(R.types.cloneNode(f), [m, t]) : R.types.callExpression(n.addHelper("classPrivateSetter"), [R.types.
        cloneNode(r), R.types.cloneNode(f), m, t]) : R.types.assignmentExpression("=", EP(R.types.cloneNode(l), a), b ? t : R.types.callExpression(
        n.addHelper("assertClassBrand"), [R.types.cloneNode(r), m, t]));
      }
      return c ? f ? Gr(n) ? R.types.callExpression(n.addHelper("classPrivateSetter"), [R.types.cloneNode(l), R.types.cloneNode(f), this.receiver(
      e), t]) : R.types.callExpression(n.addHelper("classPrivateFieldSet"), [this.receiver(e), R.types.cloneNode(l), t]) : R.types.sequenceExpression(
      [this.receiver(e), t, Vm(n, o)]) : Gr(n) ? R.types.callExpression(n.addHelper("classPrivateFieldSet2"), [R.types.cloneNode(l), this.receiver(
      e), t]) : R.types.callExpression(n.addHelper("classPrivateFieldSet"), [this.receiver(e), R.types.cloneNode(l), t]);
    },
    destructureSet(e) {
      let {
        classRef: t,
        privateNamesMap: r,
        file: s,
        noUninitializedPrivateFieldAccess: n
      } = this, {
        name: a
      } = e.node.property.id, {
        id: o,
        static: l,
        method: u,
        setId: c
      } = r.get(a);
      if (!Gr(s)) {
        if (l) {
          try {
            var f = s.addHelper("classStaticPrivateFieldDestructureSet");
          } catch {
            throw new Error("Babel can not transpile `[C.#p] = [0]` with @babel/helpers < 7.13.10, \nplease update @babel/helpers to the late\
st version.");
          }
          return R.types.memberExpression(R.types.callExpression(f, [this.receiver(e), R.types.cloneNode(t), R.types.cloneNode(o)]), R.types.
          identifier("value"));
        }
        return R.types.memberExpression(R.types.callExpression(s.addHelper("classPrivateFieldDestructureSet"), [this.receiver(e), R.types.cloneNode(
        o)]), R.types.identifier("value"));
      }
      if (u && !c)
        return R.types.memberExpression(R.types.sequenceExpression([e.node.object, Vm(s, a)]), R.types.identifier("_"));
      if (l && !u) {
        let m = this.get(e);
        if (!n || !R.types.isCallExpression(m))
          return m;
        let b = m.arguments.pop();
        return m.arguments.push(R.template.expression.ast`(_) => ${b} = _`), R.types.memberExpression(R.types.callExpression(s.addHelper("to\
Setter"), [m]), R.types.identifier("_"));
      }
      let p = this.set(e, R.types.identifier("_"));
      if (!R.types.isCallExpression(p) || !R.types.isIdentifier(p.arguments[p.arguments.length - 1], {
        name: "_"
      }))
        throw e.buildCodeFrameError("Internal Babel error while compiling this code. This is a Babel bug. Please report it at https://github\
.com/babel/babel/issues.");
      let d;
      return R.types.isMemberExpression(p.callee, {
        computed: !1
      }) && R.types.isIdentifier(p.callee.property) && p.callee.property.name === "call" ? d = [p.callee.object, R.types.arrayExpression(p.arguments.
      slice(1, -1)), p.arguments[0]] : d = [p.callee, R.types.arrayExpression(p.arguments.slice(0, -1))], R.types.memberExpression(R.types.callExpression(
      s.addHelper("toSetter"), d), R.types.identifier("_"));
    },
    call(e, t) {
      return this.memoise(e, 1), (0, n9.default)(this.get(e), this.receiver(e), t, !1);
    },
    optionalCall(e, t) {
      return this.memoise(e, 1), (0, n9.default)(this.get(e), this.receiver(e), t, !0);
    },
    delete() {
      throw new Error("Internal Babel error: deleting private elements is a parsing error.");
    }
  }, Zje = {
    get(e) {
      let {
        privateNamesMap: t,
        file: r
      } = this, {
        object: s
      } = e.node, {
        name: n
      } = e.node.property.id;
      return R.template.expression`BASE(REF, PROP)[PROP]`({
        BASE: r.addHelper("classPrivateFieldLooseBase"),
        REF: R.types.cloneNode(s),
        PROP: R.types.cloneNode(t.get(n).id)
      });
    },
    set() {
      throw new Error("private name handler with loose = true don't need set()");
    },
    boundGet(e) {
      return R.types.callExpression(R.types.memberExpression(this.get(e), R.types.identifier("bind")), [R.types.cloneNode(e.node.object)]);
    },
    simpleSet(e) {
      return this.get(e);
    },
    destructureSet(e) {
      return this.get(e);
    },
    call(e, t) {
      return R.types.callExpression(this.get(e), t);
    },
    optionalCall(e, t) {
      return R.types.optionalCallExpression(this.get(e), t, !0);
    },
    delete() {
      throw new Error("Internal Babel error: deleting private elements is a parsing error.");
    }
  };
  function e4e(e, t, r, {
    privateFieldsAsProperties: s,
    noUninitializedPrivateFieldAccess: n,
    noDocumentAll: a,
    innerBinding: o
  }, l) {
    if (!r.size) return;
    let u = t.get("body"), c = s ? Zje : Qje;
    (0, Vje.default)(u, Xje, Object.assign({
      privateNamesMap: r,
      classRef: e,
      file: l
    }, c, {
      noDocumentAll: a,
      noUninitializedPrivateFieldAccess: n,
      innerBinding: o
    })), u.traverse(zje, {
      privateNamesMap: r,
      classRef: e,
      file: l,
      privateFieldsAsProperties: s,
      innerBinding: o
    });
  }
  i(e4e, "transformPrivateNamesUsage");
  function i9(e, t, r) {
    let {
      id: s
    } = r.get(t.node.key.id.name), n = t.node.value || t.scope.buildUndefinedNode();
    return Or(R.template.statement.ast`
      Object.defineProperty(${e}, ${R.types.cloneNode(s)}, {
        // configurable is false by default
        // enumerable is false by default
        writable: true,
        value: ${n}
      });
    `, t);
  }
  i(i9, "buildPrivateFieldInitLoose");
  function t4e(e, t, r, s) {
    let {
      id: n
    } = r.get(t.node.key.id.name), a = t.node.value || t.scope.buildUndefinedNode();
    if (!s.availableHelper("classPrivateFieldInitSpec"))
      return Or(R.template.statement.ast`${R.types.cloneNode(n)}.set(${e}, {
          // configurable is always false for private elements
          // enumerable is always false for private elements
          writable: true,
          value: ${a},
        })`, t);
    let o = s.addHelper("classPrivateFieldInitSpec");
    return Or(R.types.expressionStatement(R.types.callExpression(o, [R.types.thisExpression(), R.types.cloneNode(n), Gr(s) ? a : R.template.
    expression.ast`{ writable: true, value: ${a} }`])), t);
  }
  i(t4e, "buildPrivateInstanceFieldInitSpec");
  function r4e(e, t, r) {
    let s = t.get(e.node.key.id.name), n = r ? e.node.value : R.template.expression.ast`{
        _: ${e.node.value || R.types.buildUndefinedNode()}
      }`;
    return Or(R.types.variableDeclaration("var", [R.types.variableDeclarator(R.types.cloneNode(s.id), n)]), e);
  }
  i(r4e, "buildPrivateStaticFieldInitSpec");
  vP = /* @__PURE__ */ i(function(e, t) {
    let r = t.get(e.node.key.id.name), {
      id: s,
      getId: n,
      setId: a,
      initAdded: o
    } = r, l = n || a;
    if (!e.isProperty() && (o || !l)) return;
    if (l)
      return t.set(e.node.key.id.name, Object.assign({}, r, {
        initAdded: !0
      })), Or(R.template.statement.ast`
          var ${R.types.cloneNode(s)} = {
            // configurable is false by default
            // enumerable is false by default
            // writable is false by default
            get: ${n ? n.name : e.scope.buildUndefinedNode()},
            set: ${a ? a.name : e.scope.buildUndefinedNode()}
          }
        `, e);
    let u = e.node.value || e.scope.buildUndefinedNode();
    return Or(R.template.statement.ast`
        var ${R.types.cloneNode(s)} = {
          // configurable is false by default
          // enumerable is false by default
          writable: true,
          value: ${u}
        };
      `, e);
  }, "buildPrivateStaticFieldInitSpecOld");
  var vP;
  function s4e(e, t, r) {
    let s = r.get(t.node.key.id.name), {
      methodId: n,
      id: a,
      getId: o,
      setId: l,
      initAdded: u
    } = s;
    if (u) return;
    if (n)
      return Or(R.template.statement.ast`
        Object.defineProperty(${e}, ${a}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          value: ${n.name}
        });
      `, t);
    if (o || l)
      return r.set(t.node.key.id.name, Object.assign({}, s, {
        initAdded: !0
      })), Or(R.template.statement.ast`
        Object.defineProperty(${e}, ${a}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          get: ${o ? o.name : t.scope.buildUndefinedNode()},
          set: ${l ? l.name : t.scope.buildUndefinedNode()}
        });
      `, t);
  }
  i(s4e, "buildPrivateMethodInitLoose");
  function n4e(e, t, r, s) {
    let n = r.get(t.node.key.id.name);
    if (!n.initAdded)
      return !Gr(s) && (n.getId || n.setId) ? i4e(e, t, r, s) : a4e(e, t, r, s);
  }
  i(n4e, "buildPrivateInstanceMethodInitSpec");
  function i4e(e, t, r, s) {
    let n = r.get(t.node.key.id.name), {
      id: a,
      getId: o,
      setId: l
    } = n;
    if (r.set(t.node.key.id.name, Object.assign({}, n, {
      initAdded: !0
    })), !s.availableHelper("classPrivateFieldInitSpec"))
      return Or(R.template.statement.ast`
          ${a}.set(${e}, {
            get: ${o ? o.name : t.scope.buildUndefinedNode()},
            set: ${l ? l.name : t.scope.buildUndefinedNode()}
          });
        `, t);
    let u = s.addHelper("classPrivateFieldInitSpec");
    return Or(R.template.statement.ast`${u}(
      ${R.types.thisExpression()},
      ${R.types.cloneNode(a)},
      {
        get: ${o ? o.name : t.scope.buildUndefinedNode()},
        set: ${l ? l.name : t.scope.buildUndefinedNode()}
      },
    )`, t);
  }
  i(i4e, "buildPrivateAccessorInitialization");
  function a4e(e, t, r, s) {
    let n = r.get(t.node.key.id.name), {
      id: a
    } = n;
    if (!s.availableHelper("classPrivateMethodInitSpec"))
      return Or(R.template.statement.ast`${a}.add(${e})`, t);
    let o = s.addHelper("classPrivateMethodInitSpec");
    return Or(R.template.statement.ast`${o}(
      ${R.types.thisExpression()},
      ${R.types.cloneNode(a)}
    )`, t);
  }
  i(a4e, "buildPrivateInstanceMethodInitialization");
  function a9(e, t) {
    let {
      key: r,
      computed: s
    } = t.node, n = t.node.value || t.scope.buildUndefinedNode();
    return Or(R.types.expressionStatement(R.types.assignmentExpression("=", R.types.memberExpression(e, r, s || R.types.isLiteral(r)), n)), t);
  }
  i(a9, "buildPublicFieldInitLoose");
  function o9(e, t, r) {
    let {
      key: s,
      computed: n
    } = t.node, a = t.node.value || t.scope.buildUndefinedNode();
    return Or(R.types.expressionStatement(R.types.callExpression(r.addHelper("defineProperty"), [e, n || R.types.isLiteral(s) ? s : R.types.
    stringLiteral(s.name), a])), t);
  }
  i(o9, "buildPublicFieldInitSpec");
  function o4e(e, t, r, s) {
    let n = s.get(t.node.key.id.name), {
      id: a,
      methodId: o,
      getId: l,
      setId: u,
      initAdded: c
    } = n;
    return c ? void 0 : l || u ? (s.set(t.node.key.id.name, Object.assign({}, n, {
      initAdded: !0
    })), Or(R.template.statement.ast`
        Object.defineProperty(${e}, ${a}, {
          // configurable is false by default
          // enumerable is false by default
          // writable is false by default
          get: ${l ? l.name : t.scope.buildUndefinedNode()},
          set: ${u ? u.name : t.scope.buildUndefinedNode()}
        })
      `, t)) : Or(R.template.statement.ast`
      Object.defineProperty(${e}, ${a}, {
        // configurable is false by default
        // enumerable is false by default
        // writable is false by default
        value: ${o.name}
      });
    `, t);
  }
  i(o4e, "buildPrivateStaticMethodInitLoose");
  function Wm(e, t, r, s = !1) {
    let n = r.get(t.node.key.id.name), {
      id: a,
      methodId: o,
      getId: l,
      setId: u,
      getterDeclared: c,
      setterDeclared: f,
      static: p
    } = n, {
      params: d,
      body: m,
      generator: b,
      async: h
    } = t.node, g = l && d.length === 0, E = u && d.length > 0;
    if (g && c || E && f)
      return r.set(t.node.key.id.name, Object.assign({}, n, {
        initAdded: !0
      })), null;
    if (Gr(e) && (g || E) && !s) {
      let C = t.get("body").scope, N = C.generateUidIdentifier("this"), I = {
        thisRef: N,
        argumentsPath: []
      };
      if (t.traverse(c9, I), I.argumentsPath.length) {
        let M = C.generateUidIdentifier("arguments");
        C.push({
          id: M,
          init: R.template.expression.ast`[].slice.call(arguments, 1)`
        });
        for (let q of I.argumentsPath)
          q.replaceWith(R.types.cloneNode(M));
      }
      d.unshift(R.types.cloneNode(N));
    }
    let D = o;
    return g ? (r.set(t.node.key.id.name, Object.assign({}, n, {
      getterDeclared: !0,
      initAdded: !0
    })), D = l) : E ? (r.set(t.node.key.id.name, Object.assign({}, n, {
      setterDeclared: !0,
      initAdded: !0
    })), D = u) : p && !s && (D = a), Or(R.types.functionDeclaration(R.types.cloneNode(D), d, m, b, h), t);
  }
  i(Wm, "buildPrivateMethodDeclaration");
  var c9 = R.traverse.visitors.merge([{
    Identifier(e, t) {
      t.argumentsPath && e.node.name === "arguments" && t.argumentsPath.push(e);
    },
    UnaryExpression(e) {
      let {
        node: t
      } = e;
      if (t.operator === "delete") {
        let r = (0, Hje.skipTransparentExprWrapperNodes)(t.argument);
        R.types.isThisExpression(r) && e.replaceWith(R.types.booleanLiteral(!0));
      }
    },
    ThisExpression(e, t) {
      t.needsClassRef = !0, e.replaceWith(R.types.cloneNode(t.thisRef));
    },
    MetaProperty(e) {
      let {
        node: t,
        scope: r
      } = e;
      t.meta.name === "new" && t.property.name === "target" && e.replaceWith(r.buildUndefinedNode());
    }
  }, l9.default]), l4e = {
    ReferencedIdentifier(e, t) {
      e.scope.bindingIdentifierEquals(e.node.name, t.innerBinding) && (t.needsClassRef = !0, e.node.name = t.thisRef.name);
    }
  };
  function u4e(e, t, r) {
    var s;
    let n = {
      thisRef: t,
      needsClassRef: !1,
      innerBinding: r
    };
    return e.isMethod() || e.traverse(c9, n), r != null && (s = n.thisRef) != null && s.name && n.thisRef.name !== r.name && e.traverse(l4e,
    n), n.needsClassRef;
  }
  i(u4e, "replaceThisContext");
  function c4e({
    key: e,
    computed: t
  }) {
    return e.type === "Identifier" ? !t && (e.name === "name" || e.name === "length") : e.type === "StringLiteral" ? e.value === "name" || e.
    value === "length" : !1;
  }
  i(c4e, "isNameOrLength");
  function Or(e, t) {
    return R.types.inheritLeadingComments(e, t.node), R.types.inheritInnerComments(e, t.node), e;
  }
  i(Or, "inheritPropComments");
  function f4e(e, t, r, s, n, a, o, l, u, c) {
    var f, p;
    let d = 0, m, b = [], h = [], g = !1, E = [], D = null, C = R.types.isIdentifier(t) ? () => t : () => {
      var I;
      return (I = m) != null || (m = r[0].scope.generateUidIdentifierBasedOnNode(t)), m;
    }, N = (f = e) != null ? f : r[0].scope.generateUidIdentifier(c?.name || "Class");
    (p = e) != null || (e = R.types.cloneNode(c));
    for (let I of r) {
      I.isClassProperty() && Gje.assertFieldTransformed(I);
      let M = !(R.types.isStaticBlock != null && R.types.isStaticBlock(I.node)) && I.node.static, q = !M, V = I.isPrivate(), W = !V, Y = I.isProperty(),
      j = !Y, ae = I.isStaticBlock == null ? void 0 : I.isStaticBlock();
      switch (M && (d |= 1), (M || j && V || ae) && (new Uje.default({
        methodPath: I,
        constantSuper: u,
        file: n,
        refToPreserve: c,
        getSuperRef: C,
        getObjectRef() {
          return d |= 2, M || ae ? N : R.types.memberExpression(N, R.types.identifier("prototype"));
        }
      }).replace(), u4e(I, N, c) && (d |= 2)), g = !1, !0) {
        case ae: {
          let pe = I.node.body;
          pe.length === 1 && R.types.isExpressionStatement(pe[0]) ? b.push(Or(pe[0], I)) : b.push(R.types.inheritsComments(R.template.statement.
          ast`(() => { ${pe} })()`, I.node));
          break;
        }
        case (M && V && Y && o):
          b.push(i9(R.types.cloneNode(e), I, s));
          break;
        case (M && V && Y && !o):
          Gr(n) ? b.push(r4e(I, s, l)) : b.push(vP(I, s));
          break;
        case (M && W && Y && a):
          if (!c4e(I.node)) {
            b.push(a9(R.types.cloneNode(e), I));
            break;
          }
        case (M && W && Y && !a):
          b.push(o9(R.types.cloneNode(e), I, n));
          break;
        case (q && V && Y && o):
          h.push(i9(R.types.thisExpression(), I, s));
          break;
        case (q && V && Y && !o):
          h.push(t4e(R.types.thisExpression(), I, s, n));
          break;
        case (q && V && j && o):
          h.unshift(s4e(R.types.thisExpression(), I, s)), E.push(Wm(n, I, s, o));
          break;
        case (q && V && j && !o):
          h.unshift(n4e(R.types.thisExpression(), I, s, n)), E.push(Wm(n, I, s, o));
          break;
        case (M && V && j && !o):
          Gr(n) || b.unshift(vP(I, s)), E.push(Wm(n, I, s, o));
          break;
        case (M && V && j && o):
          b.unshift(o4e(R.types.cloneNode(e), I, n, s)), E.push(Wm(n, I, s, o));
          break;
        case (q && W && Y && a):
          h.push(a9(R.types.thisExpression(), I));
          break;
        case (q && W && Y && !a):
          g = !0, h.push(o9(R.types.thisExpression(), I, n));
          break;
        default:
          throw new Error("Unreachable.");
      }
    }
    return d & 2 && c != null && (D = R.types.expressionStatement(R.types.assignmentExpression("=", R.types.cloneNode(N), R.types.cloneNode(
    c)))), {
      staticNodes: b.filter(Boolean),
      instanceNodes: h.filter(Boolean),
      lastInstanceNodeReturnsThis: g,
      pureStaticNodes: E.filter(Boolean),
      classBindingNode: D,
      wrapClass(I) {
        for (let M of r)
          M.node.leadingComments = null, M.remove();
        return m && (I.scope.push({
          id: R.types.cloneNode(m)
        }), I.set("superClass", R.types.assignmentExpression("=", m, I.node.superClass))), d !== 0 && (I.isClassExpression() ? (I.scope.push(
        {
          id: e
        }), I.replaceWith(R.types.assignmentExpression("=", R.types.cloneNode(e), I.node))) : (c == null && (I.node.id = e), D != null && I.
        scope.push({
          id: N
        }))), I;
      }
    };
  }
  i(f4e, "buildFieldsInitNodes");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/misc.js
var xP = y((Tf) => {
  "use strict";
  Object.defineProperty(Tf, "__esModule", {
    value: !0
  });
  Tf.extractComputedKeys = g4e;
  Tf.injectInitialization = y4e;
  Tf.memoiseComputedKey = p9;
  var ur = mr(), p4e = ea(), d4e = ur.traverse.visitors.merge([{
    Super(e) {
      let {
        node: t,
        parentPath: r
      } = e;
      r.isCallExpression({
        callee: t
      }) && this.push(r);
    }
  }, p4e.default]), h4e = {
    "TSTypeAnnotation|TypeAnnotation"(e) {
      e.skip();
    },
    ReferencedIdentifier(e, {
      scope: t
    }) {
      t.hasOwnBinding(e.node.name) && (t.rename(e.node.name), e.skip());
    }
  };
  function f9(e, t) {
    if (t.classBinding && t.classBinding === e.scope.getBinding(e.node.name)) {
      let r = t.file.addHelper("classNameTDZError"), s = ur.types.callExpression(r, [ur.types.stringLiteral(e.node.name)]);
      e.replaceWith(ur.types.sequenceExpression([s, e.node])), e.skip();
    }
  }
  i(f9, "handleClassTDZ");
  var m4e = {
    ReferencedIdentifier: f9
  };
  function y4e(e, t, r, s, n) {
    if (!r.length) return;
    let a = !!e.node.superClass;
    if (!t) {
      let o = ur.types.classMethod("constructor", ur.types.identifier("constructor"), [], ur.types.blockStatement([]));
      a && (o.params = [ur.types.restElement(ur.types.identifier("args"))], o.body.body.push(ur.template.statement.ast`super(...args)`)), [t] =
      e.get("body").unshiftContainer("body", o);
    }
    if (s && s(h4e, {
      scope: t.scope
    }), a) {
      let o = [];
      t.traverse(d4e, o);
      let l = !0;
      for (let u of o)
        if (l ? l = !1 : r = r.map((c) => ur.types.cloneNode(c)), u.parentPath.isExpressionStatement())
          u.insertAfter(r);
        else {
          let c = [u.node, ...r.map((f) => ur.types.toExpression(f))];
          n || c.push(ur.types.thisExpression()), u.replaceWith(ur.types.sequenceExpression(c));
        }
    } else
      t.get("body").unshiftContainer("body", r);
  }
  i(y4e, "injectInitialization");
  function p9(e, t, r) {
    if (ur.types.isIdentifier(e) && t.hasUid(e.name))
      return;
    if (ur.types.isAssignmentExpression(e, {
      operator: "="
    }) && ur.types.isIdentifier(e.left) && t.hasUid(e.left.name))
      return ur.types.cloneNode(e);
    {
      let a = ur.types.identifier(r);
      return t.push({
        id: a,
        kind: "let"
      }), ur.types.assignmentExpression("=", ur.types.cloneNode(a), e);
    }
  }
  i(p9, "memoiseComputedKey");
  function g4e(e, t, r) {
    let {
      scope: s
    } = e, n = [], a = {
      classBinding: e.node.id && s.getBinding(e.node.id.name),
      file: r
    };
    for (let o of t) {
      let l = o.get("key");
      l.isReferencedIdentifier() ? f9(l, a) : l.traverse(m4e, a);
      let u = o.node;
      if (!l.isConstantExpression()) {
        let c = p9(l.node, s, s.generateUidBasedOnNode(l.node));
        c && (n.push(ur.types.expressionStatement(c)), u.key = ur.types.cloneNode(c.left));
      }
    }
    return n;
  }
  i(g4e, "extractComputedKeys");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/decorators.js
var C9 = y((IP) => {
  "use strict";
  Object.defineProperty(IP, "__esModule", {
    value: !0
  });
  IP.default = Q4e;
  var w = mr(), d9 = Um(), h9 = tc(), Ta = hP(), x9 = TP(), Gm = xP();
  function P9(e, t = e.length - 1) {
    if (t === -1) {
      e.unshift(65);
      return;
    }
    let r = e[t];
    r === 90 ? e[t] = 97 : r === 122 ? (e[t] = 65, P9(e, t - 1)) : e[t] = r + 1;
  }
  i(P9, "incrementId");
  function b4e(e) {
    let t = [], r = /* @__PURE__ */ new Set();
    return e.traverse({
      PrivateName(s) {
        r.add(s.node.id.name);
      }
    }), () => {
      let s;
      do
        P9(t), s = String.fromCharCode(...t);
      while (r.has(s));
      return w.types.privateName(w.types.identifier(s));
    };
  }
  i(b4e, "createPrivateUidGeneratorForClass");
  function E4e(e) {
    let t;
    return () => (t || (t = b4e(e)), t());
  }
  i(E4e, "createLazyPrivateUidGeneratorForClass");
  function v4e(e, t) {
    let r = e.node.id, s = e.scope;
    if (e.type === "ClassDeclaration") {
      let n = r.name, a = s.generateUidIdentifierBasedOnNode(r), o = w.types.identifier(n);
      return s.rename(n, a.name), e.get("id").replaceWith(o), {
        id: w.types.cloneNode(a),
        path: e
      };
    } else {
      let n;
      r ? (t = r.name, n = Is(s.parent, t), s.rename(t, n.name)) : n = Is(s.parent, typeof t == "string" ? t : "decorated_class");
      let a = w.types.classExpression(typeof t == "string" ? w.types.identifier(t) : null, e.node.superClass, e.node.body), [o] = e.replaceWith(
      w.types.sequenceExpression([a, n]));
      return {
        id: w.types.cloneNode(n),
        path: o.get("expressions.0")
      };
    }
  }
  i(v4e, "replaceClassWithVar");
  function m9(e, t, r) {
    return e.type === "PrivateName" ? w.types.classPrivateProperty(e, t, void 0, r) : w.types.classProperty(e, t, void 0, void 0, r);
  }
  i(m9, "generateClassProperty");
  function y9(e, t, r, s, n, a, o, l) {
    let u = (l === "2023-11" || l === "2023-05") && o ? e : w.types.thisExpression(), c = w.types.blockStatement([w.types.returnStatement(w.
    types.memberExpression(w.types.cloneNode(u), w.types.cloneNode(n)))]), f = w.types.blockStatement([w.types.expressionStatement(w.types.assignmentExpression(
    "=", w.types.memberExpression(w.types.cloneNode(u), w.types.cloneNode(n)), w.types.identifier("v")))]), p, d;
    r.type === "PrivateName" ? (p = w.types.classPrivateMethod("get", r, [], c, o), d = w.types.classPrivateMethod("set", s, [w.types.identifier(
    "v")], f, o)) : (p = w.types.classMethod("get", r, [], c, a, o), d = w.types.classMethod("set", s, [w.types.identifier("v")], f, a, o)),
    t.insertAfter(d), t.insertAfter(p);
  }
  i(y9, "addProxyAccessorsFor");
  function g9(e, t) {
    return t !== "2023-11" && t !== "2023-05" && t !== "2023-01" ? [w.template.expression.ast`
        function () {
          return this.${w.types.cloneNode(e)};
        }
      `, w.template.expression.ast`
        function (value) {
          this.${w.types.cloneNode(e)} = value;
        }
      `] : [w.template.expression.ast`
      o => o.${w.types.cloneNode(e)}
    `, w.template.expression.ast`
      (o, v) => o.${w.types.cloneNode(e)} = v
    `];
  }
  i(g9, "extractProxyAccessorsFor");
  function DP(e) {
    if (e = (0, Ta.skipTransparentExprWrappers)(e), e.isSequenceExpression()) {
      let t = e.get("expressions");
      return DP(t[t.length - 1]);
    }
    return e;
  }
  i(DP, "getComputedKeyLastElement");
  function S4e(e) {
    let t = DP(e);
    if (t.isConstantExpression())
      return w.types.cloneNode(e.node);
    if (t.isIdentifier() && e.scope.hasUid(t.node.name))
      return w.types.cloneNode(e.node);
    if (t.isAssignmentExpression() && t.get("left").isIdentifier())
      return w.types.cloneNode(t.node.left);
    throw new Error(`Internal Error: the computed key ${e.toString()} has not yet been memoised.`);
  }
  i(S4e, "getComputedKeyMemoiser");
  function xf(e, t) {
    let r = t.get("key");
    r.isSequenceExpression() ? e.push(...r.node.expressions) : e.push(r.node), r.replaceWith(Pa(e));
  }
  i(xf, "prependExpressionsToComputedKey");
  function T4e(e, t) {
    let r = t.get("key"), s = DP(r);
    if (s.isConstantExpression())
      xf(e, t);
    else {
      let n = r.scope.parent, a = (0, Gm.memoiseComputedKey)(s.node, n, n.generateUid("computedKey"));
      if (!a)
        xf(e, t);
      else {
        let o = [...e, w.types.cloneNode(a.left)], l = s.parentPath;
        l.isSequenceExpression() ? l.pushContainer("expressions", o) : s.replaceWith(Pa([w.types.cloneNode(a), ...o]));
      }
    }
  }
  i(T4e, "appendExpressionsToComputedKey");
  function PP(e, t) {
    let r = t.get("value");
    r.node ? e.push(r.node) : e.length > 0 && (e[e.length - 1] = w.types.unaryExpression("void", e[e.length - 1])), r.replaceWith(Pa(e));
  }
  i(PP, "prependExpressionsToFieldInitializer");
  function x4e(e, t) {
    t.unshiftContainer("body", w.types.expressionStatement(Pa(e)));
  }
  i(x4e, "prependExpressionsToStaticBlock");
  function P4e(e, t) {
    t.node.body.body.unshift(w.types.expressionStatement(Pa(e)));
  }
  i(P4e, "prependExpressionsToConstructor");
  function b9(e, t) {
    return w.types.isCallExpression(e) && w.types.isIdentifier(e.callee, {
      name: t.name
    });
  }
  i(b9, "isProtoInitCallExpression");
  function A4e(e, t) {
    if (t) {
      if (e.length >= 2 && b9(e[1], t)) {
        let r = w.types.callExpression(w.types.cloneNode(t), [e[0]]);
        e.splice(0, 2, r);
      }
      e.length >= 2 && w.types.isThisExpression(e[e.length - 1]) && b9(e[e.length - 2], t) && e.splice(e.length - 1, 1);
    }
    return Pa(e);
  }
  i(A4e, "optimizeSuperCallAndExpressions");
  function C4e(e, t, r) {
    t.traverse({
      CallExpression: {
        exit(s) {
          if (!s.get("callee").isSuper()) return;
          let n = [s.node, ...e.map((a) => w.types.cloneNode(a))];
          s.isCompletionRecord() && n.push(w.types.thisExpression()), s.replaceWith(A4e(n, r)), s.skip();
        }
      },
      ClassMethod(s) {
        s.node.kind === "constructor" && s.skip();
      }
    });
  }
  i(C4e, "insertExpressionsAfterSuperCallAndOptimize");
  function E9(e, t) {
    let r = [w.types.expressionStatement(Pa(e))];
    return t && r.unshift(w.types.expressionStatement(w.types.callExpression(w.types.super(), [w.types.spreadElement(w.types.identifier("arg\
s"))]))), w.types.classMethod("constructor", w.types.identifier("constructor"), t ? [w.types.restElement(w.types.identifier("args"))] : [], w.
    types.blockStatement(r));
  }
  i(E9, "createConstructorFromExpressions");
  function w4e(e) {
    return w.types.staticBlock([w.types.expressionStatement(Pa(e))]);
  }
  i(w4e, "createStaticBlockFromExpressions");
  var So = 0, xa = 1, D4e = 2, A9 = 3, Km = 4, I4e = 5, _4e = 8, O4e = 16;
  function N4e(e) {
    switch (e.node.type) {
      case "ClassProperty":
      case "ClassPrivateProperty":
        return So;
      case "ClassAccessorProperty":
        return xa;
      case "ClassMethod":
      case "ClassPrivateMethod":
        return e.node.kind === "get" ? A9 : e.node.kind === "set" ? Km : D4e;
    }
  }
  i(N4e, "getElementKind");
  function R4e(e) {
    return [...e.filter((t) => t.isStatic && t.kind >= xa && t.kind <= Km), ...e.filter((t) => !t.isStatic && t.kind >= xa && t.kind <= Km),
    ...e.filter((t) => t.isStatic && t.kind === So), ...e.filter((t) => !t.isStatic && t.kind === So)];
  }
  i(R4e, "toSortedDecoratorInfo");
  function v9(e, t, r) {
    let s = e.length, n = t.some(Boolean), a = [];
    for (let o = 0; o < s; o++)
      (r === "2023-11" || r === "2023-05") && n && a.push(t[o] || w.types.unaryExpression("void", w.types.numericLiteral(0))), a.push(e[o]);
    return {
      haveThis: n,
      decs: a
    };
  }
  i(v9, "generateDecorationList");
  function k4e(e, t) {
    return w.types.arrayExpression(e.map((r) => {
      let s = r.kind;
      return r.isStatic && (s += t === "2023-11" || t === "2023-05" ? _4e : I4e), r.decoratorsHaveThis && (s += O4e), w.types.arrayExpression(
      [r.decoratorsArray, w.types.numericLiteral(s), r.name, ...r.privateMethods || []]);
    }));
  }
  i(k4e, "generateDecorationExprs");
  function F4e(e) {
    let t = [];
    for (let r of e) {
      let {
        locals: s
      } = r;
      Array.isArray(s) ? t.push(...s) : s !== void 0 && t.push(s);
    }
    return t;
  }
  i(F4e, "extractElementLocalAssignments");
  function L4e(e, t, r, s, n, a) {
    t.insertAfter(w.types.classPrivateMethod("get", w.types.cloneNode(r), [], w.types.blockStatement([w.types.returnStatement(w.types.callExpression(
    w.types.cloneNode(s), e === "2023-11" && a ? [] : [w.types.thisExpression()]))]), a)), t.insertAfter(w.types.classPrivateMethod("set", w.
    types.cloneNode(r), [w.types.identifier("v")], w.types.blockStatement([w.types.expressionStatement(w.types.callExpression(w.types.cloneNode(
    n), e === "2023-11" && a ? [w.types.identifier("v")] : [w.types.thisExpression(), w.types.identifier("v")]))]), a));
  }
  i(L4e, "addCallAccessorsFor");
  function B4e(e, t, r, s) {
    let n, a;
    e.node.kind === "set" ? (n = [w.types.identifier("v")], a = [w.types.expressionStatement(w.types.callExpression(r, [w.types.thisExpression(),
    w.types.identifier("v")]))]) : (n = [], a = [w.types.returnStatement(w.types.callExpression(r, [w.types.thisExpression()]))]), e.replaceWith(
    w.types.classPrivateMethod(e.node.kind, w.types.cloneNode(t), n, w.types.blockStatement(a), s));
  }
  i(B4e, "movePrivateAccessor");
  function S9(e) {
    let {
      type: t
    } = e;
    return t !== "TSDeclareMethod" && t !== "TSIndexSignature" && t !== "StaticBlock";
  }
  i(S9, "isClassDecoratableElementPath");
  function M4e(e) {
    return w.types.callExpression(w.types.arrowFunctionExpression([], w.types.blockStatement(e.body)), []);
  }
  i(M4e, "staticBlockToIIFE");
  function j4e(e) {
    return w.types.functionExpression(null, [], w.types.blockStatement(e.body));
  }
  i(j4e, "staticBlockToFunctionClosure");
  function q4e(e) {
    return w.types.functionExpression(null, [], w.types.blockStatement([w.types.returnStatement(e)]));
  }
  i(q4e, "fieldInitializerToClosure");
  function Pa(e) {
    return e.length === 0 ? w.types.unaryExpression("void", w.types.numericLiteral(0)) : e.length === 1 ? e[0] : w.types.sequenceExpression(
    e);
  }
  i(Pa, "maybeSequenceExpression");
  function T9(e) {
    let {
      params: t,
      body: r,
      generator: s,
      async: n
    } = e;
    return w.types.functionExpression(void 0, t, r, s, n);
  }
  i(T9, "createFunctionExpressionFromPrivateMethod");
  function $4e(e, t) {
    return w.types.callExpression(e.addHelper("setFunctionName"), [w.types.thisExpression(), t]);
  }
  i($4e, "createSetFunctionNameCall");
  function wP(e, t) {
    return w.types.callExpression(e.addHelper("toPropertyKey"), [t]);
  }
  i(wP, "createToPropertyKeyCall");
  function AP(e) {
    return w.types.arrowFunctionExpression([w.types.identifier("_")], w.types.binaryExpression("in", w.types.cloneNode(e), w.types.identifier(
    "_")));
  }
  i(AP, "createPrivateBrandCheckClosure");
  function U4e(e) {
    try {
      return w.types.traverseFast(e, (t) => {
        if (w.types.isPrivateName(t))
          throw null;
      }), !1;
    } catch {
      return !0;
    }
  }
  i(U4e, "usesPrivateField");
  function V4e(e) {
    let {
      node: t
    } = e;
    t.computed = !0, w.types.isIdentifier(t.key) && (t.key = w.types.stringLiteral(t.key.name));
  }
  i(V4e, "convertToComputedKey");
  function CP(e, t) {
    let r = !1;
    if (t.length > 0) {
      let s = (0, x9.privateNameVisitorFactory)({
        PrivateName(a, o) {
          o.privateNamesMap.has(a.node.id.name) && (r = !0, a.stop());
        }
      }), n = /* @__PURE__ */ new Map();
      for (let a of t)
        n.set(a, null);
      e.traverse(s, {
        privateNamesMap: n
      });
    }
    return r;
  }
  i(CP, "hasInstancePrivateAccess");
  function W4e(e, t) {
    let r = (0, x9.privateNameVisitorFactory)({
      PrivateName(n, a) {
        if (!a.privateNamesMap.has(n.node.id.name)) return;
        let o = n.parentPath, l = o.parentPath;
        if (l.node.type === "AssignmentExpression" && l.node.left === o.node || l.node.type === "UpdateExpression" || l.node.type === "RestE\
lement" || l.node.type === "ArrayPattern" || l.node.type === "ObjectProperty" && l.node.value === o.node && l.parentPath.type === "ObjectPat\
tern" || l.node.type === "ForOfStatement" && l.node.left === o.node)
          throw n.buildCodeFrameError(`Decorated private methods are read-only, but "#${n.node.id.name}" is updated via this expression.`);
      }
    }), s = /* @__PURE__ */ new Map();
    for (let n of t)
      s.set(n, null);
    e.traverse(r, {
      privateNamesMap: s
    });
  }
  i(W4e, "checkPrivateMethodUpdateError");
  function H4e(e, t, r, s, n, a, o) {
    var l, u;
    let c = e.get("body.body"), f = e.node.decorators, p = !1, d = !1, m = !1, b = E4e(e), h = [], g = e.scope.parent, E = /* @__PURE__ */ i(
    (ge, fe, Ge) => {
      let U = Is(g, fe);
      return Ge.push(w.types.assignmentExpression("=", U, ge)), w.types.cloneNode(U);
    }, "memoiseExpression"), D, C, N = (l = e.node.id) == null ? void 0 : l.name, I = /* @__PURE__ */ i((ge) => {
      try {
        return w.types.traverseFast(ge, (fe) => {
          if (w.types.isThisExpression(fe) || w.types.isSuper(fe) || w.types.isYieldExpression(fe) || w.types.isAwaitExpression(fe) || w.types.
          isIdentifier(fe, {
            name: "arguments"
          }) || N && w.types.isIdentifier(fe, {
            name: N
          }) || w.types.isMetaProperty(fe) && fe.meta.name !== "import")
            throw null;
        }), !1;
      } catch {
        return !0;
      }
    }, "usesFunctionContextOrYieldAwait"), M = [];
    for (let ge of c) {
      if (!S9(ge))
        continue;
      let fe = ge.node;
      if (!fe.static && w.types.isPrivateName(fe.key) && M.push(fe.key.id.name), Pf(fe)) {
        switch (fe.type) {
          case "ClassProperty":
            a.ClassProperty(ge, t);
            break;
          case "ClassPrivateProperty":
            a.ClassPrivateProperty(ge, t);
            break;
          case "ClassAccessorProperty":
            if (a.ClassAccessorProperty(ge, t), o === "2023-11")
              break;
          default:
            if (fe.static) {
              var q;
              (q = C) != null || (C = Is(g, "initStatic"));
            } else {
              var V;
              (V = D) != null || (D = Is(g, "initProto"));
            }
            break;
        }
        p = !0, m || (m = fe.decorators.some(I));
      } else if (fe.type === "ClassAccessorProperty") {
        a.ClassAccessorProperty(ge, t);
        let {
          key: Ge,
          value: U,
          static: z,
          computed: J
        } = fe, oe = b(), ke = m9(oe, U, z), be = ge.get("key"), [Me] = ge.replaceWith(ke), Xe, Le;
        J && !be.isConstantExpression() ? (Xe = (0, Gm.memoiseComputedKey)(wP(t, Ge), g, g.generateUid("computedKey")), Le = w.types.cloneNode(
        Xe.left)) : (Xe = w.types.cloneNode(Ge), Le = w.types.cloneNode(Ge)), y9(e.node.id, Me, Xe, Le, oe, J, z, o);
      }
      "computed" in ge.node && ge.node.computed && (d || (d = !g.isStatic(ge.node.key)));
    }
    if (!f && !p)
      return;
    let W = [], Y, j = /* @__PURE__ */ new Set(), ae, pe, Ie = null;
    function F(ge) {
      let fe = !1, Ge = !1, U = [];
      for (let J of ge) {
        let oe;
        if ((o === "2023-11" || o === "2023-05") && w.types.isMemberExpression(J))
          if (w.types.isSuper(J.object))
            oe = w.types.thisExpression();
          else if (g.isStatic(J.object))
            oe = w.types.cloneNode(J.object);
          else {
            var z;
            (z = Ie) != null || (Ie = Is(g, "obj")), oe = w.types.assignmentExpression("=", w.types.cloneNode(Ie), J.object), J.object = w.types.
            cloneNode(Ie);
          }
        U.push(oe), fe || (fe = !g.isStatic(J)), Ge || (Ge = I(J));
      }
      return {
        hasSideEffects: fe,
        usesFnContext: Ge,
        decoratorsThis: U
      };
    }
    i(F, "handleDecoratorExpressions");
    let L = d || m || o !== "2023-11", se = !1, ne = 0, Ee = [], qe, Ae = [];
    if (f) {
      ae = Is(g, "initClass"), se = e.isClassDeclaration(), {
        id: pe,
        path: e
      } = v4e(e, n), e.node.decorators = null;
      let ge = f.map((oe) => oe.expression), fe = ge.some(U4e), {
        hasSideEffects: Ge,
        decoratorsThis: U
      } = F(ge), {
        haveThis: z,
        decs: J
      } = v9(ge, U, o);
      if (ne = z ? 1 : 0, Ee = J, (Ge && L || fe) && (qe = E(w.types.arrayExpression(Ee), "classDecs", h)), !p)
        for (let oe of e.get("body.body")) {
          let {
            node: ke
          } = oe;
          if ("computed" in ke && ke.computed)
            if (oe.isClassProperty({
              static: !0
            })) {
              if (!oe.get("key").isConstantExpression()) {
                let Me = ke.key, Xe = (0, Gm.memoiseComputedKey)(Me, g, g.generateUid("computedKey"));
                Xe != null && (ke.key = w.types.cloneNode(Xe.left), Ae.push(Xe));
              }
            } else Ae.length > 0 && (xf(Ae, oe), Ae = []);
        }
    } else
      e.node.id || (e.node.id = e.scope.generateUidIdentifier("Class")), pe = w.types.cloneNode(e.node.id);
    let Rt, Bt = !1, qt = [], _e = [];
    if (p) {
      if (D) {
        let ge = w.types.callExpression(w.types.cloneNode(D), [w.types.thisExpression()]);
        qt.push(ge);
      }
      for (let ge of c) {
        if (!S9(ge)) {
          _e.length > 0 && ge.isStaticBlock() && (x4e(_e, ge), _e = []);
          continue;
        }
        let {
          node: fe
        } = ge, Ge = fe.decorators, U = !!(Ge != null && Ge.length), z = "computed" in fe && fe.computed, J = "computedKey";
        fe.key.type === "PrivateName" ? J = fe.key.id.name : !z && fe.key.type === "Identifier" && (J = fe.key.name);
        let oe, ke;
        if (U) {
          let Mt = Ge.map((Cn) => Cn.expression), {
            hasSideEffects: ot,
            usesFnContext: mt,
            decoratorsThis: Vt
          } = F(Mt), {
            decs: Zt,
            haveThis: Ts
          } = v9(Mt, Vt, o);
          ke = Ts, oe = Zt.length === 1 ? Zt[0] : w.types.arrayExpression(Zt), (mt || ot && L) && (oe = E(oe, J + "Decs", Ae));
        }
        if (z && !ge.get("key").isConstantExpression()) {
          let Mt = fe.key, ot = (0, Gm.memoiseComputedKey)(U ? wP(t, Mt) : Mt, g, g.generateUid("computedKey"));
          ot != null && (f && ge.isClassProperty({
            static: !0
          }) ? (fe.key = w.types.cloneNode(ot.left), Ae.push(ot)) : fe.key = ot);
        }
        let {
          key: be,
          static: Me
        } = fe, Xe = be.type === "PrivateName", Le = N4e(ge);
        Xe && !Me && (U && (Bt = !0), (w.types.isClassPrivateProperty(fe) || !Rt) && (Rt = be)), ge.isClassMethod({
          kind: "constructor"
        }) && (Y = ge);
        let ht;
        if (U) {
          let Mt, ot;
          if (z ? ot = S4e(ge.get("key")) : be.type === "PrivateName" ? ot = w.types.stringLiteral(be.id.name) : be.type === "Identifier" ? ot =
          w.types.stringLiteral(be.name) : ot = w.types.cloneNode(be), Le === xa) {
            let {
              value: mt
            } = ge.node, Vt = o === "2023-11" && Me ? [] : [w.types.thisExpression()];
            mt && Vt.push(w.types.cloneNode(mt));
            let Zt = b(), Ts = Is(g, `init_${J}`), Cn = w.types.callExpression(w.types.cloneNode(Ts), Vt), ji = m9(Zt, Cn, Me), [No] = ge.replaceWith(
            ji);
            if (Xe) {
              Mt = g9(Zt, o);
              let Jr = Is(g, `get_${J}`), Ro = Is(g, `set_${J}`);
              L4e(o, No, be, Jr, Ro, Me), ht = [Ts, Jr, Ro];
            } else
              y9(e.node.id, No, w.types.cloneNode(be), w.types.isAssignmentExpression(be) ? w.types.cloneNode(be.left) : w.types.cloneNode(be),
              Zt, z, Me, o), ht = [Ts];
          } else if (Le === So) {
            let mt = Is(g, `init_${J}`), Vt = ge.get("value"), Zt = o === "2023-11" && Me ? [] : [w.types.thisExpression()];
            Vt.node && Zt.push(Vt.node), Vt.replaceWith(w.types.callExpression(w.types.cloneNode(mt), Zt)), ht = [mt], Xe && (Mt = g9(be, o));
          } else if (Xe) {
            let mt = Is(g, `call_${J}`);
            if (ht = [mt], new d9.default({
              constantSuper: r,
              methodPath: ge,
              objectRef: pe,
              superRef: e.node.superClass,
              file: t.file,
              refToPreserve: pe
            }).replace(), Mt = [T9(ge.node)], Le === A9 || Le === Km)
              B4e(ge, w.types.cloneNode(be), w.types.cloneNode(mt), Me);
            else {
              let Zt = ge.node;
              e.node.body.body.unshift(w.types.classPrivateProperty(be, w.types.cloneNode(mt), [], Zt.static)), j.add(be.id.name), ge.remove();
            }
          }
          W.push({
            kind: Le,
            decoratorsArray: oe,
            decoratorsHaveThis: ke,
            name: ot,
            isStatic: Me,
            privateMethods: Mt,
            locals: ht
          }), ge.node && (ge.node.decorators = null);
        }
        if (z && Ae.length > 0 && (f && ge.isClassProperty({
          static: !0
        }) || (xf(Ae, Le === xa ? ge.getNextSibling() : ge), Ae = [])), qt.length > 0 && !Me && (Le === So || Le === xa) && (PP(qt, ge), qt =
        []), _e.length > 0 && Me && (Le === So || Le === xa) && (PP(_e, ge), _e = []), U && o === "2023-11" && (Le === So || Le === xa)) {
          let Mt = Is(g, `init_extra_${J}`);
          ht.push(Mt);
          let ot = w.types.callExpression(w.types.cloneNode(Mt), Me ? [] : [w.types.thisExpression()]);
          Me ? _e.push(ot) : qt.push(ot);
        }
      }
    }
    if (Ae.length > 0) {
      let ge = e.get("body.body"), fe;
      for (let Ge = ge.length - 1; Ge >= 0; Ge--) {
        let U = ge[Ge], z = U.node;
        if (z.computed) {
          if (f && w.types.isClassProperty(z, {
            static: !0
          }))
            continue;
          fe = U;
          break;
        }
      }
      fe != null && (T4e(Ae, fe), Ae = []);
    }
    if (qt.length > 0) {
      let ge = !!e.node.superClass;
      Y ? ge ? C4e(qt, Y, D) : P4e(qt, Y) : e.node.body.body.unshift(E9(qt, ge)), qt = [];
    }
    _e.length > 0 && (e.node.body.body.push(w4e(_e)), _e = []);
    let Oe = R4e(W), Jt = k4e(o === "2023-11" ? W : Oe, o), Tr = F4e(Oe);
    D && Tr.push(D), C && Tr.push(C);
    let de = [], ut = !1, le = ae && w.types.callExpression(w.types.cloneNode(ae), []), He = e, Pt = e.node, Qt = [];
    if (f) {
      de.push(pe, ae);
      let ge = [];
      if (e.get("body.body").forEach((fe) => {
        if (fe.isStaticBlock()) {
          if (CP(fe, M)) {
            let Ge = E(j4e(fe.node), "staticBlock", Qt);
            _e.push(w.types.callExpression(w.types.memberExpression(Ge, w.types.identifier("call")), [w.types.thisExpression()]));
          } else
            _e.push(M4e(fe.node));
          fe.remove();
          return;
        }
        if ((fe.isClassProperty() || fe.isClassPrivateProperty()) && fe.node.static) {
          let Ge = fe.get("value");
          if (CP(Ge, M)) {
            let U = E(q4e(Ge.node), "fieldValue", Qt);
            Ge.replaceWith(w.types.callExpression(w.types.memberExpression(U, w.types.identifier("call")), [w.types.thisExpression()]));
          }
          _e.length > 0 && (PP(_e, fe), _e = []), fe.node.static = !1, ge.push(fe.node), fe.remove();
        } else if (fe.isClassPrivateMethod({
          static: !0
        })) {
          if (CP(fe, M)) {
            new d9.default({
              constantSuper: r,
              methodPath: fe,
              objectRef: pe,
              superRef: e.node.superClass,
              file: t.file,
              refToPreserve: pe
            }).replace();
            let U = E(T9(fe.node), fe.get("key.id").node.name, Qt);
            s ? (fe.node.params = [w.types.restElement(w.types.identifier("arg"))], fe.node.body = w.types.blockStatement([w.types.returnStatement(
            w.types.callExpression(w.types.memberExpression(U, w.types.identifier("apply")), [w.types.thisExpression(), w.types.identifier("\
arg")]))])) : (fe.node.params = fe.node.params.map((z, J) => w.types.isRestElement(z) ? w.types.restElement(w.types.identifier("arg")) : w.types.
            identifier("_" + J)), fe.node.body = w.types.blockStatement([w.types.returnStatement(w.types.callExpression(w.types.memberExpression(
            U, w.types.identifier("apply")), [w.types.thisExpression(), w.types.identifier("arguments")]))]));
          }
          fe.node.static = !1, ge.push(fe.node), fe.remove();
        }
      }), ge.length > 0 || _e.length > 0) {
        let fe = w.template.expression.ast`
        class extends ${t.addHelper("identity")} {}
      `;
        fe.body.body = [w.types.classProperty(w.types.toExpression(Pt), void 0, void 0, void 0, !0, !0), ...ge];
        let Ge = [], U = w.types.newExpression(fe, []);
        _e.length > 0 && Ge.push(..._e), le && (ut = !0, Ge.push(le)), Ge.length > 0 ? (Ge.unshift(w.types.callExpression(w.types.super(), [
        w.types.cloneNode(pe)])), fe.body.body.push(E9(Ge, !1))) : U.arguments.push(w.types.cloneNode(pe));
        let [z] = e.replaceWith(U);
        He = z.get("callee").get("body").get("body")[0].get("key");
      }
    }
    !ut && le && e.node.body.body.push(w.types.staticBlock([w.types.expressionStatement(le)]));
    let {
      superClass: kt
    } = Pt;
    if (kt && (o === "2023-11" || o === "2023-05")) {
      let ge = e.scope.maybeGenerateMemoised(kt);
      ge && (Pt.superClass = w.types.assignmentExpression("=", ge, kt), kt = ge);
    }
    let sn = w.types.staticBlock([]);
    Pt.body.body.unshift(sn);
    let zr = sn.body;
    if (Ae.length > 0) {
      let ge = He.get("body.body"), fe;
      for (let Ge of ge)
        if ((Ge.isClassProperty() || Ge.isClassMethod()) && Ge.node.kind !== "constructor") {
          fe = Ge;
          break;
        }
      fe != null ? (V4e(fe), xf(Ae, fe)) : (Pt.body.body.unshift(w.types.classProperty(w.types.sequenceExpression([...Ae, w.types.stringLiteral(
      "_")]), void 0, void 0, void 0, !0, !0)), zr.push(w.types.expressionStatement(w.types.unaryExpression("delete", w.types.memberExpression(
      w.types.thisExpression(), w.types.identifier("_")))))), Ae = [];
    }
    if (zr.push(w.types.expressionStatement(G4e(Tr, de, Jt, (u = qe) != null ? u : w.types.arrayExpression(Ee), w.types.numericLiteral(ne), Bt ?
    Rt : null, typeof n == "object" ? n : void 0, w.types.cloneNode(kt), t, o))), C && zr.push(w.types.expressionStatement(w.types.callExpression(
    w.types.cloneNode(C), [w.types.thisExpression()]))), Qt.length > 0 && zr.push(...Qt.map((ge) => w.types.expressionStatement(ge))), e.insertBefore(
    h.map((ge) => w.types.expressionStatement(ge))), se)
      if (!g.getBinding(pe.name).constantViolations.length)
        e.insertBefore(w.types.variableDeclaration("let", [w.types.variableDeclarator(w.types.cloneNode(pe))]));
      else {
        let fe = g.generateUidIdentifier("t" + pe.name), Ge = pe;
        e.replaceWithMultiple([w.types.variableDeclaration("let", [w.types.variableDeclarator(w.types.cloneNode(Ge)), w.types.variableDeclarator(
        fe)]), w.types.blockStatement([w.types.variableDeclaration("let", [w.types.variableDeclarator(w.types.cloneNode(pe))]), e.node, w.types.
        expressionStatement(w.types.assignmentExpression("=", w.types.cloneNode(fe), w.types.cloneNode(pe)))]), w.types.expressionStatement(
        w.types.assignmentExpression("=", w.types.cloneNode(Ge), w.types.cloneNode(fe)))]);
      }
    return j.size > 0 && W4e(e, j), e.scope.crawl(), e;
  }
  i(H4e, "transformClass");
  function G4e(e, t, r, s, n, a, o, l, u, c) {
    let f, p, d = [o ? $4e(u, o) : w.types.thisExpression(), s, r];
    {
      if (c !== "2023-11" && d.splice(1, 2, r, s), c === "2021-12" || c === "2022-03" && !u.availableHelper("applyDecs2203R"))
        return f = w.types.arrayPattern([...e, ...t]), p = w.types.callExpression(u.addHelper(c === "2021-12" ? "applyDecs" : "applyDecs2203"),
        d), w.types.assignmentExpression("=", f, p);
      c === "2022-03" ? p = w.types.callExpression(u.addHelper("applyDecs2203R"), d) : c === "2023-01" ? (a && d.push(AP(a)), p = w.types.callExpression(
      u.addHelper("applyDecs2301"), d)) : c === "2023-05" && ((a || l || n.value !== 0) && d.push(n), a ? d.push(AP(a)) : l && d.push(w.types.
      unaryExpression("void", w.types.numericLiteral(0))), l && d.push(l), p = w.types.callExpression(u.addHelper("applyDecs2305"), d));
    }
    return c === "2023-11" && ((a || l || n.value !== 0) && d.push(n), a ? d.push(AP(a)) : l && d.push(w.types.unaryExpression("void", w.types.
    numericLiteral(0))), l && d.push(l), p = w.types.callExpression(u.addHelper("applyDecs2311"), d)), e.length > 0 ? t.length > 0 ? f = w.types.
    objectPattern([w.types.objectProperty(w.types.identifier("e"), w.types.arrayPattern(e)), w.types.objectProperty(w.types.identifier("c"),
    w.types.arrayPattern(t))]) : (f = w.types.arrayPattern(e), p = w.types.memberExpression(p, w.types.identifier("e"), !1, !1)) : (f = w.types.
    arrayPattern(t), p = w.types.memberExpression(p, w.types.identifier("c"), !1, !1)), w.types.assignmentExpression("=", f, p);
  }
  i(G4e, "createLocalsAssignment");
  function K4e(e) {
    return e.type === "Identifier" ? e.name === "__proto__" : e.value === "__proto__";
  }
  i(K4e, "isProtoKey");
  function Pf(e) {
    return e.decorators && e.decorators.length > 0;
  }
  i(Pf, "isDecorated");
  function Y4e(e) {
    switch (e.type) {
      case "ClassAccessorProperty":
        return !0;
      case "ClassMethod":
      case "ClassProperty":
      case "ClassPrivateMethod":
      case "ClassPrivateProperty":
        return Pf(e);
      default:
        return !1;
    }
  }
  i(Y4e, "shouldTransformElement");
  function X4e(e) {
    return Pf(e) || e.body.body.some(Y4e);
  }
  i(X4e, "shouldTransformClass");
  function z4e(e, t) {
    function r(s, n, a) {
      switch (n.type) {
        case "StringLiteral":
          return w.types.stringLiteral(n.value);
        case "NumericLiteral":
        case "BigIntLiteral": {
          let o = n.value + "";
          return s.get("key").replaceWith(w.types.stringLiteral(o)), w.types.stringLiteral(o);
        }
        default: {
          let o = s.scope.maybeGenerateMemoised(n);
          return s.get("key").replaceWith(w.types.assignmentExpression("=", o, wP(a, n))), w.types.cloneNode(o);
        }
      }
    }
    return i(r, "handleComputedProperty"), {
      VariableDeclarator(s, n) {
        let a = s.node.id;
        if (a.type === "Identifier") {
          let o = (0, Ta.skipTransparentExprWrappers)(s.get("init"));
          if (e(o)) {
            let l = a.name;
            t(o, n, l);
          }
        }
      },
      AssignmentExpression(s, n) {
        let a = s.node.left;
        if (a.type === "Identifier") {
          let o = (0, Ta.skipTransparentExprWrappers)(s.get("right"));
          if (e(o))
            switch (s.node.operator) {
              case "=":
              case "&&=":
              case "||=":
              case "??=":
                t(o, n, a.name);
            }
        }
      },
      AssignmentPattern(s, n) {
        let a = s.node.left;
        if (a.type === "Identifier") {
          let o = (0, Ta.skipTransparentExprWrappers)(s.get("right"));
          if (e(o)) {
            let l = a.name;
            t(o, n, l);
          }
        }
      },
      ObjectExpression(s, n) {
        for (let a of s.get("properties")) {
          let {
            node: o
          } = a;
          if (o.type !== "ObjectProperty") continue;
          let l = o.key, u = (0, Ta.skipTransparentExprWrappers)(a.get("value"));
          if (e(u)) {
            if (o.computed) {
              let c = r(a, l, n);
              t(u, n, c);
            } else if (!K4e(l))
              if (l.type === "Identifier")
                t(u, n, l.name);
              else {
                let c = w.types.stringLiteral(l.value + "");
                t(u, n, c);
              }
          }
        }
      },
      ClassPrivateProperty(s, n) {
        let {
          node: a
        } = s, o = (0, Ta.skipTransparentExprWrappers)(s.get("value"));
        if (e(o)) {
          let l = w.types.stringLiteral("#" + a.key.id.name);
          t(o, n, l);
        }
      },
      ClassAccessorProperty(s, n) {
        let {
          node: a
        } = s, o = a.key, l = (0, Ta.skipTransparentExprWrappers)(s.get("value"));
        if (e(l))
          if (a.computed) {
            let u = r(s, o, n);
            t(l, n, u);
          } else if (o.type === "Identifier")
            t(l, n, o.name);
          else if (o.type === "PrivateName") {
            let u = w.types.stringLiteral("#" + o.id.name);
            t(l, n, u);
          } else {
            let u = w.types.stringLiteral(o.value + "");
            t(l, n, u);
          }
      },
      ClassProperty(s, n) {
        let {
          node: a
        } = s, o = a.key, l = (0, Ta.skipTransparentExprWrappers)(s.get("value"));
        if (e(l))
          if (a.computed) {
            let u = r(s, o, n);
            t(l, n, u);
          } else if (o.type === "Identifier")
            t(l, n, o.name);
          else {
            let u = w.types.stringLiteral(o.value + "");
            t(l, n, u);
          }
      }
    };
  }
  i(z4e, "NamedEvaluationVisitoryFactory");
  function J4e(e) {
    return e.isClassExpression({
      id: null
    }) && X4e(e.node);
  }
  i(J4e, "isDecoratedAnonymousClassExpression");
  function Is(e, t) {
    let r = e.generateUidIdentifier(t);
    return e.push({
      id: r,
      kind: "let"
    }), w.types.cloneNode(r);
  }
  i(Is, "generateLetUidIdentifier");
  function Q4e({
    assertVersion: e,
    assumption: t
  }, {
    loose: r
  }, s, n) {
    var a, o;
    e(s === "2023-11" || s === "2023-05" || s === "2023-01" ? "^7.21.0" : s === "2021-12" ? "^7.16.0" : "^7.19.0");
    let l = /* @__PURE__ */ new WeakSet(), u = (a = t("constantSuper")) != null ? a : r, c = (o = t("ignoreFunctionLength")) != null ? o : r,
    f = z4e(J4e, p);
    function p(d, m, b) {
      var h, g;
      if (l.has(d)) return;
      let {
        node: E
      } = d;
      (h = b) != null || (b = (g = E.id) == null ? void 0 : g.name);
      let D = H4e(d, m, u, c, b, f, s);
      if (D) {
        l.add(D);
        return;
      }
      l.add(d);
    }
    return i(p, "visitClass"), {
      name: "proposal-decorators",
      inherits: n,
      visitor: Object.assign({
        ExportDefaultDeclaration(d, m) {
          let {
            declaration: b
          } = d.node;
          if (b?.type === "ClassDeclaration" && Pf(b)) {
            let h = !b.id, g = (0, h9.default)(d);
            h && p(g, m, w.types.stringLiteral("default"));
          }
        },
        ExportNamedDeclaration(d) {
          let {
            declaration: m
          } = d.node;
          m?.type === "ClassDeclaration" && Pf(m) && (0, h9.default)(d);
        },
        Class(d, m) {
          p(d, m, void 0);
        }
      }, f)
    };
  }
  i(Q4e, "_default");
});

// ../node_modules/@babel/helper-create-class-features-plugin/node_modules/semver/semver.js
var N9 = y((Ve, O9) => {
  Ve = O9.exports = Ze;
  var Nt;
  typeof process == "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? Nt = /* @__PURE__ */ i(
  function() {
    var e = Array.prototype.slice.call(arguments, 0);
    e.unshift("SEMVER"), console.log.apply(console, e);
  }, "debug") : Nt = /* @__PURE__ */ i(function() {
  }, "debug");
  Ve.SEMVER_SPEC_VERSION = "2.0.0";
  var Af = 256, Ym = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */
  9007199254740991, _P = 16, Z4e = Af - 6, Hl = Ve.re = [], Ot = Ve.safeRe = [], re = Ve.src = [], K = Ve.tokens = {}, I9 = 0;
  function at(e) {
    K[e] = I9++;
  }
  i(at, "tok");
  var NP = "[a-zA-Z0-9-]", OP = [
    ["\\s", 1],
    ["\\d", Af],
    [NP, Z4e]
  ];
  function wf(e) {
    for (var t = 0; t < OP.length; t++) {
      var r = OP[t][0], s = OP[t][1];
      e = e.split(r + "*").join(r + "{0," + s + "}").split(r + "+").join(r + "{1," + s + "}");
    }
    return e;
  }
  i(wf, "makeSafeRe");
  at("NUMERICIDENTIFIER");
  re[K.NUMERICIDENTIFIER] = "0|[1-9]\\d*";
  at("NUMERICIDENTIFIERLOOSE");
  re[K.NUMERICIDENTIFIERLOOSE] = "\\d+";
  at("NONNUMERICIDENTIFIER");
  re[K.NONNUMERICIDENTIFIER] = "\\d*[a-zA-Z-]" + NP + "*";
  at("MAINVERSION");
  re[K.MAINVERSION] = "(" + re[K.NUMERICIDENTIFIER] + ")\\.(" + re[K.NUMERICIDENTIFIER] + ")\\.(" + re[K.NUMERICIDENTIFIER] + ")";
  at("MAINVERSIONLOOSE");
  re[K.MAINVERSIONLOOSE] = "(" + re[K.NUMERICIDENTIFIERLOOSE] + ")\\.(" + re[K.NUMERICIDENTIFIERLOOSE] + ")\\.(" + re[K.NUMERICIDENTIFIERLOOSE] +
  ")";
  at("PRERELEASEIDENTIFIER");
  re[K.PRERELEASEIDENTIFIER] = "(?:" + re[K.NUMERICIDENTIFIER] + "|" + re[K.NONNUMERICIDENTIFIER] + ")";
  at("PRERELEASEIDENTIFIERLOOSE");
  re[K.PRERELEASEIDENTIFIERLOOSE] = "(?:" + re[K.NUMERICIDENTIFIERLOOSE] + "|" + re[K.NONNUMERICIDENTIFIER] + ")";
  at("PRERELEASE");
  re[K.PRERELEASE] = "(?:-(" + re[K.PRERELEASEIDENTIFIER] + "(?:\\." + re[K.PRERELEASEIDENTIFIER] + ")*))";
  at("PRERELEASELOOSE");
  re[K.PRERELEASELOOSE] = "(?:-?(" + re[K.PRERELEASEIDENTIFIERLOOSE] + "(?:\\." + re[K.PRERELEASEIDENTIFIERLOOSE] + ")*))";
  at("BUILDIDENTIFIER");
  re[K.BUILDIDENTIFIER] = NP + "+";
  at("BUILD");
  re[K.BUILD] = "(?:\\+(" + re[K.BUILDIDENTIFIER] + "(?:\\." + re[K.BUILDIDENTIFIER] + ")*))";
  at("FULL");
  at("FULLPLAIN");
  re[K.FULLPLAIN] = "v?" + re[K.MAINVERSION] + re[K.PRERELEASE] + "?" + re[K.BUILD] + "?";
  re[K.FULL] = "^" + re[K.FULLPLAIN] + "$";
  at("LOOSEPLAIN");
  re[K.LOOSEPLAIN] = "[v=\\s]*" + re[K.MAINVERSIONLOOSE] + re[K.PRERELEASELOOSE] + "?" + re[K.BUILD] + "?";
  at("LOOSE");
  re[K.LOOSE] = "^" + re[K.LOOSEPLAIN] + "$";
  at("GTLT");
  re[K.GTLT] = "((?:<|>)?=?)";
  at("XRANGEIDENTIFIERLOOSE");
  re[K.XRANGEIDENTIFIERLOOSE] = re[K.NUMERICIDENTIFIERLOOSE] + "|x|X|\\*";
  at("XRANGEIDENTIFIER");
  re[K.XRANGEIDENTIFIER] = re[K.NUMERICIDENTIFIER] + "|x|X|\\*";
  at("XRANGEPLAIN");
  re[K.XRANGEPLAIN] = "[v=\\s]*(" + re[K.XRANGEIDENTIFIER] + ")(?:\\.(" + re[K.XRANGEIDENTIFIER] + ")(?:\\.(" + re[K.XRANGEIDENTIFIER] + ")(\
?:" + re[K.PRERELEASE] + ")?" + re[K.BUILD] + "?)?)?";
  at("XRANGEPLAINLOOSE");
  re[K.XRANGEPLAINLOOSE] = "[v=\\s]*(" + re[K.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + re[K.XRANGEIDENTIFIERLOOSE] + ")(?:\\.(" + re[K.XRANGEIDENTIFIERLOOSE] +
  ")(?:" + re[K.PRERELEASELOOSE] + ")?" + re[K.BUILD] + "?)?)?";
  at("XRANGE");
  re[K.XRANGE] = "^" + re[K.GTLT] + "\\s*" + re[K.XRANGEPLAIN] + "$";
  at("XRANGELOOSE");
  re[K.XRANGELOOSE] = "^" + re[K.GTLT] + "\\s*" + re[K.XRANGEPLAINLOOSE] + "$";
  at("COERCE");
  re[K.COERCE] = "(^|[^\\d])(\\d{1," + _P + "})(?:\\.(\\d{1," + _P + "}))?(?:\\.(\\d{1," + _P + "}))?(?:$|[^\\d])";
  at("COERCERTL");
  Hl[K.COERCERTL] = new RegExp(re[K.COERCE], "g");
  Ot[K.COERCERTL] = new RegExp(wf(re[K.COERCE]), "g");
  at("LONETILDE");
  re[K.LONETILDE] = "(?:~>?)";
  at("TILDETRIM");
  re[K.TILDETRIM] = "(\\s*)" + re[K.LONETILDE] + "\\s+";
  Hl[K.TILDETRIM] = new RegExp(re[K.TILDETRIM], "g");
  Ot[K.TILDETRIM] = new RegExp(wf(re[K.TILDETRIM]), "g");
  var e8e = "$1~";
  at("TILDE");
  re[K.TILDE] = "^" + re[K.LONETILDE] + re[K.XRANGEPLAIN] + "$";
  at("TILDELOOSE");
  re[K.TILDELOOSE] = "^" + re[K.LONETILDE] + re[K.XRANGEPLAINLOOSE] + "$";
  at("LONECARET");
  re[K.LONECARET] = "(?:\\^)";
  at("CARETTRIM");
  re[K.CARETTRIM] = "(\\s*)" + re[K.LONECARET] + "\\s+";
  Hl[K.CARETTRIM] = new RegExp(re[K.CARETTRIM], "g");
  Ot[K.CARETTRIM] = new RegExp(wf(re[K.CARETTRIM]), "g");
  var t8e = "$1^";
  at("CARET");
  re[K.CARET] = "^" + re[K.LONECARET] + re[K.XRANGEPLAIN] + "$";
  at("CARETLOOSE");
  re[K.CARETLOOSE] = "^" + re[K.LONECARET] + re[K.XRANGEPLAINLOOSE] + "$";
  at("COMPARATORLOOSE");
  re[K.COMPARATORLOOSE] = "^" + re[K.GTLT] + "\\s*(" + re[K.LOOSEPLAIN] + ")$|^$";
  at("COMPARATOR");
  re[K.COMPARATOR] = "^" + re[K.GTLT] + "\\s*(" + re[K.FULLPLAIN] + ")$|^$";
  at("COMPARATORTRIM");
  re[K.COMPARATORTRIM] = "(\\s*)" + re[K.GTLT] + "\\s*(" + re[K.LOOSEPLAIN] + "|" + re[K.XRANGEPLAIN] + ")";
  Hl[K.COMPARATORTRIM] = new RegExp(re[K.COMPARATORTRIM], "g");
  Ot[K.COMPARATORTRIM] = new RegExp(wf(re[K.COMPARATORTRIM]), "g");
  var r8e = "$1$2$3";
  at("HYPHENRANGE");
  re[K.HYPHENRANGE] = "^\\s*(" + re[K.XRANGEPLAIN] + ")\\s+-\\s+(" + re[K.XRANGEPLAIN] + ")\\s*$";
  at("HYPHENRANGELOOSE");
  re[K.HYPHENRANGELOOSE] = "^\\s*(" + re[K.XRANGEPLAINLOOSE] + ")\\s+-\\s+(" + re[K.XRANGEPLAINLOOSE] + ")\\s*$";
  at("STAR");
  re[K.STAR] = "(<|>)?=?\\s*\\*";
  for (Hn = 0; Hn < I9; Hn++)
    Nt(Hn, re[Hn]), Hl[Hn] || (Hl[Hn] = new RegExp(re[Hn]), Ot[Hn] = new RegExp(wf(re[Hn])));
  var Hn;
  Ve.parse = xo;
  function xo(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Ze)
      return e;
    if (typeof e != "string" || e.length > Af)
      return null;
    var r = t.loose ? Ot[K.LOOSE] : Ot[K.FULL];
    if (!r.test(e))
      return null;
    try {
      return new Ze(e, t);
    } catch {
      return null;
    }
  }
  i(xo, "parse");
  Ve.valid = s8e;
  function s8e(e, t) {
    var r = xo(e, t);
    return r ? r.version : null;
  }
  i(s8e, "valid");
  Ve.clean = n8e;
  function n8e(e, t) {
    var r = xo(e.trim().replace(/^[=v]+/, ""), t);
    return r ? r.version : null;
  }
  i(n8e, "clean");
  Ve.SemVer = Ze;
  function Ze(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof Ze) {
      if (e.loose === t.loose)
        return e;
      e = e.version;
    } else if (typeof e != "string")
      throw new TypeError("Invalid Version: " + e);
    if (e.length > Af)
      throw new TypeError("version is longer than " + Af + " characters");
    if (!(this instanceof Ze))
      return new Ze(e, t);
    Nt("SemVer", e, t), this.options = t, this.loose = !!t.loose;
    var r = e.trim().match(t.loose ? Ot[K.LOOSE] : Ot[K.FULL]);
    if (!r)
      throw new TypeError("Invalid Version: " + e);
    if (this.raw = e, this.major = +r[1], this.minor = +r[2], this.patch = +r[3], this.major > Ym || this.major < 0)
      throw new TypeError("Invalid major version");
    if (this.minor > Ym || this.minor < 0)
      throw new TypeError("Invalid minor version");
    if (this.patch > Ym || this.patch < 0)
      throw new TypeError("Invalid patch version");
    r[4] ? this.prerelease = r[4].split(".").map(function(s) {
      if (/^[0-9]+$/.test(s)) {
        var n = +s;
        if (n >= 0 && n < Ym)
          return n;
      }
      return s;
    }) : this.prerelease = [], this.build = r[5] ? r[5].split(".") : [], this.format();
  }
  i(Ze, "SemVer");
  Ze.prototype.format = function() {
    return this.version = this.major + "." + this.minor + "." + this.patch, this.prerelease.length && (this.version += "-" + this.prerelease.
    join(".")), this.version;
  };
  Ze.prototype.toString = function() {
    return this.version;
  };
  Ze.prototype.compare = function(e) {
    return Nt("SemVer.compare", this.version, this.options, e), e instanceof Ze || (e = new Ze(e, this.options)), this.compareMain(e) || this.
    comparePre(e);
  };
  Ze.prototype.compareMain = function(e) {
    return e instanceof Ze || (e = new Ze(e, this.options)), To(this.major, e.major) || To(this.minor, e.minor) || To(this.patch, e.patch);
  };
  Ze.prototype.comparePre = function(e) {
    if (e instanceof Ze || (e = new Ze(e, this.options)), this.prerelease.length && !e.prerelease.length)
      return -1;
    if (!this.prerelease.length && e.prerelease.length)
      return 1;
    if (!this.prerelease.length && !e.prerelease.length)
      return 0;
    var t = 0;
    do {
      var r = this.prerelease[t], s = e.prerelease[t];
      if (Nt("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return To(r, s);
    } while (++t);
  };
  Ze.prototype.compareBuild = function(e) {
    e instanceof Ze || (e = new Ze(e, this.options));
    var t = 0;
    do {
      var r = this.build[t], s = e.build[t];
      if (Nt("prerelease compare", t, r, s), r === void 0 && s === void 0)
        return 0;
      if (s === void 0)
        return 1;
      if (r === void 0)
        return -1;
      if (r === s)
        continue;
      return To(r, s);
    } while (++t);
  };
  Ze.prototype.inc = function(e, t) {
    switch (e) {
      case "premajor":
        this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", t);
        break;
      case "preminor":
        this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", t);
        break;
      case "prepatch":
        this.prerelease.length = 0, this.inc("patch", t), this.inc("pre", t);
        break;
      case "prerelease":
        this.prerelease.length === 0 && this.inc("patch", t), this.inc("pre", t);
        break;
      case "major":
        (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease =
        [];
        break;
      case "minor":
        (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = [];
        break;
      case "patch":
        this.prerelease.length === 0 && this.patch++, this.prerelease = [];
        break;
      case "pre":
        if (this.prerelease.length === 0)
          this.prerelease = [0];
        else {
          for (var r = this.prerelease.length; --r >= 0; )
            typeof this.prerelease[r] == "number" && (this.prerelease[r]++, r = -2);
          r === -1 && this.prerelease.push(0);
        }
        t && (this.prerelease[0] === t ? isNaN(this.prerelease[1]) && (this.prerelease = [t, 0]) : this.prerelease = [t, 0]);
        break;
      default:
        throw new Error("invalid increment argument: " + e);
    }
    return this.format(), this.raw = this.version, this;
  };
  Ve.inc = i8e;
  function i8e(e, t, r, s) {
    typeof r == "string" && (s = r, r = void 0);
    try {
      return new Ze(e, r).inc(t, s).version;
    } catch {
      return null;
    }
  }
  i(i8e, "inc");
  Ve.diff = a8e;
  function a8e(e, t) {
    if (RP(e, t))
      return null;
    var r = xo(e), s = xo(t), n = "";
    if (r.prerelease.length || s.prerelease.length) {
      n = "pre";
      var a = "prerelease";
    }
    for (var o in r)
      if ((o === "major" || o === "minor" || o === "patch") && r[o] !== s[o])
        return n + o;
    return a;
  }
  i(a8e, "diff");
  Ve.compareIdentifiers = To;
  var w9 = /^[0-9]+$/;
  function To(e, t) {
    var r = w9.test(e), s = w9.test(t);
    return r && s && (e = +e, t = +t), e === t ? 0 : r && !s ? -1 : s && !r ? 1 : e < t ? -1 : 1;
  }
  i(To, "compareIdentifiers");
  Ve.rcompareIdentifiers = o8e;
  function o8e(e, t) {
    return To(t, e);
  }
  i(o8e, "rcompareIdentifiers");
  Ve.major = l8e;
  function l8e(e, t) {
    return new Ze(e, t).major;
  }
  i(l8e, "major");
  Ve.minor = u8e;
  function u8e(e, t) {
    return new Ze(e, t).minor;
  }
  i(u8e, "minor");
  Ve.patch = c8e;
  function c8e(e, t) {
    return new Ze(e, t).patch;
  }
  i(c8e, "patch");
  Ve.compare = _i;
  function _i(e, t, r) {
    return new Ze(e, r).compare(new Ze(t, r));
  }
  i(_i, "compare");
  Ve.compareLoose = f8e;
  function f8e(e, t) {
    return _i(e, t, !0);
  }
  i(f8e, "compareLoose");
  Ve.compareBuild = p8e;
  function p8e(e, t, r) {
    var s = new Ze(e, r), n = new Ze(t, r);
    return s.compare(n) || s.compareBuild(n);
  }
  i(p8e, "compareBuild");
  Ve.rcompare = d8e;
  function d8e(e, t, r) {
    return _i(t, e, r);
  }
  i(d8e, "rcompare");
  Ve.sort = h8e;
  function h8e(e, t) {
    return e.sort(function(r, s) {
      return Ve.compareBuild(r, s, t);
    });
  }
  i(h8e, "sort");
  Ve.rsort = m8e;
  function m8e(e, t) {
    return e.sort(function(r, s) {
      return Ve.compareBuild(s, r, t);
    });
  }
  i(m8e, "rsort");
  Ve.gt = Cf;
  function Cf(e, t, r) {
    return _i(e, t, r) > 0;
  }
  i(Cf, "gt");
  Ve.lt = Xm;
  function Xm(e, t, r) {
    return _i(e, t, r) < 0;
  }
  i(Xm, "lt");
  Ve.eq = RP;
  function RP(e, t, r) {
    return _i(e, t, r) === 0;
  }
  i(RP, "eq");
  Ve.neq = _9;
  function _9(e, t, r) {
    return _i(e, t, r) !== 0;
  }
  i(_9, "neq");
  Ve.gte = kP;
  function kP(e, t, r) {
    return _i(e, t, r) >= 0;
  }
  i(kP, "gte");
  Ve.lte = FP;
  function FP(e, t, r) {
    return _i(e, t, r) <= 0;
  }
  i(FP, "lte");
  Ve.cmp = zm;
  function zm(e, t, r, s) {
    switch (t) {
      case "===":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e === r;
      case "!==":
        return typeof e == "object" && (e = e.version), typeof r == "object" && (r = r.version), e !== r;
      case "":
      case "=":
      case "==":
        return RP(e, r, s);
      case "!=":
        return _9(e, r, s);
      case ">":
        return Cf(e, r, s);
      case ">=":
        return kP(e, r, s);
      case "<":
        return Xm(e, r, s);
      case "<=":
        return FP(e, r, s);
      default:
        throw new TypeError("Invalid operator: " + t);
    }
  }
  i(zm, "cmp");
  Ve.Comparator = zs;
  function zs(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof zs) {
      if (e.loose === !!t.loose)
        return e;
      e = e.value;
    }
    if (!(this instanceof zs))
      return new zs(e, t);
    e = e.trim().split(/\s+/).join(" "), Nt("comparator", e, t), this.options = t, this.loose = !!t.loose, this.parse(e), this.semver === Gl ?
    this.value = "" : this.value = this.operator + this.semver.version, Nt("comp", this);
  }
  i(zs, "Comparator");
  var Gl = {};
  zs.prototype.parse = function(e) {
    var t = this.options.loose ? Ot[K.COMPARATORLOOSE] : Ot[K.COMPARATOR], r = e.match(t);
    if (!r)
      throw new TypeError("Invalid comparator: " + e);
    this.operator = r[1] !== void 0 ? r[1] : "", this.operator === "=" && (this.operator = ""), r[2] ? this.semver = new Ze(r[2], this.options.
    loose) : this.semver = Gl;
  };
  zs.prototype.toString = function() {
    return this.value;
  };
  zs.prototype.test = function(e) {
    if (Nt("Comparator.test", e, this.options.loose), this.semver === Gl || e === Gl)
      return !0;
    if (typeof e == "string")
      try {
        e = new Ze(e, this.options);
      } catch {
        return !1;
      }
    return zm(e, this.operator, this.semver, this.options);
  };
  zs.prototype.intersects = function(e, t) {
    if (!(e instanceof zs))
      throw new TypeError("a Comparator is required");
    (!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    });
    var r;
    if (this.operator === "")
      return this.value === "" ? !0 : (r = new cr(e.value, t), Jm(this.value, r, t));
    if (e.operator === "")
      return e.value === "" ? !0 : (r = new cr(this.value, t), Jm(e.semver, r, t));
    var s = (this.operator === ">=" || this.operator === ">") && (e.operator === ">=" || e.operator === ">"), n = (this.operator === "<=" ||
    this.operator === "<") && (e.operator === "<=" || e.operator === "<"), a = this.semver.version === e.semver.version, o = (this.operator ===
    ">=" || this.operator === "<=") && (e.operator === ">=" || e.operator === "<="), l = zm(this.semver, "<", e.semver, t) && (this.operator ===
    ">=" || this.operator === ">") && (e.operator === "<=" || e.operator === "<"), u = zm(this.semver, ">", e.semver, t) && (this.operator ===
    "<=" || this.operator === "<") && (e.operator === ">=" || e.operator === ">");
    return s || n || a && o || l || u;
  };
  Ve.Range = cr;
  function cr(e, t) {
    if ((!t || typeof t != "object") && (t = {
      loose: !!t,
      includePrerelease: !1
    }), e instanceof cr)
      return e.loose === !!t.loose && e.includePrerelease === !!t.includePrerelease ? e : new cr(e.raw, t);
    if (e instanceof zs)
      return new cr(e.value, t);
    if (!(this instanceof cr))
      return new cr(e, t);
    if (this.options = t, this.loose = !!t.loose, this.includePrerelease = !!t.includePrerelease, this.raw = e.trim().split(/\s+/).join(" "),
    this.set = this.raw.split("||").map(function(r) {
      return this.parseRange(r.trim());
    }, this).filter(function(r) {
      return r.length;
    }), !this.set.length)
      throw new TypeError("Invalid SemVer Range: " + this.raw);
    this.format();
  }
  i(cr, "Range");
  cr.prototype.format = function() {
    return this.range = this.set.map(function(e) {
      return e.join(" ").trim();
    }).join("||").trim(), this.range;
  };
  cr.prototype.toString = function() {
    return this.range;
  };
  cr.prototype.parseRange = function(e) {
    var t = this.options.loose, r = t ? Ot[K.HYPHENRANGELOOSE] : Ot[K.HYPHENRANGE];
    e = e.replace(r, A8e), Nt("hyphen replace", e), e = e.replace(Ot[K.COMPARATORTRIM], r8e), Nt("comparator trim", e, Ot[K.COMPARATORTRIM]),
    e = e.replace(Ot[K.TILDETRIM], e8e), e = e.replace(Ot[K.CARETTRIM], t8e), e = e.split(/\s+/).join(" ");
    var s = t ? Ot[K.COMPARATORLOOSE] : Ot[K.COMPARATOR], n = e.split(" ").map(function(a) {
      return g8e(a, this.options);
    }, this).join(" ").split(/\s+/);
    return this.options.loose && (n = n.filter(function(a) {
      return !!a.match(s);
    })), n = n.map(function(a) {
      return new zs(a, this.options);
    }, this), n;
  };
  cr.prototype.intersects = function(e, t) {
    if (!(e instanceof cr))
      throw new TypeError("a Range is required");
    return this.set.some(function(r) {
      return D9(r, t) && e.set.some(function(s) {
        return D9(s, t) && r.every(function(n) {
          return s.every(function(a) {
            return n.intersects(a, t);
          });
        });
      });
    });
  };
  function D9(e, t) {
    for (var r = !0, s = e.slice(), n = s.pop(); r && s.length; )
      r = s.every(function(a) {
        return n.intersects(a, t);
      }), n = s.pop();
    return r;
  }
  i(D9, "isSatisfiable");
  Ve.toComparators = y8e;
  function y8e(e, t) {
    return new cr(e, t).set.map(function(r) {
      return r.map(function(s) {
        return s.value;
      }).join(" ").trim().split(" ");
    });
  }
  i(y8e, "toComparators");
  function g8e(e, t) {
    return Nt("comp", e, t), e = v8e(e, t), Nt("caret", e), e = b8e(e, t), Nt("tildes", e), e = T8e(e, t), Nt("xrange", e), e = P8e(e, t), Nt(
    "stars", e), e;
  }
  i(g8e, "parseComparator");
  function hs(e) {
    return !e || e.toLowerCase() === "x" || e === "*";
  }
  i(hs, "isX");
  function b8e(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return E8e(r, t);
    }).join(" ");
  }
  i(b8e, "replaceTildes");
  function E8e(e, t) {
    var r = t.loose ? Ot[K.TILDELOOSE] : Ot[K.TILDE];
    return e.replace(r, function(s, n, a, o, l) {
      Nt("tilde", e, s, n, a, o, l);
      var u;
      return hs(n) ? u = "" : hs(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : hs(o) ? u = ">=" + n + "." + a + ".0 <" + n + "." + (+a +
      1) + ".0" : l ? (Nt("replaceTilde pr", l), u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + (+a + 1) + ".0") : u = ">=" +
      n + "." + a + "." + o + " <" + n + "." + (+a + 1) + ".0", Nt("tilde return", u), u;
    });
  }
  i(E8e, "replaceTilde");
  function v8e(e, t) {
    return e.trim().split(/\s+/).map(function(r) {
      return S8e(r, t);
    }).join(" ");
  }
  i(v8e, "replaceCarets");
  function S8e(e, t) {
    Nt("caret", e, t);
    var r = t.loose ? Ot[K.CARETLOOSE] : Ot[K.CARET];
    return e.replace(r, function(s, n, a, o, l) {
      Nt("caret", e, s, n, a, o, l);
      var u;
      return hs(n) ? u = "" : hs(a) ? u = ">=" + n + ".0.0 <" + (+n + 1) + ".0.0" : hs(o) ? n === "0" ? u = ">=" + n + "." + a + ".0 <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + ".0 <" + (+n + 1) + ".0.0" : l ? (Nt("replaceCaret pr", l), n === "0" ? a === "0" ? u =
      ">=" + n + "." + a + "." + o + "-" + l + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + n +
      "." + (+a + 1) + ".0" : u = ">=" + n + "." + a + "." + o + "-" + l + " <" + (+n + 1) + ".0.0") : (Nt("no pr"), n === "0" ? a === "0" ?
      u = ">=" + n + "." + a + "." + o + " <" + n + "." + a + "." + (+o + 1) : u = ">=" + n + "." + a + "." + o + " <" + n + "." + (+a + 1) +
      ".0" : u = ">=" + n + "." + a + "." + o + " <" + (+n + 1) + ".0.0"), Nt("caret return", u), u;
    });
  }
  i(S8e, "replaceCaret");
  function T8e(e, t) {
    return Nt("replaceXRanges", e, t), e.split(/\s+/).map(function(r) {
      return x8e(r, t);
    }).join(" ");
  }
  i(T8e, "replaceXRanges");
  function x8e(e, t) {
    e = e.trim();
    var r = t.loose ? Ot[K.XRANGELOOSE] : Ot[K.XRANGE];
    return e.replace(r, function(s, n, a, o, l, u) {
      Nt("xRange", e, s, n, a, o, l, u);
      var c = hs(a), f = c || hs(o), p = f || hs(l), d = p;
      return n === "=" && d && (n = ""), u = t.includePrerelease ? "-0" : "", c ? n === ">" || n === "<" ? s = "<0.0.0-0" : s = "*" : n && d ?
      (f && (o = 0), l = 0, n === ">" ? (n = ">=", f ? (a = +a + 1, o = 0, l = 0) : (o = +o + 1, l = 0)) : n === "<=" && (n = "<", f ? a = +a +
      1 : o = +o + 1), s = n + a + "." + o + "." + l + u) : f ? s = ">=" + a + ".0.0" + u + " <" + (+a + 1) + ".0.0" + u : p && (s = ">=" + a +
      "." + o + ".0" + u + " <" + a + "." + (+o + 1) + ".0" + u), Nt("xRange return", s), s;
    });
  }
  i(x8e, "replaceXRange");
  function P8e(e, t) {
    return Nt("replaceStars", e, t), e.trim().replace(Ot[K.STAR], "");
  }
  i(P8e, "replaceStars");
  function A8e(e, t, r, s, n, a, o, l, u, c, f, p, d) {
    return hs(r) ? t = "" : hs(s) ? t = ">=" + r + ".0.0" : hs(n) ? t = ">=" + r + "." + s + ".0" : t = ">=" + t, hs(u) ? l = "" : hs(c) ? l =
    "<" + (+u + 1) + ".0.0" : hs(f) ? l = "<" + u + "." + (+c + 1) + ".0" : p ? l = "<=" + u + "." + c + "." + f + "-" + p : l = "<=" + l, (t +
    " " + l).trim();
  }
  i(A8e, "hyphenReplace");
  cr.prototype.test = function(e) {
    if (!e)
      return !1;
    if (typeof e == "string")
      try {
        e = new Ze(e, this.options);
      } catch {
        return !1;
      }
    for (var t = 0; t < this.set.length; t++)
      if (C8e(this.set[t], e, this.options))
        return !0;
    return !1;
  };
  function C8e(e, t, r) {
    for (var s = 0; s < e.length; s++)
      if (!e[s].test(t))
        return !1;
    if (t.prerelease.length && !r.includePrerelease) {
      for (s = 0; s < e.length; s++)
        if (Nt(e[s].semver), e[s].semver !== Gl && e[s].semver.prerelease.length > 0) {
          var n = e[s].semver;
          if (n.major === t.major && n.minor === t.minor && n.patch === t.patch)
            return !0;
        }
      return !1;
    }
    return !0;
  }
  i(C8e, "testSet");
  Ve.satisfies = Jm;
  function Jm(e, t, r) {
    try {
      t = new cr(t, r);
    } catch {
      return !1;
    }
    return t.test(e);
  }
  i(Jm, "satisfies");
  Ve.maxSatisfying = w8e;
  function w8e(e, t, r) {
    var s = null, n = null;
    try {
      var a = new cr(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === -1) && (s = o, n = new Ze(s, r));
    }), s;
  }
  i(w8e, "maxSatisfying");
  Ve.minSatisfying = D8e;
  function D8e(e, t, r) {
    var s = null, n = null;
    try {
      var a = new cr(t, r);
    } catch {
      return null;
    }
    return e.forEach(function(o) {
      a.test(o) && (!s || n.compare(o) === 1) && (s = o, n = new Ze(s, r));
    }), s;
  }
  i(D8e, "minSatisfying");
  Ve.minVersion = I8e;
  function I8e(e, t) {
    e = new cr(e, t);
    var r = new Ze("0.0.0");
    if (e.test(r) || (r = new Ze("0.0.0-0"), e.test(r)))
      return r;
    r = null;
    for (var s = 0; s < e.set.length; ++s) {
      var n = e.set[s];
      n.forEach(function(a) {
        var o = new Ze(a.semver.version);
        switch (a.operator) {
          case ">":
            o.prerelease.length === 0 ? o.patch++ : o.prerelease.push(0), o.raw = o.format();
          case "":
          case ">=":
            (!r || Cf(r, o)) && (r = o);
            break;
          case "<":
          case "<=":
            break;
          default:
            throw new Error("Unexpected operation: " + a.operator);
        }
      });
    }
    return r && e.test(r) ? r : null;
  }
  i(I8e, "minVersion");
  Ve.validRange = _8e;
  function _8e(e, t) {
    try {
      return new cr(e, t).range || "*";
    } catch {
      return null;
    }
  }
  i(_8e, "validRange");
  Ve.ltr = O8e;
  function O8e(e, t, r) {
    return LP(e, t, "<", r);
  }
  i(O8e, "ltr");
  Ve.gtr = N8e;
  function N8e(e, t, r) {
    return LP(e, t, ">", r);
  }
  i(N8e, "gtr");
  Ve.outside = LP;
  function LP(e, t, r, s) {
    e = new Ze(e, s), t = new cr(t, s);
    var n, a, o, l, u;
    switch (r) {
      case ">":
        n = Cf, a = FP, o = Xm, l = ">", u = ">=";
        break;
      case "<":
        n = Xm, a = kP, o = Cf, l = "<", u = "<=";
        break;
      default:
        throw new TypeError('Must provide a hilo val of "<" or ">"');
    }
    if (Jm(e, t, s))
      return !1;
    for (var c = 0; c < t.set.length; ++c) {
      var f = t.set[c], p = null, d = null;
      if (f.forEach(function(m) {
        m.semver === Gl && (m = new zs(">=0.0.0")), p = p || m, d = d || m, n(m.semver, p.semver, s) ? p = m : o(m.semver, d.semver, s) && (d =
        m);
      }), p.operator === l || p.operator === u || (!d.operator || d.operator === l) && a(e, d.semver))
        return !1;
      if (d.operator === u && o(e, d.semver))
        return !1;
    }
    return !0;
  }
  i(LP, "outside");
  Ve.prerelease = R8e;
  function R8e(e, t) {
    var r = xo(e, t);
    return r && r.prerelease.length ? r.prerelease : null;
  }
  i(R8e, "prerelease");
  Ve.intersects = k8e;
  function k8e(e, t, r) {
    return e = new cr(e, r), t = new cr(t, r), e.intersects(t);
  }
  i(k8e, "intersects");
  Ve.coerce = F8e;
  function F8e(e, t) {
    if (e instanceof Ze)
      return e;
    if (typeof e == "number" && (e = String(e)), typeof e != "string")
      return null;
    t = t || {};
    var r = null;
    if (!t.rtl)
      r = e.match(Ot[K.COERCE]);
    else {
      for (var s; (s = Ot[K.COERCERTL].exec(e)) && (!r || r.index + r[0].length !== e.length); )
        (!r || s.index + s[0].length !== r.index + r[0].length) && (r = s), Ot[K.COERCERTL].lastIndex = s.index + s[1].length + s[2].length;
      Ot[K.COERCERTL].lastIndex = -1;
    }
    return r === null ? null : xo(r[2] + "." + (r[3] || "0") + "." + (r[4] || "0"), t);
  }
  i(F8e, "coerce");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/decorators-2018-09.js
var MP = y((Df) => {
  "use strict";
  Object.defineProperty(Df, "__esModule", {
    value: !0
  });
  Df.buildDecoratedClass = V8e;
  Df.hasDecorators = M8e;
  Df.hasOwnDecorators = BP;
  var jt = mr(), L8e = Um(), B8e = Vd();
  function BP(e) {
    var t;
    return !!((t = e.decorators) != null && t.length);
  }
  i(BP, "hasOwnDecorators");
  function M8e(e) {
    return BP(e) || e.body.body.some(BP);
  }
  i(M8e, "hasDecorators");
  function Kl(e, t) {
    return t ? jt.types.objectProperty(jt.types.identifier(e), t) : null;
  }
  i(Kl, "prop");
  function j8e(e, t) {
    return jt.types.objectMethod("method", jt.types.identifier(e), [], jt.types.blockStatement(t));
  }
  i(j8e, "method");
  function R9(e) {
    let t;
    return e.decorators && e.decorators.length > 0 && (t = jt.types.arrayExpression(e.decorators.map((r) => r.expression))), e.decorators = void 0,
    t;
  }
  i(R9, "takeDecorators");
  function q8e(e) {
    return e.computed ? e.key : jt.types.isIdentifier(e.key) ? jt.types.stringLiteral(e.key.name) : jt.types.stringLiteral(String(e.key.value));
  }
  i(q8e, "getKey");
  function $8e(e, t, r, s) {
    let n = s.isClassMethod();
    if (s.isPrivate())
      throw s.buildCodeFrameError(`Private ${n ? "methods" : "fields"} in decorated classes are not supported yet.`);
    if (s.node.type === "ClassAccessorProperty")
      throw s.buildCodeFrameError('Accessor properties are not supported in 2018-09 decorator transform, please specify { "version": "2021-1\
2" } instead.');
    if (s.node.type === "StaticBlock")
      throw s.buildCodeFrameError('Static blocks are not supported in 2018-09 decorator transform, please specify { "version": "2021-12" } i\
nstead.');
    let {
      node: a,
      scope: o
    } = s;
    s.isTSDeclareMethod() || new L8e.default({
      methodPath: s,
      objectRef: t,
      superRef: r,
      file: e,
      refToPreserve: t
    }).replace();
    let l = [Kl("kind", jt.types.stringLiteral(jt.types.isClassMethod(a) ? a.kind : "field")), Kl("decorators", R9(a)), Kl("static", a.static &&
    jt.types.booleanLiteral(!0)), Kl("key", q8e(a))].filter(Boolean);
    if (jt.types.isClassMethod(a)) {
      let u = a.computed ? null : a.key, c = jt.types.toExpression(a);
      l.push(Kl("value", (0, B8e.default)({
        node: c,
        id: u,
        scope: o
      }) || c));
    } else jt.types.isClassProperty(a) && a.value ? l.push(j8e("value", jt.template.statements.ast`return ${a.value}`)) : l.push(Kl("value",
    o.buildUndefinedNode()));
    return s.remove(), jt.types.objectExpression(l);
  }
  i($8e, "extractElementDescriptor");
  function U8e(e) {
    return e.addHelper("decorate");
  }
  i(U8e, "addDecorateHelper");
  function V8e(e, t, r, s) {
    let {
      node: n,
      scope: a
    } = t, o = a.generateUidIdentifier("initialize"), l = n.id && t.isDeclaration(), u = t.isInStrictMode(), {
      superClass: c
    } = n;
    n.type = "ClassDeclaration", n.id || (n.id = jt.types.cloneNode(e));
    let f;
    c && (f = a.generateUidIdentifierBasedOnNode(n.superClass, "super"), n.superClass = f);
    let p = R9(n), d = jt.types.arrayExpression(r.filter((g) => !g.node.abstract && g.node.type !== "TSIndexSignature").map((g) => $8e(s, n.
    id, f, g))), m = jt.template.expression.ast`
    ${U8e(s)}(
      ${p || jt.types.nullLiteral()},
      function (${o}, ${c ? jt.types.cloneNode(f) : null}) {
        ${n}
        return { F: ${jt.types.cloneNode(n.id)}, d: ${d} };
      },
      ${c}
    )
  `;
    u || m.arguments[1].body.directives.push(jt.types.directive(jt.types.directiveLiteral("use strict")));
    let b = m, h = "arguments.1.body.body.0";
    return l && (b = jt.template.statement.ast`let ${e} = ${m}`, h = "declarations.0.init." + h), {
      instanceNodes: [jt.template.statement.ast`
        ${jt.types.cloneNode(o)}(this)
      `],
      wrapClass(g) {
        return g.replaceWith(b), g.get(h);
      }
    };
  }
  i(V8e, "buildDecoratedClass");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/features.js
var B9 = y((Po) => {
  "use strict";
  Object.defineProperty(Po, "__esModule", {
    value: !0
  });
  Po.FEATURES = void 0;
  Po.enableFeature = W8e;
  Po.isLoose = $P;
  Po.shouldTransform = H8e;
  var k9 = MP(), Oi = Po.FEATURES = Object.freeze({
    fields: 2,
    privateMethods: 4,
    decorators: 8,
    privateIn: 16,
    staticBlocks: 32
  }), F9 = /* @__PURE__ */ new Map([[Oi.fields, "@babel/plugin-transform-class-properties"], [Oi.privateMethods, "@babel/plugin-transform-pr\
ivate-methods"], [Oi.privateIn, "@babel/plugin-transform-private-property-in-object"]]), jP = "@babel/plugin-class-features/featuresKey", If = "\
@babel/plugin-class-features/looseKey";
  Aa = "@babel/plugin-class-features/looseLowPriorityKey/#__internal__@babel/preset-env__please-overwrite-loose-instead-of-throwing";
  var Aa;
  qP = /* @__PURE__ */ i(function(e, t) {
    return !!(e.get(Aa) & t);
  }, "canIgnoreLoose");
  var qP;
  function W8e(e, t, r) {
    (!Ni(e, t) || qP(e, t)) && (e.set(jP, e.get(jP) | t), r === "#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-\
an-error" ? (Qm(e, t, !0), e.set(Aa, e.get(Aa) | t)) : r === "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-\
error" ? (Qm(e, t, !1), e.set(Aa, e.get(Aa) | t)) : Qm(e, t, r));
    let s;
    for (let [a, o] of F9) {
      if (!Ni(e, a) || qP(e, a)) continue;
      let l = $P(e, a);
      if (s === !l)
        throw new Error(`'loose' mode configuration must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-p\
rivate-methods and @babel/plugin-transform-private-property-in-object (when they are enabled).

` + L9(e));
      s = l;
      var n = o;
    }
    if (s !== void 0)
      for (let [a, o] of F9)
        Ni(e, a) && $P(e, a) !== s && (Qm(e, a, s), console.warn(`Though the "loose" option was set to "${!s}" in your @babel/preset-env con\
fig, it will not be used for ${o} since the "loose" mode option was set to "${s}" for ${n}.
The "loose" option must be the same for @babel/plugin-transform-class-properties, @babel/plugin-transform-private-methods and @babel/plugin-\
transform-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["${o}", { "loose": ${s} }]
to the "plugins" section of your Babel config.

` + L9(e)));
  }
  i(W8e, "enableFeature");
  function L9(e) {
    let {
      filename: t
    } = e.opts;
    return (!t || t === "unknown") && (t = "[name of the input file]"), `If you already set the same 'loose' mode for these plugins in your \
config, it's possible that they are enabled multiple times with different options.
You can re-run Babel with the BABEL_SHOW_CONFIG_FOR environment variable to show the loaded configuration:
	npx cross-env BABEL_SHOW_CONFIG_FOR=${t} <your build command>
See https://babeljs.io/docs/configuration#print-effective-configs for more info.`;
  }
  i(L9, "getBabelShowConfigForHint");
  function Ni(e, t) {
    return !!(e.get(jP) & t);
  }
  i(Ni, "hasFeature");
  function $P(e, t) {
    return !!(e.get(If) & t);
  }
  i($P, "isLoose");
  function Qm(e, t, r) {
    r ? e.set(If, e.get(If) | t) : e.set(If, e.get(If) & ~t), e.set(Aa, e.get(Aa) & ~t);
  }
  i(Qm, "setLoose");
  function H8e(e, t) {
    let r = null, s = null, n = null, a = null, o = null;
    (0, k9.hasOwnDecorators)(e.node) && (r = e.get("decorators.0"));
    for (let l of e.get("body.body"))
      !r && (0, k9.hasOwnDecorators)(l.node) && (r = l.get("decorators.0")), !s && l.isClassProperty() && (s = l), !n && l.isClassPrivateProperty() &&
      (n = l), !a && l.isClassPrivateMethod != null && l.isClassPrivateMethod() && (a = l), !o && l.isStaticBlock != null && l.isStaticBlock() &&
      (o = l);
    if (r && n)
      throw n.buildCodeFrameError("Private fields in decorated classes are not supported yet.");
    if (r && a)
      throw a.buildCodeFrameError("Private methods in decorated classes are not supported yet.");
    if (r && !Ni(t, Oi.decorators))
      throw e.buildCodeFrameError(`Decorators are not enabled.
If you are using ["@babel/plugin-proposal-decorators", { "version": "legacy" }], make sure it comes *before* "@babel/plugin-transform-class-\
properties" and enable loose mode, like so:
	["@babel/plugin-proposal-decorators", { "version": "legacy" }]
	["@babel/plugin-transform-class-properties", { "loose": true }]`);
    if (a && !Ni(t, Oi.privateMethods))
      throw a.buildCodeFrameError("Class private methods are not enabled. Please add `@babel/plugin-transform-private-methods` to your confi\
guration.");
    if ((s || n) && !Ni(t, Oi.fields) && !Ni(t, Oi.privateMethods))
      throw e.buildCodeFrameError("Class fields are not enabled. Please add `@babel/plugin-transform-class-properties` to your configuration\
.");
    if (o && !Ni(t, Oi.staticBlocks))
      throw e.buildCodeFrameError("Static class blocks are not enabled. Please add `@babel/plugin-transform-class-static-block` to your conf\
iguration.");
    return !!(r || a || o || (s || n) && Ni(t, Oi.fields));
  }
  i(H8e, "shouldTransform");
});

// ../node_modules/@babel/helper-create-class-features-plugin/lib/index.js
var M9 = y((Co) => {
  "use strict";
  Object.defineProperty(Co, "__esModule", {
    value: !0
  });
  Object.defineProperty(Co, "FEATURES", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Yl.FEATURES;
    }, "get")
  });
  Object.defineProperty(Co, "buildCheckInRHS", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return _f.buildCheckInRHS;
    }, "get")
  });
  Co.createClassFeaturePlugin = J8e;
  Object.defineProperty(Co, "enableFeature", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Yl.enableFeature;
    }, "get")
  });
  Object.defineProperty(Co, "injectInitialization", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return WP.injectInitialization;
    }, "get")
  });
  var UP = mr(), G8e = Vd(), K8e = tc(), Y8e = C9(), X8e = N9(), _f = TP(), VP = MP(), WP = xP(), Yl = B9(), z8e = bP(), Ao = "@babel/plugin\
-class-features/version";
  function J8e({
    name: e,
    feature: t,
    loose: r,
    manipulateOptions: s,
    api: n,
    inherits: a,
    decoratorVersion: o
  }) {
    var l;
    if (t & Yl.FEATURES.decorators && (o === "2023-11" || o === "2023-05" || o === "2023-01" || o === "2022-03" || o === "2021-12"))
      return (0, Y8e.default)(n, {
        loose: r
      }, o, a);
    {
      var u;
      (u = n) != null || (n = {
        assumption: /* @__PURE__ */ i(() => {
        }, "assumption")
      });
    }
    let c = n.assumption("setPublicClassFields"), f = n.assumption("privateFieldsAsSymbols"), p = n.assumption("privateFieldsAsProperties"),
    d = (l = n.assumption("noUninitializedPrivateFieldAccess")) != null ? l : !1, m = n.assumption("constantSuper"), b = n.assumption("noDoc\
umentAll");
    if (p && f)
      throw new Error('Cannot enable both the "privateFieldsAsProperties" and "privateFieldsAsSymbols" assumptions as the same time.');
    let h = p || f;
    if (r === !0) {
      let g = [];
      c !== void 0 && g.push('"setPublicClassFields"'), p !== void 0 && g.push('"privateFieldsAsProperties"'), f !== void 0 && g.push('"priv\
ateFieldsAsSymbols"'), g.length !== 0 && console.warn(`[${e}]: You are using the "loose: true" option and you are explicitly setting a value\
 for the ${g.join(" and ")} assumption${g.length > 1 ? "s" : ""}. The "loose" option can cause incompatibilities with the other class featur\
es plugins, so it's recommended that you replace it with the following top-level option:
	"assumptions": {
		"setPublicClassFields": true,
		"privateFieldsAsSymbols": true
	}`);
    }
    return {
      name: e,
      manipulateOptions: s,
      inherits: a,
      pre(g) {
        if ((0, Yl.enableFeature)(g, t, r), typeof g.get(Ao) == "number") {
          g.set(Ao, "7.24.4");
          return;
        }
        (!g.get(Ao) || X8e.lt(g.get(Ao), "7.24.4")) && g.set(Ao, "7.24.4");
      },
      visitor: {
        Class(g, {
          file: E
        }) {
          var D;
          if (E.get(Ao) !== "7.24.4" || !(0, Yl.shouldTransform)(g, E)) return;
          let C = g.isClassDeclaration();
          C && (0, z8e.assertFieldTransformed)(g);
          let N = (0, Yl.isLoose)(E, t), I, M = (0, VP.hasDecorators)(g.node), q = [], V = [], W = [], Y = /* @__PURE__ */ new Set(), j = g.
          get("body");
          for (let _e of j.get("body")) {
            if ((_e.isClassProperty() || _e.isClassMethod()) && _e.node.computed && W.push(_e), _e.isPrivate()) {
              let {
                name: Oe
              } = _e.node.key.id, Jt = `get ${Oe}`, Tr = `set ${Oe}`;
              if (_e.isClassPrivateMethod()) {
                if (_e.node.kind === "get") {
                  if (Y.has(Jt) || Y.has(Oe) && !Y.has(Tr))
                    throw _e.buildCodeFrameError("Duplicate private field");
                  Y.add(Jt).add(Oe);
                } else if (_e.node.kind === "set") {
                  if (Y.has(Tr) || Y.has(Oe) && !Y.has(Jt))
                    throw _e.buildCodeFrameError("Duplicate private field");
                  Y.add(Tr).add(Oe);
                }
              } else {
                if (Y.has(Oe) && !Y.has(Jt) && !Y.has(Tr) || Y.has(Oe) && (Y.has(Jt) || Y.has(Tr)))
                  throw _e.buildCodeFrameError("Duplicate private field");
                Y.add(Oe);
              }
            }
            _e.isClassMethod({
              kind: "constructor"
            }) ? I = _e : (V.push(_e), (_e.isProperty() || _e.isPrivate() || _e.isStaticBlock != null && _e.isStaticBlock()) && q.push(_e));
          }
          if (!q.length && !M) return;
          let ae = g.node.id, pe;
          (!ae || !C) && ((0, G8e.default)(g), pe = g.scope.generateUidIdentifier(ae?.name || "Class"));
          let Ie = (D = pe) != null ? D : UP.types.cloneNode(ae), F = (0, _f.buildPrivateNamesMap)(Ie.name, h ?? N, q, E), L = (0, _f.buildPrivateNamesNodes)(
          F, p ?? N, f ?? !1, E);
          (0, _f.transformPrivateNamesUsage)(Ie, g, F, {
            privateFieldsAsProperties: h ?? N,
            noUninitializedPrivateFieldAccess: d,
            noDocumentAll: b,
            innerBinding: ae
          }, E);
          let se, ne, Ee, qe, Ae, Rt, Bt;
          M ? (ne = Ae = se = [], {
            instanceNodes: Ee,
            wrapClass: Bt
          } = (0, VP.buildDecoratedClass)(Ie, g, V, E)) : (se = (0, WP.extractComputedKeys)(g, W, E), {
            staticNodes: ne,
            pureStaticNodes: Ae,
            instanceNodes: Ee,
            lastInstanceNodeReturnsThis: qe,
            classBindingNode: Rt,
            wrapClass: Bt
          } = (0, _f.buildFieldsInitNodes)(pe, g.node.superClass, q, F, E, c ?? N, h ?? N, d, m ?? N, ae)), Ee.length > 0 && (0, WP.injectInitialization)(
          g, I, Ee, (_e, Oe) => {
            if (!M)
              for (let Jt of q)
                UP.types.isStaticBlock != null && UP.types.isStaticBlock(Jt.node) || Jt.node.static || Jt.traverse(_e, Oe);
          }, qe);
          let qt = Bt(g);
          qt.insertBefore([...L, ...se]), ne.length > 0 && qt.insertAfter(ne), Ae.length > 0 && qt.find((_e) => _e.isStatement() || _e.isDeclaration()).
          insertAfter(Ae), Rt != null && C && qt.insertAfter(Rt);
        },
        ExportDefaultDeclaration(g, {
          file: E
        }) {
          {
            if (E.get(Ao) !== "7.24.4") return;
            let D = g.get("declaration");
            D.isClassDeclaration() && (0, VP.hasDecorators)(D.node) && (D.node.id ? (0, K8e.default)(g) : D.node.type = "ClassExpression");
          }
        }
      }
    };
  }
  i(J8e, "createClassFeaturePlugin");
});

// ../node_modules/@babel/plugin-transform-typescript/lib/enum.js
var GP = y((Zm) => {
  "use strict";
  Object.defineProperty(Zm, "__esModule", {
    value: !0
  });
  Zm.default = t6e;
  Zm.translateEnumValues = q9;
  var Xl = mr(), Q8e = Q("assert"), Z8e = yP(), HP = /* @__PURE__ */ new WeakMap(), e6e = Xl.template.expression(`
    (function (ID) {
      ASSIGNMENTS;
      return ID;
    })(INIT)
  `);
  function t6e(e, t) {
    let {
      node: r,
      parentPath: s
    } = e;
    if (r.declare) {
      e.remove();
      return;
    }
    let n = r.id.name, {
      fill: a,
      data: o,
      isPure: l
    } = i6e(e, t, r.id);
    switch (s.type) {
      case "BlockStatement":
      case "ExportNamedDeclaration":
      case "Program": {
        let c = t.isProgram(e.parent), f = u(s), p = t.objectExpression([]);
        (f || c) && (p = t.logicalExpression("||", t.cloneNode(a.ID), p));
        let d = e6e(Object.assign({}, a, {
          INIT: p
        }));
        l && (0, Z8e.default)(d), f ? (s.isExportDeclaration() ? s : e).replaceWith(t.expressionStatement(t.assignmentExpression("=", t.cloneNode(
        r.id), d))) : e.scope.registerDeclaration(e.replaceWith(t.variableDeclaration(c ? "var" : "let", [t.variableDeclarator(r.id, d)]))[0]),
        HP.set(e.scope.getBindingIdentifier(n), o);
        break;
      }
      default:
        throw new Error(`Unexpected enum parent '${e.parent.type}`);
    }
    function u(c) {
      return c.isExportDeclaration() ? u(c.parentPath) : c.getData(n) ? !0 : (c.setData(n, !0), !1);
    }
    i(u, "seen");
  }
  i(t6e, "transpileEnum");
  var r6e = (0, Xl.template)(`
  ENUM["NAME"] = VALUE;
`), s6e = (0, Xl.template)(`
  ENUM[ENUM["NAME"] = VALUE] = "NAME";
`), n6e = /* @__PURE__ */ i((e, t) => (e ? r6e : s6e)(t), "buildEnumMember");
  function i6e(e, t, r) {
    let {
      enumValues: s,
      data: n,
      isPure: a
    } = q9(e, t), o = s.map(([l, u]) => n6e(t.isStringLiteral(u), {
      ENUM: t.cloneNode(r),
      NAME: l,
      VALUE: u
    }));
    return {
      fill: {
        ID: t.cloneNode(r),
        ASSIGNMENTS: o
      },
      data: n,
      isPure: a
    };
  }
  i(i6e, "enumFill");
  function j9(e, t) {
    let {
      seen: r,
      path: s,
      t: n
    } = t, a = e.node.name;
    r.has(a) && !e.scope.hasOwnBinding(a) && (e.replaceWith(n.memberExpression(n.cloneNode(s.node.id), n.cloneNode(e.node))), e.skip());
  }
  i(j9, "ReferencedIdentifier");
  var a6e = {
    ReferencedIdentifier: j9
  };
  function q9(e, t) {
    var r;
    let s = e.scope.getBindingIdentifier(e.node.id.name), n = (r = HP.get(s)) != null ? r : /* @__PURE__ */ new Map(), a = -1, o, l = !0, u = e.
    get("members").map((c) => {
      let f = c.node, p = t.isIdentifier(f.id) ? f.id.name : f.id.value, d = c.get("initializer"), m = f.initializer, b;
      if (m)
        a = $9(d, n), a !== void 0 ? (n.set(p, a), Q8e(typeof a == "number" || typeof a == "string"), a === 1 / 0 || Number.isNaN(a) ? b = t.
        identifier(String(a)) : a === -1 / 0 ? b = t.unaryExpression("-", t.identifier("Infinity")) : b = t.valueToNode(a)) : (l && (l = d.isPure()),
        d.isReferencedIdentifier() ? j9(d, {
          t,
          seen: n,
          path: e
        }) : d.traverse(a6e, {
          t,
          seen: n,
          path: e
        }), b = d.node, n.set(p, void 0));
      else if (typeof a == "number")
        a += 1, b = t.numericLiteral(a), n.set(p, a);
      else {
        if (typeof a == "string")
          throw e.buildCodeFrameError("Enum member must have initializer.");
        {
          let h = t.memberExpression(t.cloneNode(e.node.id), t.stringLiteral(o), !0);
          b = t.binaryExpression("+", t.numericLiteral(1), h), n.set(p, void 0);
        }
      }
      return o = p, [p, b];
    });
    return {
      isPure: l,
      data: n,
      enumValues: u
    };
  }
  i(q9, "translateEnumValues");
  function $9(e, t, r = /* @__PURE__ */ new Set()) {
    return s(e);
    function s(l) {
      let u = l.node;
      switch (u.type) {
        case "MemberExpression":
          return n(l, t, r);
        case "StringLiteral":
          return u.value;
        case "UnaryExpression":
          return a(l);
        case "BinaryExpression":
          return o(l);
        case "NumericLiteral":
          return u.value;
        case "ParenthesizedExpression":
          return s(l.get("expression"));
        case "Identifier":
          return n(l, t, r);
        case "TemplateLiteral": {
          if (u.quasis.length === 1)
            return u.quasis[0].value.cooked;
          let c = l.get("expressions"), f = u.quasis, p = "";
          for (let d = 0; d < f.length; d++)
            if (p += f[d].value.cooked, d + 1 < f.length) {
              let m = n(c[d], t, r);
              if (m === void 0) return;
              p += m;
            }
          return p;
        }
        default:
          return;
      }
    }
    function n(l, u, c) {
      if (l.isMemberExpression()) {
        let f = l.node, p = f.object, d = f.property;
        if (!Xl.types.isIdentifier(p) || (f.computed ? !Xl.types.isStringLiteral(d) : !Xl.types.isIdentifier(d)))
          return;
        let m = l.scope.getBindingIdentifier(p.name), b = HP.get(m);
        return b ? b.get(d.computed ? d.value : d.name) : void 0;
      } else if (l.isIdentifier()) {
        let f = l.node.name;
        if (["Infinity", "NaN"].includes(f))
          return Number(f);
        let p = u?.get(f);
        return p !== void 0 ? p : c.has(l.node) ? void 0 : (c.add(l.node), p = $9(l.resolve(), u, c), u?.set(f, p), p);
      }
    }
    function a(l) {
      let u = s(l.get("argument"));
      if (u !== void 0)
        switch (l.node.operator) {
          case "+":
            return u;
          case "-":
            return -u;
          case "~":
            return ~u;
          default:
            return;
        }
    }
    function o(l) {
      let u = s(l.get("left"));
      if (u === void 0)
        return;
      let c = s(l.get("right"));
      if (c !== void 0)
        switch (l.node.operator) {
          case "|":
            return u | c;
          case "&":
            return u & c;
          case ">>":
            return u >> c;
          case ">>>":
            return u >>> c;
          case "<<":
            return u << c;
          case "^":
            return u ^ c;
          case "*":
            return u * c;
          case "/":
            return u / c;
          case "+":
            return u + c;
          case "-":
            return u - c;
          case "%":
            return u % c;
          case "**":
            return Math.pow(u, c);
          default:
            return;
        }
    }
  }
  i($9, "computeConstantValue");
});

// ../node_modules/@babel/plugin-transform-typescript/lib/const-enum.js
var U9 = y((KP) => {
  "use strict";
  Object.defineProperty(KP, "__esModule", {
    value: !0
  });
  KP.default = l6e;
  var o6e = GP();
  function l6e(e, t) {
    let {
      name: r
    } = e.node.id, s = e.parentPath.isExportNamedDeclaration(), n = s;
    !n && t.isProgram(e.parent) && (n = e.parent.body.some((l) => t.isExportNamedDeclaration(l) && l.exportKind !== "type" && !l.source && l.
    specifiers.some((u) => t.isExportSpecifier(u) && u.exportKind !== "type" && u.local.name === r)));
    let {
      enumValues: a
    } = (0, o6e.translateEnumValues)(e, t);
    if (n) {
      let l = t.objectExpression(a.map(([u, c]) => t.objectProperty(t.isValidIdentifier(u) ? t.identifier(u) : t.stringLiteral(u), c)));
      e.scope.hasOwnBinding(r) ? (s ? e.parentPath : e).replaceWith(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier("\
Object"), t.identifier("assign")), [e.node.id, l]))) : (e.replaceWith(t.variableDeclaration("var", [t.variableDeclarator(e.node.id, l)])), e.
      scope.registerDeclaration(e));
      return;
    }
    let o = new Map(a);
    e.scope.path.traverse({
      Scope(l) {
        l.scope.hasOwnBinding(r) && l.skip();
      },
      MemberExpression(l) {
        if (!t.isIdentifier(l.node.object, {
          name: r
        })) return;
        let u;
        if (l.node.computed)
          if (t.isStringLiteral(l.node.property))
            u = l.node.property.value;
          else
            return;
        else if (t.isIdentifier(l.node.property))
          u = l.node.property.name;
        else
          return;
        o.has(u) && l.replaceWith(t.cloneNode(o.get(u)));
      }
    }), e.remove();
  }
  i(l6e, "transpileConstEnum");
});

// ../node_modules/@babel/plugin-transform-typescript/lib/global-types.js
var YP = y((zl) => {
  "use strict";
  Object.defineProperty(zl, "__esModule", {
    value: !0
  });
  zl.GLOBAL_TYPES = void 0;
  zl.isGlobalType = u6e;
  zl.registerGlobalType = c6e;
  var V9 = zl.GLOBAL_TYPES = /* @__PURE__ */ new WeakMap();
  function u6e({
    scope: e
  }, t) {
    return e.hasBinding(t) ? !1 : V9.get(e).has(t) ? !0 : (console.warn(`The exported identifier "${t}" is not declared in Babel's scope tra\
cker
as a JavaScript value binding, and "@babel/plugin-transform-typescript"
never encountered it as a TypeScript type declaration.
It will be treated as a JavaScript value.

This problem is likely caused by another plugin injecting
"${t}" without registering it in the scope tracker. If you are the author
 of that plugin, please use "scope.registerDeclaration(declarationPath)".`), !1);
  }
  i(u6e, "isGlobalType");
  function c6e(e, t) {
    V9.get(e).add(t);
  }
  i(c6e, "registerGlobalType");
});

// ../node_modules/@babel/plugin-transform-typescript/lib/namespace.js
var H9 = y((QP) => {
  "use strict";
  Object.defineProperty(QP, "__esModule", {
    value: !0
  });
  QP.default = p6e;
  var bt = mr(), f6e = YP();
  function p6e(e, t) {
    if (e.node.declare || e.node.id.type === "StringLiteral") {
      e.remove();
      return;
    }
    if (!t)
      throw e.get("id").buildCodeFrameError("Namespace not marked type-only declare. Non-declarative namespaces are only supported experimen\
tally in Babel. To enable and review caveats see: https://babeljs.io/docs/en/babel-plugin-transform-typescript");
    let r = e.node.id.name, s = JP(e, bt.types.cloneNode(e.node, !0));
    if (s === null) {
      let n = e.findParent((a) => a.isProgram());
      (0, f6e.registerGlobalType)(n.scope, r), e.remove();
    } else e.scope.hasOwnBinding(r) ? e.replaceWith(s) : e.scope.registerDeclaration(e.replaceWithMultiple([XP(r), s])[0]);
  }
  i(p6e, "transpileNamespace");
  function XP(e) {
    return bt.types.variableDeclaration("let", [bt.types.variableDeclarator(bt.types.identifier(e))]);
  }
  i(XP, "getDeclaration");
  function zP(e, t) {
    return bt.types.memberExpression(bt.types.identifier(e), bt.types.identifier(t));
  }
  i(zP, "getMemberExpression");
  function d6e(e, t, r) {
    if (e.kind !== "const")
      throw r.file.buildCodeFrameError(e, "Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babelj\
s.io/docs/en/babel-plugin-transform-typescript");
    let {
      declarations: s
    } = e;
    if (s.every((o) => bt.types.isIdentifier(o.id))) {
      for (let o of s)
        o.init = bt.types.assignmentExpression("=", zP(t, o.id.name), o.init);
      return [e];
    }
    let n = bt.types.getBindingIdentifiers(e), a = [];
    for (let o in n)
      a.push(bt.types.assignmentExpression("=", zP(t, o), bt.types.cloneNode(n[o])));
    return [e, bt.types.expressionStatement(bt.types.sequenceExpression(a))];
  }
  i(d6e, "handleVariableDeclaration");
  function W9(e, t) {
    return e.hub.buildError(t, "Ambient modules cannot be nested in other modules or namespaces.", Error);
  }
  i(W9, "buildNestedAmbientModuleError");
  function JP(e, t, r) {
    let s = /* @__PURE__ */ new Set(), n = t.id;
    bt.types.assertIdentifier(n);
    let a = e.scope.generateUid(n.name), o = bt.types.isTSModuleBlock(t.body) ? t.body.body : [bt.types.exportNamedDeclaration(t.body)], l = !0;
    for (let c = 0; c < o.length; c++) {
      let f = o[c];
      switch (f.type) {
        case "TSModuleDeclaration": {
          if (!bt.types.isIdentifier(f.id))
            throw W9(e, f);
          let p = JP(e, f);
          if (p !== null) {
            l = !1;
            let d = f.id.name;
            s.has(d) ? o[c] = p : (s.add(d), o.splice(c++, 1, XP(d), p));
          }
          continue;
        }
        case "TSEnumDeclaration":
        case "FunctionDeclaration":
        case "ClassDeclaration":
          l = !1, s.add(f.id.name);
          continue;
        case "VariableDeclaration": {
          l = !1;
          for (let p in bt.types.getBindingIdentifiers(f))
            s.add(p);
          continue;
        }
        default:
          l && (l = bt.types.isTypeScript(f));
          continue;
        case "ExportNamedDeclaration":
      }
      if (!("declare" in f.declaration && f.declaration.declare))
        switch (f.declaration.type) {
          case "TSEnumDeclaration":
          case "FunctionDeclaration":
          case "ClassDeclaration": {
            l = !1;
            let p = f.declaration.id.name;
            s.add(p), o.splice(c++, 1, f.declaration, bt.types.expressionStatement(bt.types.assignmentExpression("=", zP(a, p), bt.types.identifier(
            p))));
            break;
          }
          case "VariableDeclaration": {
            l = !1;
            let p = d6e(f.declaration, a, e.hub);
            o.splice(c, p.length, ...p), c += p.length - 1;
            break;
          }
          case "TSModuleDeclaration": {
            if (!bt.types.isIdentifier(f.declaration.id))
              throw W9(e, f.declaration);
            let p = JP(e, f.declaration, bt.types.identifier(a));
            if (p !== null) {
              l = !1;
              let d = f.declaration.id.name;
              s.has(d) ? o[c] = p : (s.add(d), o.splice(c++, 1, XP(d), p));
            } else
              o.splice(c, 1), c--;
          }
        }
    }
    if (l) return null;
    let u = bt.types.objectExpression([]);
    if (r) {
      let c = bt.types.memberExpression(r, n);
      u = bt.template.expression.ast`
      ${bt.types.cloneNode(c)} ||
        (${bt.types.cloneNode(c)} = ${u})
    `;
    }
    return bt.template.statement.ast`
    (function (${bt.types.identifier(a)}) {
      ${o}
    })(${n} || (${bt.types.cloneNode(n)} = ${u}));
  `;
  }
  i(JP, "handleNested");
});

// ../node_modules/@babel/plugin-transform-typescript/lib/index.js
var Y9 = y((ty) => {
  "use strict";
  Object.defineProperty(ty, "__esModule", {
    value: !0
  });
  ty.default = void 0;
  var h6e = $l(), m6e = U5(), y6e = M9(), g6e = U9(), b6e = GP(), Ri = YP(), E6e = H9();
  function v6e(e) {
    switch (e.parent.type) {
      case "TSTypeReference":
      case "TSExpressionWithTypeArguments":
      case "TSTypeQuery":
        return !0;
      case "TSQualifiedName":
        return e.parentPath.findParent((t) => t.type !== "TSQualifiedName").type !== "TSImportEqualsDeclaration";
      case "ExportSpecifier":
        return e.parent.exportKind === "type" || e.parentPath.parent.exportKind === "type";
      default:
        return !1;
    }
  }
  i(v6e, "isInType");
  var Js = /* @__PURE__ */ new WeakMap(), G9 = /* @__PURE__ */ new WeakSet();
  function ey(e) {
    let t = e.getBindingIdentifiers();
    for (let r of Object.keys(t)) {
      let s = e.scope.getBinding(r);
      s && s.identifier === t[r] && s.scope.removeBinding(r);
    }
    e.opts.noScope = !0, e.remove(), e.opts.noScope = !1;
  }
  i(ey, "safeRemove");
  function K9(e, t, r, s, n = "") {
    if (t.file.get("@babel/plugin-transform-modules-*") !== "commonjs")
      throw e.buildCodeFrameError(`\`${r}\` is only supported when compiling modules to CommonJS.
Please consider using \`${s}\`${n}, or add @babel/plugin-transform-modules-commonjs to your Babel config.`);
  }
  i(K9, "assertCjsTransformEnabled");
  var Aot = ty.default = (0, h6e.declare)((e, t) => {
    let {
      types: r,
      template: s
    } = e;
    e.assertVersion(7);
    let n = /\*?\s*@jsx((?:Frag)?)\s+([^\s]+)/, {
      allowNamespaces: a = !0,
      jsxPragma: o = "React.createElement",
      jsxPragmaFrag: l = "React.Fragment",
      onlyRemoveTypeImports: u = !1,
      optimizeConstEnums: c = !1
    } = t;
    var {
      allowDeclareFields: f = !1
    } = t;
    let p = {
      field(h) {
        let {
          node: g
        } = h;
        if (!f && g.declare)
          throw h.buildCodeFrameError("The 'declare' modifier is only allowed when the 'allowDeclareFields' option of @babel/plugin-transfor\
m-typescript or @babel/preset-typescript is enabled.");
        if (g.declare) {
          if (g.value)
            throw h.buildCodeFrameError("Fields with the 'declare' modifier cannot be initialized here, but only in the constructor");
          g.decorators || h.remove();
        } else if (g.definite) {
          if (g.value)
            throw h.buildCodeFrameError("Definitely assigned fields cannot be initialized here, but only in the constructor");
          !f && !g.decorators && !r.isClassPrivateProperty(g) && h.remove();
        } else (g.abstract || !f && !g.value && !g.decorators && !r.isClassPrivateProperty(g)) && h.remove();
        g.accessibility && (g.accessibility = null), g.abstract && (g.abstract = null), g.readonly && (g.readonly = null), g.optional && (g.
        optional = null), g.typeAnnotation && (g.typeAnnotation = null), g.definite && (g.definite = null), g.declare && (g.declare = null),
        g.override && (g.override = null);
      },
      method({
        node: h
      }) {
        h.accessibility && (h.accessibility = null), h.abstract && (h.abstract = null), h.optional && (h.optional = null), h.override && (h.
        override = null);
      },
      constructor(h, g) {
        h.node.accessibility && (h.node.accessibility = null);
        let E = [], {
          scope: D
        } = h;
        for (let C of h.get("params")) {
          let N = C.node;
          if (N.type === "TSParameterProperty") {
            let I = N.parameter;
            if (G9.has(I)) continue;
            G9.add(I);
            let M;
            if (r.isIdentifier(I))
              M = I;
            else if (r.isAssignmentPattern(I) && r.isIdentifier(I.left))
              M = I.left;
            else
              throw C.buildCodeFrameError("Parameter properties can not be destructuring patterns.");
            E.push(s.statement.ast`
              this.${r.cloneNode(M)} = ${r.cloneNode(M)}
            `), C.replaceWith(C.get("parameter")), D.registerBinding("param", C);
          }
        }
        (0, y6e.injectInitialization)(g, h, E);
      }
    };
    return {
      name: "transform-typescript",
      inherits: m6e.default,
      visitor: {
        Pattern: m,
        Identifier: m,
        RestElement: m,
        Program: {
          enter(h, g) {
            let {
              file: E
            } = g, D = null, C = null, N = h.scope;
            if (Ri.GLOBAL_TYPES.has(N) || Ri.GLOBAL_TYPES.set(N, /* @__PURE__ */ new Set()), E.ast.comments)
              for (let q of E.ast.comments) {
                let V = n.exec(q.value);
                V && (V[1] ? C = V[2] : D = V[2]);
              }
            let I = D || o;
            I && ([I] = I.split("."));
            let M = C || l;
            M && ([M] = M.split("."));
            for (let q of h.get("body")) {
              if (q.isImportDeclaration()) {
                if (Js.has(g.file.ast.program) || Js.set(g.file.ast.program, !0), q.node.importKind === "type") {
                  for (let j of q.node.specifiers)
                    (0, Ri.registerGlobalType)(N, j.local.name);
                  q.remove();
                  continue;
                }
                let V = /* @__PURE__ */ new Set(), W = q.node.specifiers.length, Y = /* @__PURE__ */ i(() => W > 0 && W === V.size, "isAllSp\
ecifiersElided");
                for (let j of q.node.specifiers)
                  if (j.type === "ImportSpecifier" && j.importKind === "type") {
                    (0, Ri.registerGlobalType)(N, j.local.name);
                    let ae = q.scope.getBinding(j.local.name);
                    ae && V.add(ae.path);
                  }
                if (u)
                  Js.set(h.node, !1);
                else {
                  if (q.node.specifiers.length === 0) {
                    Js.set(h.node, !1);
                    continue;
                  }
                  for (let j of q.node.specifiers) {
                    let ae = q.scope.getBinding(j.local.name);
                    ae && !V.has(ae.path) && (b({
                      binding: ae,
                      programPath: h,
                      pragmaImportName: I,
                      pragmaFragImportName: M
                    }) ? V.add(ae.path) : Js.set(h.node, !1));
                  }
                }
                if (Y() && !u)
                  q.remove();
                else
                  for (let j of V)
                    j.remove();
                continue;
              }
              if (q.isExportDeclaration() && (q = q.get("declaration")), q.isVariableDeclaration({
                declare: !0
              }))
                for (let V of Object.keys(q.getBindingIdentifiers()))
                  (0, Ri.registerGlobalType)(N, V);
              else (q.isTSTypeAliasDeclaration() || q.isTSDeclareFunction() && q.get("id").isIdentifier() || q.isTSInterfaceDeclaration() ||
              q.isClassDeclaration({
                declare: !0
              }) || q.isTSEnumDeclaration({
                declare: !0
              }) || q.isTSModuleDeclaration({
                declare: !0
              }) && q.get("id").isIdentifier()) && (0, Ri.registerGlobalType)(N, q.node.id.name);
            }
          },
          exit(h) {
            h.node.sourceType === "module" && Js.get(h.node) && h.pushContainer("body", r.exportNamedDeclaration());
          }
        },
        ExportNamedDeclaration(h, g) {
          if (Js.has(g.file.ast.program) || Js.set(g.file.ast.program, !0), h.node.exportKind === "type") {
            h.remove();
            return;
          }
          if (h.node.source && h.node.specifiers.length > 0 && h.node.specifiers.every((E) => E.type === "ExportSpecifier" && E.exportKind ===
          "type")) {
            h.remove();
            return;
          }
          if (!h.node.source && h.node.specifiers.length > 0 && h.node.specifiers.every((E) => r.isExportSpecifier(E) && (0, Ri.isGlobalType)(
          h, E.local.name))) {
            h.remove();
            return;
          }
          if (r.isTSModuleDeclaration(h.node.declaration)) {
            let E = h.node.declaration, {
              id: D
            } = E;
            if (r.isIdentifier(D))
              if (h.scope.hasOwnBinding(D.name))
                h.replaceWith(E);
              else {
                let [C] = h.replaceWithMultiple([r.exportNamedDeclaration(r.variableDeclaration("let", [r.variableDeclarator(r.cloneNode(D))])),
                E]);
                h.scope.registerDeclaration(C);
              }
          }
          Js.set(g.file.ast.program, !1);
        },
        ExportAllDeclaration(h) {
          h.node.exportKind === "type" && h.remove();
        },
        ExportSpecifier(h) {
          (!h.parent.source && (0, Ri.isGlobalType)(h, h.node.local.name) || h.node.exportKind === "type") && h.remove();
        },
        ExportDefaultDeclaration(h, g) {
          if (Js.has(g.file.ast.program) || Js.set(g.file.ast.program, !0), r.isIdentifier(h.node.declaration) && (0, Ri.isGlobalType)(h, h.
          node.declaration.name)) {
            h.remove();
            return;
          }
          Js.set(g.file.ast.program, !1);
        },
        TSDeclareFunction(h) {
          ey(h);
        },
        TSDeclareMethod(h) {
          ey(h);
        },
        VariableDeclaration(h) {
          h.node.declare && ey(h);
        },
        VariableDeclarator({
          node: h
        }) {
          h.definite && (h.definite = null);
        },
        TSIndexSignature(h) {
          h.remove();
        },
        ClassDeclaration(h) {
          let {
            node: g
          } = h;
          g.declare && ey(h);
        },
        Class(h) {
          let {
            node: g
          } = h;
          g.typeParameters && (g.typeParameters = null), g.superTypeParameters && (g.superTypeParameters = null), g.implements && (g.implements =
          null), g.abstract && (g.abstract = null), h.get("body.body").forEach((E) => {
            E.isClassMethod() || E.isClassPrivateMethod() ? E.node.kind === "constructor" ? p.constructor(E, h) : p.method(E) : (E.isClassProperty() ||
            E.isClassPrivateProperty() || E.isClassAccessorProperty()) && p.field(E);
          });
        },
        Function(h) {
          let {
            node: g
          } = h;
          g.typeParameters && (g.typeParameters = null), g.returnType && (g.returnType = null);
          let E = g.params;
          E.length > 0 && r.isIdentifier(E[0], {
            name: "this"
          }) && E.shift();
        },
        TSModuleDeclaration(h) {
          (0, E6e.default)(h, a);
        },
        TSInterfaceDeclaration(h) {
          h.remove();
        },
        TSTypeAliasDeclaration(h) {
          h.remove();
        },
        TSEnumDeclaration(h) {
          c && h.node.const ? (0, g6e.default)(h, r) : (0, b6e.default)(h, r);
        },
        TSImportEqualsDeclaration(h, g) {
          let {
            id: E,
            moduleReference: D
          } = h.node, C, N;
          r.isTSExternalModuleReference(D) ? (K9(h, g, `import ${E.name} = require(...);`, `import ${E.name} from '...';`, " alongside Types\
cript's --allowSyntheticDefaultImports option"), C = r.callExpression(r.identifier("require"), [D.expression]), N = "const") : (C = d(D), N =
          "var"), h.replaceWith(r.variableDeclaration(N, [r.variableDeclarator(E, C)])), h.scope.registerDeclaration(h);
        },
        TSExportAssignment(h, g) {
          K9(h, g, "export = <value>;", "export default <value>;"), h.replaceWith(s.statement.ast`module.exports = ${h.node.expression}`);
        },
        TSTypeAssertion(h) {
          h.replaceWith(h.node.expression);
        },
        [`TSAsExpression${r.tsSatisfiesExpression ? "|TSSatisfiesExpression" : ""}`](h) {
          let {
            node: g
          } = h;
          do
            g = g.expression;
          while (r.isTSAsExpression(g) || r.isTSSatisfiesExpression != null && r.isTSSatisfiesExpression(g));
          h.replaceWith(g);
        },
        [e.types.tsInstantiationExpression ? "TSNonNullExpression|TSInstantiationExpression" : "TSNonNullExpression"](h) {
          h.replaceWith(h.node.expression);
        },
        CallExpression(h) {
          h.node.typeParameters = null;
        },
        OptionalCallExpression(h) {
          h.node.typeParameters = null;
        },
        NewExpression(h) {
          h.node.typeParameters = null;
        },
        JSXOpeningElement(h) {
          h.node.typeParameters = null;
        },
        TaggedTemplateExpression(h) {
          h.node.typeParameters = null;
        }
      }
    };
    function d(h) {
      return r.isTSQualifiedName(h) ? r.memberExpression(d(h.left), h.right) : h;
    }
    function m({
      node: h
    }) {
      h.typeAnnotation && (h.typeAnnotation = null), r.isIdentifier(h) && h.optional && (h.optional = null);
    }
    function b({
      binding: h,
      programPath: g,
      pragmaImportName: E,
      pragmaFragImportName: D
    }) {
      for (let N of h.referencePaths)
        if (!v6e(N))
          return !1;
      if (h.identifier.name !== E && h.identifier.name !== D)
        return !0;
      let C = !1;
      return g.traverse({
        "JSXElement|JSXFragment"(N) {
          C = !0, N.stop();
        }
      }), !C;
    }
  });
});

// ../node_modules/@babel/plugin-syntax-jsx/lib/index.js
var X9 = y((ry) => {
  "use strict";
  Object.defineProperty(ry, "__esModule", {
    value: !0
  });
  ry.default = void 0;
  var S6e = $l(), Dot = ry.default = (0, S6e.declare)((e) => (e.assertVersion(7), {
    name: "syntax-jsx",
    manipulateOptions(t, r) {
      r.plugins.some((s) => (Array.isArray(s) ? s[0] : s) === "typescript") || r.plugins.push("jsx");
    }
  }));
});

// ../node_modules/@babel/plugin-transform-modules-commonjs/lib/dynamic-import.js
var Q9 = y((ZP) => {
  "use strict";
  Object.defineProperty(ZP, "__esModule", {
    value: !0
  });
  ZP.transformDynamicImport = P6e;
  var z9 = mr(), T6e = jc(), J9 = /* @__PURE__ */ i((e) => z9.template.expression.ast`require(${e})`, "requireNoInterop"), x6e = /* @__PURE__ */ i(
  (e, t) => z9.types.callExpression(t.addHelper("interopRequireWildcard"), [J9(e)]), "requireInterop");
  function P6e(e, t, r) {
    let s = t ? J9 : x6e;
    e.replaceWith((0, T6e.buildDynamicImport)(e.node, !0, !1, (n) => s(n, r)));
  }
  i(P6e, "transformDynamicImport");
});

// ../node_modules/@babel/plugin-transform-modules-commonjs/lib/lazy.js
var e7 = y((sy) => {
  "use strict";
  Object.defineProperty(sy, "__esModule", {
    value: !0
  });
  sy.lazyImportsHook = void 0;
  var Z9 = mr(), A6e = jc(), C6e = /* @__PURE__ */ i((e) => ({
    name: "@babel/plugin-transform-modules-commonjs/lazy",
    version: "7.24.1",
    getWrapperPayload(t, r) {
      if ((0, A6e.isSideEffectImport)(r) || r.reexportAll)
        return null;
      if (e === !0)
        return /\./.test(t) ? null : "lazy/function";
      if (Array.isArray(e))
        return e.indexOf(t) === -1 ? null : "lazy/function";
      if (typeof e == "function")
        return e(t) ? "lazy/function" : null;
    },
    buildRequireWrapper(t, r, s, n) {
      if (s === "lazy/function")
        return n ? Z9.template.statement.ast`
        function ${t}() {
          const data = ${r};
          ${t} = function(){ return data; };
          return data;
        }
      ` : !1;
    },
    wrapReference(t, r) {
      if (r === "lazy/function") return Z9.types.callExpression(t, []);
    }
  }), "lazyImportsHook");
  sy.lazyImportsHook = C6e;
});

// ../node_modules/@babel/plugin-transform-modules-commonjs/lib/hooks.js
var t7 = y((ny) => {
  "use strict";
  Object.defineProperty(ny, "__esModule", {
    value: !0
  });
  ny.defineCommonJSHook = w6e;
  ny.makeInvokers = D6e;
  var tA = "@babel/plugin-transform-modules-commonjs/customWrapperPlugin";
  function w6e(e, t) {
    let r = e.get(tA);
    r || e.set(tA, r = []), r.push(t);
  }
  i(w6e, "defineCommonJSHook");
  function eA(e, t) {
    if (e)
      for (let r of e) {
        let s = t(r);
        if (s != null) return s;
      }
  }
  i(eA, "findMap");
  function D6e(e) {
    let t = e.get(tA);
    return {
      getWrapperPayload(...r) {
        return eA(t, (s) => s.getWrapperPayload == null ? void 0 : s.getWrapperPayload(...r));
      },
      wrapReference(...r) {
        return eA(t, (s) => s.wrapReference == null ? void 0 : s.wrapReference(...r));
      },
      buildRequireWrapper(...r) {
        return eA(t, (s) => s.buildRequireWrapper == null ? void 0 : s.buildRequireWrapper(...r));
      }
    };
  }
  i(D6e, "makeInvokers");
});

// ../node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js
var r7 = y((Of) => {
  "use strict";
  Object.defineProperty(Of, "__esModule", {
    value: !0
  });
  Of.default = void 0;
  Object.defineProperty(Of, "defineCommonJSHook", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return rA.defineCommonJSHook;
    }, "get")
  });
  var I6e = $l(), wo = jc(), _6e = w1(), Sn = mr(), O6e = Q9(), N6e = e7(), rA = t7(), Lot = Of.default = (0, I6e.declare)((e, t) => {
    var r, s, n;
    e.assertVersion(7);
    let {
      strictNamespace: a = !1,
      mjsStrictNamespace: o = a,
      allowTopLevelThis: l,
      strict: u,
      strictMode: c,
      noInterop: f,
      importInterop: p,
      lazy: d = !1,
      allowCommonJSExports: m = !0,
      loose: b = !1
    } = t, h = (r = e.assumption("constantReexports")) != null ? r : b, g = (s = e.assumption("enumerableModuleMeta")) != null ? s : b, E = (n =
    e.assumption("noIncompleteNsImportDetection")) != null ? n : !1;
    if (typeof d != "boolean" && typeof d != "function" && (!Array.isArray(d) || !d.every((N) => typeof N == "string")))
      throw new Error(".lazy must be a boolean, array of strings, or a function");
    if (typeof a != "boolean")
      throw new Error(".strictNamespace must be a boolean, or undefined");
    if (typeof o != "boolean")
      throw new Error(".mjsStrictNamespace must be a boolean, or undefined");
    let D = /* @__PURE__ */ i((N) => Sn.template.expression.ast`
    (function(){
      throw new Error(
        "The CommonJS '" + "${N}" + "' variable is not available in ES6 modules." +
        "Consider setting setting sourceType:script or sourceType:unambiguous in your " +
        "Babel config for this file.");
    })()
  `, "getAssertion"), C = {
      ReferencedIdentifier(N) {
        let I = N.node.name;
        if (I !== "module" && I !== "exports") return;
        let M = N.scope.getBinding(I);
        this.scope.getBinding(I) !== M || N.parentPath.isObjectProperty({
          value: N.node
        }) && N.parentPath.parentPath.isObjectPattern() || N.parentPath.isAssignmentExpression({
          left: N.node
        }) || N.isAssignmentExpression({
          left: N.node
        }) || N.replaceWith(D(I));
      },
      UpdateExpression(N) {
        let I = N.get("argument");
        if (!I.isIdentifier()) return;
        let M = I.node.name;
        if (M !== "module" && M !== "exports") return;
        let q = N.scope.getBinding(M);
        this.scope.getBinding(M) === q && N.replaceWith(Sn.types.assignmentExpression(N.node.operator[0] + "=", I.node, D(M)));
      },
      AssignmentExpression(N) {
        let I = N.get("left");
        if (I.isIdentifier()) {
          let M = I.node.name;
          if (M !== "module" && M !== "exports") return;
          let q = N.scope.getBinding(M);
          if (this.scope.getBinding(M) !== q) return;
          let W = N.get("right");
          W.replaceWith(Sn.types.sequenceExpression([W.node, D(M)]));
        } else if (I.isPattern()) {
          let M = I.getOuterBindingIdentifiers(), q = Object.keys(M).filter((V) => V !== "module" && V !== "exports" ? !1 : this.scope.getBinding(
          V) === N.scope.getBinding(V))[0];
          if (q) {
            let V = N.get("right");
            V.replaceWith(Sn.types.sequenceExpression([V.node, D(q)]));
          }
        }
      }
    };
    return {
      name: "transform-modules-commonjs",
      pre() {
        this.file.set("@babel/plugin-transform-modules-*", "commonjs"), d && (0, rA.defineCommonJSHook)(this.file, (0, N6e.lazyImportsHook)(
        d));
      },
      visitor: {
        ["CallExpression" + (e.types.importExpression ? "|ImportExpression" : "")](N) {
          if (!this.file.has("@babel/plugin-proposal-dynamic-import") || N.isCallExpression() && !Sn.types.isImport(N.node.callee)) return;
          let {
            scope: I
          } = N;
          do
            I.rename("require");
          while (I = I.parent);
          (0, O6e.transformDynamicImport)(N, f, this.file);
        },
        Program: {
          exit(N, I) {
            if (!(0, wo.isModule)(N)) return;
            N.scope.rename("exports"), N.scope.rename("module"), N.scope.rename("require"), N.scope.rename("__filename"), N.scope.rename("__\
dirname"), m || ((0, _6e.default)(N, /* @__PURE__ */ new Set(["module", "exports"]), !1), N.traverse(C, {
              scope: N.scope
            }));
            let M = (0, wo.getModuleName)(this.file.opts, t);
            M && (M = Sn.types.stringLiteral(M));
            let q = (0, rA.makeInvokers)(this.file), {
              meta: V,
              headers: W
            } = (0, wo.rewriteModuleStatementsAndPrepareHeader)(N, {
              exportName: "exports",
              constantReexports: h,
              enumerableModuleMeta: g,
              strict: u,
              strictMode: c,
              allowTopLevelThis: l,
              noInterop: f,
              importInterop: p,
              wrapReference: q.wrapReference,
              getWrapperPayload: q.getWrapperPayload,
              esNamespaceOnly: typeof I.filename == "string" && /\.mjs$/.test(I.filename) ? o : a,
              noIncompleteNsImportDetection: E,
              filename: this.file.opts.filename
            });
            for (let [j, ae] of V.source) {
              let pe = Sn.types.callExpression(Sn.types.identifier("require"), [Sn.types.stringLiteral(j)]), Ie;
              if ((0, wo.isSideEffectImport)(ae)) {
                if (d && ae.wrap === "function")
                  throw new Error("Assertion failure");
                Ie = Sn.types.expressionStatement(pe);
              } else {
                var Y;
                let F = (0, wo.wrapInterop)(N, pe, ae.interop) || pe;
                if (ae.wrap) {
                  let L = q.buildRequireWrapper(ae.name, F, ae.wrap, ae.referenced);
                  if (L === !1) continue;
                  Ie = L;
                }
                (Y = Ie) != null || (Ie = Sn.template.statement.ast`
                var ${ae.name} = ${F};
              `);
              }
              Ie.loc = ae.loc, W.push(Ie), W.push(...(0, wo.buildNamespaceInitStatements)(V, ae, h, q.wrapReference));
            }
            (0, wo.ensureStatementsHoisted)(W), N.unshiftContainer("body", W), N.get("body").forEach((j) => {
              W.indexOf(j.node) !== -1 && j.isVariableDeclaration() && j.scope.registerDeclaration(j);
            });
          }
        }
      }
    };
  });
});

// ../node_modules/@babel/preset-typescript/lib/index.js
var a7 = y((sA) => {
  "use strict";
  Object.defineProperty(sA, "__esModule", { value: !0 });
  var n7 = $l(), R6e = Y9();
  X9();
  var k6e = r7(), F6e = tm();
  function i7(e) {
    return e && e.__esModule ? e : { default: e };
  }
  i(i7, "_interopDefault");
  var s7 = /* @__PURE__ */ i7(R6e), L6e = /* @__PURE__ */ i7(k6e), ki = new F6e.OptionValidator("@babel/preset-typescript");
  function B6e(e = {}) {
    let {
      allowNamespaces: t = !0,
      jsxPragma: r,
      onlyRemoveTypeImports: s
    } = e, n = {
      ignoreExtensions: "ignoreExtensions",
      allowNamespaces: "allowNamespaces",
      disallowAmbiguousJSXLike: "disallowAmbiguousJSXLike",
      jsxPragma: "jsxPragma",
      jsxPragmaFrag: "jsxPragmaFrag",
      onlyRemoveTypeImports: "onlyRemoveTypeImports",
      optimizeConstEnums: "optimizeConstEnums",
      rewriteImportExtensions: "rewriteImportExtensions",
      allExtensions: "allExtensions",
      isTSX: "isTSX"
    }, a = ki.validateStringOption(n.jsxPragmaFrag, e.jsxPragmaFrag, "React.Fragment");
    {
      var o = ki.validateBooleanOption(n.allExtensions, e.allExtensions, !1), l = ki.validateBooleanOption(n.isTSX, e.isTSX, !1);
      l && ki.invariant(o, "isTSX:true requires allExtensions:true");
    }
    let u = ki.validateBooleanOption(n.ignoreExtensions, e.ignoreExtensions, !1), c = ki.validateBooleanOption(n.disallowAmbiguousJSXLike, e.
    disallowAmbiguousJSXLike, !1);
    c && ki.invariant(o, "disallowAmbiguousJSXLike:true requires allExtensions:true");
    let f = ki.validateBooleanOption(n.optimizeConstEnums, e.optimizeConstEnums, !1), p = ki.validateBooleanOption(n.rewriteImportExtensions,
    e.rewriteImportExtensions, !1), d = {
      ignoreExtensions: u,
      allowNamespaces: t,
      disallowAmbiguousJSXLike: c,
      jsxPragma: r,
      jsxPragmaFrag: a,
      onlyRemoveTypeImports: s,
      optimizeConstEnums: f,
      rewriteImportExtensions: p
    };
    return d.allExtensions = o, d.isTSX = l, d;
  }
  i(B6e, "normalizeOptions");
  var M6e = n7.declare(function({
    types: e
  }) {
    return {
      name: "preset-typescript/plugin-rewrite-ts-imports",
      visitor: {
        "ImportDeclaration|ExportAllDeclaration|ExportNamedDeclaration"({
          node: t
        }) {
          let {
            source: r
          } = t;
          (e.isImportDeclaration(t) ? t.importKind : t.exportKind) === "value" && r && /[\\/]/.test(r.value) && (r.value = r.value.replace(/(\.[mc]?)ts$/,
          "$1js").replace(/\.tsx$/, ".js"));
        }
      }
    };
  }), j6e = n7.declarePreset((e, t) => {
    e.assertVersion(7);
    let {
      allExtensions: r,
      ignoreExtensions: s,
      allowNamespaces: n,
      disallowAmbiguousJSXLike: a,
      isTSX: o,
      jsxPragma: l,
      jsxPragmaFrag: u,
      onlyRemoveTypeImports: c,
      optimizeConstEnums: f,
      rewriteImportExtensions: p
    } = B6e(t), d = /* @__PURE__ */ i((h) => ({
      allowDeclareFields: t.allowDeclareFields,
      allowNamespaces: n,
      disallowAmbiguousJSXLike: h,
      jsxPragma: l,
      jsxPragmaFrag: u,
      onlyRemoveTypeImports: c,
      optimizeConstEnums: f
    }), "pluginOptions"), m = /* @__PURE__ */ i((h, g) => [[s7.default, Object.assign({
      isTSX: h
    }, d(g))]], "getPlugins");
    return {
      plugins: p ? [M6e] : [],
      overrides: r || s ? [{
        plugins: m(o, a)
      }] : [{
        test: /\.ts$/,
        plugins: m(!1, !1)
      }, {
        test: /\.mts$/,
        sourceType: "module",
        plugins: m(!1, !0)
      }, {
        test: /\.cts$/,
        sourceType: "unambiguous",
        plugins: [[L6e.default, {
          allowTopLevelThis: !0
        }], [s7.default, d(!0)]]
      }, {
        test: /\.tsx$/,
        plugins: m(!0, !1)
      }]
    };
  });
  sA.default = j6e;
});

// ../node_modules/@babel/core/lib/config/files/module-types.js
var cA = y((Nf) => {
  "use strict";
  Object.defineProperty(Nf, "__esModule", {
    value: !0
  });
  Nf.default = V6e;
  Nf.supportsESM = void 0;
  var o7 = xl();
  function oA() {
    let e = Q("path");
    return oA = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(oA, "_path");
  function u7() {
    let e = Q("url");
    return u7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_url"), e;
  }
  i(u7, "_url");
  function lA() {
    let e = bh();
    return lA = /* @__PURE__ */ i(function() {
      return e;
    }, "_semver"), e;
  }
  i(lA, "_semver");
  function c7() {
    let e = Ka();
    return c7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_debug"), e;
  }
  i(c7, "_debug");
  var f7 = Si(), uA = co(), q6e = tP();
  function l7(e, t, r, s, n, a, o) {
    try {
      var l = e[a](o), u = l.value;
    } catch (c) {
      r(c);
      return;
    }
    l.done ? t(u) : Promise.resolve(u).then(s, n);
  }
  i(l7, "asyncGeneratorStep");
  function $6e(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(s, n) {
        var a = e.apply(t, r);
        function o(u) {
          l7(a, s, n, o, l, "next", u);
        }
        i(o, "_next");
        function l(u) {
          l7(a, s, n, o, l, "throw", u);
        }
        i(l, "_throw"), o(void 0);
      });
    };
  }
  i($6e, "_asyncToGenerator");
  var U6e = c7()("babel:config:loading:files:module-types");
  try {
    iA = j5();
  } catch {
  }
  var iA, $ot = Nf.supportsESM = lA().satisfies(process.versions.node, "^12.17 || >=13.2");
  function* V6e(e, t) {
    switch (oA().extname(e)) {
      case ".cjs":
        return aA(e, arguments[2]);
      case ".mjs":
        break;
      case ".cts":
        return W6e(e);
      default:
        try {
          return aA(e, arguments[2]);
        } catch (r) {
          if (r.code !== "ERR_REQUIRE_ESM") throw r;
        }
    }
    if (yield* (0, o7.isAsync)())
      return yield* (0, o7.waitFor)(H6e(e));
    throw new uA.default(t, e);
  }
  i(V6e, "loadCodeDefault");
  function W6e(e) {
    let t = ".cts", r = !!(Q.extensions[".ts"] || Q.extensions[".cts"] || Q.extensions[".mts"]), s;
    if (!r) {
      let n = {
        babelrc: !1,
        configFile: !1,
        sourceType: "unambiguous",
        sourceMaps: "inline",
        sourceFileName: oA().basename(e),
        presets: [[G6e(e), Object.assign({
          onlyRemoveTypeImports: !0,
          optimizeConstEnums: !0
        }, {
          allowDeclareFields: !0
        })]]
      };
      s = /* @__PURE__ */ i(function(a, o) {
        if (s && o.endsWith(t))
          try {
            return a._compile((0, q6e.transformFileSync)(o, Object.assign({}, n, {
              filename: o
            })).code, o);
          } catch (l) {
            if (!r) {
              let u = q5();
              lA().lt(u.version, "7.21.4") && console.error("`.cts` configuration file failed to load, please try to update `@babel/preset-t\
ypescript`.");
            }
            throw l;
          }
        return Q.extensions[".js"](a, o);
      }, "handler"), Q.extensions[t] = s;
    }
    try {
      return aA(e);
    } finally {
      r || (Q.extensions[t] === s && delete Q.extensions[t], s = void 0);
    }
  }
  i(W6e, "loadCtsDefault");
  var nA = /* @__PURE__ */ new Set();
  function aA(e) {
    if (nA.has(e))
      return U6e("Auto-ignoring usage of config %o.", e), {};
    let t;
    try {
      nA.add(e), t = (0, f7.endHiddenCallStack)(Q)(e);
    } finally {
      nA.delete(e);
    }
    {
      var r;
      return (r = t) != null && r.__esModule ? t.default || (arguments[1] ? t : void 0) : t;
    }
  }
  i(aA, "loadCjsDefault");
  var H6e = (0, f7.endHiddenCallStack)(function() {
    var e = $6e(function* (r) {
      let s = (0, u7().pathToFileURL)(r).toString();
      {
        if (!iA)
          throw new uA.default(`Internal error: Native ECMAScript modules aren't supported by this platform.
`, r);
        return (yield iA(s)).default;
      }
    });
    function t(r) {
      return e.apply(this, arguments);
    }
    return i(t, "loadMjsDefault"), t;
  }());
  function G6e(e) {
    try {
      return a7();
    } catch (t) {
      if (t.code !== "MODULE_NOT_FOUND") throw t;
      let r = "You appear to be using a .cts file as Babel configuration, but the `@babel/preset-typescript` package was not found: please i\
nstall it!";
      throw process.versions.pnp && (r += `
If you are using Yarn Plug'n'Play, you may also need to add the following configuration to your .yarnrc.yml file:

packageExtensions:
	"@babel/core@*":
		peerDependencies:
			"@babel/preset-typescript": "*"
`), new uA.default(r, e);
    }
  }
  i(G6e, "getTSPreset");
});

// ../node_modules/@babel/core/lib/config/files/configuration.js
var S7 = y((Fi) => {
  "use strict";
  Object.defineProperty(Fi, "__esModule", {
    value: !0
  });
  Fi.ROOT_CONFIG_FILENAMES = void 0;
  Fi.findConfigUpwards = a5e;
  Fi.findRelativeConfig = o5e;
  Fi.findRootConfig = l5e;
  Fi.loadConfig = u5e;
  Fi.resolveShowConfigPath = c5e;
  function d7() {
    let e = Ka();
    return d7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_debug"), e;
  }
  i(d7, "_debug");
  function fA() {
    let e = Q("fs");
    return fA = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs"), e;
  }
  i(fA, "_fs");
  function _s() {
    let e = Q("path");
    return _s = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(_s, "_path");
  function h7() {
    let e = g4();
    return h7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_json"), e;
  }
  i(h7, "_json");
  function m7() {
    let e = Cs();
    return m7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(m7, "_gensync");
  var y7 = uo(), K6e = hT(), g7 = rT(), Y6e = cA(), X6e = lx(), Tn = co(), z6e = Ih(), J6e = Si(), pA = d7()("babel:config:loading:files:con\
figuration"), b7 = Fi.ROOT_CONFIG_FILENAMES = ["babel.config.js", "babel.config.cjs", "babel.config.mjs", "babel.config.json", "babel.config\
.cts"], Q6e = [".babelrc", ".babelrc.js", ".babelrc.cjs", ".babelrc.mjs", ".babelrc.json", ".babelrc.cts"], Z6e = ".babelignore", e5e = (0, y7.
  makeWeakCache)(/* @__PURE__ */ i(function* (t, r) {
    return yield* [], {
      options: (0, J6e.endHiddenCallStack)(t)((0, K6e.makeConfigAPI)(r)),
      cacheNeedsConfiguration: !r.configured()
    };
  }, "runConfig"));
  function* t5e(e, t) {
    if (!fA().existsSync(e)) return null;
    let r = yield* (0, Y6e.default)(e, "You appear to be using a native ECMAScript module configuration file, which is only supported when r\
unning Babel asynchronously."), s = !1;
    if (typeof r == "function" && ({
      options: r,
      cacheNeedsConfiguration: s
    } = yield* e5e(r, t)), !r || typeof r != "object" || Array.isArray(r))
      throw new Tn.default("Configuration should be an exported JavaScript object.", e);
    if (typeof r.then == "function")
      throw r.catch == null || r.catch(() => {
      }), new Tn.default("You appear to be using an async configuration, which your current version of Babel does not support. We may add su\
pport for this in the future, but if you're on the most recent version of @babel/core and still seeing this error, then you'll need to synch\
ronously return your config.", e);
    return s && f5e(e), r5e(r, e);
  }
  i(t5e, "readConfigCode");
  var p7 = /* @__PURE__ */ new WeakMap();
  function r5e(e, t) {
    let r = p7.get(e);
    r || p7.set(e, r = /* @__PURE__ */ new Map());
    let s = r.get(t);
    return s || (s = {
      filepath: t,
      dirname: _s().dirname(t),
      options: e
    }, r.set(t, s)), s;
  }
  i(r5e, "buildConfigFileObject");
  var s5e = (0, y7.makeWeakCacheSync)((e) => {
    let t = e.options.babel;
    if (typeof t > "u") return null;
    if (typeof t != "object" || Array.isArray(t) || t === null)
      throw new Tn.default(".babel property must be an object", e.filepath);
    return {
      filepath: e.filepath,
      dirname: e.dirname,
      options: t
    };
  }), n5e = (0, g7.makeStaticFileCache)((e, t) => {
    let r;
    try {
      r = h7().parse(t);
    } catch (s) {
      throw new Tn.default(`Error while parsing config - ${s.message}`, e);
    }
    if (!r) throw new Tn.default("No config detected", e);
    if (typeof r != "object")
      throw new Tn.default(`Config returned typeof ${typeof r}`, e);
    if (Array.isArray(r))
      throw new Tn.default("Expected config object but found array", e);
    return delete r.$schema, {
      filepath: e,
      dirname: _s().dirname(e),
      options: r
    };
  }), i5e = (0, g7.makeStaticFileCache)((e, t) => {
    let r = _s().dirname(e), s = t.split(`
`).map((n) => n.replace(/#(.*?)$/, "").trim()).filter((n) => !!n);
    for (let n of s)
      if (n[0] === "!")
        throw new Tn.default("Negation of file paths is not supported.", e);
    return {
      filepath: e,
      dirname: _s().dirname(e),
      ignore: s.map((n) => (0, X6e.default)(n, r))
    };
  });
  function a5e(e) {
    let t = e;
    for (; ; ) {
      for (let s of b7)
        if (fA().existsSync(_s().join(t, s)))
          return t;
      let r = _s().dirname(t);
      if (t === r) break;
      t = r;
    }
    return null;
  }
  i(a5e, "findConfigUpwards");
  function* o5e(e, t, r) {
    let s = null, n = null, a = _s().dirname(e.filepath);
    for (let l of e.directories) {
      if (!s) {
        var o;
        s = yield* E7(Q6e, l, t, r, ((o = e.pkg) == null ? void 0 : o.dirname) === l ? s5e(e.pkg) : null);
      }
      if (!n) {
        let u = _s().join(l, Z6e);
        n = yield* i5e(u), n && pA("Found ignore %o from %o.", n.filepath, a);
      }
    }
    return {
      config: s,
      ignore: n
    };
  }
  i(o5e, "findRelativeConfig");
  function l5e(e, t, r) {
    return E7(b7, e, t, r);
  }
  i(l5e, "findRootConfig");
  function* E7(e, t, r, s, n = null) {
    let o = (yield* m7().all(e.map((l) => v7(_s().join(t, l), r, s)))).reduce((l, u) => {
      if (u && l)
        throw new Tn.default(`Multiple configuration files found. Please remove one:
 - ${_s().basename(l.filepath)}
 - ${u.filepath}
from ${t}`);
      return u || l;
    }, n);
    return o && pA("Found configuration %o from %o.", o.filepath, t), o;
  }
  i(E7, "loadOneConfig");
  function* u5e(e, t, r, s) {
    let n = (((o, l) => (o = o.split("."), l = l.split("."), +o[0] > +l[0] || o[0] == l[0] && +o[1] >= +l[1]))(process.versions.node, "8.9") ?
    Q.resolve : (o, {
      paths: [l]
    }, u = Q("module")) => {
      let c = u._findPath(o, u._nodeModulePaths(l).concat(l));
      if (c) return c;
      throw c = new Error(`Cannot resolve module '${o}'`), c.code = "MODULE_NOT_FOUND", c;
    })(e, {
      paths: [t]
    }), a = yield* v7(n, r, s);
    if (!a)
      throw new Tn.default("Config file contains no configuration data", n);
    return pA("Loaded config %o from %o.", e, t), a;
  }
  i(u5e, "loadConfig");
  function v7(e, t, r) {
    switch (_s().extname(e)) {
      case ".js":
      case ".cjs":
      case ".mjs":
      case ".cts":
        return t5e(e, {
          envName: t,
          caller: r
        });
      default:
        return n5e(e);
    }
  }
  i(v7, "readConfig");
  function* c5e(e) {
    let t = process.env.BABEL_SHOW_CONFIG_FOR;
    if (t != null) {
      let r = _s().resolve(e, t);
      if (!(yield* z6e.stat(r)).isFile())
        throw new Error(`${r}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);
      return r;
    }
    return null;
  }
  i(c5e, "resolveShowConfigPath");
  function f5e(e) {
    throw new Tn.default(`Caching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured
for various types of caching, using the first param of their handler functions:

module.exports = function(api) {
  // The API exposes the following:

  // Cache the returned value forever and don't call this function again.
  api.cache(true);

  // Don't cache at all. Not recommended because it will be very slow.
  api.cache(false);

  // Cached based on the value of some function. If this function returns a value different from
  // a previously-encountered value, the plugins will re-evaluate.
  var env = api.cache(() => process.env.NODE_ENV);

  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for
  // any possible NODE_ENV value that might come up during plugin execution.
  var isProd = api.cache(() => process.env.NODE_ENV === "production");

  // .cache(fn) will perform a linear search though instances to find the matching plugin based
  // based on previous instantiated plugins. If you want to recreate the plugin and discard the
  // previous instance whenever something changes, you may use:
  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === "production");

  // Note, we also expose the following more-verbose versions of the above examples:
  api.cache.forever(); // api.cache(true)
  api.cache.never();   // api.cache(false)
  api.cache.using(fn); // api.cache(fn)

  // Return the value that will be cached.
  return { };
};`, e);
  }
  i(f5e, "throwConfigError");
});

// ../node_modules/@babel/core/lib/vendor/import-meta-resolve.js
var H7 = y((uy) => {
  "use strict";
  Object.defineProperty(uy, "__esModule", {
    value: !0
  });
  uy.moduleResolve = W7;
  uy.resolve = i9e;
  function Gn() {
    let e = Q("assert");
    return Gn = /* @__PURE__ */ i(function() {
      return e;
    }, "_assert"), e;
  }
  i(Gn, "_assert");
  function Jl() {
    let e = p5e(Q("fs"), !0);
    return Jl = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs"), e;
  }
  i(Jl, "_fs");
  function Ca() {
    let e = Q("process");
    return Ca = /* @__PURE__ */ i(function() {
      return e;
    }, "_process"), e;
  }
  i(Ca, "_process");
  function De() {
    let e = Q("url");
    return De = /* @__PURE__ */ i(function() {
      return e;
    }, "_url"), e;
  }
  i(De, "_url");
  function oy() {
    let e = Q("path");
    return oy = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(oy, "_path");
  function bA() {
    let e = Q("module");
    return bA = /* @__PURE__ */ i(function() {
      return e;
    }, "_module"), e;
  }
  i(bA, "_module");
  function R7() {
    let e = Q("v8");
    return R7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_v"), e;
  }
  i(R7, "_v");
  function Ff() {
    let e = Q("util");
    return Ff = /* @__PURE__ */ i(function() {
      return e;
    }, "_util"), e;
  }
  i(Ff, "_util");
  function k7(e) {
    if (typeof WeakMap != "function") return null;
    var t = /* @__PURE__ */ new WeakMap(), r = /* @__PURE__ */ new WeakMap();
    return (k7 = /* @__PURE__ */ i(function(s) {
      return s ? r : t;
    }, "_getRequireWildcardCache"))(e);
  }
  i(k7, "_getRequireWildcardCache");
  function p5e(e, t) {
    if (!t && e && e.__esModule) return e;
    if (e === null || typeof e != "object" && typeof e != "function") return { default: e };
    var r = k7(t);
    if (r && r.has(e)) return r.get(e);
    var s = { __proto__: null }, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var a in e) if (a !== "default" && Object.prototype.hasOwnProperty.call(e, a)) {
      var o = n ? Object.getOwnPropertyDescriptor(e, a) : null;
      o && (o.get || o.set) ? Object.defineProperty(s, a, o) : s[a] = e[a];
    }
    return s.default = e, r && r.set(e, s), s;
  }
  i(p5e, "_interopRequireWildcard");
  var d5e = {}.hasOwnProperty, h5e = /^([A-Z][a-z\d]*)+$/, m5e = /* @__PURE__ */ new Set(["string", "function", "number", "object", "Functio\
n", "Object", "boolean", "bigint", "symbol"]), Kr = {};
  function dA(e, t = "and") {
    return e.length < 3 ? e.join(` ${t} `) : `${e.slice(0, -1).join(", ")}, ${t} ${e[e.length - 1]}`;
  }
  i(dA, "formatList");
  var F7 = /* @__PURE__ */ new Map(), y5e = "__node_internal_", T7;
  Kr.ERR_INVALID_ARG_TYPE = xn("ERR_INVALID_ARG_TYPE", (e, t, r) => {
    Gn()(typeof e == "string", "'name' must be a string"), Array.isArray(t) || (t = [t]);
    let s = "The ";
    if (e.endsWith(" argument"))
      s += `${e} `;
    else {
      let l = e.includes(".") ? "property" : "argument";
      s += `"${e}" ${l} `;
    }
    s += "must be ";
    let n = [], a = [], o = [];
    for (let l of t)
      Gn()(typeof l == "string", "All expected entries have to be of type string"), m5e.has(l) ? n.push(l.toLowerCase()) : h5e.exec(l) === null ?
      (Gn()(l !== "object", 'The value "object" should be written as "Object"'), o.push(l)) : a.push(l);
    if (a.length > 0) {
      let l = n.indexOf("object");
      l !== -1 && (n.slice(l, 1), a.push("Object"));
    }
    return n.length > 0 && (s += `${n.length > 1 ? "one of type" : "of type"} ${dA(n, "or")}`, (a.length > 0 || o.length > 0) && (s += " or ")),
    a.length > 0 && (s += `an instance of ${dA(a, "or")}`, o.length > 0 && (s += " or ")), o.length > 0 && (o.length > 1 ? s += `one of ${dA(
    o, "or")}` : (o[0].toLowerCase() !== o[0] && (s += "an "), s += `${o[0]}`)), s += `. Received ${S5e(r)}`, s;
  }, TypeError);
  Kr.ERR_INVALID_MODULE_SPECIFIER = xn("ERR_INVALID_MODULE_SPECIFIER", (e, t, r = void 0) => `Invalid module "${e}" ${t}${r ? ` imported fro\
m ${r}` : ""}`, TypeError);
  Kr.ERR_INVALID_PACKAGE_CONFIG = xn("ERR_INVALID_PACKAGE_CONFIG", (e, t, r) => `Invalid package config ${e}${t ? ` while importing ${t}` : ""}${r ?
  `. ${r}` : ""}`, Error);
  Kr.ERR_INVALID_PACKAGE_TARGET = xn("ERR_INVALID_PACKAGE_TARGET", (e, t, r, s = !1, n = void 0) => {
    let a = typeof r == "string" && !s && r.length > 0 && !r.startsWith("./");
    return t === "." ? (Gn()(s === !1), `Invalid "exports" main target ${JSON.stringify(r)} defined in the package config ${e}package.json${n ?
    ` imported from ${n}` : ""}${a ? '; targets must start with "./"' : ""}`) : `Invalid "${s ? "imports" : "exports"}" target ${JSON.stringify(
    r)} defined for '${t}' in the package config ${e}package.json${n ? ` imported from ${n}` : ""}${a ? '; targets must start with "./"' : ""}`;
  }, Error);
  Kr.ERR_MODULE_NOT_FOUND = xn("ERR_MODULE_NOT_FOUND", (e, t, r = !1) => `Cannot find ${r ? "module" : "package"} '${e}' imported from ${t}`,
  Error);
  Kr.ERR_NETWORK_IMPORT_DISALLOWED = xn("ERR_NETWORK_IMPORT_DISALLOWED", "import of '%s' by %s is not supported: %s", Error);
  Kr.ERR_PACKAGE_IMPORT_NOT_DEFINED = xn("ERR_PACKAGE_IMPORT_NOT_DEFINED", (e, t, r) => `Package import specifier "${e}" is not defined${t ?
  ` in package ${t}package.json` : ""} imported from ${r}`, TypeError);
  Kr.ERR_PACKAGE_PATH_NOT_EXPORTED = xn("ERR_PACKAGE_PATH_NOT_EXPORTED", (e, t, r = void 0) => t === "." ? `No "exports" main defined in ${e}\
package.json${r ? ` imported from ${r}` : ""}` : `Package subpath '${t}' is not defined by "exports" in ${e}package.json${r ? ` imported fro\
m ${r}` : ""}`, Error);
  Kr.ERR_UNSUPPORTED_DIR_IMPORT = xn("ERR_UNSUPPORTED_DIR_IMPORT", "Directory import '%s' is not supported resolving ES modules imported fro\
m %s", Error);
  Kr.ERR_UNKNOWN_FILE_EXTENSION = xn("ERR_UNKNOWN_FILE_EXTENSION", (e, t) => `Unknown file extension "${e}" for ${t}`, TypeError);
  Kr.ERR_INVALID_ARG_VALUE = xn("ERR_INVALID_ARG_VALUE", (e, t, r = "is invalid") => {
    let s = (0, Ff().inspect)(t);
    return s.length > 128 && (s = `${s.slice(0, 128)}...`), `The ${e.includes(".") ? "property" : "argument"} '${e}' ${r}. Received ${s}`;
  }, TypeError);
  function xn(e, t, r) {
    return F7.set(e, t), g5e(r, e);
  }
  i(xn, "createError");
  function g5e(e, t) {
    return r;
    function r(...s) {
      let n = Error.stackTraceLimit;
      gA() && (Error.stackTraceLimit = 0);
      let a = new e();
      gA() && (Error.stackTraceLimit = n);
      let o = v5e(t, s, a);
      return Object.defineProperties(a, {
        message: {
          value: o,
          enumerable: !1,
          writable: !0,
          configurable: !0
        },
        toString: {
          value() {
            return `${this.name} [${t}]: ${this.message}`;
          },
          enumerable: !1,
          writable: !0,
          configurable: !0
        }
      }), E5e(a), a.code = t, a;
    }
  }
  i(g5e, "makeNodeErrorWithCode");
  function gA() {
    try {
      if (R7().startupSnapshot.isBuildingSnapshot())
        return !1;
    } catch {
    }
    let e = Object.getOwnPropertyDescriptor(Error, "stackTraceLimit");
    return e === void 0 ? Object.isExtensible(Error) : d5e.call(e, "writable") && e.writable !== void 0 ? e.writable : e.set !== void 0;
  }
  i(gA, "isErrorStackTraceLimitWritable");
  function b5e(e) {
    let t = y5e + e.name;
    return Object.defineProperty(e, "name", {
      value: t
    }), e;
  }
  i(b5e, "hideStackFrames");
  var E5e = b5e(function(e) {
    let t = gA();
    return t && (T7 = Error.stackTraceLimit, Error.stackTraceLimit = Number.POSITIVE_INFINITY), Error.captureStackTrace(e), t && (Error.stackTraceLimit =
    T7), e;
  });
  function v5e(e, t, r) {
    let s = F7.get(e);
    if (Gn()(s !== void 0, "expected `message` to be found"), typeof s == "function")
      return Gn()(s.length <= t.length, `Code: ${e}; The provided arguments length (${t.length}) does not match the required ones (${s.length}\
).`), Reflect.apply(s, r, t);
    let n = /%[dfijoOs]/g, a = 0;
    for (; n.exec(s) !== null; ) a++;
    return Gn()(a === t.length, `Code: ${e}; The provided arguments length (${t.length}) does not match the required ones (${a}).`), t.length ===
    0 ? s : (t.unshift(s), Reflect.apply(Ff().format, null, t));
  }
  i(v5e, "getMessage");
  function S5e(e) {
    if (e == null)
      return String(e);
    if (typeof e == "function" && e.name)
      return `function ${e.name}`;
    if (typeof e == "object")
      return e.constructor && e.constructor.name ? `an instance of ${e.constructor.name}` : `${(0, Ff().inspect)(e, {
        depth: -1
      })}`;
    let t = (0, Ff().inspect)(e, {
      colors: !1
    });
    return t.length > 28 && (t = `${t.slice(0, 25)}...`), `type ${typeof e} (${t})`;
  }
  i(S5e, "determineSpecificType");
  var Rf = {}.hasOwnProperty, {
    ERR_INVALID_PACKAGE_CONFIG: T5e
  } = Kr, x7 = /* @__PURE__ */ new Map(), x5e = {
    read: P5e
  }, L7 = x5e;
  function P5e(e, {
    base: t,
    specifier: r
  }) {
    let s = x7.get(e);
    if (s)
      return s;
    let n;
    try {
      n = Jl().default.readFileSync(oy().toNamespacedPath(e), "utf8");
    } catch (o) {
      let l = o;
      if (l.code !== "ENOENT")
        throw l;
    }
    let a = {
      exists: !1,
      pjsonPath: e,
      main: void 0,
      name: void 0,
      type: "none",
      exports: void 0,
      imports: void 0
    };
    if (n !== void 0) {
      let o;
      try {
        o = JSON.parse(n);
      } catch (l) {
        let u = l, c = new T5e(e, (t ? `"${r}" from ` : "") + (0, De().fileURLToPath)(t || r), u.message);
        throw c.cause = u, c;
      }
      a.exists = !0, Rf.call(o, "name") && typeof o.name == "string" && (a.name = o.name), Rf.call(o, "main") && typeof o.main == "string" &&
      (a.main = o.main), Rf.call(o, "exports") && (a.exports = o.exports), Rf.call(o, "imports") && (a.imports = o.imports), Rf.call(o, "typ\
e") && (o.type === "commonjs" || o.type === "module") && (a.type = o.type);
    }
    return x7.set(e, a), a;
  }
  i(P5e, "read");
  function EA(e) {
    let t = new (De()).URL("package.json", e);
    for (; !t.pathname.endsWith("node_modules/package.json"); ) {
      let n = L7.read((0, De().fileURLToPath)(t), {
        specifier: e
      });
      if (n.exists)
        return n;
      let a = t;
      if (t = new (De()).URL("../package.json", t), t.pathname === a.pathname)
        break;
    }
    return {
      pjsonPath: (0, De().fileURLToPath)(t),
      exists: !1,
      main: void 0,
      name: void 0,
      type: "none",
      exports: void 0,
      imports: void 0
    };
  }
  i(EA, "getPackageScopeConfig");
  function P7(e) {
    return EA(e).type;
  }
  i(P7, "getPackageType");
  var {
    ERR_UNKNOWN_FILE_EXTENSION: A5e
  } = Kr, C5e = {}.hasOwnProperty, w5e = {
    __proto__: null,
    ".cjs": "commonjs",
    ".js": "module",
    ".json": "json",
    ".mjs": "module"
  };
  function D5e(e) {
    return e && /\s*(text|application)\/javascript\s*(;\s*charset=utf-?8\s*)?/i.test(e) ? "module" : e === "application/json" ? "json" : null;
  }
  i(D5e, "mimeToFormat");
  var A7 = {
    __proto__: null,
    "data:": I5e,
    "file:": O5e,
    "http:": C7,
    "https:": C7,
    "node:"() {
      return "builtin";
    }
  };
  function I5e(e) {
    let {
      1: t
    } = /^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(e.pathname) || [null, null, null];
    return D5e(t);
  }
  i(I5e, "getDataProtocolModuleFormat");
  function _5e(e) {
    let t = e.pathname, r = t.length;
    for (; r--; ) {
      let s = t.codePointAt(r);
      if (s === 47)
        return "";
      if (s === 46)
        return t.codePointAt(r - 1) === 47 ? "" : t.slice(r);
    }
    return "";
  }
  i(_5e, "extname");
  function O5e(e, t, r) {
    let s = _5e(e);
    if (s === ".js") {
      let o = P7(e);
      return o !== "none" ? o : "commonjs";
    }
    if (s === "") {
      let o = P7(e);
      return o === "none" || o === "commonjs" ? "commonjs" : "module";
    }
    let n = w5e[s];
    if (n) return n;
    if (r)
      return;
    let a = (0, De().fileURLToPath)(e);
    throw new A5e(s, a);
  }
  i(O5e, "getFileProtocolModuleFormat");
  function C7() {
  }
  i(C7, "getHttpProtocolModuleFormat");
  function B7(e, t) {
    let r = e.protocol;
    return C5e.call(A7, r) && A7[r](e, t, !0) || null;
  }
  i(B7, "defaultGetFormatWithoutErrors");
  var {
    ERR_INVALID_ARG_VALUE: N5e
  } = Kr, M7 = Object.freeze(["node", "import"]), R5e = new Set(M7);
  function k5e() {
    return M7;
  }
  i(k5e, "getDefaultConditions");
  function F5e() {
    return R5e;
  }
  i(F5e, "getDefaultConditionsSet");
  function L5e(e) {
    if (e !== void 0 && e !== k5e()) {
      if (!Array.isArray(e))
        throw new N5e("conditions", e, "expected an array");
      return new Set(e);
    }
    return F5e();
  }
  i(L5e, "getConditionsSet");
  var iy = RegExp.prototype[Symbol.replace], {
    ERR_NETWORK_IMPORT_DISALLOWED: hA,
    ERR_INVALID_MODULE_SPECIFIER: ly,
    ERR_INVALID_PACKAGE_CONFIG: j7,
    ERR_INVALID_PACKAGE_TARGET: B5e,
    ERR_MODULE_NOT_FOUND: vA,
    ERR_PACKAGE_IMPORT_NOT_DEFINED: M5e,
    ERR_PACKAGE_PATH_NOT_EXPORTED: j5e,
    ERR_UNSUPPORTED_DIR_IMPORT: q5e
  } = Kr, q7 = {}.hasOwnProperty, w7 = /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\|\/|$)/i,
  D7 = /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i,
  $5e = /^\.|%|\\/, ay = /\*/g, U5e = /%2f|%5c/i, I7 = /* @__PURE__ */ new Set(), V5e = /[/\\]{2}/;
  function _7(e, t, r, s, n, a, o) {
    if (Ca().noDeprecation)
      return;
    let l = (0, De().fileURLToPath)(s), u = V5e.exec(o ? e : t) !== null;
    Ca().emitWarning(`Use of deprecated ${u ? "double slash" : "leading or trailing slash matching"} resolving "${e}" for module request "${t}\
" ${t === r ? "" : `matched to "${r}" `}in the "${n ? "imports" : "exports"}" field module resolution of the package at ${l}${a ? ` imported\
 from ${(0, De().fileURLToPath)(a)}` : ""}.`, "DeprecationWarning", "DEP0166");
  }
  i(_7, "emitInvalidSegmentDeprecation");
  function O7(e, t, r, s) {
    if (Ca().noDeprecation || B7(e, {
      parentURL: r.href
    }) !== "module") return;
    let a = (0, De().fileURLToPath)(e.href), o = (0, De().fileURLToPath)(new (De()).URL(".", t)), l = (0, De().fileURLToPath)(r);
    s ? oy().resolve(o, s) !== a && Ca().emitWarning(`Package ${o} has a "main" field set to "${s}", excluding the full filename and extensi\
on to the resolved file at "${a.slice(o.length)}", imported from ${l}.
 Automatic extension resolution of the "main" field is deprecated for ES modules.`, "DeprecationWarning", "DEP0151") : Ca().emitWarning(`No \
"main" or "exports" field defined in the package.json for ${o} resolving the main entry point "${a.slice(o.length)}", imported from ${l}.
Default "index" lookups for the main are deprecated for ES modules.`, "DeprecationWarning", "DEP0151");
  }
  i(O7, "emitLegacyIndexDeprecation");
  function $7(e) {
    try {
      return (0, Jl().statSync)(e);
    } catch {
      return new (Jl()).Stats();
    }
  }
  i($7, "tryStatSync");
  function mA(e) {
    let t = (0, Jl().statSync)(e, {
      throwIfNoEntry: !1
    }), r = t ? t.isFile() : void 0;
    return r ?? !1;
  }
  i(mA, "fileExists");
  function W5e(e, t, r) {
    let s;
    if (t.main !== void 0) {
      if (s = new (De()).URL(t.main, e), mA(s)) return s;
      let o = [`./${t.main}.js`, `./${t.main}.json`, `./${t.main}.node`, `./${t.main}/index.js`, `./${t.main}/index.json`, `./${t.main}/inde\
x.node`], l = -1;
      for (; ++l < o.length && (s = new (De()).URL(o[l], e), !mA(s)); )
        s = void 0;
      if (s)
        return O7(s, e, r, t.main), s;
    }
    let n = ["./index.js", "./index.json", "./index.node"], a = -1;
    for (; ++a < n.length && (s = new (De()).URL(n[a], e), !mA(s)); )
      s = void 0;
    if (s)
      return O7(s, e, r, t.main), s;
    throw new vA((0, De().fileURLToPath)(new (De()).URL(".", e)), (0, De().fileURLToPath)(r));
  }
  i(W5e, "legacyMainResolve");
  function H5e(e, t, r) {
    if (U5e.exec(e.pathname) !== null)
      throw new ly(e.pathname, 'must not include encoded "/" or "\\" characters', (0, De().fileURLToPath)(t));
    let s;
    try {
      s = (0, De().fileURLToPath)(e);
    } catch (a) {
      let o = a;
      throw Object.defineProperty(o, "input", {
        value: String(e)
      }), Object.defineProperty(o, "module", {
        value: String(t)
      }), o;
    }
    let n = $7(s.endsWith("/") ? s.slice(-1) : s);
    if (n.isDirectory()) {
      let a = new q5e(s, (0, De().fileURLToPath)(t));
      throw a.url = String(e), a;
    }
    if (!n.isFile()) {
      let a = new vA(s || e.pathname, t && (0, De().fileURLToPath)(t), !0);
      throw a.url = String(e), a;
    }
    if (!r) {
      let a = (0, Jl().realpathSync)(s), {
        search: o,
        hash: l
      } = e;
      e = (0, De().pathToFileURL)(a + (s.endsWith(oy().sep) ? "/" : "")), e.search = o, e.hash = l;
    }
    return e;
  }
  i(H5e, "finalizeResolution");
  function G5e(e, t, r) {
    return new M5e(e, t && (0, De().fileURLToPath)(new (De()).URL(".", t)), (0, De().fileURLToPath)(r));
  }
  i(G5e, "importNotDefined");
  function yA(e, t, r) {
    return new j5e((0, De().fileURLToPath)(new (De()).URL(".", t)), e, r && (0, De().fileURLToPath)(r));
  }
  i(yA, "exportsNotFound");
  function K5e(e, t, r, s, n) {
    let a = `request is not a valid match in pattern "${t}" for the "${s ? "imports" : "exports"}" resolution of ${(0, De().fileURLToPath)(r)}`;
    throw new ly(e, a, n && (0, De().fileURLToPath)(n));
  }
  i(K5e, "throwInvalidSubpath");
  function kf(e, t, r, s, n) {
    return t = typeof t == "object" && t !== null ? JSON.stringify(t, null, "") : `${t}`, new B5e((0, De().fileURLToPath)(new (De()).URL(".",
    r)), e, t, s, n && (0, De().fileURLToPath)(n));
  }
  i(kf, "invalidPackageTarget");
  function Y5e(e, t, r, s, n, a, o, l, u) {
    if (t !== "" && !a && e[e.length - 1] !== "/") throw kf(r, e, s, o, n);
    if (!e.startsWith("./")) {
      if (o && !e.startsWith("../") && !e.startsWith("/")) {
        let d = !1;
        try {
          new (De()).URL(e), d = !0;
        } catch {
        }
        if (!d) {
          let m = a ? iy.call(ay, e, () => t) : e + t;
          return V7(m, s, u);
        }
      }
      throw kf(r, e, s, o, n);
    }
    if (w7.exec(e.slice(2)) !== null)
      if (D7.exec(e.slice(2)) === null) {
        if (!l) {
          let d = a ? r.replace("*", () => t) : r + t, m = a ? iy.call(ay, e, () => t) : e;
          _7(m, d, r, s, o, n, !0);
        }
      } else
        throw kf(r, e, s, o, n);
    let c = new (De()).URL(e, s), f = c.pathname, p = new (De()).URL(".", s).pathname;
    if (!f.startsWith(p)) throw kf(r, e, s, o, n);
    if (t === "") return c;
    if (w7.exec(t) !== null) {
      let d = a ? r.replace("*", () => t) : r + t;
      if (D7.exec(t) === null) {
        if (!l) {
          let m = a ? iy.call(ay, e, () => t) : e;
          _7(m, d, r, s, o, n, !1);
        }
      } else
        K5e(d, r, s, o, n);
    }
    return a ? new (De()).URL(iy.call(ay, c.href, () => t)) : new (De()).URL(t, c);
  }
  i(Y5e, "resolvePackageTargetString");
  function X5e(e) {
    let t = Number(e);
    return `${t}` !== e ? !1 : t >= 0 && t < 4294967295;
  }
  i(X5e, "isArrayIndex");
  function Ql(e, t, r, s, n, a, o, l, u) {
    if (typeof t == "string")
      return Y5e(t, r, s, e, n, a, o, l, u);
    if (Array.isArray(t)) {
      let c = t;
      if (c.length === 0) return null;
      let f, p = -1;
      for (; ++p < c.length; ) {
        let d = c[p], m;
        try {
          m = Ql(e, d, r, s, n, a, o, l, u);
        } catch (b) {
          let h = b;
          if (f = h, h.code === "ERR_INVALID_PACKAGE_TARGET") continue;
          throw b;
        }
        if (m !== void 0) {
          if (m === null) {
            f = null;
            continue;
          }
          return m;
        }
      }
      if (f == null)
        return null;
      throw f;
    }
    if (typeof t == "object" && t !== null) {
      let c = Object.getOwnPropertyNames(t), f = -1;
      for (; ++f < c.length; ) {
        let p = c[f];
        if (X5e(p))
          throw new j7((0, De().fileURLToPath)(e), n, '"exports" cannot contain numeric property keys.');
      }
      for (f = -1; ++f < c.length; ) {
        let p = c[f];
        if (p === "default" || u && u.has(p)) {
          let d = t[p], m = Ql(e, d, r, s, n, a, o, l, u);
          if (m === void 0) continue;
          return m;
        }
      }
      return null;
    }
    if (t === null)
      return null;
    throw kf(s, t, e, o, n);
  }
  i(Ql, "resolvePackageTarget");
  function z5e(e, t, r) {
    if (typeof e == "string" || Array.isArray(e)) return !0;
    if (typeof e != "object" || e === null) return !1;
    let s = Object.getOwnPropertyNames(e), n = !1, a = 0, o = -1;
    for (; ++o < s.length; ) {
      let l = s[o], u = l === "" || l[0] !== ".";
      if (a++ === 0)
        n = u;
      else if (n !== u)
        throw new j7((0, De().fileURLToPath)(t), r, `"exports" cannot contain some keys starting with '.' and some not. The exports object m\
ust either be an object of package subpath keys or an object of main entry condition name keys only.`);
    }
    return n;
  }
  i(z5e, "isConditionalExportsMainSugar");
  function J5e(e, t, r) {
    if (Ca().noDeprecation)
      return;
    let s = (0, De().fileURLToPath)(t);
    I7.has(s + "|" + e) || (I7.add(s + "|" + e), Ca().emitWarning(`Use of deprecated trailing slash pattern mapping "${e}" in the "exports" \
field module resolution of the package at ${s}${r ? ` imported from ${(0, De().fileURLToPath)(r)}` : ""}. Mapping specifiers ending in "/" i\
s no longer supported.`, "DeprecationWarning", "DEP0155"));
  }
  i(J5e, "emitTrailingSlashPatternDeprecation");
  function N7(e, t, r, s, n) {
    let a = r.exports;
    if (z5e(a, e, s) && (a = {
      ".": a
    }), q7.call(a, t) && !t.includes("*") && !t.endsWith("/")) {
      let f = a[t], p = Ql(e, f, "", t, s, !1, !1, !1, n);
      if (p == null)
        throw yA(t, e, s);
      return p;
    }
    let o = "", l = "", u = Object.getOwnPropertyNames(a), c = -1;
    for (; ++c < u.length; ) {
      let f = u[c], p = f.indexOf("*");
      if (p !== -1 && t.startsWith(f.slice(0, p))) {
        t.endsWith("/") && J5e(t, e, s);
        let d = f.slice(p + 1);
        t.length >= f.length && t.endsWith(d) && U7(o, f) === 1 && f.lastIndexOf("*") === p && (o = f, l = t.slice(p, t.length - d.length));
      }
    }
    if (o) {
      let f = a[o], p = Ql(e, f, l, o, s, !0, !1, t.endsWith("/"), n);
      if (p == null)
        throw yA(t, e, s);
      return p;
    }
    throw yA(t, e, s);
  }
  i(N7, "packageExportsResolve");
  function U7(e, t) {
    let r = e.indexOf("*"), s = t.indexOf("*"), n = r === -1 ? e.length : r + 1, a = s === -1 ? t.length : s + 1;
    return n > a ? -1 : a > n || r === -1 ? 1 : s === -1 || e.length > t.length ? -1 : t.length > e.length ? 1 : 0;
  }
  i(U7, "patternKeyCompare");
  function Q5e(e, t, r) {
    if (e === "#" || e.startsWith("#/") || e.endsWith("/")) {
      let a = "is not a valid internal imports specifier name";
      throw new ly(e, a, (0, De().fileURLToPath)(t));
    }
    let s, n = EA(t);
    if (n.exists) {
      s = (0, De().pathToFileURL)(n.pjsonPath);
      let a = n.imports;
      if (a)
        if (q7.call(a, e) && !e.includes("*")) {
          let o = Ql(s, a[e], "", e, t, !1, !0, !1, r);
          if (o != null)
            return o;
        } else {
          let o = "", l = "", u = Object.getOwnPropertyNames(a), c = -1;
          for (; ++c < u.length; ) {
            let f = u[c], p = f.indexOf("*");
            if (p !== -1 && e.startsWith(f.slice(0, -1))) {
              let d = f.slice(p + 1);
              e.length >= f.length && e.endsWith(d) && U7(o, f) === 1 && f.lastIndexOf("*") === p && (o = f, l = e.slice(p, e.length - d.length));
            }
          }
          if (o) {
            let f = a[o], p = Ql(s, f, l, o, t, !0, !0, !1, r);
            if (p != null)
              return p;
          }
        }
    }
    throw G5e(e, s, t);
  }
  i(Q5e, "packageImportsResolve");
  function Z5e(e, t) {
    let r = e.indexOf("/"), s = !0, n = !1;
    e[0] === "@" && (n = !0, r === -1 || e.length === 0 ? s = !1 : r = e.indexOf("/", r + 1));
    let a = r === -1 ? e : e.slice(0, r);
    if ($5e.exec(a) !== null && (s = !1), !s)
      throw new ly(e, "is not a valid package name", (0, De().fileURLToPath)(t));
    let o = "." + (r === -1 ? "" : e.slice(r));
    return {
      packageName: a,
      packageSubpath: o,
      isScoped: n
    };
  }
  i(Z5e, "parsePackageName");
  function V7(e, t, r) {
    if (bA().builtinModules.includes(e))
      return new (De()).URL("node:" + e);
    let {
      packageName: s,
      packageSubpath: n,
      isScoped: a
    } = Z5e(e, t), o = EA(t);
    if (o.exists) {
      let f = (0, De().pathToFileURL)(o.pjsonPath);
      if (o.name === s && o.exports !== void 0 && o.exports !== null)
        return N7(f, n, o, t, r);
    }
    let l = new (De()).URL("./node_modules/" + s + "/package.json", t), u = (0, De().fileURLToPath)(l), c;
    do {
      if (!$7(u.slice(0, -13)).isDirectory()) {
        c = u, l = new (De()).URL((a ? "../../../../node_modules/" : "../../../node_modules/") + s + "/package.json", l), u = (0, De().fileURLToPath)(
        l);
        continue;
      }
      let p = L7.read(u, {
        base: t,
        specifier: e
      });
      return p.exports !== void 0 && p.exports !== null ? N7(l, n, p, t, r) : n === "." ? W5e(l, p, t) : new (De()).URL(n, l);
    } while (u.length !== c.length);
    throw new vA(s, (0, De().fileURLToPath)(t), !1);
  }
  i(V7, "packageResolve");
  function e9e(e) {
    return e[0] === "." && (e.length === 1 || e[1] === "/" || e[1] === "." && (e.length === 2 || e[2] === "/"));
  }
  i(e9e, "isRelativeSpecifier");
  function SA(e) {
    return e === "" ? !1 : e[0] === "/" ? !0 : e9e(e);
  }
  i(SA, "shouldBeTreatedAsRelativeOrAbsolutePath");
  function W7(e, t, r, s) {
    let n = t.protocol, a = n === "http:" || n === "https:", o;
    if (SA(e))
      o = new (De()).URL(e, t);
    else if (!a && e[0] === "#")
      o = Q5e(e, t, r);
    else
      try {
        o = new (De()).URL(e);
      } catch {
        a || (o = V7(e, t, r));
      }
    return Gn()(o !== void 0, "expected to be defined"), o.protocol !== "file:" ? o : H5e(o, t, s);
  }
  i(W7, "moduleResolve");
  function t9e(e, t, r) {
    if (r) {
      let s = r.protocol;
      if (s === "http:" || s === "https:") {
        if (SA(e)) {
          let n = t?.protocol;
          if (n && n !== "https:" && n !== "http:")
            throw new hA(e, r, "remote imports cannot import from a local location.");
          return {
            url: t?.href || ""
          };
        }
        throw bA().builtinModules.includes(e) ? new hA(e, r, "remote imports cannot import from a local location.") : new hA(e, r, "only rel\
ative and absolute specifiers are supported.");
      }
    }
  }
  i(t9e, "checkIfDisallowedImport");
  function r9e(e) {
    return !!(e && typeof e == "object" && "href" in e && typeof e.href == "string" && "protocol" in e && typeof e.protocol == "string" && e.
    href && e.protocol);
  }
  i(r9e, "isURL");
  function s9e(e) {
    if (e !== void 0 && typeof e != "string" && !r9e(e))
      throw new Kr.ERR_INVALID_ARG_TYPE("parentURL", ["string", "URL"], e);
  }
  i(s9e, "throwIfInvalidParentURL");
  function n9e(e, t = {}) {
    let {
      parentURL: r
    } = t;
    Gn()(r !== void 0, "expected `parentURL` to be defined"), s9e(r);
    let s;
    if (r)
      try {
        s = new (De()).URL(r);
      } catch {
      }
    let n;
    try {
      if (n = SA(e) ? new (De()).URL(e, s) : new (De()).URL(e), n.protocol === "data:")
        return {
          url: n.href,
          format: null
        };
    } catch {
    }
    let a = t9e(e, n, s);
    if (a) return a;
    if (n && n.protocol === "node:") return {
      url: e
    };
    let o = L5e(t.conditions), l = W7(e, new (De()).URL(r), o, !1);
    return {
      url: l.href,
      format: B7(l, {
        parentURL: r
      })
    };
  }
  i(n9e, "defaultResolve");
  function i9e(e, t) {
    if (!t)
      throw new Error("Please pass `parent`: `import-meta-resolve` cannot ponyfill that");
    try {
      return n9e(e, {
        parentURL: t
      }).url;
    } catch (r) {
      let s = r;
      if ((s.code === "ERR_UNSUPPORTED_DIR_IMPORT" || s.code === "ERR_MODULE_NOT_FOUND") && typeof s.url == "string")
        return s.url;
      throw r;
    }
  }
  i(i9e, "resolve");
});

// ../node_modules/@babel/core/lib/config/files/plugins.js
var eq = y((wa) => {
  "use strict";
  Object.defineProperty(wa, "__esModule", {
    value: !0
  });
  wa.loadPlugin = g9e;
  wa.loadPreset = b9e;
  wa.resolvePreset = wa.resolvePlugin = void 0;
  function K7() {
    let e = Ka();
    return K7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_debug"), e;
  }
  i(K7, "_debug");
  function PA() {
    let e = Q("path");
    return PA = /* @__PURE__ */ i(function() {
      return e;
    }, "_path"), e;
  }
  i(PA, "_path");
  var AA = xl(), Y7 = cA();
  function xA() {
    let e = Q("url");
    return xA = /* @__PURE__ */ i(function() {
      return e;
    }, "_url"), e;
  }
  i(xA, "_url");
  var a9e = H7();
  function X7() {
    let e = Q("fs");
    return X7 = /* @__PURE__ */ i(function() {
      return e;
    }, "_fs"), e;
  }
  i(X7, "_fs");
  var z7 = K7()("babel:config:loading:files:plugins"), o9e = /^module:/, l9e = /^(?!@|module:|[^/]+\/|babel-plugin-)/, u9e = /^(?!@|module:|[^/]+\/|babel-preset-)/,
  c9e = /^(@babel\/)(?!plugin-|[^/]+\/)/, f9e = /^(@babel\/)(?!preset-|[^/]+\/)/, p9e = /^(@(?!babel\/)[^/]+\/)(?![^/]*babel-plugin(?:-|\/|$)|[^/]+\/)/,
  d9e = /^(@(?!babel\/)[^/]+\/)(?![^/]*babel-preset(?:-|\/|$)|[^/]+\/)/, h9e = /^(@(?!babel$)[^/]+)$/, m9e = wa.resolvePlugin = Q7.bind(null,
  "plugin"), y9e = wa.resolvePreset = Q7.bind(null, "preset");
  function* g9e(e, t) {
    let r = m9e(e, t, yield* (0, AA.isAsync)()), s = yield* Z7("plugin", r);
    return z7("Loaded plugin %o from %o.", e, t), {
      filepath: r,
      value: s
    };
  }
  i(g9e, "loadPlugin");
  function* b9e(e, t) {
    let r = y9e(e, t, yield* (0, AA.isAsync)()), s = yield* Z7("preset", r);
    return z7("Loaded preset %o from %o.", e, t), {
      filepath: r,
      value: s
    };
  }
  i(b9e, "loadPreset");
  function TA(e, t) {
    if (PA().isAbsolute(t)) return t;
    let r = e === "preset";
    return t.replace(r ? u9e : l9e, `babel-${e}-`).replace(r ? f9e : c9e, `$1${e}-`).replace(r ? d9e : p9e, `$1babel-${e}-`).replace(h9e, `$\
1/babel-${e}`).replace(o9e, "");
  }
  i(TA, "standardizeName");
  function* J7(e, t) {
    let r = TA(e, t), {
      error: s,
      value: n
    } = yield r;
    if (!s) return n;
    if (s.code !== "MODULE_NOT_FOUND") throw s;
    r !== t && !(yield t).error && (s.message += `
- If you want to resolve "${t}", use "module:${t}"`), (yield TA(e, "@babel/" + t)).error || (s.message += `
- Did you mean "@babel/${t}"?`);
    let a = e === "preset" ? "plugin" : "preset";
    if ((yield TA(a, t)).error || (s.message += `
- Did you accidentally pass a ${a} as a ${e}?`), e === "plugin") {
      let o = r.replace("-proposal-", "-transform-");
      o !== r && !(yield o).error && (s.message += `
- Did you mean "${o}"?`);
    }
    throw s.message += `

Make sure that all the Babel plugins and presets you are using
are defined as dependencies or devDependencies in your package.json
file. It's possible that the missing plugin is loaded by a preset
you are using that forgot to add the plugin to its dependencies: you
can workaround this problem by explicitly adding the missing package
to your top-level package.json.
`, s;
  }
  i(J7, "resolveAlternativesHelper");
  function E9e(e, t) {
    try {
      return t ? {
        error: null,
        value: (((r, s) => (r = r.split("."), s = s.split("."), +r[0] > +s[0] || r[0] == s[0] && +r[1] >= +s[1]))(process.versions.node, "8.\
9") ? Q.resolve : (r, {
          paths: [s]
        }, n = Q("module")) => {
          let a = n._findPath(r, n._nodeModulePaths(s).concat(s));
          if (a) return a;
          throw a = new Error(`Cannot resolve module '${r}'`), a.code = "MODULE_NOT_FOUND", a;
        })(e, {
          paths: [t]
        })
      } : {
        error: null,
        value: Q.resolve(e)
      };
    } catch (r) {
      return {
        error: r,
        value: null
      };
    }
  }
  i(E9e, "tryRequireResolve");
  function v9e(e, t) {
    try {
      return {
        error: null,
        value: (0, a9e.resolve)(e, t)
      };
    } catch (r) {
      return {
        error: r,
        value: null
      };
    }
  }
  i(v9e, "tryImportMetaResolve");
  function G7(e, t, r) {
    let s = J7(e, t), n = s.next();
    for (; !n.done; )
      n = s.next(E9e(n.value, r));
    return n.value;
  }
  i(G7, "resolveStandardizedNameForRequire");
  function S9e(e, t, r) {
    let s = (0, xA().pathToFileURL)(PA().join(r, "./babel-virtual-resolve-base.js")).href, n = J7(e, t), a = n.next();
    for (; !a.done; )
      a = n.next(v9e(a.value, s));
    return (0, xA().fileURLToPath)(a.value);
  }
  i(S9e, "resolveStandardizedNameForImport");
  function Q7(e, t, r, s) {
    if (!Y7.supportsESM || !s)
      return G7(e, t, r);
    try {
      let n = S9e(e, t, r);
      if (!(0, X7().existsSync)(n))
        throw Object.assign(new Error(`Could not resolve "${t}" in file ${r}.`), {
          type: "MODULE_NOT_FOUND"
        });
      return n;
    } catch (n) {
      try {
        return G7(e, t, r);
      } catch (a) {
        throw n.type === "MODULE_NOT_FOUND" ? n : a.type === "MODULE_NOT_FOUND" ? a : n;
      }
    }
  }
  i(Q7, "resolveStandardizedName");
  cy = /* @__PURE__ */ new Set();
  var cy;
  function* Z7(e, t) {
    if (!(yield* (0, AA.isAsync)()) && cy.has(t))
      throw new Error(`Reentrant ${e} detected trying to load "${t}". This module is not ignored and is trying to load itself while compilin\
g itself, leading to a dependency cycle. We recommend adding it to your "ignore" list in your babelrc, or to a .babelignore.`);
    try {
      return cy.add(t), yield* (0, Y7.default)(t, `You appear to be using a native ECMAScript module ${e}, which is only supported when runn\
ing Babel asynchronously.`, !0);
    } catch (r) {
      throw r.message = `[BABEL]: ${r.message} (While processing: ${t})`, r;
    } finally {
      cy.delete(t);
    }
  }
  i(Z7, "requireModule");
});

// ../node_modules/@babel/core/lib/config/files/index.js
var lf = y((Os) => {
  "use strict";
  Object.defineProperty(Os, "__esModule", {
    value: !0
  });
  Object.defineProperty(Os, "ROOT_CONFIG_FILENAMES", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.ROOT_CONFIG_FILENAMES;
    }, "get")
  });
  Object.defineProperty(Os, "findConfigUpwards", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.findConfigUpwards;
    }, "get")
  });
  Object.defineProperty(Os, "findPackageData", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return T9e.findPackageData;
    }, "get")
  });
  Object.defineProperty(Os, "findRelativeConfig", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.findRelativeConfig;
    }, "get")
  });
  Object.defineProperty(Os, "findRootConfig", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.findRootConfig;
    }, "get")
  });
  Object.defineProperty(Os, "loadConfig", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.loadConfig;
    }, "get")
  });
  Object.defineProperty(Os, "loadPlugin", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fy.loadPlugin;
    }, "get")
  });
  Object.defineProperty(Os, "loadPreset", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fy.loadPreset;
    }, "get")
  });
  Object.defineProperty(Os, "resolvePlugin", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fy.resolvePlugin;
    }, "get")
  });
  Object.defineProperty(Os, "resolvePreset", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fy.resolvePreset;
    }, "get")
  });
  Object.defineProperty(Os, "resolveShowConfigPath", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Zl.resolveShowConfigPath;
    }, "get")
  });
  var T9e = a4(), Zl = S7(), fy = eq();
});

// ../node_modules/@babel/core/lib/transform.js
var rq = y((eu) => {
  "use strict";
  Object.defineProperty(eu, "__esModule", {
    value: !0
  });
  eu.transform = void 0;
  eu.transformAsync = C9e;
  eu.transformSync = A9e;
  function tq() {
    let e = Cs();
    return tq = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(tq, "_gensync");
  var x9e = ql(), P9e = km(), py = Si(), dy = tq()(/* @__PURE__ */ i(function* (t, r) {
    let s = yield* (0, x9e.default)(r);
    return s === null ? null : yield* (0, P9e.run)(s, t);
  }, "transform")), Qot = eu.transform = /* @__PURE__ */ i(function(t, r, s) {
    let n, a;
    if (typeof r == "function" ? (a = r, n = void 0) : (n = r, a = s), a === void 0)
      return (0, py.beginHiddenCallStack)(dy.sync)(t, n);
    (0, py.beginHiddenCallStack)(dy.errback)(t, n, a);
  }, "transform");
  function A9e(...e) {
    return (0, py.beginHiddenCallStack)(dy.sync)(...e);
  }
  i(A9e, "transformSync");
  function C9e(...e) {
    return (0, py.beginHiddenCallStack)(dy.async)(...e);
  }
  i(C9e, "transformAsync");
});

// ../node_modules/@babel/core/lib/transform-ast.js
var nq = y((tu) => {
  "use strict";
  Object.defineProperty(tu, "__esModule", {
    value: !0
  });
  tu.transformFromAst = void 0;
  tu.transformFromAstAsync = _9e;
  tu.transformFromAstSync = I9e;
  function sq() {
    let e = Cs();
    return sq = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(sq, "_gensync");
  var w9e = ql(), D9e = km(), hy = Si(), my = sq()(function* (e, t, r) {
    let s = yield* (0, w9e.default)(r);
    if (s === null) return null;
    if (!e) throw new Error("No AST given");
    return yield* (0, D9e.run)(s, t, e);
  }), tlt = tu.transformFromAst = /* @__PURE__ */ i(function(t, r, s, n) {
    let a, o;
    if (typeof s == "function" ? (o = s, a = void 0) : (a = s, o = n), o === void 0)
      return (0, hy.beginHiddenCallStack)(my.sync)(t, r, a);
    (0, hy.beginHiddenCallStack)(my.errback)(t, r, a, o);
  }, "transformFromAst");
  function I9e(...e) {
    return (0, hy.beginHiddenCallStack)(my.sync)(...e);
  }
  i(I9e, "transformFromAstSync");
  function _9e(...e) {
    return (0, hy.beginHiddenCallStack)(my.async)(...e);
  }
  i(_9e, "transformFromAstAsync");
});

// ../node_modules/@babel/core/lib/parse.js
var aq = y((ru) => {
  "use strict";
  Object.defineProperty(ru, "__esModule", {
    value: !0
  });
  ru.parse = void 0;
  ru.parseAsync = F9e;
  ru.parseSync = k9e;
  function iq() {
    let e = Cs();
    return iq = /* @__PURE__ */ i(function() {
      return e;
    }, "_gensync"), e;
  }
  i(iq, "_gensync");
  var O9e = ql(), N9e = qx(), R9e = Fx(), yy = Si(), gy = iq()(/* @__PURE__ */ i(function* (t, r) {
    let s = yield* (0, O9e.default)(r);
    return s === null ? null : yield* (0, N9e.default)(s.passes, (0, R9e.default)(s), t);
  }, "parse")), nlt = ru.parse = /* @__PURE__ */ i(function(t, r, s) {
    if (typeof r == "function" && (s = r, r = void 0), s === void 0)
      return (0, yy.beginHiddenCallStack)(gy.sync)(t, r);
    (0, yy.beginHiddenCallStack)(gy.errback)(t, r, s);
  }, "parse");
  function k9e(...e) {
    return (0, yy.beginHiddenCallStack)(gy.sync)(...e);
  }
  i(k9e, "parseSync");
  function F9e(...e) {
    return (0, yy.beginHiddenCallStack)(gy.async)(...e);
  }
  i(F9e, "parseAsync");
});

// ../node_modules/@babel/core/lib/index.js
var mr = y((rt) => {
  "use strict";
  Object.defineProperty(rt, "__esModule", {
    value: !0
  });
  rt.DEFAULT_EXTENSIONS = void 0;
  Object.defineProperty(rt, "File", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return L9e.default;
    }, "get")
  });
  Object.defineProperty(rt, "buildExternalHelpers", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return B9e.default;
    }, "get")
  });
  Object.defineProperty(rt, "createConfigItem", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.createConfigItem;
    }, "get")
  });
  Object.defineProperty(rt, "createConfigItemAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.createConfigItemAsync;
    }, "get")
  });
  Object.defineProperty(rt, "createConfigItemSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.createConfigItemSync;
    }, "get")
  });
  Object.defineProperty(rt, "getEnv", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return M9e.getEnv;
    }, "get")
  });
  Object.defineProperty(rt, "loadOptions", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadOptions;
    }, "get")
  });
  Object.defineProperty(rt, "loadOptionsAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadOptionsAsync;
    }, "get")
  });
  Object.defineProperty(rt, "loadOptionsSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadOptionsSync;
    }, "get")
  });
  Object.defineProperty(rt, "loadPartialConfig", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadPartialConfig;
    }, "get")
  });
  Object.defineProperty(rt, "loadPartialConfigAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadPartialConfigAsync;
    }, "get")
  });
  Object.defineProperty(rt, "loadPartialConfigSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return Kn.loadPartialConfigSync;
    }, "get")
  });
  Object.defineProperty(rt, "parse", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return IA.parse;
    }, "get")
  });
  Object.defineProperty(rt, "parseAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return IA.parseAsync;
    }, "get")
  });
  Object.defineProperty(rt, "parseSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return IA.parseSync;
    }, "get")
  });
  Object.defineProperty(rt, "resolvePlugin", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return oq.resolvePlugin;
    }, "get")
  });
  Object.defineProperty(rt, "resolvePreset", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return oq.resolvePreset;
    }, "get")
  });
  Object.defineProperty(rt, "template", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return fq().default;
    }, "get")
  });
  Object.defineProperty(rt, "tokTypes", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return uq().tokTypes;
    }, "get")
  });
  Object.defineProperty(rt, "transform", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return CA.transform;
    }, "get")
  });
  Object.defineProperty(rt, "transformAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return CA.transformAsync;
    }, "get")
  });
  Object.defineProperty(rt, "transformFile", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return wA.transformFile;
    }, "get")
  });
  Object.defineProperty(rt, "transformFileAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return wA.transformFileAsync;
    }, "get")
  });
  Object.defineProperty(rt, "transformFileSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return wA.transformFileSync;
    }, "get")
  });
  Object.defineProperty(rt, "transformFromAst", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return DA.transformFromAst;
    }, "get")
  });
  Object.defineProperty(rt, "transformFromAstAsync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return DA.transformFromAstAsync;
    }, "get")
  });
  Object.defineProperty(rt, "transformFromAstSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return DA.transformFromAstSync;
    }, "get")
  });
  Object.defineProperty(rt, "transformSync", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return CA.transformSync;
    }, "get")
  });
  Object.defineProperty(rt, "traverse", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return cq().default;
    }, "get")
  });
  rt.version = rt.types = void 0;
  var L9e = Sh(), B9e = Rj(), oq = lf(), M9e = xx();
  function lq() {
    let e = Re();
    return lq = /* @__PURE__ */ i(function() {
      return e;
    }, "_types"), e;
  }
  i(lq, "_types");
  Object.defineProperty(rt, "types", {
    enumerable: !0,
    get: /* @__PURE__ */ i(function() {
      return lq();
    }, "get")
  });
  function uq() {
    let e = to();
    return uq = /* @__PURE__ */ i(function() {
      return e;
    }, "_parser"), e;
  }
  i(uq, "_parser");
  function cq() {
    let e = Bs();
    return cq = /* @__PURE__ */ i(function() {
      return e;
    }, "_traverse"), e;
  }
  i(cq, "_traverse");
  function fq() {
    let e = yl();
    return fq = /* @__PURE__ */ i(function() {
      return e;
    }, "_template"), e;
  }
  i(fq, "_template");
  var Kn = ql(), CA = rq(), wA = tP(), DA = nq(), IA = aq(), olt = mr(), llt = rt.version = "7.24.4", ult = rt.DEFAULT_EXTENSIONS = Object.freeze(
  [".js", ".jsx", ".es6", ".es", ".mjs", ".cjs"]);
  rt.OptionManager = class {
    static {
      i(this, "OptionManager");
    }
    init(t) {
      return (0, Kn.loadOptionsSync)(t);
    }
  }, rt.Plugin = /* @__PURE__ */ i(function(t) {
    throw new Error(`The (${t}) Babel 5 plugin is being run with an unsupported Babel version.`);
  }, "Plugin");
});

// ../node_modules/@sindresorhus/merge-streams/index.js
import { on as j9e, once as q9e } from "node:events";
import { PassThrough as $9e } from "node:stream";
import { finished as yq } from "node:stream/promises";
function RA(e) {
  if (!Array.isArray(e))
    throw new TypeError(`Expected an array, got \`${typeof e}\`.`);
  for (let n of e)
    OA(n);
  let t = e.some(({ readableObjectMode: n }) => n), r = U9e(e, t), s = new _A({
    objectMode: t,
    writableHighWaterMark: r,
    readableHighWaterMark: r
  });
  for (let n of e)
    s.add(n);
  return e.length === 0 && Eq(s), s;
}
var U9e, _A, V9e, W9e, H9e, OA, G9e, gq, K9e, Y9e, X9e, bq, Eq, NA, vq, z9e, Ey, hq, mq, Sq = Qn(() => {
  i(RA, "mergeStreams");
  U9e = /* @__PURE__ */ i((e, t) => {
    if (e.length === 0)
      return 16384;
    let r = e.filter(({ readableObjectMode: s }) => s === t).map(({ readableHighWaterMark: s }) => s);
    return Math.max(...r);
  }, "getHighWaterMark"), _A = class extends $9e {
    static {
      i(this, "MergedStream");
    }
    #e = /* @__PURE__ */ new Set([]);
    #r = /* @__PURE__ */ new Set([]);
    #s = /* @__PURE__ */ new Set([]);
    #t;
    add(t) {
      OA(t), !this.#e.has(t) && (this.#e.add(t), this.#t ??= V9e(this, this.#e), G9e({
        passThroughStream: this,
        stream: t,
        streams: this.#e,
        ended: this.#r,
        aborted: this.#s,
        onFinished: this.#t
      }), t.pipe(this, { end: !1 }));
    }
    remove(t) {
      return OA(t), this.#e.has(t) ? (t.unpipe(this), !0) : !1;
    }
  }, V9e = /* @__PURE__ */ i(async (e, t) => {
    Ey(e, hq);
    let r = new AbortController();
    try {
      await Promise.race([
        W9e(e, r),
        H9e(e, t, r)
      ]);
    } finally {
      r.abort(), Ey(e, -hq);
    }
  }, "onMergedStreamFinished"), W9e = /* @__PURE__ */ i(async (e, { signal: t }) => {
    await yq(e, { signal: t, cleanup: !0 });
  }, "onMergedStreamEnd"), H9e = /* @__PURE__ */ i(async (e, t, { signal: r }) => {
    for await (let [s] of j9e(e, "unpipe", { signal: r }))
      t.has(s) && s.emit(bq);
  }, "onInputStreamsUnpipe"), OA = /* @__PURE__ */ i((e) => {
    if (typeof e?.pipe != "function")
      throw new TypeError(`Expected a readable stream, got: \`${typeof e}\`.`);
  }, "validateStream"), G9e = /* @__PURE__ */ i(async ({ passThroughStream: e, stream: t, streams: r, ended: s, aborted: n, onFinished: a }) => {
    Ey(e, mq);
    let o = new AbortController();
    try {
      await Promise.race([
        K9e(a, t),
        Y9e({ passThroughStream: e, stream: t, streams: r, ended: s, aborted: n, controller: o }),
        X9e({ stream: t, streams: r, ended: s, aborted: n, controller: o })
      ]);
    } finally {
      o.abort(), Ey(e, -mq);
    }
    r.size === s.size + n.size && (s.size === 0 && n.size > 0 ? NA(e) : Eq(e));
  }, "endWhenStreamsDone"), gq = /* @__PURE__ */ i((e) => e?.code === "ERR_STREAM_PREMATURE_CLOSE", "isAbortError"), K9e = /* @__PURE__ */ i(
  async (e, t) => {
    try {
      await e, NA(t);
    } catch (r) {
      gq(r) ? NA(t) : vq(t, r);
    }
  }, "afterMergedStreamFinished"), Y9e = /* @__PURE__ */ i(async ({ passThroughStream: e, stream: t, streams: r, ended: s, aborted: n, controller: {
  signal: a } }) => {
    try {
      await yq(t, { signal: a, cleanup: !0, readable: !0, writable: !1 }), r.has(t) && s.add(t);
    } catch (o) {
      if (a.aborted || !r.has(t))
        return;
      gq(o) ? n.add(t) : vq(e, o);
    }
  }, "onInputStreamEnd"), X9e = /* @__PURE__ */ i(async ({ stream: e, streams: t, ended: r, aborted: s, controller: { signal: n } }) => {
    await q9e(e, bq, { signal: n }), t.delete(e), r.delete(e), s.delete(e);
  }, "onInputStreamUnpipe"), bq = Symbol("unpipe"), Eq = /* @__PURE__ */ i((e) => {
    e.writable && e.end();
  }, "endStream"), NA = /* @__PURE__ */ i((e) => {
    (e.readable || e.writable) && e.destroy();
  }, "abortStream"), vq = /* @__PURE__ */ i((e, t) => {
    e.destroyed || (e.once("error", z9e), e.destroy(t));
  }, "errorStream"), z9e = /* @__PURE__ */ i(() => {
  }, "noop"), Ey = /* @__PURE__ */ i((e, t) => {
    let r = e.getMaxListeners();
    r !== 0 && r !== Number.POSITIVE_INFINITY && e.setMaxListeners(r + t);
  }, "updateMaxListeners"), hq = 2, mq = 1;
});

// ../node_modules/fast-glob/out/utils/array.js
var Tq = y((su) => {
  "use strict";
  Object.defineProperty(su, "__esModule", { value: !0 });
  su.splitWhen = su.flatten = void 0;
  function J9e(e) {
    return e.reduce((t, r) => [].concat(t, r), []);
  }
  i(J9e, "flatten");
  su.flatten = J9e;
  function Q9e(e, t) {
    let r = [[]], s = 0;
    for (let n of e)
      t(n) ? (s++, r[s] = []) : r[s].push(n);
    return r;
  }
  i(Q9e, "splitWhen");
  su.splitWhen = Q9e;
});

// ../node_modules/fast-glob/out/utils/errno.js
var xq = y((vy) => {
  "use strict";
  Object.defineProperty(vy, "__esModule", { value: !0 });
  vy.isEnoentCodeError = void 0;
  function Z9e(e) {
    return e.code === "ENOENT";
  }
  i(Z9e, "isEnoentCodeError");
  vy.isEnoentCodeError = Z9e;
});

// ../node_modules/fast-glob/out/utils/fs.js
var Pq = y((Sy) => {
  "use strict";
  Object.defineProperty(Sy, "__esModule", { value: !0 });
  Sy.createDirentFromStats = void 0;
  var kA = class {
    static {
      i(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function e7e(e, t) {
    return new kA(e, t);
  }
  i(e7e, "createDirentFromStats");
  Sy.createDirentFromStats = e7e;
});

// ../node_modules/fast-glob/out/utils/path.js
var Dq = y((Sr) => {
  "use strict";
  Object.defineProperty(Sr, "__esModule", { value: !0 });
  Sr.convertPosixPathToPattern = Sr.convertWindowsPathToPattern = Sr.convertPathToPattern = Sr.escapePosixPath = Sr.escapeWindowsPath = Sr.escape =
  Sr.removeLeadingDotSegment = Sr.makeAbsolute = Sr.unixify = void 0;
  var t7e = Q("os"), r7e = Q("path"), Aq = t7e.platform() === "win32", s7e = 2, n7e = /(\\?)([()*?[\]{|}]|^!|[!+@](?=\()|\\(?![!()*+?@[\]{|}]))/g,
  i7e = /(\\?)([()[\]{}]|^!|[!+@](?=\())/g, a7e = /^\\\\([.?])/, o7e = /\\(?![!()+@[\]{}])/g;
  function l7e(e) {
    return e.replace(/\\/g, "/");
  }
  i(l7e, "unixify");
  Sr.unixify = l7e;
  function u7e(e, t) {
    return r7e.resolve(e, t);
  }
  i(u7e, "makeAbsolute");
  Sr.makeAbsolute = u7e;
  function c7e(e) {
    if (e.charAt(0) === ".") {
      let t = e.charAt(1);
      if (t === "/" || t === "\\")
        return e.slice(s7e);
    }
    return e;
  }
  i(c7e, "removeLeadingDotSegment");
  Sr.removeLeadingDotSegment = c7e;
  Sr.escape = Aq ? FA : LA;
  function FA(e) {
    return e.replace(i7e, "\\$2");
  }
  i(FA, "escapeWindowsPath");
  Sr.escapeWindowsPath = FA;
  function LA(e) {
    return e.replace(n7e, "\\$2");
  }
  i(LA, "escapePosixPath");
  Sr.escapePosixPath = LA;
  Sr.convertPathToPattern = Aq ? Cq : wq;
  function Cq(e) {
    return FA(e).replace(a7e, "//$1").replace(o7e, "/");
  }
  i(Cq, "convertWindowsPathToPattern");
  Sr.convertWindowsPathToPattern = Cq;
  function wq(e) {
    return LA(e);
  }
  i(wq, "convertPosixPathToPattern");
  Sr.convertPosixPathToPattern = wq;
});

// ../node_modules/is-extglob/index.js
var _q = y((Olt, Iq) => {
  Iq.exports = /* @__PURE__ */ i(function(t) {
    if (typeof t != "string" || t === "")
      return !1;
    for (var r; r = /(\\).|([@?!+*]\(.*\))/g.exec(t); ) {
      if (r[2]) return !0;
      t = t.slice(r.index + r[0].length);
    }
    return !1;
  }, "isExtglob");
});

// ../node_modules/is-glob/index.js
var Rq = y((Rlt, Nq) => {
  var f7e = _q(), Oq = { "{": "}", "(": ")", "[": "]" }, p7e = /* @__PURE__ */ i(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0, r = -2, s = -2, n = -2, a = -2, o = -2; t < e.length; ) {
      if (e[t] === "*" || e[t + 1] === "?" && /[\].+)]/.test(e[t]) || s !== -1 && e[t] === "[" && e[t + 1] !== "]" && (s < t && (s = e.indexOf(
      "]", t)), s > t && (o === -1 || o > s || (o = e.indexOf("\\", t), o === -1 || o > s))) || n !== -1 && e[t] === "{" && e[t + 1] !== "}" &&
      (n = e.indexOf("}", t), n > t && (o = e.indexOf("\\", t), o === -1 || o > n)) || a !== -1 && e[t] === "(" && e[t + 1] === "?" && /[:!=]/.
      test(e[t + 2]) && e[t + 3] !== ")" && (a = e.indexOf(")", t), a > t && (o = e.indexOf("\\", t), o === -1 || o > a)) || r !== -1 && e[t] ===
      "(" && e[t + 1] !== "|" && (r < t && (r = e.indexOf("|", t)), r !== -1 && e[r + 1] !== ")" && (a = e.indexOf(")", r), a > r && (o = e.
      indexOf("\\", r), o === -1 || o > a))))
        return !0;
      if (e[t] === "\\") {
        var l = e[t + 1];
        t += 2;
        var u = Oq[l];
        if (u) {
          var c = e.indexOf(u, t);
          c !== -1 && (t = c + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "strictCheck"), d7e = /* @__PURE__ */ i(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0; t < e.length; ) {
      if (/[*?{}()[\]]/.test(e[t]))
        return !0;
      if (e[t] === "\\") {
        var r = e[t + 1];
        t += 2;
        var s = Oq[r];
        if (s) {
          var n = e.indexOf(s, t);
          n !== -1 && (t = n + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "relaxedCheck");
  Nq.exports = /* @__PURE__ */ i(function(t, r) {
    if (typeof t != "string" || t === "")
      return !1;
    if (f7e(t))
      return !0;
    var s = p7e;
    return r && r.strict === !1 && (s = d7e), s(t);
  }, "isGlob");
});

// ../node_modules/glob-parent/index.js
var Fq = y((Flt, kq) => {
  "use strict";
  var h7e = Rq(), m7e = Q("path").posix.dirname, y7e = Q("os").platform() === "win32", BA = "/", g7e = /\\/g, b7e = /[\{\[].*[\}\]]$/, E7e = /(^|[^\\])([\{\[]|\([^\)]+$)/,
  v7e = /\\([\!\*\?\|\[\]\(\)\{\}])/g;
  kq.exports = /* @__PURE__ */ i(function(t, r) {
    var s = Object.assign({ flipBackslashes: !0 }, r);
    s.flipBackslashes && y7e && t.indexOf(BA) < 0 && (t = t.replace(g7e, BA)), b7e.test(t) && (t += BA), t += "a";
    do
      t = m7e(t);
    while (h7e(t) || E7e.test(t));
    return t.replace(v7e, "$1");
  }, "globParent");
});

// ../node_modules/braces/lib/utils.js
var Ty = y((Zs) => {
  "use strict";
  Zs.isInteger = (e) => typeof e == "number" ? Number.isInteger(e) : typeof e == "string" && e.trim() !== "" ? Number.isInteger(Number(e)) :
  !1;
  Zs.find = (e, t) => e.nodes.find((r) => r.type === t);
  Zs.exceedsLimit = (e, t, r = 1, s) => s === !1 || !Zs.isInteger(e) || !Zs.isInteger(t) ? !1 : (Number(t) - Number(e)) / Number(r) >= s;
  Zs.escapeNode = (e, t = 0, r) => {
    let s = e.nodes[t];
    s && (r && s.type === r || s.type === "open" || s.type === "close") && s.escaped !== !0 && (s.value = "\\" + s.value, s.escaped = !0);
  };
  Zs.encloseBrace = (e) => e.type !== "brace" || e.commas >> 0 + e.ranges >> 0 ? !1 : (e.invalid = !0, !0);
  Zs.isInvalidBrace = (e) => e.type !== "brace" ? !1 : e.invalid === !0 || e.dollar ? !0 : !(e.commas >> 0 + e.ranges >> 0) || e.open !== !0 ||
  e.close !== !0 ? (e.invalid = !0, !0) : !1;
  Zs.isOpenOrClose = (e) => e.type === "open" || e.type === "close" ? !0 : e.open === !0 || e.close === !0;
  Zs.reduce = (e) => e.reduce((t, r) => (r.type === "text" && t.push(r.value), r.type === "range" && (r.type = "text"), t), []);
  Zs.flatten = (...e) => {
    let t = [], r = /* @__PURE__ */ i((s) => {
      for (let n = 0; n < s.length; n++) {
        let a = s[n];
        Array.isArray(a) ? r(a, t) : a !== void 0 && t.push(a);
      }
      return t;
    }, "flat");
    return r(e), t;
  };
});

// ../node_modules/braces/lib/stringify.js
var xy = y((jlt, Bq) => {
  "use strict";
  var Lq = Ty();
  Bq.exports = (e, t = {}) => {
    let r = /* @__PURE__ */ i((s, n = {}) => {
      let a = t.escapeInvalid && Lq.isInvalidBrace(n), o = s.invalid === !0 && t.escapeInvalid === !0, l = "";
      if (s.value)
        return (a || o) && Lq.isOpenOrClose(s) ? "\\" + s.value : s.value;
      if (s.value)
        return s.value;
      if (s.nodes)
        for (let u of s.nodes)
          l += r(u);
      return l;
    }, "stringify");
    return r(e);
  };
});

// ../node_modules/to-regex-range/node_modules/is-number/index.js
var jq = y(($lt, Mq) => {
  "use strict";
  Mq.exports = function(e) {
    return typeof e == "number" ? e - e === 0 : typeof e == "string" && e.trim() !== "" ? Number.isFinite ? Number.isFinite(+e) : isFinite(+e) :
    !1;
  };
});

// ../node_modules/to-regex-range/index.js
var Yq = y((Ult, Kq) => {
  "use strict";
  var qq = jq(), Do = /* @__PURE__ */ i((e, t, r) => {
    if (qq(e) === !1)
      throw new TypeError("toRegexRange: expected the first argument to be a number");
    if (t === void 0 || e === t)
      return String(e);
    if (qq(t) === !1)
      throw new TypeError("toRegexRange: expected the second argument to be a number.");
    let s = { relaxZeros: !0, ...r };
    typeof s.strictZeros == "boolean" && (s.relaxZeros = s.strictZeros === !1);
    let n = String(s.relaxZeros), a = String(s.shorthand), o = String(s.capture), l = String(s.wrap), u = e + ":" + t + "=" + n + a + o + l;
    if (Do.cache.hasOwnProperty(u))
      return Do.cache[u].result;
    let c = Math.min(e, t), f = Math.max(e, t);
    if (Math.abs(c - f) === 1) {
      let h = e + "|" + t;
      return s.capture ? `(${h})` : s.wrap === !1 ? h : `(?:${h})`;
    }
    let p = Gq(e) || Gq(t), d = { min: e, max: t, a: c, b: f }, m = [], b = [];
    if (p && (d.isPadded = p, d.maxLen = String(d.max).length), c < 0) {
      let h = f < 0 ? Math.abs(f) : 1;
      b = $q(h, Math.abs(c), d, s), c = d.a = 0;
    }
    return f >= 0 && (m = $q(c, f, d, s)), d.negatives = b, d.positives = m, d.result = S7e(b, m, s), s.capture === !0 ? d.result = `(${d.result}\
)` : s.wrap !== !1 && m.length + b.length > 1 && (d.result = `(?:${d.result})`), Do.cache[u] = d, d.result;
  }, "toRegexRange");
  function S7e(e, t, r) {
    let s = MA(e, t, "-", !1, r) || [], n = MA(t, e, "", !1, r) || [], a = MA(e, t, "-?", !0, r) || [];
    return s.concat(a).concat(n).join("|");
  }
  i(S7e, "collatePatterns");
  function T7e(e, t) {
    let r = 1, s = 1, n = Vq(e, r), a = /* @__PURE__ */ new Set([t]);
    for (; e <= n && n <= t; )
      a.add(n), r += 1, n = Vq(e, r);
    for (n = Wq(t + 1, s) - 1; e < n && n <= t; )
      a.add(n), s += 1, n = Wq(t + 1, s) - 1;
    return a = [...a], a.sort(A7e), a;
  }
  i(T7e, "splitToRanges");
  function x7e(e, t, r) {
    if (e === t)
      return { pattern: e, count: [], digits: 0 };
    let s = P7e(e, t), n = s.length, a = "", o = 0;
    for (let l = 0; l < n; l++) {
      let [u, c] = s[l];
      u === c ? a += u : u !== "0" || c !== "9" ? a += C7e(u, c, r) : o++;
    }
    return o && (a += r.shorthand === !0 ? "\\d" : "[0-9]"), { pattern: a, count: [o], digits: n };
  }
  i(x7e, "rangeToPattern");
  function $q(e, t, r, s) {
    let n = T7e(e, t), a = [], o = e, l;
    for (let u = 0; u < n.length; u++) {
      let c = n[u], f = x7e(String(o), String(c), s), p = "";
      if (!r.isPadded && l && l.pattern === f.pattern) {
        l.count.length > 1 && l.count.pop(), l.count.push(f.count[0]), l.string = l.pattern + Hq(l.count), o = c + 1;
        continue;
      }
      r.isPadded && (p = w7e(c, r, s)), f.string = p + f.pattern + Hq(f.count), a.push(f), o = c + 1, l = f;
    }
    return a;
  }
  i($q, "splitToPatterns");
  function MA(e, t, r, s, n) {
    let a = [];
    for (let o of e) {
      let { string: l } = o;
      !s && !Uq(t, "string", l) && a.push(r + l), s && Uq(t, "string", l) && a.push(r + l);
    }
    return a;
  }
  i(MA, "filterPatterns");
  function P7e(e, t) {
    let r = [];
    for (let s = 0; s < e.length; s++) r.push([e[s], t[s]]);
    return r;
  }
  i(P7e, "zip");
  function A7e(e, t) {
    return e > t ? 1 : t > e ? -1 : 0;
  }
  i(A7e, "compare");
  function Uq(e, t, r) {
    return e.some((s) => s[t] === r);
  }
  i(Uq, "contains");
  function Vq(e, t) {
    return Number(String(e).slice(0, -t) + "9".repeat(t));
  }
  i(Vq, "countNines");
  function Wq(e, t) {
    return e - e % Math.pow(10, t);
  }
  i(Wq, "countZeros");
  function Hq(e) {
    let [t = 0, r = ""] = e;
    return r || t > 1 ? `{${t + (r ? "," + r : "")}}` : "";
  }
  i(Hq, "toQuantifier");
  function C7e(e, t, r) {
    return `[${e}${t - e === 1 ? "" : "-"}${t}]`;
  }
  i(C7e, "toCharacterClass");
  function Gq(e) {
    return /^-?(0+)\d/.test(e);
  }
  i(Gq, "hasPadding");
  function w7e(e, t, r) {
    if (!t.isPadded)
      return e;
    let s = Math.abs(t.maxLen - String(e).length), n = r.relaxZeros !== !1;
    switch (s) {
      case 0:
        return "";
      case 1:
        return n ? "0?" : "0";
      case 2:
        return n ? "0{0,2}" : "00";
      default:
        return n ? `0{0,${s}}` : `0{${s}}`;
    }
  }
  i(w7e, "padZeros");
  Do.cache = {};
  Do.clearCache = () => Do.cache = {};
  Kq.exports = Do;
});

// ../node_modules/fill-range/index.js
var $A = y((Wlt, r$) => {
  "use strict";
  var D7e = Q("util"), Jq = Yq(), Xq = /* @__PURE__ */ i((e) => e !== null && typeof e == "object" && !Array.isArray(e), "isObject"), I7e = /* @__PURE__ */ i(
  (e) => (t) => e === !0 ? Number(t) : String(t), "transform"), jA = /* @__PURE__ */ i((e) => typeof e == "number" || typeof e == "string" &&
  e !== "", "isValidValue"), Lf = /* @__PURE__ */ i((e) => Number.isInteger(+e), "isNumber"), qA = /* @__PURE__ */ i((e) => {
    let t = `${e}`, r = -1;
    if (t[0] === "-" && (t = t.slice(1)), t === "0") return !1;
    for (; t[++r] === "0"; ) ;
    return r > 0;
  }, "zeros"), _7e = /* @__PURE__ */ i((e, t, r) => typeof e == "string" || typeof t == "string" ? !0 : r.stringify === !0, "stringify"), O7e = /* @__PURE__ */ i(
  (e, t, r) => {
    if (t > 0) {
      let s = e[0] === "-" ? "-" : "";
      s && (e = e.slice(1)), e = s + e.padStart(s ? t - 1 : t, "0");
    }
    return r === !1 ? String(e) : e;
  }, "pad"), zq = /* @__PURE__ */ i((e, t) => {
    let r = e[0] === "-" ? "-" : "";
    for (r && (e = e.slice(1), t--); e.length < t; ) e = "0" + e;
    return r ? "-" + e : e;
  }, "toMaxLen"), N7e = /* @__PURE__ */ i((e, t) => {
    e.negatives.sort((o, l) => o < l ? -1 : o > l ? 1 : 0), e.positives.sort((o, l) => o < l ? -1 : o > l ? 1 : 0);
    let r = t.capture ? "" : "?:", s = "", n = "", a;
    return e.positives.length && (s = e.positives.join("|")), e.negatives.length && (n = `-(${r}${e.negatives.join("|")})`), s && n ? a = `${s}\
|${n}` : a = s || n, t.wrap ? `(${r}${a})` : a;
  }, "toSequence"), Qq = /* @__PURE__ */ i((e, t, r, s) => {
    if (r)
      return Jq(e, t, { wrap: !1, ...s });
    let n = String.fromCharCode(e);
    if (e === t) return n;
    let a = String.fromCharCode(t);
    return `[${n}-${a}]`;
  }, "toRange"), Zq = /* @__PURE__ */ i((e, t, r) => {
    if (Array.isArray(e)) {
      let s = r.wrap === !0, n = r.capture ? "" : "?:";
      return s ? `(${n}${e.join("|")})` : e.join("|");
    }
    return Jq(e, t, r);
  }, "toRegex"), e$ = /* @__PURE__ */ i((...e) => new RangeError("Invalid range arguments: " + D7e.inspect(...e)), "rangeError"), t$ = /* @__PURE__ */ i(
  (e, t, r) => {
    if (r.strictRanges === !0) throw e$([e, t]);
    return [];
  }, "invalidRange"), R7e = /* @__PURE__ */ i((e, t) => {
    if (t.strictRanges === !0)
      throw new TypeError(`Expected step "${e}" to be a number`);
    return [];
  }, "invalidStep"), k7e = /* @__PURE__ */ i((e, t, r = 1, s = {}) => {
    let n = Number(e), a = Number(t);
    if (!Number.isInteger(n) || !Number.isInteger(a)) {
      if (s.strictRanges === !0) throw e$([e, t]);
      return [];
    }
    n === 0 && (n = 0), a === 0 && (a = 0);
    let o = n > a, l = String(e), u = String(t), c = String(r);
    r = Math.max(Math.abs(r), 1);
    let f = qA(l) || qA(u) || qA(c), p = f ? Math.max(l.length, u.length, c.length) : 0, d = f === !1 && _7e(e, t, s) === !1, m = s.transform ||
    I7e(d);
    if (s.toRegex && r === 1)
      return Qq(zq(e, p), zq(t, p), !0, s);
    let b = { negatives: [], positives: [] }, h = /* @__PURE__ */ i((D) => b[D < 0 ? "negatives" : "positives"].push(Math.abs(D)), "push"), g = [],
    E = 0;
    for (; o ? n >= a : n <= a; )
      s.toRegex === !0 && r > 1 ? h(n) : g.push(O7e(m(n, E), p, d)), n = o ? n - r : n + r, E++;
    return s.toRegex === !0 ? r > 1 ? N7e(b, s) : Zq(g, null, { wrap: !1, ...s }) : g;
  }, "fillNumbers"), F7e = /* @__PURE__ */ i((e, t, r = 1, s = {}) => {
    if (!Lf(e) && e.length > 1 || !Lf(t) && t.length > 1)
      return t$(e, t, s);
    let n = s.transform || ((d) => String.fromCharCode(d)), a = `${e}`.charCodeAt(0), o = `${t}`.charCodeAt(0), l = a > o, u = Math.min(a, o),
    c = Math.max(a, o);
    if (s.toRegex && r === 1)
      return Qq(u, c, !1, s);
    let f = [], p = 0;
    for (; l ? a >= o : a <= o; )
      f.push(n(a, p)), a = l ? a - r : a + r, p++;
    return s.toRegex === !0 ? Zq(f, null, { wrap: !1, options: s }) : f;
  }, "fillLetters"), Py = /* @__PURE__ */ i((e, t, r, s = {}) => {
    if (t == null && jA(e))
      return [e];
    if (!jA(e) || !jA(t))
      return t$(e, t, s);
    if (typeof r == "function")
      return Py(e, t, 1, { transform: r });
    if (Xq(r))
      return Py(e, t, 0, r);
    let n = { ...s };
    return n.capture === !0 && (n.wrap = !0), r = r || n.step || 1, Lf(r) ? Lf(e) && Lf(t) ? k7e(e, t, r, n) : F7e(e, t, Math.max(Math.abs(r),
    1), n) : r != null && !Xq(r) ? R7e(r, n) : Py(e, t, 1, r);
  }, "fill");
  r$.exports = Py;
});

// ../node_modules/braces/lib/compile.js
var i$ = y((Glt, n$) => {
  "use strict";
  var L7e = $A(), s$ = Ty(), B7e = /* @__PURE__ */ i((e, t = {}) => {
    let r = /* @__PURE__ */ i((s, n = {}) => {
      let a = s$.isInvalidBrace(n), o = s.invalid === !0 && t.escapeInvalid === !0, l = a === !0 || o === !0, u = t.escapeInvalid === !0 ? "\
\\" : "", c = "";
      if (s.isOpen === !0 || s.isClose === !0)
        return u + s.value;
      if (s.type === "open")
        return l ? u + s.value : "(";
      if (s.type === "close")
        return l ? u + s.value : ")";
      if (s.type === "comma")
        return s.prev.type === "comma" ? "" : l ? s.value : "|";
      if (s.value)
        return s.value;
      if (s.nodes && s.ranges > 0) {
        let f = s$.reduce(s.nodes), p = L7e(...f, { ...t, wrap: !1, toRegex: !0 });
        if (p.length !== 0)
          return f.length > 1 && p.length > 1 ? `(${p})` : p;
      }
      if (s.nodes)
        for (let f of s.nodes)
          c += r(f, s);
      return c;
    }, "walk");
    return r(e);
  }, "compile");
  n$.exports = B7e;
});

// ../node_modules/braces/lib/expand.js
var l$ = y((Ylt, o$) => {
  "use strict";
  var M7e = $A(), a$ = xy(), nu = Ty(), Io = /* @__PURE__ */ i((e = "", t = "", r = !1) => {
    let s = [];
    if (e = [].concat(e), t = [].concat(t), !t.length) return e;
    if (!e.length)
      return r ? nu.flatten(t).map((n) => `{${n}}`) : t;
    for (let n of e)
      if (Array.isArray(n))
        for (let a of n)
          s.push(Io(a, t, r));
      else
        for (let a of t)
          r === !0 && typeof a == "string" && (a = `{${a}}`), s.push(Array.isArray(a) ? Io(n, a, r) : n + a);
    return nu.flatten(s);
  }, "append"), j7e = /* @__PURE__ */ i((e, t = {}) => {
    let r = t.rangeLimit === void 0 ? 1e3 : t.rangeLimit, s = /* @__PURE__ */ i((n, a = {}) => {
      n.queue = [];
      let o = a, l = a.queue;
      for (; o.type !== "brace" && o.type !== "root" && o.parent; )
        o = o.parent, l = o.queue;
      if (n.invalid || n.dollar) {
        l.push(Io(l.pop(), a$(n, t)));
        return;
      }
      if (n.type === "brace" && n.invalid !== !0 && n.nodes.length === 2) {
        l.push(Io(l.pop(), ["{}"]));
        return;
      }
      if (n.nodes && n.ranges > 0) {
        let p = nu.reduce(n.nodes);
        if (nu.exceedsLimit(...p, t.step, r))
          throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");
        let d = M7e(...p, t);
        d.length === 0 && (d = a$(n, t)), l.push(Io(l.pop(), d)), n.nodes = [];
        return;
      }
      let u = nu.encloseBrace(n), c = n.queue, f = n;
      for (; f.type !== "brace" && f.type !== "root" && f.parent; )
        f = f.parent, c = f.queue;
      for (let p = 0; p < n.nodes.length; p++) {
        let d = n.nodes[p];
        if (d.type === "comma" && n.type === "brace") {
          p === 1 && c.push(""), c.push("");
          continue;
        }
        if (d.type === "close") {
          l.push(Io(l.pop(), c, u));
          continue;
        }
        if (d.value && d.type !== "open") {
          c.push(Io(c.pop(), d.value));
          continue;
        }
        d.nodes && s(d, n);
      }
      return c;
    }, "walk");
    return nu.flatten(s(e));
  }, "expand");
  o$.exports = j7e;
});

// ../node_modules/braces/lib/constants.js
var c$ = y((zlt, u$) => {
  "use strict";
  u$.exports = {
    MAX_LENGTH: 1024 * 64,
    // Digits
    CHAR_0: "0",
    /* 0 */
    CHAR_9: "9",
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: "A",
    /* A */
    CHAR_LOWERCASE_A: "a",
    /* a */
    CHAR_UPPERCASE_Z: "Z",
    /* Z */
    CHAR_LOWERCASE_Z: "z",
    /* z */
    CHAR_LEFT_PARENTHESES: "(",
    /* ( */
    CHAR_RIGHT_PARENTHESES: ")",
    /* ) */
    CHAR_ASTERISK: "*",
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: "&",
    /* & */
    CHAR_AT: "@",
    /* @ */
    CHAR_BACKSLASH: "\\",
    /* \ */
    CHAR_BACKTICK: "`",
    /* ` */
    CHAR_CARRIAGE_RETURN: "\r",
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: "^",
    /* ^ */
    CHAR_COLON: ":",
    /* : */
    CHAR_COMMA: ",",
    /* , */
    CHAR_DOLLAR: "$",
    /* . */
    CHAR_DOT: ".",
    /* . */
    CHAR_DOUBLE_QUOTE: '"',
    /* " */
    CHAR_EQUAL: "=",
    /* = */
    CHAR_EXCLAMATION_MARK: "!",
    /* ! */
    CHAR_FORM_FEED: "\f",
    /* \f */
    CHAR_FORWARD_SLASH: "/",
    /* / */
    CHAR_HASH: "#",
    /* # */
    CHAR_HYPHEN_MINUS: "-",
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: "<",
    /* < */
    CHAR_LEFT_CURLY_BRACE: "{",
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: "[",
    /* [ */
    CHAR_LINE_FEED: `
`,
    /* \n */
    CHAR_NO_BREAK_SPACE: "\xA0",
    /* \u00A0 */
    CHAR_PERCENT: "%",
    /* % */
    CHAR_PLUS: "+",
    /* + */
    CHAR_QUESTION_MARK: "?",
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: ">",
    /* > */
    CHAR_RIGHT_CURLY_BRACE: "}",
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: "]",
    /* ] */
    CHAR_SEMICOLON: ";",
    /* ; */
    CHAR_SINGLE_QUOTE: "'",
    /* ' */
    CHAR_SPACE: " ",
    /*   */
    CHAR_TAB: "	",
    /* \t */
    CHAR_UNDERSCORE: "_",
    /* _ */
    CHAR_VERTICAL_LINE: "|",
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: "\uFEFF"
    /* \uFEFF */
  };
});

// ../node_modules/braces/lib/parse.js
var m$ = y((Jlt, h$) => {
  "use strict";
  var q7e = xy(), {
    MAX_LENGTH: f$,
    CHAR_BACKSLASH: UA,
    /* \ */
    CHAR_BACKTICK: $7e,
    /* ` */
    CHAR_COMMA: U7e,
    /* , */
    CHAR_DOT: V7e,
    /* . */
    CHAR_LEFT_PARENTHESES: W7e,
    /* ( */
    CHAR_RIGHT_PARENTHESES: H7e,
    /* ) */
    CHAR_LEFT_CURLY_BRACE: G7e,
    /* { */
    CHAR_RIGHT_CURLY_BRACE: K7e,
    /* } */
    CHAR_LEFT_SQUARE_BRACKET: p$,
    /* [ */
    CHAR_RIGHT_SQUARE_BRACKET: d$,
    /* ] */
    CHAR_DOUBLE_QUOTE: Y7e,
    /* " */
    CHAR_SINGLE_QUOTE: X7e,
    /* ' */
    CHAR_NO_BREAK_SPACE: z7e,
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: J7e
  } = c$(), Q7e = /* @__PURE__ */ i((e, t = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    let r = t || {}, s = typeof r.maxLength == "number" ? Math.min(f$, r.maxLength) : f$;
    if (e.length > s)
      throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${s})`);
    let n = { type: "root", input: e, nodes: [] }, a = [n], o = n, l = n, u = 0, c = e.length, f = 0, p = 0, d, m = {}, b = /* @__PURE__ */ i(
    () => e[f++], "advance"), h = /* @__PURE__ */ i((g) => {
      if (g.type === "text" && l.type === "dot" && (l.type = "text"), l && l.type === "text" && g.type === "text") {
        l.value += g.value;
        return;
      }
      return o.nodes.push(g), g.parent = o, g.prev = l, l = g, g;
    }, "push");
    for (h({ type: "bos" }); f < c; )
      if (o = a[a.length - 1], d = b(), !(d === J7e || d === z7e)) {
        if (d === UA) {
          h({ type: "text", value: (t.keepEscaping ? d : "") + b() });
          continue;
        }
        if (d === d$) {
          h({ type: "text", value: "\\" + d });
          continue;
        }
        if (d === p$) {
          u++;
          let g = !0, E;
          for (; f < c && (E = b()); ) {
            if (d += E, E === p$) {
              u++;
              continue;
            }
            if (E === UA) {
              d += b();
              continue;
            }
            if (E === d$ && (u--, u === 0))
              break;
          }
          h({ type: "text", value: d });
          continue;
        }
        if (d === W7e) {
          o = h({ type: "paren", nodes: [] }), a.push(o), h({ type: "text", value: d });
          continue;
        }
        if (d === H7e) {
          if (o.type !== "paren") {
            h({ type: "text", value: d });
            continue;
          }
          o = a.pop(), h({ type: "text", value: d }), o = a[a.length - 1];
          continue;
        }
        if (d === Y7e || d === X7e || d === $7e) {
          let g = d, E;
          for (t.keepQuotes !== !0 && (d = ""); f < c && (E = b()); ) {
            if (E === UA) {
              d += E + b();
              continue;
            }
            if (E === g) {
              t.keepQuotes === !0 && (d += E);
              break;
            }
            d += E;
          }
          h({ type: "text", value: d });
          continue;
        }
        if (d === G7e) {
          p++;
          let E = {
            type: "brace",
            open: !0,
            close: !1,
            dollar: l.value && l.value.slice(-1) === "$" || o.dollar === !0,
            depth: p,
            commas: 0,
            ranges: 0,
            nodes: []
          };
          o = h(E), a.push(o), h({ type: "open", value: d });
          continue;
        }
        if (d === K7e) {
          if (o.type !== "brace") {
            h({ type: "text", value: d });
            continue;
          }
          let g = "close";
          o = a.pop(), o.close = !0, h({ type: g, value: d }), p--, o = a[a.length - 1];
          continue;
        }
        if (d === U7e && p > 0) {
          if (o.ranges > 0) {
            o.ranges = 0;
            let g = o.nodes.shift();
            o.nodes = [g, { type: "text", value: q7e(o) }];
          }
          h({ type: "comma", value: d }), o.commas++;
          continue;
        }
        if (d === V7e && p > 0 && o.commas === 0) {
          let g = o.nodes;
          if (p === 0 || g.length === 0) {
            h({ type: "text", value: d });
            continue;
          }
          if (l.type === "dot") {
            if (o.range = [], l.value += d, l.type = "range", o.nodes.length !== 3 && o.nodes.length !== 5) {
              o.invalid = !0, o.ranges = 0, l.type = "text";
              continue;
            }
            o.ranges++, o.args = [];
            continue;
          }
          if (l.type === "range") {
            g.pop();
            let E = g[g.length - 1];
            E.value += l.value + d, l = E, o.ranges--;
            continue;
          }
          h({ type: "dot", value: d });
          continue;
        }
        h({ type: "text", value: d });
      }
    do
      if (o = a.pop(), o.type !== "root") {
        o.nodes.forEach((D) => {
          D.nodes || (D.type === "open" && (D.isOpen = !0), D.type === "close" && (D.isClose = !0), D.nodes || (D.type = "text"), D.invalid =
          !0);
        });
        let g = a[a.length - 1], E = g.nodes.indexOf(o);
        g.nodes.splice(E, 1, ...o.nodes);
      }
    while (a.length > 0);
    return h({ type: "eos" }), n;
  }, "parse");
  h$.exports = Q7e;
});

// ../node_modules/braces/index.js
var b$ = y((Zlt, g$) => {
  "use strict";
  var y$ = xy(), Z7e = i$(), eqe = l$(), tqe = m$(), Ns = /* @__PURE__ */ i((e, t = {}) => {
    let r = [];
    if (Array.isArray(e))
      for (let s of e) {
        let n = Ns.create(s, t);
        Array.isArray(n) ? r.push(...n) : r.push(n);
      }
    else
      r = [].concat(Ns.create(e, t));
    return t && t.expand === !0 && t.nodupes === !0 && (r = [...new Set(r)]), r;
  }, "braces");
  Ns.parse = (e, t = {}) => tqe(e, t);
  Ns.stringify = (e, t = {}) => y$(typeof e == "string" ? Ns.parse(e, t) : e, t);
  Ns.compile = (e, t = {}) => (typeof e == "string" && (e = Ns.parse(e, t)), Z7e(e, t));
  Ns.expand = (e, t = {}) => {
    typeof e == "string" && (e = Ns.parse(e, t));
    let r = eqe(e, t);
    return t.noempty === !0 && (r = r.filter(Boolean)), t.nodupes === !0 && (r = [...new Set(r)]), r;
  };
  Ns.create = (e, t = {}) => e === "" || e.length < 3 ? [e] : t.expand !== !0 ? Ns.compile(e, t) : Ns.expand(e, t);
  g$.exports = Ns;
});

// ../node_modules/picomatch/lib/constants.js
var Bf = y((tut, x$) => {
  "use strict";
  var rqe = Q("path"), Yn = "\\\\/", E$ = `[^${Yn}]`, Li = "\\.", sqe = "\\+", nqe = "\\?", Ay = "\\/", iqe = "(?=.)", v$ = "[^/]", VA = `(?\
:${Ay}|$)`, S$ = `(?:^|${Ay})`, WA = `${Li}{1,2}${VA}`, aqe = `(?!${Li})`, oqe = `(?!${S$}${WA})`, lqe = `(?!${Li}{0,1}${VA})`, uqe = `(?!${WA}\
)`, cqe = `[^.${Ay}]`, fqe = `${v$}*?`, T$ = {
    DOT_LITERAL: Li,
    PLUS_LITERAL: sqe,
    QMARK_LITERAL: nqe,
    SLASH_LITERAL: Ay,
    ONE_CHAR: iqe,
    QMARK: v$,
    END_ANCHOR: VA,
    DOTS_SLASH: WA,
    NO_DOT: aqe,
    NO_DOTS: oqe,
    NO_DOT_SLASH: lqe,
    NO_DOTS_SLASH: uqe,
    QMARK_NO_DOT: cqe,
    STAR: fqe,
    START_ANCHOR: S$
  }, pqe = {
    ...T$,
    SLASH_LITERAL: `[${Yn}]`,
    QMARK: E$,
    STAR: `${E$}*?`,
    DOTS_SLASH: `${Li}{1,2}(?:[${Yn}]|$)`,
    NO_DOT: `(?!${Li})`,
    NO_DOTS: `(?!(?:^|[${Yn}])${Li}{1,2}(?:[${Yn}]|$))`,
    NO_DOT_SLASH: `(?!${Li}{0,1}(?:[${Yn}]|$))`,
    NO_DOTS_SLASH: `(?!${Li}{1,2}(?:[${Yn}]|$))`,
    QMARK_NO_DOT: `[^.${Yn}]`,
    START_ANCHOR: `(?:^|[${Yn}])`,
    END_ANCHOR: `(?:[${Yn}]|$)`
  }, dqe = {
    alnum: "a-zA-Z0-9",
    alpha: "a-zA-Z",
    ascii: "\\x00-\\x7F",
    blank: " \\t",
    cntrl: "\\x00-\\x1F\\x7F",
    digit: "0-9",
    graph: "\\x21-\\x7E",
    lower: "a-z",
    print: "\\x20-\\x7E ",
    punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",
    space: " \\t\\r\\n\\v\\f",
    upper: "A-Z",
    word: "A-Za-z0-9_",
    xdigit: "A-Fa-f0-9"
  };
  x$.exports = {
    MAX_LENGTH: 1024 * 64,
    POSIX_REGEX_SOURCE: dqe,
    // regular expressions
    REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
    REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
    REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
    REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
    REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
    REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,
    // Replace globs with equivalent patterns to reduce parsing time.
    REPLACEMENTS: {
      "***": "*",
      "**/**": "**",
      "**/**/**": "**"
    },
    // Digits
    CHAR_0: 48,
    /* 0 */
    CHAR_9: 57,
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: 65,
    /* A */
    CHAR_LOWERCASE_A: 97,
    /* a */
    CHAR_UPPERCASE_Z: 90,
    /* Z */
    CHAR_LOWERCASE_Z: 122,
    /* z */
    CHAR_LEFT_PARENTHESES: 40,
    /* ( */
    CHAR_RIGHT_PARENTHESES: 41,
    /* ) */
    CHAR_ASTERISK: 42,
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: 38,
    /* & */
    CHAR_AT: 64,
    /* @ */
    CHAR_BACKWARD_SLASH: 92,
    /* \ */
    CHAR_CARRIAGE_RETURN: 13,
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: 94,
    /* ^ */
    CHAR_COLON: 58,
    /* : */
    CHAR_COMMA: 44,
    /* , */
    CHAR_DOT: 46,
    /* . */
    CHAR_DOUBLE_QUOTE: 34,
    /* " */
    CHAR_EQUAL: 61,
    /* = */
    CHAR_EXCLAMATION_MARK: 33,
    /* ! */
    CHAR_FORM_FEED: 12,
    /* \f */
    CHAR_FORWARD_SLASH: 47,
    /* / */
    CHAR_GRAVE_ACCENT: 96,
    /* ` */
    CHAR_HASH: 35,
    /* # */
    CHAR_HYPHEN_MINUS: 45,
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: 60,
    /* < */
    CHAR_LEFT_CURLY_BRACE: 123,
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: 91,
    /* [ */
    CHAR_LINE_FEED: 10,
    /* \n */
    CHAR_NO_BREAK_SPACE: 160,
    /* \u00A0 */
    CHAR_PERCENT: 37,
    /* % */
    CHAR_PLUS: 43,
    /* + */
    CHAR_QUESTION_MARK: 63,
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: 62,
    /* > */
    CHAR_RIGHT_CURLY_BRACE: 125,
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: 93,
    /* ] */
    CHAR_SEMICOLON: 59,
    /* ; */
    CHAR_SINGLE_QUOTE: 39,
    /* ' */
    CHAR_SPACE: 32,
    /*   */
    CHAR_TAB: 9,
    /* \t */
    CHAR_UNDERSCORE: 95,
    /* _ */
    CHAR_VERTICAL_LINE: 124,
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,
    /* \uFEFF */
    SEP: rqe.sep,
    /**
     * Create EXTGLOB_CHARS
     */
    extglobChars(e) {
      return {
        "!": { type: "negate", open: "(?:(?!(?:", close: `))${e.STAR})` },
        "?": { type: "qmark", open: "(?:", close: ")?" },
        "+": { type: "plus", open: "(?:", close: ")+" },
        "*": { type: "star", open: "(?:", close: ")*" },
        "@": { type: "at", open: "(?:", close: ")" }
      };
    },
    /**
     * Create GLOB_CHARS
     */
    globChars(e) {
      return e === !0 ? pqe : T$;
    }
  };
});

// ../node_modules/picomatch/lib/utils.js
var Mf = y((Ss) => {
  "use strict";
  var hqe = Q("path"), mqe = process.platform === "win32", {
    REGEX_BACKSLASH: yqe,
    REGEX_REMOVE_BACKSLASH: gqe,
    REGEX_SPECIAL_CHARS: bqe,
    REGEX_SPECIAL_CHARS_GLOBAL: Eqe
  } = Bf();
  Ss.isObject = (e) => e !== null && typeof e == "object" && !Array.isArray(e);
  Ss.hasRegexChars = (e) => bqe.test(e);
  Ss.isRegexChar = (e) => e.length === 1 && Ss.hasRegexChars(e);
  Ss.escapeRegex = (e) => e.replace(Eqe, "\\$1");
  Ss.toPosixSlashes = (e) => e.replace(yqe, "/");
  Ss.removeBackslashes = (e) => e.replace(gqe, (t) => t === "\\" ? "" : t);
  Ss.supportsLookbehinds = () => {
    let e = process.version.slice(1).split(".").map(Number);
    return e.length === 3 && e[0] >= 9 || e[0] === 8 && e[1] >= 10;
  };
  Ss.isWindows = (e) => e && typeof e.windows == "boolean" ? e.windows : mqe === !0 || hqe.sep === "\\";
  Ss.escapeLast = (e, t, r) => {
    let s = e.lastIndexOf(t, r);
    return s === -1 ? e : e[s - 1] === "\\" ? Ss.escapeLast(e, t, s - 1) : `${e.slice(0, s)}\\${e.slice(s)}`;
  };
  Ss.removePrefix = (e, t = {}) => {
    let r = e;
    return r.startsWith("./") && (r = r.slice(2), t.prefix = "./"), r;
  };
  Ss.wrapOutput = (e, t = {}, r = {}) => {
    let s = r.contains ? "" : "^", n = r.contains ? "" : "$", a = `${s}(?:${e})${n}`;
    return t.negated === !0 && (a = `(?:^(?!${a}).*$)`), a;
  };
});

// ../node_modules/picomatch/lib/scan.js
var O$ = y((sut, _$) => {
  "use strict";
  var P$ = Mf(), {
    CHAR_ASTERISK: HA,
    /* * */
    CHAR_AT: vqe,
    /* @ */
    CHAR_BACKWARD_SLASH: jf,
    /* \ */
    CHAR_COMMA: Sqe,
    /* , */
    CHAR_DOT: GA,
    /* . */
    CHAR_EXCLAMATION_MARK: KA,
    /* ! */
    CHAR_FORWARD_SLASH: I$,
    /* / */
    CHAR_LEFT_CURLY_BRACE: YA,
    /* { */
    CHAR_LEFT_PARENTHESES: XA,
    /* ( */
    CHAR_LEFT_SQUARE_BRACKET: Tqe,
    /* [ */
    CHAR_PLUS: xqe,
    /* + */
    CHAR_QUESTION_MARK: A$,
    /* ? */
    CHAR_RIGHT_CURLY_BRACE: Pqe,
    /* } */
    CHAR_RIGHT_PARENTHESES: C$,
    /* ) */
    CHAR_RIGHT_SQUARE_BRACKET: Aqe
    /* ] */
  } = Bf(), w$ = /* @__PURE__ */ i((e) => e === I$ || e === jf, "isPathSeparator"), D$ = /* @__PURE__ */ i((e) => {
    e.isPrefix !== !0 && (e.depth = e.isGlobstar ? 1 / 0 : 1);
  }, "depth"), Cqe = /* @__PURE__ */ i((e, t) => {
    let r = t || {}, s = e.length - 1, n = r.parts === !0 || r.scanToEnd === !0, a = [], o = [], l = [], u = e, c = -1, f = 0, p = 0, d = !1,
    m = !1, b = !1, h = !1, g = !1, E = !1, D = !1, C = !1, N = !1, I = !1, M = 0, q, V, W = { value: "", depth: 0, isGlob: !1 }, Y = /* @__PURE__ */ i(
    () => c >= s, "eos"), j = /* @__PURE__ */ i(() => u.charCodeAt(c + 1), "peek"), ae = /* @__PURE__ */ i(() => (q = V, u.charCodeAt(++c)),
    "advance");
    for (; c < s; ) {
      V = ae();
      let se;
      if (V === jf) {
        D = W.backslashes = !0, V = ae(), V === YA && (E = !0);
        continue;
      }
      if (E === !0 || V === YA) {
        for (M++; Y() !== !0 && (V = ae()); ) {
          if (V === jf) {
            D = W.backslashes = !0, ae();
            continue;
          }
          if (V === YA) {
            M++;
            continue;
          }
          if (E !== !0 && V === GA && (V = ae()) === GA) {
            if (d = W.isBrace = !0, b = W.isGlob = !0, I = !0, n === !0)
              continue;
            break;
          }
          if (E !== !0 && V === Sqe) {
            if (d = W.isBrace = !0, b = W.isGlob = !0, I = !0, n === !0)
              continue;
            break;
          }
          if (V === Pqe && (M--, M === 0)) {
            E = !1, d = W.isBrace = !0, I = !0;
            break;
          }
        }
        if (n === !0)
          continue;
        break;
      }
      if (V === I$) {
        if (a.push(c), o.push(W), W = { value: "", depth: 0, isGlob: !1 }, I === !0) continue;
        if (q === GA && c === f + 1) {
          f += 2;
          continue;
        }
        p = c + 1;
        continue;
      }
      if (r.noext !== !0 && (V === xqe || V === vqe || V === HA || V === A$ || V === KA) === !0 && j() === XA) {
        if (b = W.isGlob = !0, h = W.isExtglob = !0, I = !0, V === KA && c === f && (N = !0), n === !0) {
          for (; Y() !== !0 && (V = ae()); ) {
            if (V === jf) {
              D = W.backslashes = !0, V = ae();
              continue;
            }
            if (V === C$) {
              b = W.isGlob = !0, I = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (V === HA) {
        if (q === HA && (g = W.isGlobstar = !0), b = W.isGlob = !0, I = !0, n === !0)
          continue;
        break;
      }
      if (V === A$) {
        if (b = W.isGlob = !0, I = !0, n === !0)
          continue;
        break;
      }
      if (V === Tqe) {
        for (; Y() !== !0 && (se = ae()); ) {
          if (se === jf) {
            D = W.backslashes = !0, ae();
            continue;
          }
          if (se === Aqe) {
            m = W.isBracket = !0, b = W.isGlob = !0, I = !0;
            break;
          }
        }
        if (n === !0)
          continue;
        break;
      }
      if (r.nonegate !== !0 && V === KA && c === f) {
        C = W.negated = !0, f++;
        continue;
      }
      if (r.noparen !== !0 && V === XA) {
        if (b = W.isGlob = !0, n === !0) {
          for (; Y() !== !0 && (V = ae()); ) {
            if (V === XA) {
              D = W.backslashes = !0, V = ae();
              continue;
            }
            if (V === C$) {
              I = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (b === !0) {
        if (I = !0, n === !0)
          continue;
        break;
      }
    }
    r.noext === !0 && (h = !1, b = !1);
    let pe = u, Ie = "", F = "";
    f > 0 && (Ie = u.slice(0, f), u = u.slice(f), p -= f), pe && b === !0 && p > 0 ? (pe = u.slice(0, p), F = u.slice(p)) : b === !0 ? (pe =
    "", F = u) : pe = u, pe && pe !== "" && pe !== "/" && pe !== u && w$(pe.charCodeAt(pe.length - 1)) && (pe = pe.slice(0, -1)), r.unescape ===
    !0 && (F && (F = P$.removeBackslashes(F)), pe && D === !0 && (pe = P$.removeBackslashes(pe)));
    let L = {
      prefix: Ie,
      input: e,
      start: f,
      base: pe,
      glob: F,
      isBrace: d,
      isBracket: m,
      isGlob: b,
      isExtglob: h,
      isGlobstar: g,
      negated: C,
      negatedExtglob: N
    };
    if (r.tokens === !0 && (L.maxDepth = 0, w$(V) || o.push(W), L.tokens = o), r.parts === !0 || r.tokens === !0) {
      let se;
      for (let ne = 0; ne < a.length; ne++) {
        let Ee = se ? se + 1 : f, qe = a[ne], Ae = e.slice(Ee, qe);
        r.tokens && (ne === 0 && f !== 0 ? (o[ne].isPrefix = !0, o[ne].value = Ie) : o[ne].value = Ae, D$(o[ne]), L.maxDepth += o[ne].depth),
        (ne !== 0 || Ae !== "") && l.push(Ae), se = qe;
      }
      if (se && se + 1 < e.length) {
        let ne = e.slice(se + 1);
        l.push(ne), r.tokens && (o[o.length - 1].value = ne, D$(o[o.length - 1]), L.maxDepth += o[o.length - 1].depth);
      }
      L.slashes = a, L.parts = l;
    }
    return L;
  }, "scan");
  _$.exports = Cqe;
});

// ../node_modules/picomatch/lib/parse.js
var k$ = y((iut, R$) => {
  "use strict";
  var Cy = Bf(), Rs = Mf(), {
    MAX_LENGTH: wy,
    POSIX_REGEX_SOURCE: wqe,
    REGEX_NON_SPECIAL_CHARS: Dqe,
    REGEX_SPECIAL_CHARS_BACKREF: Iqe,
    REPLACEMENTS: N$
  } = Cy, _qe = /* @__PURE__ */ i((e, t) => {
    if (typeof t.expandRange == "function")
      return t.expandRange(...e, t);
    e.sort();
    let r = `[${e.join("-")}]`;
    try {
      new RegExp(r);
    } catch {
      return e.map((n) => Rs.escapeRegex(n)).join("..");
    }
    return r;
  }, "expandRange"), iu = /* @__PURE__ */ i((e, t) => `Missing ${e}: "${t}" - use "\\\\${t}" to match literal characters`, "syntaxError"), zA = /* @__PURE__ */ i(
  (e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    e = N$[e] || e;
    let r = { ...t }, s = typeof r.maxLength == "number" ? Math.min(wy, r.maxLength) : wy, n = e.length;
    if (n > s)
      throw new SyntaxError(`Input length: ${n}, exceeds maximum allowed length: ${s}`);
    let a = { type: "bos", value: "", output: r.prepend || "" }, o = [a], l = r.capture ? "" : "?:", u = Rs.isWindows(t), c = Cy.globChars(u),
    f = Cy.extglobChars(c), {
      DOT_LITERAL: p,
      PLUS_LITERAL: d,
      SLASH_LITERAL: m,
      ONE_CHAR: b,
      DOTS_SLASH: h,
      NO_DOT: g,
      NO_DOT_SLASH: E,
      NO_DOTS_SLASH: D,
      QMARK: C,
      QMARK_NO_DOT: N,
      STAR: I,
      START_ANCHOR: M
    } = c, q = /* @__PURE__ */ i((de) => `(${l}(?:(?!${M}${de.dot ? h : p}).)*?)`, "globstar"), V = r.dot ? "" : g, W = r.dot ? C : N, Y = r.
    bash === !0 ? q(r) : I;
    r.capture && (Y = `(${Y})`), typeof r.noext == "boolean" && (r.noextglob = r.noext);
    let j = {
      input: e,
      index: -1,
      start: 0,
      dot: r.dot === !0,
      consumed: "",
      output: "",
      prefix: "",
      backtrack: !1,
      negated: !1,
      brackets: 0,
      braces: 0,
      parens: 0,
      quotes: 0,
      globstar: !1,
      tokens: o
    };
    e = Rs.removePrefix(e, j), n = e.length;
    let ae = [], pe = [], Ie = [], F = a, L, se = /* @__PURE__ */ i(() => j.index === n - 1, "eos"), ne = j.peek = (de = 1) => e[j.index + de],
    Ee = j.advance = () => e[++j.index] || "", qe = /* @__PURE__ */ i(() => e.slice(j.index + 1), "remaining"), Ae = /* @__PURE__ */ i((de = "", ut = 0) => {
      j.consumed += de, j.index += ut;
    }, "consume"), Rt = /* @__PURE__ */ i((de) => {
      j.output += de.output != null ? de.output : de.value, Ae(de.value);
    }, "append"), Bt = /* @__PURE__ */ i(() => {
      let de = 1;
      for (; ne() === "!" && (ne(2) !== "(" || ne(3) === "?"); )
        Ee(), j.start++, de++;
      return de % 2 === 0 ? !1 : (j.negated = !0, j.start++, !0);
    }, "negate"), qt = /* @__PURE__ */ i((de) => {
      j[de]++, Ie.push(de);
    }, "increment"), _e = /* @__PURE__ */ i((de) => {
      j[de]--, Ie.pop();
    }, "decrement"), Oe = /* @__PURE__ */ i((de) => {
      if (F.type === "globstar") {
        let ut = j.braces > 0 && (de.type === "comma" || de.type === "brace"), le = de.extglob === !0 || ae.length && (de.type === "pipe" ||
        de.type === "paren");
        de.type !== "slash" && de.type !== "paren" && !ut && !le && (j.output = j.output.slice(0, -F.output.length), F.type = "star", F.value =
        "*", F.output = Y, j.output += F.output);
      }
      if (ae.length && de.type !== "paren" && (ae[ae.length - 1].inner += de.value), (de.value || de.output) && Rt(de), F && F.type === "tex\
t" && de.type === "text") {
        F.value += de.value, F.output = (F.output || "") + de.value;
        return;
      }
      de.prev = F, o.push(de), F = de;
    }, "push"), Jt = /* @__PURE__ */ i((de, ut) => {
      let le = { ...f[ut], conditions: 1, inner: "" };
      le.prev = F, le.parens = j.parens, le.output = j.output;
      let He = (r.capture ? "(" : "") + le.open;
      qt("parens"), Oe({ type: de, value: ut, output: j.output ? "" : b }), Oe({ type: "paren", extglob: !0, value: Ee(), output: He }), ae.
      push(le);
    }, "extglobOpen"), Tr = /* @__PURE__ */ i((de) => {
      let ut = de.close + (r.capture ? ")" : ""), le;
      if (de.type === "negate") {
        let He = Y;
        if (de.inner && de.inner.length > 1 && de.inner.includes("/") && (He = q(r)), (He !== Y || se() || /^\)+$/.test(qe())) && (ut = de.close =
        `)$))${He}`), de.inner.includes("*") && (le = qe()) && /^\.[^\\/.]+$/.test(le)) {
          let Pt = zA(le, { ...t, fastpaths: !1 }).output;
          ut = de.close = `)${Pt})${He})`;
        }
        de.prev.type === "bos" && (j.negatedExtglob = !0);
      }
      Oe({ type: "paren", extglob: !0, value: L, output: ut }), _e("parens");
    }, "extglobClose");
    if (r.fastpaths !== !1 && !/(^[*!]|[/()[\]{}"])/.test(e)) {
      let de = !1, ut = e.replace(Iqe, (le, He, Pt, Qt, kt, sn) => Qt === "\\" ? (de = !0, le) : Qt === "?" ? He ? He + Qt + (kt ? C.repeat(
      kt.length) : "") : sn === 0 ? W + (kt ? C.repeat(kt.length) : "") : C.repeat(Pt.length) : Qt === "." ? p.repeat(Pt.length) : Qt === "*" ?
      He ? He + Qt + (kt ? Y : "") : Y : He ? le : `\\${le}`);
      return de === !0 && (r.unescape === !0 ? ut = ut.replace(/\\/g, "") : ut = ut.replace(/\\+/g, (le) => le.length % 2 === 0 ? "\\\\" : le ?
      "\\" : "")), ut === e && r.contains === !0 ? (j.output = e, j) : (j.output = Rs.wrapOutput(ut, j, t), j);
    }
    for (; !se(); ) {
      if (L = Ee(), L === "\0")
        continue;
      if (L === "\\") {
        let le = ne();
        if (le === "/" && r.bash !== !0 || le === "." || le === ";")
          continue;
        if (!le) {
          L += "\\", Oe({ type: "text", value: L });
          continue;
        }
        let He = /^\\+/.exec(qe()), Pt = 0;
        if (He && He[0].length > 2 && (Pt = He[0].length, j.index += Pt, Pt % 2 !== 0 && (L += "\\")), r.unescape === !0 ? L = Ee() : L += Ee(),
        j.brackets === 0) {
          Oe({ type: "text", value: L });
          continue;
        }
      }
      if (j.brackets > 0 && (L !== "]" || F.value === "[" || F.value === "[^")) {
        if (r.posix !== !1 && L === ":") {
          let le = F.value.slice(1);
          if (le.includes("[") && (F.posix = !0, le.includes(":"))) {
            let He = F.value.lastIndexOf("["), Pt = F.value.slice(0, He), Qt = F.value.slice(He + 2), kt = wqe[Qt];
            if (kt) {
              F.value = Pt + kt, j.backtrack = !0, Ee(), !a.output && o.indexOf(F) === 1 && (a.output = b);
              continue;
            }
          }
        }
        (L === "[" && ne() !== ":" || L === "-" && ne() === "]") && (L = `\\${L}`), L === "]" && (F.value === "[" || F.value === "[^") && (L =
        `\\${L}`), r.posix === !0 && L === "!" && F.value === "[" && (L = "^"), F.value += L, Rt({ value: L });
        continue;
      }
      if (j.quotes === 1 && L !== '"') {
        L = Rs.escapeRegex(L), F.value += L, Rt({ value: L });
        continue;
      }
      if (L === '"') {
        j.quotes = j.quotes === 1 ? 0 : 1, r.keepQuotes === !0 && Oe({ type: "text", value: L });
        continue;
      }
      if (L === "(") {
        qt("parens"), Oe({ type: "paren", value: L });
        continue;
      }
      if (L === ")") {
        if (j.parens === 0 && r.strictBrackets === !0)
          throw new SyntaxError(iu("opening", "("));
        let le = ae[ae.length - 1];
        if (le && j.parens === le.parens + 1) {
          Tr(ae.pop());
          continue;
        }
        Oe({ type: "paren", value: L, output: j.parens ? ")" : "\\)" }), _e("parens");
        continue;
      }
      if (L === "[") {
        if (r.nobracket === !0 || !qe().includes("]")) {
          if (r.nobracket !== !0 && r.strictBrackets === !0)
            throw new SyntaxError(iu("closing", "]"));
          L = `\\${L}`;
        } else
          qt("brackets");
        Oe({ type: "bracket", value: L });
        continue;
      }
      if (L === "]") {
        if (r.nobracket === !0 || F && F.type === "bracket" && F.value.length === 1) {
          Oe({ type: "text", value: L, output: `\\${L}` });
          continue;
        }
        if (j.brackets === 0) {
          if (r.strictBrackets === !0)
            throw new SyntaxError(iu("opening", "["));
          Oe({ type: "text", value: L, output: `\\${L}` });
          continue;
        }
        _e("brackets");
        let le = F.value.slice(1);
        if (F.posix !== !0 && le[0] === "^" && !le.includes("/") && (L = `/${L}`), F.value += L, Rt({ value: L }), r.literalBrackets === !1 ||
        Rs.hasRegexChars(le))
          continue;
        let He = Rs.escapeRegex(F.value);
        if (j.output = j.output.slice(0, -F.value.length), r.literalBrackets === !0) {
          j.output += He, F.value = He;
          continue;
        }
        F.value = `(${l}${He}|${F.value})`, j.output += F.value;
        continue;
      }
      if (L === "{" && r.nobrace !== !0) {
        qt("braces");
        let le = {
          type: "brace",
          value: L,
          output: "(",
          outputIndex: j.output.length,
          tokensIndex: j.tokens.length
        };
        pe.push(le), Oe(le);
        continue;
      }
      if (L === "}") {
        let le = pe[pe.length - 1];
        if (r.nobrace === !0 || !le) {
          Oe({ type: "text", value: L, output: L });
          continue;
        }
        let He = ")";
        if (le.dots === !0) {
          let Pt = o.slice(), Qt = [];
          for (let kt = Pt.length - 1; kt >= 0 && (o.pop(), Pt[kt].type !== "brace"); kt--)
            Pt[kt].type !== "dots" && Qt.unshift(Pt[kt].value);
          He = _qe(Qt, r), j.backtrack = !0;
        }
        if (le.comma !== !0 && le.dots !== !0) {
          let Pt = j.output.slice(0, le.outputIndex), Qt = j.tokens.slice(le.tokensIndex);
          le.value = le.output = "\\{", L = He = "\\}", j.output = Pt;
          for (let kt of Qt)
            j.output += kt.output || kt.value;
        }
        Oe({ type: "brace", value: L, output: He }), _e("braces"), pe.pop();
        continue;
      }
      if (L === "|") {
        ae.length > 0 && ae[ae.length - 1].conditions++, Oe({ type: "text", value: L });
        continue;
      }
      if (L === ",") {
        let le = L, He = pe[pe.length - 1];
        He && Ie[Ie.length - 1] === "braces" && (He.comma = !0, le = "|"), Oe({ type: "comma", value: L, output: le });
        continue;
      }
      if (L === "/") {
        if (F.type === "dot" && j.index === j.start + 1) {
          j.start = j.index + 1, j.consumed = "", j.output = "", o.pop(), F = a;
          continue;
        }
        Oe({ type: "slash", value: L, output: m });
        continue;
      }
      if (L === ".") {
        if (j.braces > 0 && F.type === "dot") {
          F.value === "." && (F.output = p);
          let le = pe[pe.length - 1];
          F.type = "dots", F.output += L, F.value += L, le.dots = !0;
          continue;
        }
        if (j.braces + j.parens === 0 && F.type !== "bos" && F.type !== "slash") {
          Oe({ type: "text", value: L, output: p });
          continue;
        }
        Oe({ type: "dot", value: L, output: p });
        continue;
      }
      if (L === "?") {
        if (!(F && F.value === "(") && r.noextglob !== !0 && ne() === "(" && ne(2) !== "?") {
          Jt("qmark", L);
          continue;
        }
        if (F && F.type === "paren") {
          let He = ne(), Pt = L;
          if (He === "<" && !Rs.supportsLookbehinds())
            throw new Error("Node.js v10 or higher is required for regex lookbehinds");
          (F.value === "(" && !/[!=<:]/.test(He) || He === "<" && !/<([!=]|\w+>)/.test(qe())) && (Pt = `\\${L}`), Oe({ type: "text", value: L,
          output: Pt });
          continue;
        }
        if (r.dot !== !0 && (F.type === "slash" || F.type === "bos")) {
          Oe({ type: "qmark", value: L, output: N });
          continue;
        }
        Oe({ type: "qmark", value: L, output: C });
        continue;
      }
      if (L === "!") {
        if (r.noextglob !== !0 && ne() === "(" && (ne(2) !== "?" || !/[!=<:]/.test(ne(3)))) {
          Jt("negate", L);
          continue;
        }
        if (r.nonegate !== !0 && j.index === 0) {
          Bt();
          continue;
        }
      }
      if (L === "+") {
        if (r.noextglob !== !0 && ne() === "(" && ne(2) !== "?") {
          Jt("plus", L);
          continue;
        }
        if (F && F.value === "(" || r.regex === !1) {
          Oe({ type: "plus", value: L, output: d });
          continue;
        }
        if (F && (F.type === "bracket" || F.type === "paren" || F.type === "brace") || j.parens > 0) {
          Oe({ type: "plus", value: L });
          continue;
        }
        Oe({ type: "plus", value: d });
        continue;
      }
      if (L === "@") {
        if (r.noextglob !== !0 && ne() === "(" && ne(2) !== "?") {
          Oe({ type: "at", extglob: !0, value: L, output: "" });
          continue;
        }
        Oe({ type: "text", value: L });
        continue;
      }
      if (L !== "*") {
        (L === "$" || L === "^") && (L = `\\${L}`);
        let le = Dqe.exec(qe());
        le && (L += le[0], j.index += le[0].length), Oe({ type: "text", value: L });
        continue;
      }
      if (F && (F.type === "globstar" || F.star === !0)) {
        F.type = "star", F.star = !0, F.value += L, F.output = Y, j.backtrack = !0, j.globstar = !0, Ae(L);
        continue;
      }
      let de = qe();
      if (r.noextglob !== !0 && /^\([^?]/.test(de)) {
        Jt("star", L);
        continue;
      }
      if (F.type === "star") {
        if (r.noglobstar === !0) {
          Ae(L);
          continue;
        }
        let le = F.prev, He = le.prev, Pt = le.type === "slash" || le.type === "bos", Qt = He && (He.type === "star" || He.type === "globsta\
r");
        if (r.bash === !0 && (!Pt || de[0] && de[0] !== "/")) {
          Oe({ type: "star", value: L, output: "" });
          continue;
        }
        let kt = j.braces > 0 && (le.type === "comma" || le.type === "brace"), sn = ae.length && (le.type === "pipe" || le.type === "paren");
        if (!Pt && le.type !== "paren" && !kt && !sn) {
          Oe({ type: "star", value: L, output: "" });
          continue;
        }
        for (; de.slice(0, 3) === "/**"; ) {
          let zr = e[j.index + 4];
          if (zr && zr !== "/")
            break;
          de = de.slice(3), Ae("/**", 3);
        }
        if (le.type === "bos" && se()) {
          F.type = "globstar", F.value += L, F.output = q(r), j.output = F.output, j.globstar = !0, Ae(L);
          continue;
        }
        if (le.type === "slash" && le.prev.type !== "bos" && !Qt && se()) {
          j.output = j.output.slice(0, -(le.output + F.output).length), le.output = `(?:${le.output}`, F.type = "globstar", F.output = q(r) +
          (r.strictSlashes ? ")" : "|$)"), F.value += L, j.globstar = !0, j.output += le.output + F.output, Ae(L);
          continue;
        }
        if (le.type === "slash" && le.prev.type !== "bos" && de[0] === "/") {
          let zr = de[1] !== void 0 ? "|$" : "";
          j.output = j.output.slice(0, -(le.output + F.output).length), le.output = `(?:${le.output}`, F.type = "globstar", F.output = `${q(
          r)}${m}|${m}${zr})`, F.value += L, j.output += le.output + F.output, j.globstar = !0, Ae(L + Ee()), Oe({ type: "slash", value: "/",
          output: "" });
          continue;
        }
        if (le.type === "bos" && de[0] === "/") {
          F.type = "globstar", F.value += L, F.output = `(?:^|${m}|${q(r)}${m})`, j.output = F.output, j.globstar = !0, Ae(L + Ee()), Oe({ type: "\
slash", value: "/", output: "" });
          continue;
        }
        j.output = j.output.slice(0, -F.output.length), F.type = "globstar", F.output = q(r), F.value += L, j.output += F.output, j.globstar =
        !0, Ae(L);
        continue;
      }
      let ut = { type: "star", value: L, output: Y };
      if (r.bash === !0) {
        ut.output = ".*?", (F.type === "bos" || F.type === "slash") && (ut.output = V + ut.output), Oe(ut);
        continue;
      }
      if (F && (F.type === "bracket" || F.type === "paren") && r.regex === !0) {
        ut.output = L, Oe(ut);
        continue;
      }
      (j.index === j.start || F.type === "slash" || F.type === "dot") && (F.type === "dot" ? (j.output += E, F.output += E) : r.dot === !0 ?
      (j.output += D, F.output += D) : (j.output += V, F.output += V), ne() !== "*" && (j.output += b, F.output += b)), Oe(ut);
    }
    for (; j.brackets > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(iu("closing", "]"));
      j.output = Rs.escapeLast(j.output, "["), _e("brackets");
    }
    for (; j.parens > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(iu("closing", ")"));
      j.output = Rs.escapeLast(j.output, "("), _e("parens");
    }
    for (; j.braces > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(iu("closing", "}"));
      j.output = Rs.escapeLast(j.output, "{"), _e("braces");
    }
    if (r.strictSlashes !== !0 && (F.type === "star" || F.type === "bracket") && Oe({ type: "maybe_slash", value: "", output: `${m}?` }), j.
    backtrack === !0) {
      j.output = "";
      for (let de of j.tokens)
        j.output += de.output != null ? de.output : de.value, de.suffix && (j.output += de.suffix);
    }
    return j;
  }, "parse");
  zA.fastpaths = (e, t) => {
    let r = { ...t }, s = typeof r.maxLength == "number" ? Math.min(wy, r.maxLength) : wy, n = e.length;
    if (n > s)
      throw new SyntaxError(`Input length: ${n}, exceeds maximum allowed length: ${s}`);
    e = N$[e] || e;
    let a = Rs.isWindows(t), {
      DOT_LITERAL: o,
      SLASH_LITERAL: l,
      ONE_CHAR: u,
      DOTS_SLASH: c,
      NO_DOT: f,
      NO_DOTS: p,
      NO_DOTS_SLASH: d,
      STAR: m,
      START_ANCHOR: b
    } = Cy.globChars(a), h = r.dot ? p : f, g = r.dot ? d : f, E = r.capture ? "" : "?:", D = { negated: !1, prefix: "" }, C = r.bash === !0 ?
    ".*?" : m;
    r.capture && (C = `(${C})`);
    let N = /* @__PURE__ */ i((V) => V.noglobstar === !0 ? C : `(${E}(?:(?!${b}${V.dot ? c : o}).)*?)`, "globstar"), I = /* @__PURE__ */ i((V) => {
      switch (V) {
        case "*":
          return `${h}${u}${C}`;
        case ".*":
          return `${o}${u}${C}`;
        case "*.*":
          return `${h}${C}${o}${u}${C}`;
        case "*/*":
          return `${h}${C}${l}${u}${g}${C}`;
        case "**":
          return h + N(r);
        case "**/*":
          return `(?:${h}${N(r)}${l})?${g}${u}${C}`;
        case "**/*.*":
          return `(?:${h}${N(r)}${l})?${g}${C}${o}${u}${C}`;
        case "**/.*":
          return `(?:${h}${N(r)}${l})?${o}${u}${C}`;
        default: {
          let W = /^(.*?)\.(\w+)$/.exec(V);
          if (!W) return;
          let Y = I(W[1]);
          return Y ? Y + o + W[2] : void 0;
        }
      }
    }, "create"), M = Rs.removePrefix(e, D), q = I(M);
    return q && r.strictSlashes !== !0 && (q += `${l}?`), q;
  };
  R$.exports = zA;
});

// ../node_modules/picomatch/lib/picomatch.js
var L$ = y((out, F$) => {
  "use strict";
  var Oqe = Q("path"), Nqe = O$(), JA = k$(), QA = Mf(), Rqe = Bf(), kqe = /* @__PURE__ */ i((e) => e && typeof e == "object" && !Array.isArray(
  e), "isObject"), yr = /* @__PURE__ */ i((e, t, r = !1) => {
    if (Array.isArray(e)) {
      let f = e.map((d) => yr(d, t, r));
      return /* @__PURE__ */ i((d) => {
        for (let m of f) {
          let b = m(d);
          if (b) return b;
        }
        return !1;
      }, "arrayMatcher");
    }
    let s = kqe(e) && e.tokens && e.input;
    if (e === "" || typeof e != "string" && !s)
      throw new TypeError("Expected pattern to be a non-empty string");
    let n = t || {}, a = QA.isWindows(t), o = s ? yr.compileRe(e, t) : yr.makeRe(e, t, !1, !0), l = o.state;
    delete o.state;
    let u = /* @__PURE__ */ i(() => !1, "isIgnored");
    if (n.ignore) {
      let f = { ...t, ignore: null, onMatch: null, onResult: null };
      u = yr(n.ignore, f, r);
    }
    let c = /* @__PURE__ */ i((f, p = !1) => {
      let { isMatch: d, match: m, output: b } = yr.test(f, o, t, { glob: e, posix: a }), h = { glob: e, state: l, regex: o, posix: a, input: f,
      output: b, match: m, isMatch: d };
      return typeof n.onResult == "function" && n.onResult(h), d === !1 ? (h.isMatch = !1, p ? h : !1) : u(f) ? (typeof n.onIgnore == "funct\
ion" && n.onIgnore(h), h.isMatch = !1, p ? h : !1) : (typeof n.onMatch == "function" && n.onMatch(h), p ? h : !0);
    }, "matcher");
    return r && (c.state = l), c;
  }, "picomatch");
  yr.test = (e, t, r, { glob: s, posix: n } = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected input to be a string");
    if (e === "")
      return { isMatch: !1, output: "" };
    let a = r || {}, o = a.format || (n ? QA.toPosixSlashes : null), l = e === s, u = l && o ? o(e) : e;
    return l === !1 && (u = o ? o(e) : e, l = u === s), (l === !1 || a.capture === !0) && (a.matchBase === !0 || a.basename === !0 ? l = yr.
    matchBase(e, t, r, n) : l = t.exec(u)), { isMatch: !!l, match: l, output: u };
  };
  yr.matchBase = (e, t, r, s = QA.isWindows(r)) => (t instanceof RegExp ? t : yr.makeRe(t, r)).test(Oqe.basename(e));
  yr.isMatch = (e, t, r) => yr(t, r)(e);
  yr.parse = (e, t) => Array.isArray(e) ? e.map((r) => yr.parse(r, t)) : JA(e, { ...t, fastpaths: !1 });
  yr.scan = (e, t) => Nqe(e, t);
  yr.compileRe = (e, t, r = !1, s = !1) => {
    if (r === !0)
      return e.output;
    let n = t || {}, a = n.contains ? "" : "^", o = n.contains ? "" : "$", l = `${a}(?:${e.output})${o}`;
    e && e.negated === !0 && (l = `^(?!${l}).*$`);
    let u = yr.toRegex(l, t);
    return s === !0 && (u.state = e), u;
  };
  yr.makeRe = (e, t = {}, r = !1, s = !1) => {
    if (!e || typeof e != "string")
      throw new TypeError("Expected a non-empty string");
    let n = { negated: !1, fastpaths: !0 };
    return t.fastpaths !== !1 && (e[0] === "." || e[0] === "*") && (n.output = JA.fastpaths(e, t)), n.output || (n = JA(e, t)), yr.compileRe(
    n, t, r, s);
  };
  yr.toRegex = (e, t) => {
    try {
      let r = t || {};
      return new RegExp(e, r.flags || (r.nocase ? "i" : ""));
    } catch (r) {
      if (t && t.debug === !0) throw r;
      return /$^/;
    }
  };
  yr.constants = Rqe;
  F$.exports = yr;
});

// ../node_modules/picomatch/index.js
var M$ = y((uut, B$) => {
  "use strict";
  B$.exports = L$();
});

// ../node_modules/micromatch/index.js
var V$ = y((cut, U$) => {
  "use strict";
  var q$ = Q("util"), $$ = b$(), Xn = M$(), ZA = Mf(), j$ = /* @__PURE__ */ i((e) => e === "" || e === "./", "isEmptyString"), zt = /* @__PURE__ */ i(
  (e, t, r) => {
    t = [].concat(t), e = [].concat(e);
    let s = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set(), a = /* @__PURE__ */ new Set(), o = 0, l = /* @__PURE__ */ i((f) => {
      a.add(f.output), r && r.onResult && r.onResult(f);
    }, "onResult");
    for (let f = 0; f < t.length; f++) {
      let p = Xn(String(t[f]), { ...r, onResult: l }, !0), d = p.state.negated || p.state.negatedExtglob;
      d && o++;
      for (let m of e) {
        let b = p(m, !0);
        (d ? !b.isMatch : b.isMatch) && (d ? s.add(b.output) : (s.delete(b.output), n.add(b.output)));
      }
    }
    let c = (o === t.length ? [...a] : [...n]).filter((f) => !s.has(f));
    if (r && c.length === 0) {
      if (r.failglob === !0)
        throw new Error(`No matches found for "${t.join(", ")}"`);
      if (r.nonull === !0 || r.nullglob === !0)
        return r.unescape ? t.map((f) => f.replace(/\\/g, "")) : t;
    }
    return c;
  }, "micromatch");
  zt.match = zt;
  zt.matcher = (e, t) => Xn(e, t);
  zt.isMatch = (e, t, r) => Xn(t, r)(e);
  zt.any = zt.isMatch;
  zt.not = (e, t, r = {}) => {
    t = [].concat(t).map(String);
    let s = /* @__PURE__ */ new Set(), n = [], a = /* @__PURE__ */ i((l) => {
      r.onResult && r.onResult(l), n.push(l.output);
    }, "onResult"), o = new Set(zt(e, t, { ...r, onResult: a }));
    for (let l of n)
      o.has(l) || s.add(l);
    return [...s];
  };
  zt.contains = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${q$.inspect(e)}"`);
    if (Array.isArray(t))
      return t.some((s) => zt.contains(e, s, r));
    if (typeof t == "string") {
      if (j$(e) || j$(t))
        return !1;
      if (e.includes(t) || e.startsWith("./") && e.slice(2).includes(t))
        return !0;
    }
    return zt.isMatch(e, t, { ...r, contains: !0 });
  };
  zt.matchKeys = (e, t, r) => {
    if (!ZA.isObject(e))
      throw new TypeError("Expected the first argument to be an object");
    let s = zt(Object.keys(e), t, r), n = {};
    for (let a of s) n[a] = e[a];
    return n;
  };
  zt.some = (e, t, r) => {
    let s = [].concat(e);
    for (let n of [].concat(t)) {
      let a = Xn(String(n), r);
      if (s.some((o) => a(o)))
        return !0;
    }
    return !1;
  };
  zt.every = (e, t, r) => {
    let s = [].concat(e);
    for (let n of [].concat(t)) {
      let a = Xn(String(n), r);
      if (!s.every((o) => a(o)))
        return !1;
    }
    return !0;
  };
  zt.all = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${q$.inspect(e)}"`);
    return [].concat(t).every((s) => Xn(s, r)(e));
  };
  zt.capture = (e, t, r) => {
    let s = ZA.isWindows(r), a = Xn.makeRe(String(e), { ...r, capture: !0 }).exec(s ? ZA.toPosixSlashes(t) : t);
    if (a)
      return a.slice(1).map((o) => o === void 0 ? "" : o);
  };
  zt.makeRe = (...e) => Xn.makeRe(...e);
  zt.scan = (...e) => Xn.scan(...e);
  zt.parse = (e, t) => {
    let r = [];
    for (let s of [].concat(e || []))
      for (let n of $$(String(s), t))
        r.push(Xn.parse(n, t));
    return r;
  };
  zt.braces = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return t && t.nobrace === !0 || !/\{.*\}/.test(e) ? [e] : $$(e, t);
  };
  zt.braceExpand = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return zt.braces(e, { ...t, expand: !0 });
  };
  U$.exports = zt;
});

// ../node_modules/fast-glob/out/utils/pattern.js
var J$ = y((We) => {
  "use strict";
  Object.defineProperty(We, "__esModule", { value: !0 });
  We.removeDuplicateSlashes = We.matchAny = We.convertPatternsToRe = We.makeRe = We.getPatternParts = We.expandBraceExpansion = We.expandPatternsWithBraceExpansion =
  We.isAffectDepthOfReadingPattern = We.endsWithSlashGlobStar = We.hasGlobStar = We.getBaseDirectory = We.isPatternRelatedToParentDirectory =
  We.getPatternsOutsideCurrentDirectory = We.getPatternsInsideCurrentDirectory = We.getPositivePatterns = We.getNegativePatterns = We.isPositivePattern =
  We.isNegativePattern = We.convertToNegativePattern = We.convertToPositivePattern = We.isDynamicPattern = We.isStaticPattern = void 0;
  var Fqe = Q("path"), Lqe = Fq(), eC = V$(), W$ = "**", Bqe = "\\", Mqe = /[*?]|^!/, jqe = /\[[^[]*]/, qqe = /(?:^|[^!*+?@])\([^(]*\|[^|]*\)/,
  $qe = /[!*+?@]\([^(]*\)/, Uqe = /,|\.\./, Vqe = /(?!^)\/{2,}/g;
  function H$(e, t = {}) {
    return !G$(e, t);
  }
  i(H$, "isStaticPattern");
  We.isStaticPattern = H$;
  function G$(e, t = {}) {
    return e === "" ? !1 : !!(t.caseSensitiveMatch === !1 || e.includes(Bqe) || Mqe.test(e) || jqe.test(e) || qqe.test(e) || t.extglob !== !1 &&
    $qe.test(e) || t.braceExpansion !== !1 && Wqe(e));
  }
  i(G$, "isDynamicPattern");
  We.isDynamicPattern = G$;
  function Wqe(e) {
    let t = e.indexOf("{");
    if (t === -1)
      return !1;
    let r = e.indexOf("}", t + 1);
    if (r === -1)
      return !1;
    let s = e.slice(t, r);
    return Uqe.test(s);
  }
  i(Wqe, "hasBraceExpansion");
  function Hqe(e) {
    return Dy(e) ? e.slice(1) : e;
  }
  i(Hqe, "convertToPositivePattern");
  We.convertToPositivePattern = Hqe;
  function Gqe(e) {
    return "!" + e;
  }
  i(Gqe, "convertToNegativePattern");
  We.convertToNegativePattern = Gqe;
  function Dy(e) {
    return e.startsWith("!") && e[1] !== "(";
  }
  i(Dy, "isNegativePattern");
  We.isNegativePattern = Dy;
  function K$(e) {
    return !Dy(e);
  }
  i(K$, "isPositivePattern");
  We.isPositivePattern = K$;
  function Kqe(e) {
    return e.filter(Dy);
  }
  i(Kqe, "getNegativePatterns");
  We.getNegativePatterns = Kqe;
  function Yqe(e) {
    return e.filter(K$);
  }
  i(Yqe, "getPositivePatterns");
  We.getPositivePatterns = Yqe;
  function Xqe(e) {
    return e.filter((t) => !tC(t));
  }
  i(Xqe, "getPatternsInsideCurrentDirectory");
  We.getPatternsInsideCurrentDirectory = Xqe;
  function zqe(e) {
    return e.filter(tC);
  }
  i(zqe, "getPatternsOutsideCurrentDirectory");
  We.getPatternsOutsideCurrentDirectory = zqe;
  function tC(e) {
    return e.startsWith("..") || e.startsWith("./..");
  }
  i(tC, "isPatternRelatedToParentDirectory");
  We.isPatternRelatedToParentDirectory = tC;
  function Jqe(e) {
    return Lqe(e, { flipBackslashes: !1 });
  }
  i(Jqe, "getBaseDirectory");
  We.getBaseDirectory = Jqe;
  function Qqe(e) {
    return e.includes(W$);
  }
  i(Qqe, "hasGlobStar");
  We.hasGlobStar = Qqe;
  function Y$(e) {
    return e.endsWith("/" + W$);
  }
  i(Y$, "endsWithSlashGlobStar");
  We.endsWithSlashGlobStar = Y$;
  function Zqe(e) {
    let t = Fqe.basename(e);
    return Y$(e) || H$(t);
  }
  i(Zqe, "isAffectDepthOfReadingPattern");
  We.isAffectDepthOfReadingPattern = Zqe;
  function e$e(e) {
    return e.reduce((t, r) => t.concat(X$(r)), []);
  }
  i(e$e, "expandPatternsWithBraceExpansion");
  We.expandPatternsWithBraceExpansion = e$e;
  function X$(e) {
    let t = eC.braces(e, { expand: !0, nodupes: !0, keepEscaping: !0 });
    return t.sort((r, s) => r.length - s.length), t.filter((r) => r !== "");
  }
  i(X$, "expandBraceExpansion");
  We.expandBraceExpansion = X$;
  function t$e(e, t) {
    let { parts: r } = eC.scan(e, Object.assign(Object.assign({}, t), { parts: !0 }));
    return r.length === 0 && (r = [e]), r[0].startsWith("/") && (r[0] = r[0].slice(1), r.unshift("")), r;
  }
  i(t$e, "getPatternParts");
  We.getPatternParts = t$e;
  function z$(e, t) {
    return eC.makeRe(e, t);
  }
  i(z$, "makeRe");
  We.makeRe = z$;
  function r$e(e, t) {
    return e.map((r) => z$(r, t));
  }
  i(r$e, "convertPatternsToRe");
  We.convertPatternsToRe = r$e;
  function s$e(e, t) {
    return t.some((r) => r.test(e));
  }
  i(s$e, "matchAny");
  We.matchAny = s$e;
  function n$e(e) {
    return e.replace(Vqe, "/");
  }
  i(n$e, "removeDuplicateSlashes");
  We.removeDuplicateSlashes = n$e;
});

// ../node_modules/merge2/index.js
var tU = y((hut, eU) => {
  "use strict";
  var i$e = Q("stream"), Q$ = i$e.PassThrough, a$e = Array.prototype.slice;
  eU.exports = o$e;
  function o$e() {
    let e = [], t = a$e.call(arguments), r = !1, s = t[t.length - 1];
    s && !Array.isArray(s) && s.pipe == null ? t.pop() : s = {};
    let n = s.end !== !1, a = s.pipeError === !0;
    s.objectMode == null && (s.objectMode = !0), s.highWaterMark == null && (s.highWaterMark = 64 * 1024);
    let o = Q$(s);
    function l() {
      for (let f = 0, p = arguments.length; f < p; f++)
        e.push(Z$(arguments[f], s));
      return u(), this;
    }
    i(l, "addStream");
    function u() {
      if (r)
        return;
      r = !0;
      let f = e.shift();
      if (!f) {
        process.nextTick(c);
        return;
      }
      Array.isArray(f) || (f = [f]);
      let p = f.length + 1;
      function d() {
        --p > 0 || (r = !1, u());
      }
      i(d, "next");
      function m(b) {
        function h() {
          b.removeListener("merge2UnpipeEnd", h), b.removeListener("end", h), a && b.removeListener("error", g), d();
        }
        i(h, "onend");
        function g(E) {
          o.emit("error", E);
        }
        if (i(g, "onerror"), b._readableState.endEmitted)
          return d();
        b.on("merge2UnpipeEnd", h), b.on("end", h), a && b.on("error", g), b.pipe(o, { end: !1 }), b.resume();
      }
      i(m, "pipe");
      for (let b = 0; b < f.length; b++)
        m(f[b]);
      d();
    }
    i(u, "mergeStream");
    function c() {
      r = !1, o.emit("queueDrain"), n && o.end();
    }
    return i(c, "endStream"), o.setMaxListeners(0), o.add = l, o.on("unpipe", function(f) {
      f.emit("merge2UnpipeEnd");
    }), t.length && l.apply(null, t), o;
  }
  i(o$e, "merge2");
  function Z$(e, t) {
    if (Array.isArray(e))
      for (let r = 0, s = e.length; r < s; r++)
        e[r] = Z$(e[r], t);
    else {
      if (!e._readableState && e.pipe && (e = e.pipe(Q$(t))), !e._readableState || !e.pause || !e.pipe)
        throw new Error("Only readable stream can be merged.");
      e.pause();
    }
    return e;
  }
  i(Z$, "pauseStreams");
});

// ../node_modules/fast-glob/out/utils/stream.js
var sU = y((Iy) => {
  "use strict";
  Object.defineProperty(Iy, "__esModule", { value: !0 });
  Iy.merge = void 0;
  var l$e = tU();
  function u$e(e) {
    let t = l$e(e);
    return e.forEach((r) => {
      r.once("error", (s) => t.emit("error", s));
    }), t.once("close", () => rU(e)), t.once("end", () => rU(e)), t;
  }
  i(u$e, "merge");
  Iy.merge = u$e;
  function rU(e) {
    e.forEach((t) => t.emit("close"));
  }
  i(rU, "propagateCloseEventToSources");
});

// ../node_modules/fast-glob/out/utils/string.js
var nU = y((au) => {
  "use strict";
  Object.defineProperty(au, "__esModule", { value: !0 });
  au.isEmpty = au.isString = void 0;
  function c$e(e) {
    return typeof e == "string";
  }
  i(c$e, "isString");
  au.isString = c$e;
  function f$e(e) {
    return e === "";
  }
  i(f$e, "isEmpty");
  au.isEmpty = f$e;
});

// ../node_modules/fast-glob/out/utils/index.js
var Bi = y((Yr) => {
  "use strict";
  Object.defineProperty(Yr, "__esModule", { value: !0 });
  Yr.string = Yr.stream = Yr.pattern = Yr.path = Yr.fs = Yr.errno = Yr.array = void 0;
  var p$e = Tq();
  Yr.array = p$e;
  var d$e = xq();
  Yr.errno = d$e;
  var h$e = Pq();
  Yr.fs = h$e;
  var m$e = Dq();
  Yr.path = m$e;
  var y$e = J$();
  Yr.pattern = y$e;
  var g$e = sU();
  Yr.stream = g$e;
  var b$e = nU();
  Yr.string = b$e;
});

// ../node_modules/fast-glob/out/managers/tasks.js
var lU = y((Xr) => {
  "use strict";
  Object.defineProperty(Xr, "__esModule", { value: !0 });
  Xr.convertPatternGroupToTask = Xr.convertPatternGroupsToTasks = Xr.groupPatternsByBaseDirectory = Xr.getNegativePatternsAsPositive = Xr.getPositivePatterns =
  Xr.convertPatternsToTasks = Xr.generate = void 0;
  var Pn = Bi();
  function E$e(e, t) {
    let r = iU(e, t), s = iU(t.ignore, t), n = aU(r), a = oU(r, s), o = n.filter((f) => Pn.pattern.isStaticPattern(f, t)), l = n.filter((f) => Pn.
    pattern.isDynamicPattern(f, t)), u = rC(
      o,
      a,
      /* dynamic */
      !1
    ), c = rC(
      l,
      a,
      /* dynamic */
      !0
    );
    return u.concat(c);
  }
  i(E$e, "generate");
  Xr.generate = E$e;
  function iU(e, t) {
    let r = e;
    return t.braceExpansion && (r = Pn.pattern.expandPatternsWithBraceExpansion(r)), t.baseNameMatch && (r = r.map((s) => s.includes("/") ? s :
    `**/${s}`)), r.map((s) => Pn.pattern.removeDuplicateSlashes(s));
  }
  i(iU, "processPatterns");
  function rC(e, t, r) {
    let s = [], n = Pn.pattern.getPatternsOutsideCurrentDirectory(e), a = Pn.pattern.getPatternsInsideCurrentDirectory(e), o = sC(n), l = sC(
    a);
    return s.push(...nC(o, t, r)), "." in l ? s.push(iC(".", a, t, r)) : s.push(...nC(l, t, r)), s;
  }
  i(rC, "convertPatternsToTasks");
  Xr.convertPatternsToTasks = rC;
  function aU(e) {
    return Pn.pattern.getPositivePatterns(e);
  }
  i(aU, "getPositivePatterns");
  Xr.getPositivePatterns = aU;
  function oU(e, t) {
    return Pn.pattern.getNegativePatterns(e).concat(t).map(Pn.pattern.convertToPositivePattern);
  }
  i(oU, "getNegativePatternsAsPositive");
  Xr.getNegativePatternsAsPositive = oU;
  function sC(e) {
    let t = {};
    return e.reduce((r, s) => {
      let n = Pn.pattern.getBaseDirectory(s);
      return n in r ? r[n].push(s) : r[n] = [s], r;
    }, t);
  }
  i(sC, "groupPatternsByBaseDirectory");
  Xr.groupPatternsByBaseDirectory = sC;
  function nC(e, t, r) {
    return Object.keys(e).map((s) => iC(s, e[s], t, r));
  }
  i(nC, "convertPatternGroupsToTasks");
  Xr.convertPatternGroupsToTasks = nC;
  function iC(e, t, r, s) {
    return {
      dynamic: s,
      positive: t,
      negative: r,
      base: e,
      patterns: [].concat(t, r.map(Pn.pattern.convertToNegativePattern))
    };
  }
  i(iC, "convertPatternGroupToTask");
  Xr.convertPatternGroupToTask = iC;
});

// ../node_modules/@nodelib/fs.stat/out/providers/async.js
var cU = y((_y) => {
  "use strict";
  Object.defineProperty(_y, "__esModule", { value: !0 });
  _y.read = void 0;
  function v$e(e, t, r) {
    t.fs.lstat(e, (s, n) => {
      if (s !== null) {
        uU(r, s);
        return;
      }
      if (!n.isSymbolicLink() || !t.followSymbolicLink) {
        aC(r, n);
        return;
      }
      t.fs.stat(e, (a, o) => {
        if (a !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            uU(r, a);
            return;
          }
          aC(r, n);
          return;
        }
        t.markSymbolicLink && (o.isSymbolicLink = () => !0), aC(r, o);
      });
    });
  }
  i(v$e, "read");
  _y.read = v$e;
  function uU(e, t) {
    e(t);
  }
  i(uU, "callFailureCallback");
  function aC(e, t) {
    e(null, t);
  }
  i(aC, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.stat/out/providers/sync.js
var fU = y((Oy) => {
  "use strict";
  Object.defineProperty(Oy, "__esModule", { value: !0 });
  Oy.read = void 0;
  function S$e(e, t) {
    let r = t.fs.lstatSync(e);
    if (!r.isSymbolicLink() || !t.followSymbolicLink)
      return r;
    try {
      let s = t.fs.statSync(e);
      return t.markSymbolicLink && (s.isSymbolicLink = () => !0), s;
    } catch (s) {
      if (!t.throwErrorOnBrokenSymbolicLink)
        return r;
      throw s;
    }
  }
  i(S$e, "read");
  Oy.read = S$e;
});

// ../node_modules/@nodelib/fs.stat/out/adapters/fs.js
var pU = y((Da) => {
  "use strict";
  Object.defineProperty(Da, "__esModule", { value: !0 });
  Da.createFileSystemAdapter = Da.FILE_SYSTEM_ADAPTER = void 0;
  var Ny = Q("fs");
  Da.FILE_SYSTEM_ADAPTER = {
    lstat: Ny.lstat,
    stat: Ny.stat,
    lstatSync: Ny.lstatSync,
    statSync: Ny.statSync
  };
  function T$e(e) {
    return e === void 0 ? Da.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, Da.FILE_SYSTEM_ADAPTER), e);
  }
  i(T$e, "createFileSystemAdapter");
  Da.createFileSystemAdapter = T$e;
});

// ../node_modules/@nodelib/fs.stat/out/settings.js
var dU = y((lC) => {
  "use strict";
  Object.defineProperty(lC, "__esModule", { value: !0 });
  var x$e = pU(), oC = class {
    static {
      i(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, !0), this.fs = x$e.createFileSystemAdapter(
      this._options.fs), this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, !1), this.throwErrorOnBrokenSymbolicLink = this.
      _getValue(this._options.throwErrorOnBrokenSymbolicLink, !0);
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  lC.default = oC;
});

// ../node_modules/@nodelib/fs.stat/out/index.js
var _o = y((Ia) => {
  "use strict";
  Object.defineProperty(Ia, "__esModule", { value: !0 });
  Ia.statSync = Ia.stat = Ia.Settings = void 0;
  var hU = cU(), P$e = fU(), uC = dU();
  Ia.Settings = uC.default;
  function A$e(e, t, r) {
    if (typeof t == "function") {
      hU.read(e, cC(), t);
      return;
    }
    hU.read(e, cC(t), r);
  }
  i(A$e, "stat");
  Ia.stat = A$e;
  function C$e(e, t) {
    let r = cC(t);
    return P$e.read(e, r);
  }
  i(C$e, "statSync");
  Ia.statSync = C$e;
  function cC(e = {}) {
    return e instanceof uC.default ? e : new uC.default(e);
  }
  i(cC, "getSettings");
});

// ../node_modules/queue-microtask/index.js
var gU = y((Rut, yU) => {
  var mU;
  yU.exports = typeof queueMicrotask == "function" ? queueMicrotask.bind(typeof window < "u" ? window : global) : (e) => (mU || (mU = Promise.
  resolve())).then(e).catch((t) => setTimeout(() => {
    throw t;
  }, 0));
});

// ../node_modules/run-parallel/index.js
var EU = y((kut, bU) => {
  bU.exports = D$e;
  var w$e = gU();
  function D$e(e, t) {
    let r, s, n, a = !0;
    Array.isArray(e) ? (r = [], s = e.length) : (n = Object.keys(e), r = {}, s = n.length);
    function o(u) {
      function c() {
        t && t(u, r), t = null;
      }
      i(c, "end"), a ? w$e(c) : c();
    }
    i(o, "done");
    function l(u, c, f) {
      r[u] = f, (--s === 0 || c) && o(c);
    }
    i(l, "each"), s ? n ? n.forEach(function(u) {
      e[u](function(c, f) {
        l(u, c, f);
      });
    }) : e.forEach(function(u, c) {
      u(function(f, p) {
        l(c, f, p);
      });
    }) : o(null), a = !1;
  }
  i(D$e, "runParallel");
});

// ../node_modules/@nodelib/fs.scandir/out/constants.js
var fC = y((ky) => {
  "use strict";
  Object.defineProperty(ky, "__esModule", { value: !0 });
  ky.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;
  var Ry = process.versions.node.split(".");
  if (Ry[0] === void 0 || Ry[1] === void 0)
    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);
  var vU = Number.parseInt(Ry[0], 10), I$e = Number.parseInt(Ry[1], 10), SU = 10, _$e = 10, O$e = vU > SU, N$e = vU === SU && I$e >= _$e;
  ky.IS_SUPPORT_READDIR_WITH_FILE_TYPES = O$e || N$e;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/fs.js
var TU = y((Fy) => {
  "use strict";
  Object.defineProperty(Fy, "__esModule", { value: !0 });
  Fy.createDirentFromStats = void 0;
  var pC = class {
    static {
      i(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function R$e(e, t) {
    return new pC(e, t);
  }
  i(R$e, "createDirentFromStats");
  Fy.createDirentFromStats = R$e;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/index.js
var dC = y((Ly) => {
  "use strict";
  Object.defineProperty(Ly, "__esModule", { value: !0 });
  Ly.fs = void 0;
  var k$e = TU();
  Ly.fs = k$e;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/common.js
var hC = y((By) => {
  "use strict";
  Object.defineProperty(By, "__esModule", { value: !0 });
  By.joinPathSegments = void 0;
  function F$e(e, t, r) {
    return e.endsWith(r) ? e + t : e + r + t;
  }
  i(F$e, "joinPathSegments");
  By.joinPathSegments = F$e;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/async.js
var DU = y((_a) => {
  "use strict";
  Object.defineProperty(_a, "__esModule", { value: !0 });
  _a.readdir = _a.readdirWithFileTypes = _a.read = void 0;
  var L$e = _o(), xU = EU(), B$e = fC(), PU = dC(), AU = hC();
  function M$e(e, t, r) {
    if (!t.stats && B$e.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
      CU(e, t, r);
      return;
    }
    wU(e, t, r);
  }
  i(M$e, "read");
  _a.read = M$e;
  function CU(e, t, r) {
    t.fs.readdir(e, { withFileTypes: !0 }, (s, n) => {
      if (s !== null) {
        My(r, s);
        return;
      }
      let a = n.map((l) => ({
        dirent: l,
        name: l.name,
        path: AU.joinPathSegments(e, l.name, t.pathSegmentSeparator)
      }));
      if (!t.followSymbolicLinks) {
        mC(r, a);
        return;
      }
      let o = a.map((l) => j$e(l, t));
      xU(o, (l, u) => {
        if (l !== null) {
          My(r, l);
          return;
        }
        mC(r, u);
      });
    });
  }
  i(CU, "readdirWithFileTypes");
  _a.readdirWithFileTypes = CU;
  function j$e(e, t) {
    return (r) => {
      if (!e.dirent.isSymbolicLink()) {
        r(null, e);
        return;
      }
      t.fs.stat(e.path, (s, n) => {
        if (s !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            r(s);
            return;
          }
          r(null, e);
          return;
        }
        e.dirent = PU.fs.createDirentFromStats(e.name, n), r(null, e);
      });
    };
  }
  i(j$e, "makeRplTaskEntry");
  function wU(e, t, r) {
    t.fs.readdir(e, (s, n) => {
      if (s !== null) {
        My(r, s);
        return;
      }
      let a = n.map((o) => {
        let l = AU.joinPathSegments(e, o, t.pathSegmentSeparator);
        return (u) => {
          L$e.stat(l, t.fsStatSettings, (c, f) => {
            if (c !== null) {
              u(c);
              return;
            }
            let p = {
              name: o,
              path: l,
              dirent: PU.fs.createDirentFromStats(o, f)
            };
            t.stats && (p.stats = f), u(null, p);
          });
        };
      });
      xU(a, (o, l) => {
        if (o !== null) {
          My(r, o);
          return;
        }
        mC(r, l);
      });
    });
  }
  i(wU, "readdir");
  _a.readdir = wU;
  function My(e, t) {
    e(t);
  }
  i(My, "callFailureCallback");
  function mC(e, t) {
    e(null, t);
  }
  i(mC, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.scandir/out/providers/sync.js
var RU = y((Oa) => {
  "use strict";
  Object.defineProperty(Oa, "__esModule", { value: !0 });
  Oa.readdir = Oa.readdirWithFileTypes = Oa.read = void 0;
  var q$e = _o(), $$e = fC(), IU = dC(), _U = hC();
  function U$e(e, t) {
    return !t.stats && $$e.IS_SUPPORT_READDIR_WITH_FILE_TYPES ? OU(e, t) : NU(e, t);
  }
  i(U$e, "read");
  Oa.read = U$e;
  function OU(e, t) {
    return t.fs.readdirSync(e, { withFileTypes: !0 }).map((s) => {
      let n = {
        dirent: s,
        name: s.name,
        path: _U.joinPathSegments(e, s.name, t.pathSegmentSeparator)
      };
      if (n.dirent.isSymbolicLink() && t.followSymbolicLinks)
        try {
          let a = t.fs.statSync(n.path);
          n.dirent = IU.fs.createDirentFromStats(n.name, a);
        } catch (a) {
          if (t.throwErrorOnBrokenSymbolicLink)
            throw a;
        }
      return n;
    });
  }
  i(OU, "readdirWithFileTypes");
  Oa.readdirWithFileTypes = OU;
  function NU(e, t) {
    return t.fs.readdirSync(e).map((s) => {
      let n = _U.joinPathSegments(e, s, t.pathSegmentSeparator), a = q$e.statSync(n, t.fsStatSettings), o = {
        name: s,
        path: n,
        dirent: IU.fs.createDirentFromStats(s, a)
      };
      return t.stats && (o.stats = a), o;
    });
  }
  i(NU, "readdir");
  Oa.readdir = NU;
});

// ../node_modules/@nodelib/fs.scandir/out/adapters/fs.js
var kU = y((Na) => {
  "use strict";
  Object.defineProperty(Na, "__esModule", { value: !0 });
  Na.createFileSystemAdapter = Na.FILE_SYSTEM_ADAPTER = void 0;
  var ou = Q("fs");
  Na.FILE_SYSTEM_ADAPTER = {
    lstat: ou.lstat,
    stat: ou.stat,
    lstatSync: ou.lstatSync,
    statSync: ou.statSync,
    readdir: ou.readdir,
    readdirSync: ou.readdirSync
  };
  function V$e(e) {
    return e === void 0 ? Na.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, Na.FILE_SYSTEM_ADAPTER), e);
  }
  i(V$e, "createFileSystemAdapter");
  Na.createFileSystemAdapter = V$e;
});

// ../node_modules/@nodelib/fs.scandir/out/settings.js
var FU = y((gC) => {
  "use strict";
  Object.defineProperty(gC, "__esModule", { value: !0 });
  var W$e = Q("path"), H$e = _o(), G$e = kU(), yC = class {
    static {
      i(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !1), this.fs = G$e.createFileSystemAdapter(
      this._options.fs), this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, W$e.sep), this.stats = this._getValue(
      this._options.stats, !1), this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !0), this.
      fsStatSettings = new H$e.Settings({
        followSymbolicLink: this.followSymbolicLinks,
        fs: this.fs,
        throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  gC.default = yC;
});

// ../node_modules/@nodelib/fs.scandir/out/index.js
var jy = y((Ra) => {
  "use strict";
  Object.defineProperty(Ra, "__esModule", { value: !0 });
  Ra.Settings = Ra.scandirSync = Ra.scandir = void 0;
  var LU = DU(), K$e = RU(), bC = FU();
  Ra.Settings = bC.default;
  function Y$e(e, t, r) {
    if (typeof t == "function") {
      LU.read(e, EC(), t);
      return;
    }
    LU.read(e, EC(t), r);
  }
  i(Y$e, "scandir");
  Ra.scandir = Y$e;
  function X$e(e, t) {
    let r = EC(t);
    return K$e.read(e, r);
  }
  i(X$e, "scandirSync");
  Ra.scandirSync = X$e;
  function EC(e = {}) {
    return e instanceof bC.default ? e : new bC.default(e);
  }
  i(EC, "getSettings");
});

// ../node_modules/reusify/reusify.js
var MU = y((Qut, BU) => {
  "use strict";
  function z$e(e) {
    var t = new e(), r = t;
    function s() {
      var a = t;
      return a.next ? t = a.next : (t = new e(), r = t), a.next = null, a;
    }
    i(s, "get");
    function n(a) {
      r.next = a, r = a;
    }
    return i(n, "release"), {
      get: s,
      release: n
    };
  }
  i(z$e, "reusify");
  BU.exports = z$e;
});

// ../node_modules/fastq/queue.js
var qU = y((ect, vC) => {
  "use strict";
  var J$e = MU();
  function jU(e, t, r) {
    if (typeof e == "function" && (r = t, t = e, e = null), r < 1)
      throw new Error("fastqueue concurrency must be greater than 1");
    var s = J$e(Q$e), n = null, a = null, o = 0, l = null, u = {
      push: h,
      drain: en,
      saturated: en,
      pause: f,
      paused: !1,
      concurrency: r,
      running: c,
      resume: m,
      idle: b,
      length: p,
      getQueue: d,
      unshift: g,
      empty: en,
      kill: D,
      killAndDrain: C,
      error: N
    };
    return u;
    function c() {
      return o;
    }
    function f() {
      u.paused = !0;
    }
    function p() {
      for (var I = n, M = 0; I; )
        I = I.next, M++;
      return M;
    }
    function d() {
      for (var I = n, M = []; I; )
        M.push(I.value), I = I.next;
      return M;
    }
    function m() {
      if (u.paused) {
        u.paused = !1;
        for (var I = 0; I < u.concurrency; I++)
          o++, E();
      }
    }
    function b() {
      return o === 0 && u.length() === 0;
    }
    function h(I, M) {
      var q = s.get();
      q.context = e, q.release = E, q.value = I, q.callback = M || en, q.errorHandler = l, o === u.concurrency || u.paused ? a ? (a.next = q,
      a = q) : (n = q, a = q, u.saturated()) : (o++, t.call(e, q.value, q.worked));
    }
    function g(I, M) {
      var q = s.get();
      q.context = e, q.release = E, q.value = I, q.callback = M || en, o === u.concurrency || u.paused ? n ? (q.next = n, n = q) : (n = q, a =
      q, u.saturated()) : (o++, t.call(e, q.value, q.worked));
    }
    function E(I) {
      I && s.release(I);
      var M = n;
      M ? u.paused ? o-- : (a === n && (a = null), n = M.next, M.next = null, t.call(e, M.value, M.worked), a === null && u.empty()) : --o ===
      0 && u.drain();
    }
    function D() {
      n = null, a = null, u.drain = en;
    }
    function C() {
      n = null, a = null, u.drain(), u.drain = en;
    }
    function N(I) {
      l = I;
    }
  }
  i(jU, "fastqueue");
  function en() {
  }
  i(en, "noop");
  function Q$e() {
    this.value = null, this.callback = en, this.next = null, this.release = en, this.context = null, this.errorHandler = null;
    var e = this;
    this.worked = /* @__PURE__ */ i(function(r, s) {
      var n = e.callback, a = e.errorHandler, o = e.value;
      e.value = null, e.callback = en, e.errorHandler && a(r, o), n.call(e.context, r, s), e.release(e);
    }, "worked");
  }
  i(Q$e, "Task");
  function Z$e(e, t, r) {
    typeof e == "function" && (r = t, t = e, e = null);
    function s(f, p) {
      t.call(this, f).then(function(d) {
        p(null, d);
      }, p);
    }
    i(s, "asyncWrapper");
    var n = jU(e, s, r), a = n.push, o = n.unshift;
    return n.push = l, n.unshift = u, n.drained = c, n;
    function l(f) {
      var p = new Promise(function(d, m) {
        a(f, function(b, h) {
          if (b) {
            m(b);
            return;
          }
          d(h);
        });
      });
      return p.catch(en), p;
    }
    i(l, "push");
    function u(f) {
      var p = new Promise(function(d, m) {
        o(f, function(b, h) {
          if (b) {
            m(b);
            return;
          }
          d(h);
        });
      });
      return p.catch(en), p;
    }
    i(u, "unshift");
    function c() {
      if (n.idle())
        return new Promise(function(d) {
          d();
        });
      var f = n.drain, p = new Promise(function(d) {
        n.drain = function() {
          f(), d();
        };
      });
      return p;
    }
    i(c, "drained");
  }
  i(Z$e, "queueAsPromised");
  vC.exports = jU;
  vC.exports.promise = Z$e;
});

// ../node_modules/@nodelib/fs.walk/out/readers/common.js
var qy = y((zn) => {
  "use strict";
  Object.defineProperty(zn, "__esModule", { value: !0 });
  zn.joinPathSegments = zn.replacePathSegmentSeparator = zn.isAppliedFilter = zn.isFatalError = void 0;
  function eUe(e, t) {
    return e.errorFilter === null ? !0 : !e.errorFilter(t);
  }
  i(eUe, "isFatalError");
  zn.isFatalError = eUe;
  function tUe(e, t) {
    return e === null || e(t);
  }
  i(tUe, "isAppliedFilter");
  zn.isAppliedFilter = tUe;
  function rUe(e, t) {
    return e.split(/[/\\]/).join(t);
  }
  i(rUe, "replacePathSegmentSeparator");
  zn.replacePathSegmentSeparator = rUe;
  function sUe(e, t, r) {
    return e === "" ? t : e.endsWith(r) ? e + t : e + r + t;
  }
  i(sUe, "joinPathSegments");
  zn.joinPathSegments = sUe;
});

// ../node_modules/@nodelib/fs.walk/out/readers/reader.js
var xC = y((TC) => {
  "use strict";
  Object.defineProperty(TC, "__esModule", { value: !0 });
  var nUe = qy(), SC = class {
    static {
      i(this, "Reader");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._root = nUe.replacePathSegmentSeparator(t, r.pathSegmentSeparator);
    }
  };
  TC.default = SC;
});

// ../node_modules/@nodelib/fs.walk/out/readers/async.js
var CC = y((AC) => {
  "use strict";
  Object.defineProperty(AC, "__esModule", { value: !0 });
  var iUe = Q("events"), aUe = jy(), oUe = qU(), $y = qy(), lUe = xC(), PC = class extends lUe.default {
    static {
      i(this, "AsyncReader");
    }
    constructor(t, r) {
      super(t, r), this._settings = r, this._scandir = aUe.scandir, this._emitter = new iUe.EventEmitter(), this._queue = oUe(this._worker.bind(
      this), this._settings.concurrency), this._isFatalError = !1, this._isDestroyed = !1, this._queue.drain = () => {
        this._isFatalError || this._emitter.emit("end");
      };
    }
    read() {
      return this._isFatalError = !1, this._isDestroyed = !1, setImmediate(() => {
        this._pushToQueue(this._root, this._settings.basePath);
      }), this._emitter;
    }
    get isDestroyed() {
      return this._isDestroyed;
    }
    destroy() {
      if (this._isDestroyed)
        throw new Error("The reader is already destroyed");
      this._isDestroyed = !0, this._queue.killAndDrain();
    }
    onEntry(t) {
      this._emitter.on("entry", t);
    }
    onError(t) {
      this._emitter.once("error", t);
    }
    onEnd(t) {
      this._emitter.once("end", t);
    }
    _pushToQueue(t, r) {
      let s = { directory: t, base: r };
      this._queue.push(s, (n) => {
        n !== null && this._handleError(n);
      });
    }
    _worker(t, r) {
      this._scandir(t.directory, this._settings.fsScandirSettings, (s, n) => {
        if (s !== null) {
          r(s, void 0);
          return;
        }
        for (let a of n)
          this._handleEntry(a, t.base);
        r(null, void 0);
      });
    }
    _handleError(t) {
      this._isDestroyed || !$y.isFatalError(this._settings, t) || (this._isFatalError = !0, this._isDestroyed = !0, this._emitter.emit("erro\
r", t));
    }
    _handleEntry(t, r) {
      if (this._isDestroyed || this._isFatalError)
        return;
      let s = t.path;
      r !== void 0 && (t.path = $y.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), $y.isAppliedFilter(this._settings.entryFilter,
      t) && this._emitEntry(t), t.dirent.isDirectory() && $y.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(s, r === void 0 ?
      void 0 : t.path);
    }
    _emitEntry(t) {
      this._emitter.emit("entry", t);
    }
  };
  AC.default = PC;
});

// ../node_modules/@nodelib/fs.walk/out/providers/async.js
var $U = y((DC) => {
  "use strict";
  Object.defineProperty(DC, "__esModule", { value: !0 });
  var uUe = CC(), wC = class {
    static {
      i(this, "AsyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new uUe.default(this._root, this._settings), this._storage = [];
    }
    read(t) {
      this._reader.onError((r) => {
        cUe(t, r);
      }), this._reader.onEntry((r) => {
        this._storage.push(r);
      }), this._reader.onEnd(() => {
        fUe(t, this._storage);
      }), this._reader.read();
    }
  };
  DC.default = wC;
  function cUe(e, t) {
    e(t);
  }
  i(cUe, "callFailureCallback");
  function fUe(e, t) {
    e(null, t);
  }
  i(fUe, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.walk/out/providers/stream.js
var UU = y((_C) => {
  "use strict";
  Object.defineProperty(_C, "__esModule", { value: !0 });
  var pUe = Q("stream"), dUe = CC(), IC = class {
    static {
      i(this, "StreamProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new dUe.default(this._root, this._settings), this._stream = new pUe.Readable({
        objectMode: !0,
        read: /* @__PURE__ */ i(() => {
        }, "read"),
        destroy: /* @__PURE__ */ i(() => {
          this._reader.isDestroyed || this._reader.destroy();
        }, "destroy")
      });
    }
    read() {
      return this._reader.onError((t) => {
        this._stream.emit("error", t);
      }), this._reader.onEntry((t) => {
        this._stream.push(t);
      }), this._reader.onEnd(() => {
        this._stream.push(null);
      }), this._reader.read(), this._stream;
    }
  };
  _C.default = IC;
});

// ../node_modules/@nodelib/fs.walk/out/readers/sync.js
var VU = y((NC) => {
  "use strict";
  Object.defineProperty(NC, "__esModule", { value: !0 });
  var hUe = jy(), Uy = qy(), mUe = xC(), OC = class extends mUe.default {
    static {
      i(this, "SyncReader");
    }
    constructor() {
      super(...arguments), this._scandir = hUe.scandirSync, this._storage = [], this._queue = /* @__PURE__ */ new Set();
    }
    read() {
      return this._pushToQueue(this._root, this._settings.basePath), this._handleQueue(), this._storage;
    }
    _pushToQueue(t, r) {
      this._queue.add({ directory: t, base: r });
    }
    _handleQueue() {
      for (let t of this._queue.values())
        this._handleDirectory(t.directory, t.base);
    }
    _handleDirectory(t, r) {
      try {
        let s = this._scandir(t, this._settings.fsScandirSettings);
        for (let n of s)
          this._handleEntry(n, r);
      } catch (s) {
        this._handleError(s);
      }
    }
    _handleError(t) {
      if (Uy.isFatalError(this._settings, t))
        throw t;
    }
    _handleEntry(t, r) {
      let s = t.path;
      r !== void 0 && (t.path = Uy.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), Uy.isAppliedFilter(this._settings.entryFilter,
      t) && this._pushToStorage(t), t.dirent.isDirectory() && Uy.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(s, r ===
      void 0 ? void 0 : t.path);
    }
    _pushToStorage(t) {
      this._storage.push(t);
    }
  };
  NC.default = OC;
});

// ../node_modules/@nodelib/fs.walk/out/providers/sync.js
var WU = y((kC) => {
  "use strict";
  Object.defineProperty(kC, "__esModule", { value: !0 });
  var yUe = VU(), RC = class {
    static {
      i(this, "SyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new yUe.default(this._root, this._settings);
    }
    read() {
      return this._reader.read();
    }
  };
  kC.default = RC;
});

// ../node_modules/@nodelib/fs.walk/out/settings.js
var HU = y((LC) => {
  "use strict";
  Object.defineProperty(LC, "__esModule", { value: !0 });
  var gUe = Q("path"), bUe = jy(), FC = class {
    static {
      i(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.basePath = this._getValue(this._options.basePath, void 0), this.concurrency = this._getValue(this._options.concurrency,
      Number.POSITIVE_INFINITY), this.deepFilter = this._getValue(this._options.deepFilter, null), this.entryFilter = this._getValue(this._options.
      entryFilter, null), this.errorFilter = this._getValue(this._options.errorFilter, null), this.pathSegmentSeparator = this._getValue(this.
      _options.pathSegmentSeparator, gUe.sep), this.fsScandirSettings = new bUe.Settings({
        followSymbolicLinks: this._options.followSymbolicLinks,
        fs: this._options.fs,
        pathSegmentSeparator: this._options.pathSegmentSeparator,
        stats: this._options.stats,
        throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  LC.default = FC;
});

// ../node_modules/@nodelib/fs.walk/out/index.js
var Wy = y((Jn) => {
  "use strict";
  Object.defineProperty(Jn, "__esModule", { value: !0 });
  Jn.Settings = Jn.walkStream = Jn.walkSync = Jn.walk = void 0;
  var GU = $U(), EUe = UU(), vUe = WU(), BC = HU();
  Jn.Settings = BC.default;
  function SUe(e, t, r) {
    if (typeof t == "function") {
      new GU.default(e, Vy()).read(t);
      return;
    }
    new GU.default(e, Vy(t)).read(r);
  }
  i(SUe, "walk");
  Jn.walk = SUe;
  function TUe(e, t) {
    let r = Vy(t);
    return new vUe.default(e, r).read();
  }
  i(TUe, "walkSync");
  Jn.walkSync = TUe;
  function xUe(e, t) {
    let r = Vy(t);
    return new EUe.default(e, r).read();
  }
  i(xUe, "walkStream");
  Jn.walkStream = xUe;
  function Vy(e = {}) {
    return e instanceof BC.default ? e : new BC.default(e);
  }
  i(Vy, "getSettings");
});

// ../node_modules/fast-glob/out/readers/reader.js
var Hy = y((jC) => {
  "use strict";
  Object.defineProperty(jC, "__esModule", { value: !0 });
  var PUe = Q("path"), AUe = _o(), KU = Bi(), MC = class {
    static {
      i(this, "Reader");
    }
    constructor(t) {
      this._settings = t, this._fsStatSettings = new AUe.Settings({
        followSymbolicLink: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks
      });
    }
    _getFullEntryPath(t) {
      return PUe.resolve(this._settings.cwd, t);
    }
    _makeEntry(t, r) {
      let s = {
        name: r,
        path: r,
        dirent: KU.fs.createDirentFromStats(r, t)
      };
      return this._settings.stats && (s.stats = t), s;
    }
    _isFatalError(t) {
      return !KU.errno.isEnoentCodeError(t) && !this._settings.suppressErrors;
    }
  };
  jC.default = MC;
});

// ../node_modules/fast-glob/out/readers/stream.js
var UC = y(($C) => {
  "use strict";
  Object.defineProperty($C, "__esModule", { value: !0 });
  var CUe = Q("stream"), wUe = _o(), DUe = Wy(), IUe = Hy(), qC = class extends IUe.default {
    static {
      i(this, "ReaderStream");
    }
    constructor() {
      super(...arguments), this._walkStream = DUe.walkStream, this._stat = wUe.stat;
    }
    dynamic(t, r) {
      return this._walkStream(t, r);
    }
    static(t, r) {
      let s = t.map(this._getFullEntryPath, this), n = new CUe.PassThrough({ objectMode: !0 });
      n._write = (a, o, l) => this._getEntry(s[a], t[a], r).then((u) => {
        u !== null && r.entryFilter(u) && n.push(u), a === s.length - 1 && n.end(), l();
      }).catch(l);
      for (let a = 0; a < s.length; a++)
        n.write(a);
      return n;
    }
    _getEntry(t, r, s) {
      return this._getStat(t).then((n) => this._makeEntry(n, r)).catch((n) => {
        if (s.errorFilter(n))
          return null;
        throw n;
      });
    }
    _getStat(t) {
      return new Promise((r, s) => {
        this._stat(t, this._fsStatSettings, (n, a) => n === null ? r(a) : s(n));
      });
    }
  };
  $C.default = qC;
});

// ../node_modules/fast-glob/out/readers/async.js
var YU = y((WC) => {
  "use strict";
  Object.defineProperty(WC, "__esModule", { value: !0 });
  var _Ue = Wy(), OUe = Hy(), NUe = UC(), VC = class extends OUe.default {
    static {
      i(this, "ReaderAsync");
    }
    constructor() {
      super(...arguments), this._walkAsync = _Ue.walk, this._readerStream = new NUe.default(this._settings);
    }
    dynamic(t, r) {
      return new Promise((s, n) => {
        this._walkAsync(t, r, (a, o) => {
          a === null ? s(o) : n(a);
        });
      });
    }
    async static(t, r) {
      let s = [], n = this._readerStream.static(t, r);
      return new Promise((a, o) => {
        n.once("error", o), n.on("data", (l) => s.push(l)), n.once("end", () => a(s));
      });
    }
  };
  WC.default = VC;
});

// ../node_modules/fast-glob/out/providers/matchers/matcher.js
var XU = y((GC) => {
  "use strict";
  Object.defineProperty(GC, "__esModule", { value: !0 });
  var qf = Bi(), HC = class {
    static {
      i(this, "Matcher");
    }
    constructor(t, r, s) {
      this._patterns = t, this._settings = r, this._micromatchOptions = s, this._storage = [], this._fillStorage();
    }
    _fillStorage() {
      for (let t of this._patterns) {
        let r = this._getPatternSegments(t), s = this._splitSegmentsIntoSections(r);
        this._storage.push({
          complete: s.length <= 1,
          pattern: t,
          segments: r,
          sections: s
        });
      }
    }
    _getPatternSegments(t) {
      return qf.pattern.getPatternParts(t, this._micromatchOptions).map((s) => qf.pattern.isDynamicPattern(s, this._settings) ? {
        dynamic: !0,
        pattern: s,
        patternRe: qf.pattern.makeRe(s, this._micromatchOptions)
      } : {
        dynamic: !1,
        pattern: s
      });
    }
    _splitSegmentsIntoSections(t) {
      return qf.array.splitWhen(t, (r) => r.dynamic && qf.pattern.hasGlobStar(r.pattern));
    }
  };
  GC.default = HC;
});

// ../node_modules/fast-glob/out/providers/matchers/partial.js
var zU = y((YC) => {
  "use strict";
  Object.defineProperty(YC, "__esModule", { value: !0 });
  var RUe = XU(), KC = class extends RUe.default {
    static {
      i(this, "PartialMatcher");
    }
    match(t) {
      let r = t.split("/"), s = r.length, n = this._storage.filter((a) => !a.complete || a.segments.length > s);
      for (let a of n) {
        let o = a.sections[0];
        if (!a.complete && s > o.length || r.every((u, c) => {
          let f = a.segments[c];
          return !!(f.dynamic && f.patternRe.test(u) || !f.dynamic && f.pattern === u);
        }))
          return !0;
      }
      return !1;
    }
  };
  YC.default = KC;
});

// ../node_modules/fast-glob/out/providers/filters/deep.js
var JU = y((zC) => {
  "use strict";
  Object.defineProperty(zC, "__esModule", { value: !0 });
  var Gy = Bi(), kUe = zU(), XC = class {
    static {
      i(this, "DeepFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r;
    }
    getFilter(t, r, s) {
      let n = this._getMatcher(r), a = this._getNegativePatternsRe(s);
      return (o) => this._filter(t, o, n, a);
    }
    _getMatcher(t) {
      return new kUe.default(t, this._settings, this._micromatchOptions);
    }
    _getNegativePatternsRe(t) {
      let r = t.filter(Gy.pattern.isAffectDepthOfReadingPattern);
      return Gy.pattern.convertPatternsToRe(r, this._micromatchOptions);
    }
    _filter(t, r, s, n) {
      if (this._isSkippedByDeep(t, r.path) || this._isSkippedSymbolicLink(r))
        return !1;
      let a = Gy.path.removeLeadingDotSegment(r.path);
      return this._isSkippedByPositivePatterns(a, s) ? !1 : this._isSkippedByNegativePatterns(a, n);
    }
    _isSkippedByDeep(t, r) {
      return this._settings.deep === 1 / 0 ? !1 : this._getEntryLevel(t, r) >= this._settings.deep;
    }
    _getEntryLevel(t, r) {
      let s = r.split("/").length;
      if (t === "")
        return s;
      let n = t.split("/").length;
      return s - n;
    }
    _isSkippedSymbolicLink(t) {
      return !this._settings.followSymbolicLinks && t.dirent.isSymbolicLink();
    }
    _isSkippedByPositivePatterns(t, r) {
      return !this._settings.baseNameMatch && !r.match(t);
    }
    _isSkippedByNegativePatterns(t, r) {
      return !Gy.pattern.matchAny(t, r);
    }
  };
  zC.default = XC;
});

// ../node_modules/fast-glob/out/providers/filters/entry.js
var QU = y((QC) => {
  "use strict";
  Object.defineProperty(QC, "__esModule", { value: !0 });
  var Oo = Bi(), JC = class {
    static {
      i(this, "EntryFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r, this.index = /* @__PURE__ */ new Map();
    }
    getFilter(t, r) {
      let s = Oo.pattern.convertPatternsToRe(t, this._micromatchOptions), n = Oo.pattern.convertPatternsToRe(r, Object.assign(Object.assign(
      {}, this._micromatchOptions), { dot: !0 }));
      return (a) => this._filter(a, s, n);
    }
    _filter(t, r, s) {
      let n = Oo.path.removeLeadingDotSegment(t.path);
      if (this._settings.unique && this._isDuplicateEntry(n) || this._onlyFileFilter(t) || this._onlyDirectoryFilter(t) || this._isSkippedByAbsoluteNegativePatterns(
      n, s))
        return !1;
      let a = t.dirent.isDirectory(), o = this._isMatchToPatterns(n, r, a) && !this._isMatchToPatterns(n, s, a);
      return this._settings.unique && o && this._createIndexRecord(n), o;
    }
    _isDuplicateEntry(t) {
      return this.index.has(t);
    }
    _createIndexRecord(t) {
      this.index.set(t, void 0);
    }
    _onlyFileFilter(t) {
      return this._settings.onlyFiles && !t.dirent.isFile();
    }
    _onlyDirectoryFilter(t) {
      return this._settings.onlyDirectories && !t.dirent.isDirectory();
    }
    _isSkippedByAbsoluteNegativePatterns(t, r) {
      if (!this._settings.absolute)
        return !1;
      let s = Oo.path.makeAbsolute(this._settings.cwd, t);
      return Oo.pattern.matchAny(s, r);
    }
    _isMatchToPatterns(t, r, s) {
      let n = Oo.pattern.matchAny(t, r);
      return !n && s ? Oo.pattern.matchAny(t + "/", r) : n;
    }
  };
  QC.default = JC;
});

// ../node_modules/fast-glob/out/providers/filters/error.js
var ZU = y((ew) => {
  "use strict";
  Object.defineProperty(ew, "__esModule", { value: !0 });
  var FUe = Bi(), ZC = class {
    static {
      i(this, "ErrorFilter");
    }
    constructor(t) {
      this._settings = t;
    }
    getFilter() {
      return (t) => this._isNonFatalError(t);
    }
    _isNonFatalError(t) {
      return FUe.errno.isEnoentCodeError(t) || this._settings.suppressErrors;
    }
  };
  ew.default = ZC;
});

// ../node_modules/fast-glob/out/providers/transformers/entry.js
var tV = y((rw) => {
  "use strict";
  Object.defineProperty(rw, "__esModule", { value: !0 });
  var eV = Bi(), tw = class {
    static {
      i(this, "EntryTransformer");
    }
    constructor(t) {
      this._settings = t;
    }
    getTransformer() {
      return (t) => this._transform(t);
    }
    _transform(t) {
      let r = t.path;
      return this._settings.absolute && (r = eV.path.makeAbsolute(this._settings.cwd, r), r = eV.path.unixify(r)), this._settings.markDirectories &&
      t.dirent.isDirectory() && (r += "/"), this._settings.objectMode ? Object.assign(Object.assign({}, t), { path: r }) : r;
    }
  };
  rw.default = tw;
});

// ../node_modules/fast-glob/out/providers/provider.js
var Ky = y((nw) => {
  "use strict";
  Object.defineProperty(nw, "__esModule", { value: !0 });
  var LUe = Q("path"), BUe = JU(), MUe = QU(), jUe = ZU(), qUe = tV(), sw = class {
    static {
      i(this, "Provider");
    }
    constructor(t) {
      this._settings = t, this.errorFilter = new jUe.default(this._settings), this.entryFilter = new MUe.default(this._settings, this._getMicromatchOptions()),
      this.deepFilter = new BUe.default(this._settings, this._getMicromatchOptions()), this.entryTransformer = new qUe.default(this._settings);
    }
    _getRootDirectory(t) {
      return LUe.resolve(this._settings.cwd, t.base);
    }
    _getReaderOptions(t) {
      let r = t.base === "." ? "" : t.base;
      return {
        basePath: r,
        pathSegmentSeparator: "/",
        concurrency: this._settings.concurrency,
        deepFilter: this.deepFilter.getFilter(r, t.positive, t.negative),
        entryFilter: this.entryFilter.getFilter(t.positive, t.negative),
        errorFilter: this.errorFilter.getFilter(),
        followSymbolicLinks: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        stats: this._settings.stats,
        throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,
        transform: this.entryTransformer.getTransformer()
      };
    }
    _getMicromatchOptions() {
      return {
        dot: this._settings.dot,
        matchBase: this._settings.baseNameMatch,
        nobrace: !this._settings.braceExpansion,
        nocase: !this._settings.caseSensitiveMatch,
        noext: !this._settings.extglob,
        noglobstar: !this._settings.globstar,
        posix: !0,
        strictSlashes: !1
      };
    }
  };
  nw.default = sw;
});

// ../node_modules/fast-glob/out/providers/async.js
var rV = y((aw) => {
  "use strict";
  Object.defineProperty(aw, "__esModule", { value: !0 });
  var $Ue = YU(), UUe = Ky(), iw = class extends UUe.default {
    static {
      i(this, "ProviderAsync");
    }
    constructor() {
      super(...arguments), this._reader = new $Ue.default(this._settings);
    }
    async read(t) {
      let r = this._getRootDirectory(t), s = this._getReaderOptions(t);
      return (await this.api(r, t, s)).map((a) => s.transform(a));
    }
    api(t, r, s) {
      return r.dynamic ? this._reader.dynamic(t, s) : this._reader.static(r.patterns, s);
    }
  };
  aw.default = iw;
});

// ../node_modules/fast-glob/out/providers/stream.js
var sV = y((lw) => {
  "use strict";
  Object.defineProperty(lw, "__esModule", { value: !0 });
  var VUe = Q("stream"), WUe = UC(), HUe = Ky(), ow = class extends HUe.default {
    static {
      i(this, "ProviderStream");
    }
    constructor() {
      super(...arguments), this._reader = new WUe.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), s = this._getReaderOptions(t), n = this.api(r, t, s), a = new VUe.Readable({ objectMode: !0, read: /* @__PURE__ */ i(
      () => {
      }, "read") });
      return n.once("error", (o) => a.emit("error", o)).on("data", (o) => a.emit("data", s.transform(o))).once("end", () => a.emit("end")), a.
      once("close", () => n.destroy()), a;
    }
    api(t, r, s) {
      return r.dynamic ? this._reader.dynamic(t, s) : this._reader.static(r.patterns, s);
    }
  };
  lw.default = ow;
});

// ../node_modules/fast-glob/out/readers/sync.js
var nV = y((cw) => {
  "use strict";
  Object.defineProperty(cw, "__esModule", { value: !0 });
  var GUe = _o(), KUe = Wy(), YUe = Hy(), uw = class extends YUe.default {
    static {
      i(this, "ReaderSync");
    }
    constructor() {
      super(...arguments), this._walkSync = KUe.walkSync, this._statSync = GUe.statSync;
    }
    dynamic(t, r) {
      return this._walkSync(t, r);
    }
    static(t, r) {
      let s = [];
      for (let n of t) {
        let a = this._getFullEntryPath(n), o = this._getEntry(a, n, r);
        o === null || !r.entryFilter(o) || s.push(o);
      }
      return s;
    }
    _getEntry(t, r, s) {
      try {
        let n = this._getStat(t);
        return this._makeEntry(n, r);
      } catch (n) {
        if (s.errorFilter(n))
          return null;
        throw n;
      }
    }
    _getStat(t) {
      return this._statSync(t, this._fsStatSettings);
    }
  };
  cw.default = uw;
});

// ../node_modules/fast-glob/out/providers/sync.js
var iV = y((pw) => {
  "use strict";
  Object.defineProperty(pw, "__esModule", { value: !0 });
  var XUe = nV(), zUe = Ky(), fw = class extends zUe.default {
    static {
      i(this, "ProviderSync");
    }
    constructor() {
      super(...arguments), this._reader = new XUe.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), s = this._getReaderOptions(t);
      return this.api(r, t, s).map(s.transform);
    }
    api(t, r, s) {
      return r.dynamic ? this._reader.dynamic(t, s) : this._reader.static(r.patterns, s);
    }
  };
  pw.default = fw;
});

// ../node_modules/fast-glob/out/settings.js
var aV = y((uu) => {
  "use strict";
  Object.defineProperty(uu, "__esModule", { value: !0 });
  uu.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;
  var lu = Q("fs"), JUe = Q("os"), QUe = Math.max(JUe.cpus().length, 1);
  uu.DEFAULT_FILE_SYSTEM_ADAPTER = {
    lstat: lu.lstat,
    lstatSync: lu.lstatSync,
    stat: lu.stat,
    statSync: lu.statSync,
    readdir: lu.readdir,
    readdirSync: lu.readdirSync
  };
  var dw = class {
    static {
      i(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.absolute = this._getValue(this._options.absolute, !1), this.baseNameMatch = this._getValue(this._options.baseNameMatch,
      !1), this.braceExpansion = this._getValue(this._options.braceExpansion, !0), this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch,
      !0), this.concurrency = this._getValue(this._options.concurrency, QUe), this.cwd = this._getValue(this._options.cwd, process.cwd()), this.
      deep = this._getValue(this._options.deep, 1 / 0), this.dot = this._getValue(this._options.dot, !1), this.extglob = this._getValue(this.
      _options.extglob, !0), this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !0), this.fs = this._getFileSystemMethods(
      this._options.fs), this.globstar = this._getValue(this._options.globstar, !0), this.ignore = this._getValue(this._options.ignore, []),
      this.markDirectories = this._getValue(this._options.markDirectories, !1), this.objectMode = this._getValue(this._options.objectMode, !1),
      this.onlyDirectories = this._getValue(this._options.onlyDirectories, !1), this.onlyFiles = this._getValue(this._options.onlyFiles, !0),
      this.stats = this._getValue(this._options.stats, !1), this.suppressErrors = this._getValue(this._options.suppressErrors, !1), this.throwErrorOnBrokenSymbolicLink =
      this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !1), this.unique = this._getValue(this._options.unique, !0), this.onlyDirectories &&
      (this.onlyFiles = !1), this.stats && (this.objectMode = !0), this.ignore = [].concat(this.ignore);
    }
    _getValue(t, r) {
      return t === void 0 ? r : t;
    }
    _getFileSystemMethods(t = {}) {
      return Object.assign(Object.assign({}, uu.DEFAULT_FILE_SYSTEM_ADAPTER), t);
    }
  };
  uu.default = dw;
});

// ../node_modules/fast-glob/out/index.js
var gw = y((zct, lV) => {
  "use strict";
  var oV = lU(), ZUe = rV(), eVe = sV(), tVe = iV(), hw = aV(), tn = Bi();
  async function mw(e, t) {
    An(e);
    let r = yw(e, ZUe.default, t), s = await Promise.all(r);
    return tn.array.flatten(s);
  }
  i(mw, "FastGlob");
  (function(e) {
    e.glob = e, e.globSync = t, e.globStream = r, e.async = e;
    function t(c, f) {
      An(c);
      let p = yw(c, tVe.default, f);
      return tn.array.flatten(p);
    }
    i(t, "sync"), e.sync = t;
    function r(c, f) {
      An(c);
      let p = yw(c, eVe.default, f);
      return tn.stream.merge(p);
    }
    i(r, "stream"), e.stream = r;
    function s(c, f) {
      An(c);
      let p = [].concat(c), d = new hw.default(f);
      return oV.generate(p, d);
    }
    i(s, "generateTasks"), e.generateTasks = s;
    function n(c, f) {
      An(c);
      let p = new hw.default(f);
      return tn.pattern.isDynamicPattern(c, p);
    }
    i(n, "isDynamicPattern"), e.isDynamicPattern = n;
    function a(c) {
      return An(c), tn.path.escape(c);
    }
    i(a, "escapePath"), e.escapePath = a;
    function o(c) {
      return An(c), tn.path.convertPathToPattern(c);
    }
    i(o, "convertPathToPattern"), e.convertPathToPattern = o;
    let l;
    (function(c) {
      function f(d) {
        return An(d), tn.path.escapePosixPath(d);
      }
      i(f, "escapePath"), c.escapePath = f;
      function p(d) {
        return An(d), tn.path.convertPosixPathToPattern(d);
      }
      i(p, "convertPathToPattern"), c.convertPathToPattern = p;
    })(l = e.posix || (e.posix = {}));
    let u;
    (function(c) {
      function f(d) {
        return An(d), tn.path.escapeWindowsPath(d);
      }
      i(f, "escapePath"), c.escapePath = f;
      function p(d) {
        return An(d), tn.path.convertWindowsPathToPattern(d);
      }
      i(p, "convertPathToPattern"), c.convertPathToPattern = p;
    })(u = e.win32 || (e.win32 = {}));
  })(mw || (mw = {}));
  function yw(e, t, r) {
    let s = [].concat(e), n = new hw.default(r), a = oV.generate(s, n), o = new t(n);
    return a.map(o.read, o);
  }
  i(yw, "getWorks");
  function An(e) {
    if (![].concat(e).every((s) => tn.string.isString(s) && !tn.string.isEmpty(s)))
      throw new TypeError("Patterns must be a string (non empty) or an array of strings");
  }
  i(An, "assertPatternsInput");
  lV.exports = mw;
});

// ../node_modules/globby/node_modules/path-type/index.js
import rVe, { promises as sVe } from "fs";
async function bw(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return (await sVe[e](r))[t]();
  } catch (s) {
    if (s.code === "ENOENT")
      return !1;
    throw s;
  }
}
function Ew(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return rVe[e](r)[t]();
  } catch (s) {
    if (s.code === "ENOENT")
      return !1;
    throw s;
  }
}
var Zct, uV, eft, tft, cV, rft, fV = Qn(() => {
  i(bw, "isType");
  i(Ew, "isTypeSync");
  Zct = bw.bind(null, "stat", "isFile"), uV = bw.bind(null, "stat", "isDirectory"), eft = bw.bind(null, "lstat", "isSymbolicLink"), tft = Ew.
  bind(null, "statSync", "isFile"), cV = Ew.bind(null, "statSync", "isDirectory"), rft = Ew.bind(null, "lstatSync", "isSymbolicLink");
});

// ../node_modules/unicorn-magic/default.js
var pV = Qn(() => {
});

// ../node_modules/unicorn-magic/node.js
import { fileURLToPath as nVe } from "node:url";
function $f(e) {
  return e instanceof URL ? nVe(e) : e;
}
var vw = Qn(() => {
  pV();
  i($f, "toPath");
});

// ../node_modules/ignore/index.js
var SV = y((fft, vV) => {
  function dV(e) {
    return Array.isArray(e) ? e : [e];
  }
  i(dV, "makeArray");
  var xw = "", hV = " ", Sw = "\\", iVe = /^\s+$/, aVe = /(?:[^\\]|^)\\$/, oVe = /^\\!/, lVe = /^\\#/, uVe = /\r?\n/g, cVe = /^\.*\/|^\.+$/,
  Tw = "/", gV = "node-ignore";
  typeof Symbol < "u" && (gV = Symbol.for("node-ignore"));
  var mV = gV, fVe = /* @__PURE__ */ i((e, t, r) => Object.defineProperty(e, t, { value: r }), "define"), pVe = /([0-z])-([0-z])/g, bV = /* @__PURE__ */ i(
  () => !1, "RETURN_FALSE"), dVe = /* @__PURE__ */ i((e) => e.replace(
    pVe,
    (t, r, s) => r.charCodeAt(0) <= s.charCodeAt(0) ? t : xw
  ), "sanitizeRange"), hVe = /* @__PURE__ */ i((e) => {
    let { length: t } = e;
    return e.slice(0, t - t % 2);
  }, "cleanRangeBackSlash"), mVe = [
    [
      // remove BOM
      // TODO:
      // Other similar zero-width characters?
      /^\uFEFF/,
      () => xw
    ],
    // > Trailing spaces are ignored unless they are quoted with backslash ("\")
    [
      // (a\ ) -> (a )
      // (a  ) -> (a)
      // (a \ ) -> (a  )
      /\\?\s+$/,
      (e) => e.indexOf("\\") === 0 ? hV : xw
    ],
    // replace (\ ) with ' '
    [
      /\\\s/g,
      () => hV
    ],
    // Escape metacharacters
    // which is written down by users but means special for regular expressions.
    // > There are 12 characters with special meanings:
    // > - the backslash \,
    // > - the caret ^,
    // > - the dollar sign $,
    // > - the period or dot .,
    // > - the vertical bar or pipe symbol |,
    // > - the question mark ?,
    // > - the asterisk or star *,
    // > - the plus sign +,
    // > - the opening parenthesis (,
    // > - the closing parenthesis ),
    // > - and the opening square bracket [,
    // > - the opening curly brace {,
    // > These special characters are often called "metacharacters".
    [
      /[\\$.|*+(){^]/g,
      (e) => `\\${e}`
    ],
    [
      // > a question mark (?) matches a single character
      /(?!\\)\?/g,
      () => "[^/]"
    ],
    // leading slash
    [
      // > A leading slash matches the beginning of the pathname.
      // > For example, "/*.c" matches "cat-file.c" but not "mozilla-sha1/sha1.c".
      // A leading slash matches the beginning of the pathname
      /^\//,
      () => "^"
    ],
    // replace special metacharacter slash after the leading slash
    [
      /\//g,
      () => "\\/"
    ],
    [
      // > A leading "**" followed by a slash means match in all directories.
      // > For example, "**/foo" matches file or directory "foo" anywhere,
      // > the same as pattern "foo".
      // > "**/foo/bar" matches file or directory "bar" anywhere that is directly
      // >   under directory "foo".
      // Notice that the '*'s have been replaced as '\\*'
      /^\^*\\\*\\\*\\\//,
      // '**/foo' <-> 'foo'
      () => "^(?:.*\\/)?"
    ],
    // starting
    [
      // there will be no leading '/'
      //   (which has been replaced by section "leading slash")
      // If starts with '**', adding a '^' to the regular expression also works
      /^(?=[^^])/,
      /* @__PURE__ */ i(function() {
        return /\/(?!$)/.test(this) ? "^" : "(?:^|\\/)";
      }, "startingReplacer")
    ],
    // two globstars
    [
      // Use lookahead assertions so that we could match more than one `'/**'`
      /\\\/\\\*\\\*(?=\\\/|$)/g,
      // Zero, one or several directories
      // should not use '*', or it will be replaced by the next replacer
      // Check if it is not the last `'/**'`
      (e, t, r) => t + 6 < r.length ? "(?:\\/[^\\/]+)*" : "\\/.+"
    ],
    // normal intermediate wildcards
    [
      // Never replace escaped '*'
      // ignore rule '\*' will match the path '*'
      // 'abc.*/' -> go
      // 'abc.*'  -> skip this rule,
      //    coz trailing single wildcard will be handed by [trailing wildcard]
      /(^|[^\\]+)(\\\*)+(?=.+)/g,
      // '*.js' matches '.js'
      // '*.js' doesn't match 'abc'
      (e, t, r) => {
        let s = r.replace(/\\\*/g, "[^\\/]*");
        return t + s;
      }
    ],
    [
      // unescape, revert step 3 except for back slash
      // For example, if a user escape a '\\*',
      // after step 3, the result will be '\\\\\\*'
      /\\\\\\(?=[$.|*+(){^])/g,
      () => Sw
    ],
    [
      // '\\\\' -> '\\'
      /\\\\/g,
      () => Sw
    ],
    [
      // > The range notation, e.g. [a-zA-Z],
      // > can be used to match one of the characters in a range.
      // `\` is escaped by step 3
      /(\\)?\[([^\]/]*?)(\\*)($|\])/g,
      (e, t, r, s, n) => t === Sw ? `\\[${r}${hVe(s)}${n}` : n === "]" && s.length % 2 === 0 ? `[${dVe(r)}${s}]` : "[]"
    ],
    // ending
    [
      // 'js' will not match 'js.'
      // 'ab' will not match 'abc'
      /(?:[^*])$/,
      // WTF!
      // https://git-scm.com/docs/gitignore
      // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)
      // which re-fixes #24, #38
      // > If there is a separator at the end of the pattern then the pattern
      // > will only match directories, otherwise the pattern can match both
      // > files and directories.
      // 'js*' will not match 'a.js'
      // 'js/' will not match 'a.js'
      // 'js' will match 'a.js' and 'a.js/'
      (e) => /\/$/.test(e) ? `${e}$` : `${e}(?=$|\\/$)`
    ],
    // trailing wildcard
    [
      /(\^|\\\/)?\\\*$/,
      (e, t) => `${t ? `${t}[^/]+` : "[^/]*"}(?=$|\\/$)`
    ]
  ], yV = /* @__PURE__ */ Object.create(null), yVe = /* @__PURE__ */ i((e, t) => {
    let r = yV[e];
    return r || (r = mVe.reduce(
      (s, n) => s.replace(n[0], n[1].bind(e)),
      e
    ), yV[e] = r), t ? new RegExp(r, "i") : new RegExp(r);
  }, "makeRegex"), Cw = /* @__PURE__ */ i((e) => typeof e == "string", "isString"), gVe = /* @__PURE__ */ i((e) => e && Cw(e) && !iVe.test(e) &&
  !aVe.test(e) && e.indexOf("#") !== 0, "checkPattern"), bVe = /* @__PURE__ */ i((e) => e.split(uVe), "splitPattern"), Pw = class {
    static {
      i(this, "IgnoreRule");
    }
    constructor(t, r, s, n) {
      this.origin = t, this.pattern = r, this.negative = s, this.regex = n;
    }
  }, EVe = /* @__PURE__ */ i((e, t) => {
    let r = e, s = !1;
    e.indexOf("!") === 0 && (s = !0, e = e.substr(1)), e = e.replace(oVe, "!").replace(lVe, "#");
    let n = yVe(e, t);
    return new Pw(
      r,
      e,
      s,
      n
    );
  }, "createRule"), vVe = /* @__PURE__ */ i((e, t) => {
    throw new t(e);
  }, "throwError"), Mi = /* @__PURE__ */ i((e, t, r) => Cw(e) ? e ? Mi.isNotRelative(e) ? r(
    `path should be a \`path.relative()\`d string, but got "${t}"`,
    RangeError
  ) : !0 : r("path must not be empty", TypeError) : r(
    `path must be a string, but got \`${t}\``,
    TypeError
  ), "checkPath"), EV = /* @__PURE__ */ i((e) => cVe.test(e), "isNotRelative");
  Mi.isNotRelative = EV;
  Mi.convert = (e) => e;
  var Aw = class {
    static {
      i(this, "Ignore");
    }
    constructor({
      ignorecase: t = !0,
      ignoreCase: r = t,
      allowRelativePaths: s = !1
    } = {}) {
      fVe(this, mV, !0), this._rules = [], this._ignoreCase = r, this._allowRelativePaths = s, this._initCache();
    }
    _initCache() {
      this._ignoreCache = /* @__PURE__ */ Object.create(null), this._testCache = /* @__PURE__ */ Object.create(null);
    }
    _addPattern(t) {
      if (t && t[mV]) {
        this._rules = this._rules.concat(t._rules), this._added = !0;
        return;
      }
      if (gVe(t)) {
        let r = EVe(t, this._ignoreCase);
        this._added = !0, this._rules.push(r);
      }
    }
    // @param {Array<string> | string | Ignore} pattern
    add(t) {
      return this._added = !1, dV(
        Cw(t) ? bVe(t) : t
      ).forEach(this._addPattern, this), this._added && this._initCache(), this;
    }
    // legacy
    addPattern(t) {
      return this.add(t);
    }
    //          |           ignored : unignored
    // negative |   0:0   |   0:1   |   1:0   |   1:1
    // -------- | ------- | ------- | ------- | --------
    //     0    |  TEST   |  TEST   |  SKIP   |    X
    //     1    |  TESTIF |  SKIP   |  TEST   |    X
    // - SKIP: always skip
    // - TEST: always test
    // - TESTIF: only test if checkUnignored
    // - X: that never happen
    // @param {boolean} whether should check if the path is unignored,
    //   setting `checkUnignored` to `false` could reduce additional
    //   path matching.
    // @returns {TestResult} true if a file is ignored
    _testOne(t, r) {
      let s = !1, n = !1;
      return this._rules.forEach((a) => {
        let { negative: o } = a;
        if (n === o && s !== n || o && !s && !n && !r)
          return;
        a.regex.test(t) && (s = !o, n = o);
      }), {
        ignored: s,
        unignored: n
      };
    }
    // @returns {TestResult}
    _test(t, r, s, n) {
      let a = t && Mi.convert(t);
      return Mi(
        a,
        t,
        this._allowRelativePaths ? bV : vVe
      ), this._t(a, r, s, n);
    }
    _t(t, r, s, n) {
      if (t in r)
        return r[t];
      if (n || (n = t.split(Tw)), n.pop(), !n.length)
        return r[t] = this._testOne(t, s);
      let a = this._t(
        n.join(Tw) + Tw,
        r,
        s,
        n
      );
      return r[t] = a.ignored ? a : this._testOne(t, s);
    }
    ignores(t) {
      return this._test(t, this._ignoreCache, !1).ignored;
    }
    createFilter() {
      return (t) => !this.ignores(t);
    }
    filter(t) {
      return dV(t).filter(this.createFilter());
    }
    // @returns {TestResult}
    test(t) {
      return this._test(t, this._testCache, !0);
    }
  }, Yy = /* @__PURE__ */ i((e) => new Aw(e), "factory"), SVe = /* @__PURE__ */ i((e) => Mi(e && Mi.convert(e), e, bV), "isPathValid");
  Yy.isPathValid = SVe;
  Yy.default = Yy;
  vV.exports = Yy;
  if (
    // Detect `process` so that it can run in browsers.
    typeof process < "u" && (process.env && process.env.IGNORE_TEST_WIN32 || process.platform === "win32")
  ) {
    let e = /* @__PURE__ */ i((r) => /^\\\\\?\\/.test(r) || /["<>|\u0000-\u001F]+/u.test(r) ? r : r.replace(/\\/g, "/"), "makePosix");
    Mi.convert = e;
    let t = /^[a-z]:\//i;
    Mi.isNotRelative = (r) => t.test(r) || EV(r);
  }
});

// ../node_modules/slash/index.js
function cu(e) {
  return e.startsWith("\\\\?\\") ? e : e.replace(/\\/g, "/");
}
var TV = Qn(() => {
  i(cu, "slash");
});

// ../node_modules/globby/utilities.js
var Uf, ww = Qn(() => {
  Uf = /* @__PURE__ */ i((e) => e[0] === "!", "isNegativePattern");
});

// ../node_modules/globby/ignore.js
import TVe from "node:process";
import xVe from "node:fs";
import PVe from "node:fs/promises";
import fu from "node:path";
var Dw, xV, AVe, PV, Xy, CVe, wVe, DVe, AV, CV, Iw, _w, wV, DV, Ow = Qn(() => {
  Dw = gr(gw(), 1), xV = gr(SV(), 1);
  TV();
  vw();
  ww();
  AVe = [
    "**/node_modules",
    "**/flow-typed",
    "**/coverage",
    "**/.git"
  ], PV = {
    absolute: !0,
    dot: !0
  }, Xy = "**/.gitignore", CVe = /* @__PURE__ */ i((e, t) => Uf(e) ? "!" + fu.posix.join(t, e.slice(1)) : fu.posix.join(t, e), "applyBaseToP\
attern"), wVe = /* @__PURE__ */ i((e, t) => {
    let r = cu(fu.relative(t, fu.dirname(e.filePath)));
    return e.content.split(/\r?\n/).filter((s) => s && !s.startsWith("#")).map((s) => CVe(s, r));
  }, "parseIgnoreFile"), DVe = /* @__PURE__ */ i((e, t) => {
    if (t = cu(t), fu.isAbsolute(e)) {
      if (cu(e).startsWith(t))
        return fu.relative(t, e);
      throw new Error(`Path ${e} is not in cwd ${t}`);
    }
    return e;
  }, "toRelativePath"), AV = /* @__PURE__ */ i((e, t) => {
    let r = e.flatMap((n) => wVe(n, t)), s = (0, xV.default)().add(r);
    return (n) => (n = $f(n), n = DVe(n, t), n ? s.ignores(cu(n)) : !1);
  }, "getIsIgnoredPredicate"), CV = /* @__PURE__ */ i((e = {}) => ({
    cwd: $f(e.cwd) ?? TVe.cwd(),
    suppressErrors: !!e.suppressErrors,
    deep: typeof e.deep == "number" ? e.deep : Number.POSITIVE_INFINITY,
    ignore: [...e.ignore ?? [], ...AVe]
  }), "normalizeOptions"), Iw = /* @__PURE__ */ i(async (e, t) => {
    let { cwd: r, suppressErrors: s, deep: n, ignore: a } = CV(t), o = await (0, Dw.default)(e, {
      cwd: r,
      suppressErrors: s,
      deep: n,
      ignore: a,
      ...PV
    }), l = await Promise.all(
      o.map(async (u) => ({
        filePath: u,
        content: await PVe.readFile(u, "utf8")
      }))
    );
    return AV(l, r);
  }, "isIgnoredByIgnoreFiles"), _w = /* @__PURE__ */ i((e, t) => {
    let { cwd: r, suppressErrors: s, deep: n, ignore: a } = CV(t), l = Dw.default.sync(e, {
      cwd: r,
      suppressErrors: s,
      deep: n,
      ignore: a,
      ...PV
    }).map((u) => ({
      filePath: u,
      content: xVe.readFileSync(u, "utf8")
    }));
    return AV(l, r);
  }, "isIgnoredByIgnoreFilesSync"), wV = /* @__PURE__ */ i((e) => Iw(Xy, e), "isGitIgnored"), DV = /* @__PURE__ */ i((e) => _w(Xy, e), "isGi\
tIgnoredSync");
});

// ../node_modules/globby/index.js
var VV = {};
Hw(VV, {
  convertPathToPattern: () => jVe,
  generateGlobTasks: () => BVe,
  generateGlobTasksSync: () => MVe,
  globby: () => RVe,
  globbyStream: () => FVe,
  globbySync: () => kVe,
  isDynamicPattern: () => LVe,
  isGitIgnored: () => wV,
  isGitIgnoredSync: () => DV
});
import OV from "node:process";
import IVe from "node:fs";
import pu from "node:path";
var du, _Ve, NV, RV, IV, _V, Nw, OVe, kV, FV, zy, LV, NVe, BV, MV, jV, qV, $V, UV, Rw, RVe, kVe, FVe, LVe, BVe, MVe, jVe, WV = Qn(() => {
  Sq();
  du = gr(gw(), 1);
  fV();
  vw();
  Ow();
  ww();
  Ow();
  _Ve = /* @__PURE__ */ i((e) => {
    if (e.some((t) => typeof t != "string"))
      throw new TypeError("Patterns must be a string or an array of strings");
  }, "assertPatternsInput"), NV = /* @__PURE__ */ i((e, t) => {
    let r = Uf(e) ? e.slice(1) : e;
    return pu.isAbsolute(r) ? r : pu.join(t, r);
  }, "normalizePathForDirectoryGlob"), RV = /* @__PURE__ */ i(({ directoryPath: e, files: t, extensions: r }) => {
    let s = r?.length > 0 ? `.${r.length > 1 ? `{${r.join(",")}}` : r[0]}` : "";
    return t ? t.map((n) => pu.posix.join(e, `**/${pu.extname(n) ? n : `${n}${s}`}`)) : [pu.posix.join(e, `**${s ? `/*${s}` : ""}`)];
  }, "getDirectoryGlob"), IV = /* @__PURE__ */ i(async (e, {
    cwd: t = OV.cwd(),
    files: r,
    extensions: s
  } = {}) => (await Promise.all(
    e.map(async (a) => await uV(NV(a, t)) ? RV({ directoryPath: a, files: r, extensions: s }) : a)
  )).flat(), "directoryToGlob"), _V = /* @__PURE__ */ i((e, {
    cwd: t = OV.cwd(),
    files: r,
    extensions: s
  } = {}) => e.flatMap((n) => cV(NV(n, t)) ? RV({ directoryPath: n, files: r, extensions: s }) : n), "directoryToGlobSync"), Nw = /* @__PURE__ */ i(
  (e) => (e = [...new Set([e].flat())], _Ve(e), e), "toPatternsArray"), OVe = /* @__PURE__ */ i((e) => {
    if (!e)
      return;
    let t;
    try {
      t = IVe.statSync(e);
    } catch {
      return;
    }
    if (!t.isDirectory())
      throw new Error("The `cwd` option must be a path to a directory");
  }, "checkCwdOption"), kV = /* @__PURE__ */ i((e = {}) => (e = {
    ...e,
    ignore: e.ignore ?? [],
    expandDirectories: e.expandDirectories ?? !0,
    cwd: $f(e.cwd)
  }, OVe(e.cwd), e), "normalizeOptions"), FV = /* @__PURE__ */ i((e) => async (t, r) => e(Nw(t), kV(r)), "normalizeArguments"), zy = /* @__PURE__ */ i(
  (e) => (t, r) => e(Nw(t), kV(r)), "normalizeArgumentsSync"), LV = /* @__PURE__ */ i((e) => {
    let { ignoreFiles: t, gitignore: r } = e, s = t ? Nw(t) : [];
    return r && s.push(Xy), s;
  }, "getIgnoreFilesPatterns"), NVe = /* @__PURE__ */ i(async (e) => {
    let t = LV(e);
    return MV(
      t.length > 0 && await Iw(t, e)
    );
  }, "getFilter"), BV = /* @__PURE__ */ i((e) => {
    let t = LV(e);
    return MV(
      t.length > 0 && _w(t, e)
    );
  }, "getFilterSync"), MV = /* @__PURE__ */ i((e) => {
    let t = /* @__PURE__ */ new Set();
    return (r) => {
      let s = pu.normalize(r.path ?? r);
      return t.has(s) || e && e(s) ? !1 : (t.add(s), !0);
    };
  }, "createFilterFunction"), jV = /* @__PURE__ */ i((e, t) => e.flat().filter((r) => t(r)), "unionFastGlobResults"), qV = /* @__PURE__ */ i(
  (e, t) => {
    let r = [];
    for (; e.length > 0; ) {
      let s = e.findIndex((a) => Uf(a));
      if (s === -1) {
        r.push({ patterns: e, options: t });
        break;
      }
      let n = e[s].slice(1);
      for (let a of r)
        a.options.ignore.push(n);
      s !== 0 && r.push({
        patterns: e.slice(0, s),
        options: {
          ...t,
          ignore: [
            ...t.ignore,
            n
          ]
        }
      }), e = e.slice(s + 1);
    }
    return r;
  }, "convertNegativePatterns"), $V = /* @__PURE__ */ i((e, t) => ({
    ...t ? { cwd: t } : {},
    ...Array.isArray(e) ? { files: e } : e
  }), "normalizeExpandDirectoriesOption"), UV = /* @__PURE__ */ i(async (e, t) => {
    let r = qV(e, t), { cwd: s, expandDirectories: n } = t;
    if (!n)
      return r;
    let a = $V(n, s);
    return Promise.all(
      r.map(async (o) => {
        let { patterns: l, options: u } = o;
        return [
          l,
          u.ignore
        ] = await Promise.all([
          IV(l, a),
          IV(u.ignore, { cwd: s })
        ]), { patterns: l, options: u };
      })
    );
  }, "generateTasks"), Rw = /* @__PURE__ */ i((e, t) => {
    let r = qV(e, t), { cwd: s, expandDirectories: n } = t;
    if (!n)
      return r;
    let a = $V(n, s);
    return r.map((o) => {
      let { patterns: l, options: u } = o;
      return l = _V(l, a), u.ignore = _V(u.ignore, { cwd: s }), { patterns: l, options: u };
    });
  }, "generateTasksSync"), RVe = FV(async (e, t) => {
    let [
      r,
      s
    ] = await Promise.all([
      UV(e, t),
      NVe(t)
    ]), n = await Promise.all(r.map((a) => (0, du.default)(a.patterns, a.options)));
    return jV(n, s);
  }), kVe = zy((e, t) => {
    let r = Rw(e, t), s = BV(t), n = r.map((a) => du.default.sync(a.patterns, a.options));
    return jV(n, s);
  }), FVe = zy((e, t) => {
    let r = Rw(e, t), s = BV(t), n = r.map((o) => du.default.stream(o.patterns, o.options));
    return RA(n).filter((o) => s(o));
  }), LVe = zy(
    (e, t) => e.some((r) => du.default.isDynamicPattern(r, t))
  ), BVe = FV(UV), MVe = zy(Rw), { convertPathToPattern: jVe } = du.default;
});

// ../node_modules/camelcase/index.js
var JV = {};
Hw(JV, {
  default: () => zV
});
function zV(e, t) {
  if (!(typeof e == "string" || Array.isArray(e)))
    throw new TypeError("Expected the input to be `string | string[]`");
  if (t = {
    pascalCase: !1,
    preserveConsecutiveUppercase: !1,
    ...t
  }, Array.isArray(e) ? e = e.map((a) => a.trim()).filter((a) => a.length).join("-") : e = e.trim(), e.length === 0)
    return "";
  let r = t.locale === !1 ? (a) => a.toLowerCase() : (a) => a.toLocaleLowerCase(t.locale), s = t.locale === !1 ? (a) => a.toUpperCase() : (a) => a.
  toLocaleUpperCase(t.locale);
  return e.length === 1 ? kw.test(e) ? "" : t.pascalCase ? s(e) : r(e) : (e !== r(e) && (e = HVe(e, r, s, t.preserveConsecutiveUppercase)), e =
  e.replace(WVe, ""), e = t.preserveConsecutiveUppercase ? GVe(e, r) : r(e), t.pascalCase && (e = s(e.charAt(0)) + e.slice(1)), KVe(e, s));
}
var UVe, VVe, GV, XV, kw, WVe, KV, YV, HVe, GVe, KVe, QV = Qn(() => {
  UVe = /[\p{Lu}]/u, VVe = /[\p{Ll}]/u, GV = /^[\p{Lu}](?![\p{Lu}])/gu, XV = /([\p{Alpha}\p{N}_]|$)/u, kw = /[_.\- ]+/, WVe = new RegExp("^" +
  kw.source), KV = new RegExp(kw.source + XV.source, "gu"), YV = new RegExp("\\d+" + XV.source, "gu"), HVe = /* @__PURE__ */ i((e, t, r, s) => {
    let n = !1, a = !1, o = !1, l = !1;
    for (let u = 0; u < e.length; u++) {
      let c = e[u];
      l = u > 2 ? e[u - 3] === "-" : !0, n && UVe.test(c) ? (e = e.slice(0, u) + "-" + e.slice(u), n = !1, o = a, a = !0, u++) : a && o && VVe.
      test(c) && (!l || s) ? (e = e.slice(0, u - 1) + "-" + e.slice(u - 1), o = a, a = !1, n = !0) : (n = t(c) === c && r(c) !== c, o = a, a =
      r(c) === c && t(c) !== c);
    }
    return e;
  }, "preserveCamelCase"), GVe = /* @__PURE__ */ i((e, t) => (GV.lastIndex = 0, e.replaceAll(GV, (r) => t(r))), "preserveConsecutiveUppercas\
e"), KVe = /* @__PURE__ */ i((e, t) => (KV.lastIndex = 0, YV.lastIndex = 0, e.replaceAll(YV, (r, s, n) => ["_", "-"].includes(e.charAt(n + r.
  length)) ? r : t(r)).replaceAll(KV, (r, s) => t(s))), "postProcess");
  i(zV, "camelCase");
});

// src/core-server/presets/common-preset.ts
var hu = gr(rp(), 1), hW = gr(jo(), 1);
import { logger as dWe } from "@storybook/core/node-logger";
import { telemetry as hWe } from "@storybook/core/telemetry";
import {
  getDirectoryFromWorkingDir as mWe,
  getPreviewBodyTemplate as yWe,
  getPreviewHeadTemplate as gWe,
  loadEnvs as bWe,
  removeAddon as pW
} from "@storybook/core/common";
import { readCsf as EWe } from "@storybook/core/csf-tools";
import { join as Vf, dirname as e0, isAbsolute as vWe } from "node:path";

// src/core-server/utils/server-statics.ts
import { logger as zHe } from "@storybook/core/node-logger";
import { getDirectoryFromWorkingDir as QHe } from "@storybook/core/common";

// node_modules/chalk/source/vendor/ansi-styles/index.js
var q2 = /* @__PURE__ */ i((e = 0) => (t) => `\x1B[${t + e}m`, "wrapAnsi16"), $2 = /* @__PURE__ */ i((e = 0) => (t) => `\x1B[${38 + e};5;${t}\
m`, "wrapAnsi256"), U2 = /* @__PURE__ */ i((e = 0) => (t, r, s) => `\x1B[${38 + e};2;${t};${r};${s}m`, "wrapAnsi16m"), Yt = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
}, NHe = Object.keys(Yt.modifier), xG = Object.keys(Yt.color), PG = Object.keys(Yt.bgColor), RHe = [...xG, ...PG];
function AG() {
  let e = /* @__PURE__ */ new Map();
  for (let [t, r] of Object.entries(Yt)) {
    for (let [s, n] of Object.entries(r))
      Yt[s] = {
        open: `\x1B[${n[0]}m`,
        close: `\x1B[${n[1]}m`
      }, r[s] = Yt[s], e.set(n[0], n[1]);
    Object.defineProperty(Yt, t, {
      value: r,
      enumerable: !1
    });
  }
  return Object.defineProperty(Yt, "codes", {
    value: e,
    enumerable: !1
  }), Yt.color.close = "\x1B[39m", Yt.bgColor.close = "\x1B[49m", Yt.color.ansi = q2(), Yt.color.ansi256 = $2(), Yt.color.ansi16m = U2(), Yt.
  bgColor.ansi = q2(10), Yt.bgColor.ansi256 = $2(10), Yt.bgColor.ansi16m = U2(10), Object.defineProperties(Yt, {
    rgbToAnsi256: {
      value(t, r, s) {
        return t === r && r === s ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t / 255 * 5) + 6 *
        Math.round(r / 255 * 5) + Math.round(s / 255 * 5);
      },
      enumerable: !1
    },
    hexToRgb: {
      value(t) {
        let r = /[a-f\d]{6}|[a-f\d]{3}/i.exec(t.toString(16));
        if (!r)
          return [0, 0, 0];
        let [s] = r;
        s.length === 3 && (s = [...s].map((a) => a + a).join(""));
        let n = Number.parseInt(s, 16);
        return [
          /* eslint-disable no-bitwise */
          n >> 16 & 255,
          n >> 8 & 255,
          n & 255
          /* eslint-enable no-bitwise */
        ];
      },
      enumerable: !1
    },
    hexToAnsi256: {
      value: /* @__PURE__ */ i((t) => Yt.rgbToAnsi256(...Yt.hexToRgb(t)), "value"),
      enumerable: !1
    },
    ansi256ToAnsi: {
      value(t) {
        if (t < 8)
          return 30 + t;
        if (t < 16)
          return 90 + (t - 8);
        let r, s, n;
        if (t >= 232)
          r = ((t - 232) * 10 + 8) / 255, s = r, n = r;
        else {
          t -= 16;
          let l = t % 36;
          r = Math.floor(t / 36) / 5, s = Math.floor(l / 6) / 5, n = l % 6 / 5;
        }
        let a = Math.max(r, s, n) * 2;
        if (a === 0)
          return 30;
        let o = 30 + (Math.round(n) << 2 | Math.round(s) << 1 | Math.round(r));
        return a === 2 && (o += 60), o;
      },
      enumerable: !1
    },
    rgbToAnsi: {
      value: /* @__PURE__ */ i((t, r, s) => Yt.ansi256ToAnsi(Yt.rgbToAnsi256(t, r, s)), "value"),
      enumerable: !1
    },
    hexToAnsi: {
      value: /* @__PURE__ */ i((t) => Yt.ansi256ToAnsi(Yt.hexToAnsi256(t)), "value"),
      enumerable: !1
    }
  }), Yt;
}
i(AG, "assembleStyles");
var CG = AG(), an = CG;

// node_modules/chalk/source/vendor/supports-color/index.js
import y0 from "node:process";
import wG from "node:os";
import V2 from "node:tty";
function ks(e, t = globalThis.Deno ? globalThis.Deno.args : y0.argv) {
  let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", s = t.indexOf(r + e), n = t.indexOf("--");
  return s !== -1 && (n === -1 || s < n);
}
i(ks, "hasFlag");
var { env: tr } = y0, sp;
ks("no-color") || ks("no-colors") || ks("color=false") || ks("color=never") ? sp = 0 : (ks("color") || ks("colors") || ks("color=true") || ks(
"color=always")) && (sp = 1);
function DG() {
  if ("FORCE_COLOR" in tr)
    return tr.FORCE_COLOR === "true" ? 1 : tr.FORCE_COLOR === "false" ? 0 : tr.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(tr.FORCE_COLOR,
    10), 3);
}
i(DG, "envForceColor");
function IG(e) {
  return e === 0 ? !1 : {
    level: e,
    hasBasic: !0,
    has256: e >= 2,
    has16m: e >= 3
  };
}
i(IG, "translateLevel");
function _G(e, { streamIsTTY: t, sniffFlags: r = !0 } = {}) {
  let s = DG();
  s !== void 0 && (sp = s);
  let n = r ? sp : s;
  if (n === 0)
    return 0;
  if (r) {
    if (ks("color=16m") || ks("color=full") || ks("color=truecolor"))
      return 3;
    if (ks("color=256"))
      return 2;
  }
  if ("TF_BUILD" in tr && "AGENT_NAME" in tr)
    return 1;
  if (e && !t && n === void 0)
    return 0;
  let a = n || 0;
  if (tr.TERM === "dumb")
    return a;
  if (y0.platform === "win32") {
    let o = wG.release().split(".");
    return Number(o[0]) >= 10 && Number(o[2]) >= 10586 ? Number(o[2]) >= 14931 ? 3 : 2 : 1;
  }
  if ("CI" in tr)
    return "GITHUB_ACTIONS" in tr || "GITEA_ACTIONS" in tr ? 3 : ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "BUILDKITE", "DRONE"].some(
    (o) => o in tr) || tr.CI_NAME === "codeship" ? 1 : a;
  if ("TEAMCITY_VERSION" in tr)
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(tr.TEAMCITY_VERSION) ? 1 : 0;
  if (tr.COLORTERM === "truecolor" || tr.TERM === "xterm-kitty")
    return 3;
  if ("TERM_PROGRAM" in tr) {
    let o = Number.parseInt((tr.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
    switch (tr.TERM_PROGRAM) {
      case "iTerm.app":
        return o >= 3 ? 3 : 2;
      case "Apple_Terminal":
        return 2;
    }
  }
  return /-256(color)?$/i.test(tr.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(tr.TERM) || "COLORTERM" in tr ?
  1 : a;
}
i(_G, "_supportsColor");
function W2(e, t = {}) {
  let r = _G(e, {
    streamIsTTY: e && e.isTTY,
    ...t
  });
  return IG(r);
}
i(W2, "createSupportsColor");
var OG = {
  stdout: W2({ isTTY: V2.isatty(1) }),
  stderr: W2({ isTTY: V2.isatty(2) })
}, H2 = OG;

// node_modules/chalk/source/utilities.js
function G2(e, t, r) {
  let s = e.indexOf(t);
  if (s === -1)
    return e;
  let n = t.length, a = 0, o = "";
  do
    o += e.slice(a, s) + t + r, a = s + n, s = e.indexOf(t, a);
  while (s !== -1);
  return o += e.slice(a), o;
}
i(G2, "stringReplaceAll");
function K2(e, t, r, s) {
  let n = 0, a = "";
  do {
    let o = e[s - 1] === "\r";
    a += e.slice(n, o ? s - 1 : s) + t + (o ? `\r
` : `
`) + r, n = s + 1, s = e.indexOf(`
`, n);
  } while (s !== -1);
  return a += e.slice(n), a;
}
i(K2, "stringEncaseCRLFWithFirstIndex");

// node_modules/chalk/source/index.js
var { stdout: Y2, stderr: X2 } = H2, g0 = Symbol("GENERATOR"), qo = Symbol("STYLER"), xu = Symbol("IS_EMPTY"), z2 = [
  "ansi",
  "ansi",
  "ansi256",
  "ansi16m"
], $o = /* @__PURE__ */ Object.create(null), NG = /* @__PURE__ */ i((e, t = {}) => {
  if (t.level && !(Number.isInteger(t.level) && t.level >= 0 && t.level <= 3))
    throw new Error("The `level` option should be an integer from 0 to 3");
  let r = Y2 ? Y2.level : 0;
  e.level = t.level === void 0 ? r : t.level;
}, "applyOptions");
var RG = /* @__PURE__ */ i((e) => {
  let t = /* @__PURE__ */ i((...r) => r.join(" "), "chalk");
  return NG(t, e), Object.setPrototypeOf(t, Pu.prototype), t;
}, "chalkFactory");
function Pu(e) {
  return RG(e);
}
i(Pu, "createChalk");
Object.setPrototypeOf(Pu.prototype, Function.prototype);
for (let [e, t] of Object.entries(an))
  $o[e] = {
    get() {
      let r = np(this, E0(t.open, t.close, this[qo]), this[xu]);
      return Object.defineProperty(this, e, { value: r }), r;
    }
  };
$o.visible = {
  get() {
    let e = np(this, this[qo], !0);
    return Object.defineProperty(this, "visible", { value: e }), e;
  }
};
var b0 = /* @__PURE__ */ i((e, t, r, ...s) => e === "rgb" ? t === "ansi16m" ? an[r].ansi16m(...s) : t === "ansi256" ? an[r].ansi256(an.rgbToAnsi256(
...s)) : an[r].ansi(an.rgbToAnsi(...s)) : e === "hex" ? b0("rgb", t, r, ...an.hexToRgb(...s)) : an[r][e](...s), "getModelAnsi"), kG = ["rgb",
"hex", "ansi256"];
for (let e of kG) {
  $o[e] = {
    get() {
      let { level: r } = this;
      return function(...s) {
        let n = E0(b0(e, z2[r], "color", ...s), an.color.close, this[qo]);
        return np(this, n, this[xu]);
      };
    }
  };
  let t = "bg" + e[0].toUpperCase() + e.slice(1);
  $o[t] = {
    get() {
      let { level: r } = this;
      return function(...s) {
        let n = E0(b0(e, z2[r], "bgColor", ...s), an.bgColor.close, this[qo]);
        return np(this, n, this[xu]);
      };
    }
  };
}
var FG = Object.defineProperties(() => {
}, {
  ...$o,
  level: {
    enumerable: !0,
    get() {
      return this[g0].level;
    },
    set(e) {
      this[g0].level = e;
    }
  }
}), E0 = /* @__PURE__ */ i((e, t, r) => {
  let s, n;
  return r === void 0 ? (s = e, n = t) : (s = r.openAll + e, n = t + r.closeAll), {
    open: e,
    close: t,
    openAll: s,
    closeAll: n,
    parent: r
  };
}, "createStyler"), np = /* @__PURE__ */ i((e, t, r) => {
  let s = /* @__PURE__ */ i((...n) => LG(s, n.length === 1 ? "" + n[0] : n.join(" ")), "builder");
  return Object.setPrototypeOf(s, FG), s[g0] = e, s[qo] = t, s[xu] = r, s;
}, "createBuilder"), LG = /* @__PURE__ */ i((e, t) => {
  if (e.level <= 0 || !t)
    return e[xu] ? "" : t;
  let r = e[qo];
  if (r === void 0)
    return t;
  let { openAll: s, closeAll: n } = r;
  if (t.includes("\x1B"))
    for (; r !== void 0; )
      t = G2(t, r.close, r.open), r = r.parent;
  let a = t.indexOf(`
`);
  return a !== -1 && (t = K2(t, n, s, a)), s + t + n;
}, "applyStyle");
Object.defineProperties(Pu.prototype, $o);
var BG = Pu(), GHe = Pu({ level: X2 ? X2.level : 0 });
var J2 = BG;

// src/core-server/utils/server-statics.ts
var Q2 = gr(rp(), 1), Z2 = gr(jo(), 1);
import tGe from "express";
import Au, { basename as sGe, isAbsolute as nGe } from "node:path";
var eI = /* @__PURE__ */ i(async (e) => {
  let t = e.lastIndexOf(":"), s = Au.win32.isAbsolute(e) && t === 1, n = t !== -1 && !s ? t : e.length, o = (e.substring(n + 1) || "/").split(
  Au.sep).join(Au.posix.sep), l = e.substring(0, n), u = Au.isAbsolute(l) ? l : `./${l}`, c = Au.resolve(u), f = o.replace(/^\/?/, "./"), p = f.
  substring(1);
  if (!await (0, Q2.pathExists)(c))
    throw new Error(
      Z2.dedent`
        Failed to load static files, no such directory: ${J2.cyan(c)}
        Make sure this directory exists.
      `
    );
  return { staticDir: u, staticPath: c, targetDir: f, targetEndpoint: p };
}, "parseStaticDir");

// src/core-server/utils/constants.ts
import { dirname as MG, join as jG } from "node:path";
var tI = [
  {
    from: jG(MG(Q.resolve("@storybook/core/package.json")), "assets", "browser"),
    to: "/sb-common-assets"
  }
];

// src/core-server/utils/whats-new.ts
var BN = gr(rp(), 1);
import { logger as RN } from "@storybook/core/node-logger";
import { telemetry as JX } from "@storybook/core/telemetry";
import { findConfigFile as kN } from "@storybook/core/common";
import { printConfig as QX, readConfig as FN } from "@storybook/core/csf-tools";
import {
  REQUEST_WHATS_NEW_DATA as ZX,
  RESULT_WHATS_NEW_DATA as LN,
  TELEMETRY_ERROR as ez,
  SET_WHATS_NEW_CACHE as tz,
  TOGGLE_WHATS_NEW_NOTIFICATIONS as rz
} from "@storybook/core/core-events";

// ../node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var qG = process.env.NODE_ENV === "production", v0 = "Invariant failed";
function S0(e, t) {
  if (!e) {
    if (qG)
      throw new Error(v0);
    var r = typeof t == "function" ? t() : t, s = r ? "".concat(v0, ": ").concat(r) : v0;
    throw new Error(s);
  }
}
i(S0, "invariant");

// src/core-server/withTelemetry.ts
var NN = gr(ON(), 1);
import { loadAllPresets as HX, cache as Rg } from "@storybook/core/common";
import { telemetry as GX, getPrecedingUpgrade as KX, oneWayHash as YX } from "@storybook/core/telemetry";
import { logger as xYe } from "@storybook/core/node-logger";
var XX = /* @__PURE__ */ i(async () => {
  if (process.env.CI)
    return;
  let { enableCrashReports: e } = await (0, NN.default)({
    type: "confirm",
    name: "enableCrashReports",
    message: "Would you like to help improve Storybook by sending anonymous crash reports?",
    initial: !0
  });
  return await Rg.set("enableCrashReports", e), e;
}, "promptCrashReports");
async function zX({
  cliOptions: e,
  presetOptions: t,
  skipPrompt: r
}) {
  if (e.disableTelemetry) return "none";
  if (!t) return "full";
  let n = await (await HX(t)).apply("core");
  if (n?.enableCrashReports !== void 0) return n.enableCrashReports ? "full" : "error";
  if (n?.disableTelemetry) return "none";
  let a = await Rg.get("enableCrashReports") ?? await Rg.get("enableCrashreports");
  if (a !== void 0) return a ? "full" : "error";
  if (r)
    return "error";
  let o = await XX();
  return o !== void 0 ? o ? "full" : "error" : "full";
}
i(zX, "getErrorLevel");
async function kg(e, t, r) {
  try {
    let s = "error";
    try {
      s = await zX(r);
    } catch {
    }
    if (s !== "none") {
      let n = await KX(), a = e, o;
      "message" in a ? o = a.message ? YX(a.message) : "EMPTY_MESSAGE" : o = "NO_MESSAGE";
      let { code: l, name: u, category: c } = a;
      await GX(
        "error",
        {
          code: l,
          name: u,
          category: c,
          eventType: t,
          precedingUpgrade: n,
          error: s === "full" ? a : void 0,
          errorHash: o,
          // if we ever end up sending a non-error instance, we'd like to know
          isErrorInstance: a instanceof Error
        },
        {
          immediate: !0,
          configDir: r.cliOptions.configDir || r.presetOptions?.configDir,
          enableCrashReports: s === "full"
        }
      );
    }
  } catch {
  }
}
i(kg, "sendTelemetryError");

// src/core-server/utils/whats-new.ts
var Fg = "whats-new-cache", sz = "https://storybook.js.org/whats-new/v1";
function MN(e, t, r) {
  e.on(tz, async (s) => {
    let n = await t.cache.get(Fg).catch((a) => (RN.verbose(a), {}));
    await t.cache.set(Fg, { ...n, ...s });
  }), e.on(ZX, async () => {
    try {
      let s = await fetch(sz).then(async (c) => {
        if (c.ok) return c.json();
        throw c;
      }), n = kN("main", t.configDir);
      if (!n)
        throw new Error(`unable to find storybook main file in ${t.configDir}`);
      let o = (await FN(n)).getFieldValue([
        "core",
        "disableWhatsNewNotifications"
      ]), l = await t.cache.get(Fg) ?? {}, u = {
        ...s,
        status: "SUCCESS",
        postIsRead: s.url === l.lastReadPost,
        showNotification: s.url !== l.lastDismissedPost && s.url !== l.lastReadPost,
        disableWhatsNewNotifications: o
      };
      e.emit(LN, { data: u });
    } catch (s) {
      RN.verbose(s instanceof Error ? s.message : String(s)), e.emit(LN, {
        data: { status: "ERROR" }
      });
    }
  }), e.on(
    rz,
    async ({ disableWhatsNewNotifications: s }) => {
      let n = r.disableTelemetry !== !0;
      try {
        let a = kN("main", t.configDir);
        S0(a, `unable to find storybook main file in ${t.configDir}`);
        let o = await FN(a);
        o.setFieldValue(["core", "disableWhatsNewNotifications"], s), await BN.default.writeFile(a, QX(o).code), n && await JX("core-config",
        { disableWhatsNewNotifications: s });
      } catch (a) {
        S0(a instanceof Error), n && await kg(a, "core-config", {
          cliOptions: t,
          presetOptions: { ...t, corePresets: [], overridePresets: [] },
          skipPrompt: !0
        });
      }
    }
  ), e.on(ez, async (s) => {
    r.disableTelemetry !== !0 && await kg(s, "browser", {
      cliOptions: t,
      presetOptions: { ...t, corePresets: [], overridePresets: [] },
      skipPrompt: !0
    });
  });
}
i(MN, "initializeWhatsNew");

// src/core-server/utils/save-story/save-story.ts
import AOe from "node:fs/promises";
import {
  SAVE_STORY_REQUEST as COe,
  SAVE_STORY_RESPONSE as RM,
  STORY_RENDERED as kM
} from "@storybook/core/core-events";
import { storyNameFromExport as FM, toId as wOe } from "@storybook/csf";
import { printCsf as DOe, readCsf as IOe } from "@storybook/core/csf-tools";
import { logger as _Oe } from "@storybook/core/node-logger";
import { telemetry as LM } from "@storybook/core/telemetry";
import { basename as OOe, join as NOe } from "node:path";

// src/core-server/utils/save-story/update-args-in-csf-file.ts
var Ct = gr(Re(), 1), u1 = gr(Bs(), 1);

// src/core-server/utils/save-story/valueToAST.ts
var Fr = gr(Re(), 1), IM = gr(to(), 1);
function Xd(e) {
  if (e === null)
    return Fr.nullLiteral();
  switch (typeof e) {
    case "function":
      return IM.parse(e.toString(), {
        allowReturnOutsideFunction: !0,
        allowSuperOutsideMethod: !0
      }).program.body[0]?.expression;
    case "number":
      return Fr.numericLiteral(e);
    case "string":
      return Fr.stringLiteral(e);
    case "boolean":
      return Fr.booleanLiteral(e);
    case "undefined":
      return Fr.identifier("undefined");
    default:
      return Array.isArray(e) ? Fr.arrayExpression(e.map(Xd)) : Fr.objectExpression(
        Object.keys(e).filter((r) => typeof e[r] < "u").map((r) => {
          let s = e[r];
          return Fr.objectProperty(Fr.stringLiteral(r), Xd(s));
        })
      );
  }
}
i(Xd, "valueToAST");

// src/core-server/utils/save-story/utils.ts
var Vs = class extends Error {
  static {
    i(this, "SaveStoryError");
  }
};

// src/core-server/utils/save-story/update-args-in-csf-file.ts
var POe = u1.default.default || u1.default, _M = /* @__PURE__ */ i(async (e, t) => {
  let r = !1, s = Object.fromEntries(
    Object.entries(t).map(([n, a]) => [n, Xd(a)])
  );
  if (Ct.isArrowFunctionExpression(e) || Ct.isCallExpression(e))
    throw new Vs("Updating a CSF2 story is not supported");
  if (Ct.isObjectExpression(e)) {
    let n = e.properties, a = n.find((o) => {
      if (Ct.isObjectProperty(o)) {
        let l = o.key;
        return Ct.isIdentifier(l) && l.name === "args";
      }
      return !1;
    });
    if (a) {
      if (Ct.isObjectProperty(a)) {
        let o = a.value;
        if (Ct.isObjectExpression(o)) {
          o.properties.forEach((u) => {
            if (Ct.isObjectProperty(u)) {
              let c = u.key;
              Ct.isIdentifier(c) && c.name in s && (u.value = s[c.name], delete s[c.name]);
            }
          });
          let l = Object.entries(s);
          Object.keys(s).length && l.forEach(([u, c]) => {
            o.properties.push(Ct.objectProperty(Ct.identifier(u), c));
          });
        }
      }
    } else
      n.unshift(
        Ct.objectProperty(
          Ct.identifier("args"),
          Ct.objectExpression(
            Object.entries(s).map(([o, l]) => Ct.objectProperty(Ct.identifier(o), l))
          )
        )
      );
    return;
  }
  POe(e, {
    ObjectExpression(n) {
      if (r)
        return;
      r = !0;
      let o = n.get("properties").find((l) => {
        if (l.isObjectProperty()) {
          let u = l.get("key");
          return u.isIdentifier() && u.node.name === "args";
        }
        return !1;
      });
      if (o) {
        if (o.isObjectProperty()) {
          let l = o.get("value");
          if (l.isObjectExpression()) {
            l.traverse({
              ObjectProperty(c) {
                let f = c.get("key");
                f.isIdentifier() && f.node.name in s && (c.get("value").replaceWith(s[f.node.name]), delete s[f.node.name]);
              },
              // @ts-expect-error noScope works but is not typed properly
              noScope: !0
            });
            let u = Object.entries(s);
            Object.keys(s).length && u.forEach(([c, f]) => {
              l.pushContainer("properties", Ct.objectProperty(Ct.identifier(c), f));
            });
          }
        }
      } else
        n.unshiftContainer(
          "properties",
          Ct.objectProperty(
            Ct.identifier("args"),
            Ct.objectExpression(
              Object.entries(s).map(([l, u]) => Ct.objectProperty(Ct.identifier(l), u))
            )
          )
        );
    },
    noScope: !0
  });
}, "updateArgsInCsfFile");

// src/core-server/utils/save-story/duplicate-story-with-new-name.ts
var jn = gr(Re(), 1), c1 = gr(Bs(), 1);
var OM = c1.default.default || c1.default, NM = /* @__PURE__ */ i((e, t, r) => {
  let s = e._storyExports[t], n = jn.cloneNode(s);
  if (!n)
    throw new Vs("cannot clone Node");
  let a = !1;
  if (OM(n, {
    Identifier(o) {
      a || o.node.name === t && (a = !0, o.node.name = r);
    },
    ObjectProperty(o) {
      let l = o.get("key");
      l.isIdentifier() && l.node.name === "args" && o.remove();
    },
    noScope: !0
  }), jn.isArrowFunctionExpression(n.init) || jn.isCallExpression(n.init))
    throw new Vs("Creating a new story based on a CSF2 story is not supported");
  return OM(e._ast, {
    Program(o) {
      o.pushContainer(
        "body",
        jn.exportNamedDeclaration(jn.variableDeclaration("const", [n]))
      );
    }
  }), n;
}, "duplicateStoryWithNewName");

// src/core-server/utils/save-story/save-story.ts
import { formatFileContent as ROe } from "@storybook/core/common";
var kOe = /* @__PURE__ */ i((e) => JSON.parse(e, (t, r) => r === "__sb_empty_function_arg__" ? () => {
} : r), "parseArgs"), FOe = /* @__PURE__ */ i((e, t) => {
  let r = "([\\s\\S])", s = "(\\r\\n|\\r|\\n)", n = s + "};" + s, a = new RegExp(
    // Looks for an export by the given name, considers the first closing brace on its own line
    // to be the end of the story definition.
    `^(?<before>${r}*)(?<story>export const ${t} =${r}+?${n})(?<after>${r}*)$`
  ), { before: o, story: l, after: u } = e.match(a)?.groups || {};
  return l ? o + l.replaceAll(/(\r\n|\r|\n)(\r\n|\r|\n)([ \t]*[a-z0-9_]+): /gi, "$2$3:") + u : e;
}, "removeExtraNewlines");
function BM(e, t, r) {
  e.on(COe, async ({ id: s, payload: n }) => {
    let { csfId: a, importPath: o, args: l, name: u } = n, c, f, p, d, m;
    try {
      p = OOe(o), d = NOe(process.cwd(), o);
      let b = await IOe(d, {
        makeTitle: /* @__PURE__ */ i((I) => I || "myTitle", "makeTitle")
      }), h = b.parse(), g = Object.entries(h._stories), [E, D] = a.split("--");
      f = u && FM(u), c = f && wOe(E, f);
      let [C] = g.find(([I, M]) => M.id.endsWith(`--${D}`)) || [];
      if (!C)
        throw new Vs("Source story not found.");
      if (u && b.getStoryExport(u))
        throw new Vs("Story already exists.");
      m = FM(C), await _M(
        u ? NM(h, C, u) : b.getStoryExport(C),
        l ? kOe(l) : {}
      );
      let N = await ROe(
        d,
        FOe(DOe(b).code, u || C)
      );
      await Promise.all([
        new Promise((I) => {
          e.on(kM, I), setTimeout(() => I(e.off(kM, I)), 3e3);
        }),
        AOe.writeFile(d, N)
      ]), e.emit(RM, {
        id: s,
        success: !0,
        payload: {
          csfId: a,
          newStoryId: c,
          newStoryName: f,
          sourceFileContent: N,
          sourceFileName: p,
          sourceStoryName: m
        },
        error: null
      }), r.disableTelemetry || await LM("save-story", {
        action: u ? "createStory" : "updateStory",
        success: !0
      });
    } catch (b) {
      e.emit(RM, {
        id: s,
        success: !1,
        error: b instanceof Vs ? b.message : "Unknown error"
      }), _Oe.error(
        `Error writing to ${d}:
${b.stack || b.message || b.toString()}`
      ), !r.disableTelemetry && !(b instanceof Vs) && await LM("save-story", {
        action: u ? "createStory" : "updateStory",
        success: !1,
        error: b
      });
    }
  });
}
i(BM, "initializeSaveStory");

// src/core-server/server-channel/file-search-channel.ts
import {
  extractProperRendererNameFromFramework as QVe,
  getFrameworkName as ZVe,
  getProjectRoot as eWe
} from "@storybook/core/common";
import Zy from "node:path";
import tWe from "fs/promises";

// src/core-server/utils/parser/generic-parser.ts
var pq = gr(to(), 1), Qs = gr(mr(), 1);
var by = class {
  static {
    i(this, "GenericParser");
  }
  /**
   * Parse the content of a file and return the exports
   * @param content The content of the file
   * @returns The exports of the file
   */
  async parse(t) {
    let r = pq.parse(t, {
      allowImportExportEverywhere: !0,
      allowAwaitOutsideFunction: !0,
      allowNewTargetOutsideFunction: !0,
      allowReturnOutsideFunction: !0,
      allowUndeclaredExports: !0,
      plugins: [
        // Language features
        "typescript",
        "jsx",
        // Latest ECMAScript features
        "asyncGenerators",
        "bigInt",
        "classProperties",
        "classPrivateProperties",
        "classPrivateMethods",
        "classStaticBlock",
        "dynamicImport",
        "exportNamespaceFrom",
        "logicalAssignment",
        "moduleStringNames",
        "nullishCoalescingOperator",
        "numericSeparator",
        "objectRestSpread",
        "optionalCatchBinding",
        "optionalChaining",
        "privateIn",
        "regexpUnicodeSets",
        "topLevelAwait",
        // ECMAScript proposals
        "asyncDoExpressions",
        "decimal",
        "decorators",
        "decoratorAutoAccessors",
        "deferredImportEvaluation",
        "destructuringPrivate",
        "doExpressions",
        "explicitResourceManagement",
        "exportDefaultFrom",
        "functionBind",
        "functionSent",
        "importAttributes",
        "importReflection",
        "moduleBlocks",
        "partialApplication",
        "recordAndTuple",
        "sourcePhaseImports",
        "throwExpressions"
      ]
    }), s = [];
    return r.program.body.forEach(/* @__PURE__ */ i(function(a) {
      Qs.types.isExportNamedDeclaration(a) ? (Qs.types.isFunctionDeclaration(a.declaration) && Qs.types.isIdentifier(a.declaration.id) && s.
      push({
        name: a.declaration.id.name,
        default: !1
      }), Qs.types.isClassDeclaration(a.declaration) && Qs.types.isIdentifier(a.declaration.id) && s.push({
        name: a.declaration.id.name,
        default: !1
      }), a.declaration === null && a.specifiers.length > 0 && a.specifiers.forEach((o) => {
        Qs.types.isExportSpecifier(o) && Qs.types.isIdentifier(o.exported) && s.push({
          name: o.exported.name,
          default: !1
        });
      }), Qs.types.isVariableDeclaration(a.declaration) && a.declaration.declarations.forEach((o) => {
        Qs.types.isVariableDeclarator(o) && Qs.types.isIdentifier(o.id) && s.push({
          name: o.id.name,
          default: !1
        });
      })) : Qs.types.isExportDefaultDeclaration(a) && s.push({
        name: "default",
        default: !0
      });
    }, "traverse")), { exports: s };
  }
};

// src/core-server/utils/parser/index.ts
function dq(e) {
  switch (e) {
    default:
      return new by();
  }
}
i(dq, "getParser");

// src/core-server/utils/search-files.ts
var qVe = ["js", "mjs", "cjs", "jsx", "mts", "ts", "tsx", "cts"], $Ve = [
  "**/node_modules/**",
  "**/*.spec.*",
  "**/*.test.*",
  "**/*.stories.*",
  "**/storybook-static/**"
];
async function HV({
  searchQuery: e,
  cwd: t,
  ignoredFiles: r = $Ve,
  fileExtensions: s = qVe
}) {
  let { globby: n, isDynamicPattern: a } = await Promise.resolve().then(() => (WV(), VV)), o = a(e, { cwd: t }), u = /(\.[a-z]+)$/i.test(e),
  c = `{${s.join(",")}}`, f = o ? e : u ? [`**/*${e}*`, `**/*${e}*/**`] : [
    `**/*${e}*.${c}`,
    `**/*${e}*/**/*.${c}`
  ];
  return (await n(f, {
    ignore: r,
    gitignore: !0,
    caseSensitiveMatch: !1,
    cwd: t,
    objectMode: !0
  })).map((d) => d.path).filter((d) => s.some((m) => d.endsWith(`.${m}`)));
}
i(HV, "searchFiles");

// src/core-server/server-channel/file-search-channel.ts
import {
  FILE_COMPONENT_SEARCH_REQUEST as rWe,
  FILE_COMPONENT_SEARCH_RESPONSE as nW
} from "@storybook/core/core-events";

// src/core-server/utils/get-new-story-file.ts
import {
  extractProperRendererNameFromFramework as YVe,
  getFrameworkName as XVe,
  getProjectRoot as zVe,
  rendererPackages as JVe
} from "@storybook/core/common";
import rn from "node:path";
import Qy from "node:fs";

// src/core-server/utils/new-story-templates/typescript.ts
var ZV = gr(jo(), 1);

// src/core-server/utils/get-component-variable-name.ts
var Jy = /* @__PURE__ */ i(async (e) => (await Promise.resolve().then(() => (QV(), JV))).default(e.replace(/^[^a-zA-Z_$]*/, ""), { pascalCase: !0 }).
replace(/[^a-zA-Z_$]+/, ""), "getComponentVariableName");

// src/core-server/utils/new-story-templates/typescript.ts
async function eW(e) {
  let t = e.componentIsDefaultExport ? await Jy(e.basenameWithoutExtension) : e.componentExportName, r = e.componentIsDefaultExport ? `impor\
t ${t} from './${e.basenameWithoutExtension}'` : `import { ${t} } from './${e.basenameWithoutExtension}'`;
  return ZV.dedent`
  import type { Meta, StoryObj } from '${e.rendererPackage}';

  ${r};

  const meta = {
    component: ${t},
  } satisfies Meta<typeof ${t}>;

  export default meta;

  type Story = StoryObj<typeof meta>;

  export const ${e.exportedStoryName}: Story = {};
  `;
}
i(eW, "getTypeScriptTemplateForNewStoryFile");

// src/core-server/utils/new-story-templates/javascript.ts
var tW = gr(jo(), 1);
async function rW(e) {
  let t = e.componentIsDefaultExport ? await Jy(e.basenameWithoutExtension) : e.componentExportName, r = e.componentIsDefaultExport ? `impor\
t ${t} from './${e.basenameWithoutExtension}';` : `import { ${t} } from './${e.basenameWithoutExtension}';`;
  return tW.dedent`
  ${r}

  const meta = {
    component: ${t},
  };
  
  export default meta;
  
  export const ${e.exportedStoryName} = {};
  `;
}
i(rW, "getJavaScriptTemplateForNewStoryFile");

// src/core-server/utils/get-new-story-file.ts
async function sW({
  componentFilePath: e,
  componentExportName: t,
  componentIsDefaultExport: r,
  componentExportCount: s
}, n) {
  let a = zVe(), o = await XVe(n), l = await YVe(o), u = Object.entries(JVe).find(
    ([, I]) => I === l
  )?.[0], c = rn.basename(e), f = rn.extname(e), p = c.replace(f, ""), d = rn.dirname(e), { storyFileName: m, isTypescript: b, storyFileExtension: h } = Fw(
  e), g = `${m}.${h}`, E = `${p}.${t}.stories.${h}`, D = "Default", C = b && u ? await eW({
    basenameWithoutExtension: p,
    componentExportName: t,
    componentIsDefaultExport: r,
    rendererPackage: u,
    exportedStoryName: D
  }) : await rW({
    basenameWithoutExtension: p,
    componentExportName: t,
    componentIsDefaultExport: r,
    exportedStoryName: D
  });
  return { storyFilePath: Lw(rn.join(a, d), m) && s > 1 ? rn.join(a, d, E) : rn.join(a, d, g), exportedStoryName: D, storyFileContent: C, dirname: d };
}
i(sW, "getNewStoryFile");
var Fw = /* @__PURE__ */ i((e) => {
  let t = /\.(ts|tsx|mts|cts)$/.test(e), r = rn.basename(e), s = rn.extname(e), n = r.replace(s, ""), a = t ? "tsx" : "jsx";
  return {
    storyFileName: `${n}.stories`,
    storyFileExtension: a,
    isTypescript: t
  };
}, "getStoryMetadata"), Lw = /* @__PURE__ */ i((e, t) => Qy.existsSync(rn.join(e, `${t}.ts`)) || Qy.existsSync(rn.join(e, `${t}.tsx`)) || Qy.
existsSync(rn.join(e, `${t}.js`)) || Qy.existsSync(rn.join(e, `${t}.jsx`)), "doesStoryFileExist");

// src/core-server/server-channel/file-search-channel.ts
import { telemetry as Bw } from "@storybook/core/telemetry";
async function iW(e, t, r) {
  return e.on(
    rWe,
    async (s) => {
      let n = s.id;
      try {
        if (!n)
          return;
        let a = await ZVe(t), o = await QVe(
          a
        ), l = eWe(), c = (await HV({
          searchQuery: n,
          cwd: l
        })).map(async (f) => {
          let p = dq(o);
          try {
            let d = await tWe.readFile(Zy.join(l, f), "utf-8"), { storyFileName: m } = Fw(Zy.join(l, f)), b = Zy.dirname(f), h = Lw(
              Zy.join(l, b),
              m
            ), g = await p.parse(d);
            return {
              filepath: f,
              exportedComponents: g.exports,
              storyFileExists: h
            };
          } catch (d) {
            return r.disableTelemetry || Bw("create-new-story-file-search", {
              success: !1,
              error: `Could not parse file: ${d}`
            }), {
              filepath: f,
              storyFileExists: !1,
              exportedComponents: null
            };
          }
        });
        r.disableTelemetry || Bw("create-new-story-file-search", {
          success: !0,
          payload: {
            fileCount: c.length
          }
        }), e.emit(nW, {
          success: !0,
          id: n,
          payload: {
            files: await Promise.all(c)
          },
          error: null
        });
      } catch (a) {
        e.emit(nW, {
          success: !1,
          id: n ?? "",
          error: `An error occurred while searching for components in the project.
${a?.message}`
        }), r.disableTelemetry || Bw("create-new-story-file-search", {
          success: !1,
          error: `An error occured while searching for components: ${a}`
        });
      }
    }
  ), e;
}
i(iW, "initFileSearchChannel");

// src/core-server/server-channel/create-new-story-channel.ts
import { telemetry as Mw } from "@storybook/core/telemetry";
import {
  CREATE_NEW_STORYFILE_REQUEST as cWe,
  CREATE_NEW_STORYFILE_RESPONSE as jw
} from "@storybook/core/core-events";
import { writeFile as fWe } from "node:fs/promises";
import { existsSync as pWe } from "node:fs";

// src/core-server/utils/get-story-id.ts
var lW = gr(jo(), 1);
import { normalizeStories as sWe, normalizeStoryPath as nWe } from "@storybook/core/common";
import iWe from "node:path";
import { sanitize as aWe, storyNameFromExport as oWe, toId as lWe } from "@storybook/csf";
import { userOrAutoTitleFromSpecifier as uWe } from "@storybook/core/preview-api";

// src/core-server/utils/posix.ts
import aW from "node:path";
var oW = /* @__PURE__ */ i((e, t = aW.sep) => e.split(t).filter(Boolean).join(aW.posix.sep), "posix");

// src/core-server/utils/get-story-id.ts
async function uW(e, t) {
  let r = await t.presets.apply("stories", [], t), s = process.cwd(), n = sWe(r, {
    configDir: t.configDir,
    workingDir: s
  }), a = iWe.relative(s, e.storyFilePath), o = oW(nWe(a)), l = n.map((p) => uWe(o, p)).filter(Boolean)[0];
  if (l === void 0)
    throw new Error(lW.dedent`
    The new story file was successfully generated, but we are unable to index it. Please ensure that the new Story file is matched by the 'stories' glob pattern in your Storybook configuration.
    `);
  let u = oWe(e.exportedStoryName), c = lWe(l, u), f = aWe(l);
  return { storyId: c, kind: f };
}
i(uW, "getStoryId");

// src/core-server/server-channel/create-new-story-channel.ts
import cW from "node:path";
function fW(e, t, r) {
  return e.on(
    cWe,
    async (s) => {
      try {
        let { storyFilePath: n, exportedStoryName: a, storyFileContent: o } = await sW(
          s.payload,
          t
        ), l = cW.relative(process.cwd(), n), { storyId: u, kind: c } = await uW({ storyFilePath: n, exportedStoryName: a }, t);
        if (pWe(n)) {
          e.emit(jw, {
            success: !1,
            id: s.id,
            payload: {
              type: "STORY_FILE_EXISTS",
              kind: c
            },
            error: `A story file already exists at ${l}`
          }), r.disableTelemetry || Mw("create-new-story-file", {
            success: !1,
            error: "STORY_FILE_EXISTS"
          });
          return;
        }
        await fWe(n, o, "utf-8"), e.emit(jw, {
          success: !0,
          id: s.id,
          payload: {
            storyId: u,
            storyFilePath: cW.relative(process.cwd(), n),
            exportedStoryName: a
          },
          error: null
        }), r.disableTelemetry || Mw("create-new-story-file", {
          success: !0
        });
      } catch (n) {
        e.emit(jw, {
          success: !1,
          id: s.id,
          error: n?.message
        }), r.disableTelemetry || await Mw("create-new-story-file", {
          success: !1,
          error: n
        });
      }
    }
  ), e;
}
i(fW, "initCreateNewStoryChannel");

// src/core-server/presets/common-preset.ts
var SWe = /* @__PURE__ */ i((e, t = {}) => Object.entries(t).reduce((r, [s, n]) => r.replace(new RegExp(`%${s}%`, "g"), n), e), "interpolate"),
dW = Vf(
  e0(Q.resolve("@storybook/core/package.json")),
  "/assets/browser/favicon.svg"
), qpt = /* @__PURE__ */ i(async (e = []) => [
  ...tI,
  ...e
], "staticDirs"), $pt = /* @__PURE__ */ i(async (e, t) => {
  if (e)
    return e;
  let r = await t.presets.apply("staticDirs"), s = r ? r.map((n) => typeof n == "string" ? n : `${n.from}:${n.to}`) : [];
  if (s && s.length > 0) {
    let a = (await Promise.all(
      s.map(async (o) => {
        let l = [], u = r && !vWe(o) ? mWe({
          configDir: t.configDir,
          workingDir: process.cwd(),
          directory: o
        }) : o, { staticPath: c, targetEndpoint: f } = await eI(u);
        if (f === "/") {
          let d = Vf(c, "favicon.svg");
          await (0, hu.pathExists)(d) && l.push(d);
        }
        if (f === "/") {
          let d = Vf(c, "favicon.ico");
          await (0, hu.pathExists)(d) && l.push(d);
        }
        return l;
      })
    )).reduce((o, l) => o.concat(l), []);
    return a.length > 1 && dWe.warn(hW.dedent`
        Looks like multiple favicons were detected. Using the first one.

        ${a.join(", ")}
        `), a[0] || dW;
  }
  return dW;
}, "favicon"), Upt = /* @__PURE__ */ i(async (e, t) => {
  let { presets: r } = t, s = await r.apply("babelDefault", {}, t) ?? {};
  return {
    ...s,
    // This override makes sure that we will never transpile babel further down then the browsers that storybook supports.
    // This is needed to support the mount property of the context described here:
    // https://storybook.js.org/docs/writing-tests/interaction-testing#run-code-before-each-test
    overrides: [
      ...s?.overrides ?? [],
      {
        include: /\.(story|stories)\.[cm]?[jt]sx?$/,
        presets: [
          [
            "@babel/preset-env",
            {
              bugfixes: !0,
              targets: {
                // This is the same browser supports that we use to bundle our manager and preview code.
                chrome: 100,
                safari: 15,
                firefox: 91
              }
            }
          ]
        ]
      }
    ]
  };
}, "babel"), Vpt = /* @__PURE__ */ i((e, t) => e || t.packageJson.name || !1, "title"), Wpt = /* @__PURE__ */ i((e, t) => e || t.loglevel ||
"info", "logLevel"), Hpt = /* @__PURE__ */ i(async (e, { configDir: t, presets: r }) => {
  let s = await r.apply("env");
  return gWe(t, s);
}, "previewHead"), Gpt = /* @__PURE__ */ i(async () => bWe({ production: !0 }).raw, "env"), Kpt = /* @__PURE__ */ i(async (e, { configDir: t,
presets: r }) => {
  let s = await r.apply("env");
  return yWe(t, s);
}, "previewBody"), Ypt = /* @__PURE__ */ i(() => ({
  check: !1,
  // 'react-docgen' faster than `react-docgen-typescript` but produces lower quality results
  reactDocgen: "react-docgen",
  reactDocgenTypescriptOptions: {
    shouldExtractLiteralValuesFromEnum: !0,
    shouldRemoveUndefinedFromOptional: !0,
    propFilter: /* @__PURE__ */ i((e) => e.parent ? !/node_modules/.test(e.parent.fileName) : !0, "propFilter"),
    // NOTE: this default cannot be changed
    savePropValueAsString: !0
  }
}), "typescript"), TWe = /* @__PURE__ */ i((e) => {
  if (e !== void 0) {
    if (e.toUpperCase() === "FALSE")
      return !1;
    if (e.toUpperCase() === "TRUE" || typeof e == "string")
      return !0;
  }
}, "optionalEnvToBoolean"), Xpt = /* @__PURE__ */ i((e, t) => {
  let r = pW;
  return t.disableTelemetry || (r = /* @__PURE__ */ i(async (s, n) => (await hWe("remove", { addon: s, source: "api" }), pW(s, n)), "removeA\
ddon")), { ...e, removeAddon: r };
}, "experimental_serverAPI"), zpt = /* @__PURE__ */ i(async (e, t) => ({
  ...e,
  disableTelemetry: t.disableTelemetry === !0 || t.test === !0,
  enableCrashReports: t.enableCrashReports || TWe(process.env.STORYBOOK_ENABLE_CRASH_REPORTS)
}), "core"), Jpt = /* @__PURE__ */ i(async (e) => ({
  ...e,
  argTypeTargetsV7: !0,
  legacyDecoratorFileOrder: !1,
  disallowImplicitActionsInRenderV8: !0
}), "features"), xWe = {
  test: /(stories|story)\.(m?js|ts)x?$/,
  createIndex: /* @__PURE__ */ i(async (e, t) => (await EWe(e, t)).parse().indexInputs, "createIndex")
}, Qpt = /* @__PURE__ */ i((e) => [xWe].concat(e || []), "experimental_indexers"), Zpt = /* @__PURE__ */ i(async (e, t) => {
  let r = await t.presets.apply("framework");
  return typeof r == "string" ? {} : typeof r > "u" ? null : r.options;
}, "frameworkOptions"), edt = /* @__PURE__ */ i((e, { docs: t }) => e && t !== void 0 ? {
  ...e,
  docsMode: t
} : e, "docs"), tdt = /* @__PURE__ */ i(async (e, t) => {
  let r = Vf(t.configDir, "manager-head.html");
  if (await (0, hu.pathExists)(r)) {
    let s = (0, hu.readFile)(r, "utf-8"), n = t.presets.apply("env");
    return SWe(await s, await n);
  }
  return "";
}, "managerHead"), rdt = /* @__PURE__ */ i(async (e, t) => {
  let r = await t.presets.apply("core");
  return MN(e, t, r), BM(e, t, r), iW(e, t, r), fW(e, t, r), e;
}, "experimental_serverChannel"), sdt = /* @__PURE__ */ i(async (e) => {
  try {
    return {
      ...e,
      react: e0(Q.resolve("react/package.json")),
      reactDom: e0(Q.resolve("react-dom/package.json"))
    };
  } catch {
    return e;
  }
}, "resolvedReact"), ndt = /* @__PURE__ */ i(async (e) => ({
  ...e,
  "dev-only": { excludeFromDocsStories: !0 },
  "docs-only": { excludeFromSidebar: !0 },
  "test-only": { excludeFromSidebar: !0, excludeFromDocsStories: !0 }
}), "tags"), idt = /* @__PURE__ */ i(async (e, t) => [
  Vf(
    e0(Q.resolve("@storybook/core/package.json")),
    "dist/core-server/presets/common-manager.js"
  ),
  ...e || []
], "managerEntries");
export {
  Upt as babel,
  zpt as core,
  xWe as csfIndexer,
  edt as docs,
  Gpt as env,
  Qpt as experimental_indexers,
  Xpt as experimental_serverAPI,
  rdt as experimental_serverChannel,
  $pt as favicon,
  Jpt as features,
  Zpt as frameworkOptions,
  Wpt as logLevel,
  idt as managerEntries,
  tdt as managerHead,
  Kpt as previewBody,
  Hpt as previewHead,
  sdt as resolvedReact,
  qpt as staticDirs,
  ndt as tags,
  Vpt as title,
  Ypt as typescript
};
